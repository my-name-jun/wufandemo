/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/ 		if(moreModules[0]) {
/******/ 			installedModules[0] = 0;
/******/ 			return __webpack_require__(0);
/******/ 		}
/******/ 	};

/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		10:0
/******/ 	};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}

/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);

/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;

/******/ 			script.src = __webpack_require__.p + "js/" + chunkId + ".chunk.js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};

/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/igi/akg123_uat/";
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($, eruda) {__webpack_require__(4);

	__webpack_require__(5);
	__webpack_require__(14);
	//
	__webpack_require__(15);
	//
	__webpack_require__(16);
	__webpack_require__(18);
	__webpack_require__(19);

	window.flog = __webpack_require__(20);

	window.console = window.console || (function () {
	    var c = {};
	    c.log = c.warn = c.debug = c.info = c.error = c.time = c.dir = c.profile = c.clear = c.exception = c.trace = c.assert = function () {
	    };
	    return c;
	})();

	$.fn.datetimepicker.dates['zh-CN'] = {
	    days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
	    daysShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六", "周日"],
	    daysMin: ["日", "一", "二", "三", "四", "五", "六", "日"],
	    months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
	    monthsShort: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
	    today: "今天",
	    suffix: [],
	    meridiem: ["上午", "下午"]
	};

	$("body").css("font-family", "Microsoft YaHei");

	var config = __webpack_require__(21);

	if (config.env != 'prd') {
	    try {
	        eruda.init()
	    } catch (e) {
	    }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * jQuery JavaScript Library v1.12.4
	 * http://jquery.com/
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2016-05-20T17:17Z
	 */

	(function( global, factory ) {

		if ( typeof module === "object" && typeof module.exports === "object" ) {
			// For CommonJS and CommonJS-like environments where a proper `window`
			// is present, execute the factory and get jQuery.
			// For environments that do not have a `window` with a `document`
			// (such as Node.js), expose a factory as module.exports.
			// This accentuates the need for the creation of a real `window`.
			// e.g. var jQuery = require("jquery")(window);
			// See ticket #14549 for more info.
			module.exports = global.document ?
				factory( global, true ) :
				function( w ) {
					if ( !w.document ) {
						throw new Error( "jQuery requires a window with a document" );
					}
					return factory( w );
				};
		} else {
			factory( global );
		}

	// Pass this if window is not defined yet
	}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

	// Support: Firefox 18+
	// Can't be in strict mode, several libs including ASP.NET trace
	// the stack via arguments.caller.callee and Firefox dies if
	// you try to trace through "use strict" call chains. (#13335)
	//"use strict";
	var deletedIds = [];

	var document = window.document;

	var slice = deletedIds.slice;

	var concat = deletedIds.concat;

	var push = deletedIds.push;

	var indexOf = deletedIds.indexOf;

	var class2type = {};

	var toString = class2type.toString;

	var hasOwn = class2type.hasOwnProperty;

	var support = {};



	var
		version = "1.12.4",

		// Define a local copy of jQuery
		jQuery = function( selector, context ) {

			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init( selector, context );
		},

		// Support: Android<4.1, IE<9
		// Make sure we trim BOM and NBSP
		rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

		// Matches dashed string for camelizing
		rmsPrefix = /^-ms-/,
		rdashAlpha = /-([\da-z])/gi,

		// Used by jQuery.camelCase as callback to replace()
		fcamelCase = function( all, letter ) {
			return letter.toUpperCase();
		};

	jQuery.fn = jQuery.prototype = {

		// The current version of jQuery being used
		jquery: version,

		constructor: jQuery,

		// Start with an empty selector
		selector: "",

		// The default length of a jQuery object is 0
		length: 0,

		toArray: function() {
			return slice.call( this );
		},

		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function( num ) {
			return num != null ?

				// Return just the one element from the set
				( num < 0 ? this[ num + this.length ] : this[ num ] ) :

				// Return all the elements in a clean array
				slice.call( this );
		},

		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function( elems ) {

			// Build a new jQuery matched element set
			var ret = jQuery.merge( this.constructor(), elems );

			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;
			ret.context = this.context;

			// Return the newly-formed element set
			return ret;
		},

		// Execute a callback for every element in the matched set.
		each: function( callback ) {
			return jQuery.each( this, callback );
		},

		map: function( callback ) {
			return this.pushStack( jQuery.map( this, function( elem, i ) {
				return callback.call( elem, i, elem );
			} ) );
		},

		slice: function() {
			return this.pushStack( slice.apply( this, arguments ) );
		},

		first: function() {
			return this.eq( 0 );
		},

		last: function() {
			return this.eq( -1 );
		},

		eq: function( i ) {
			var len = this.length,
				j = +i + ( i < 0 ? len : 0 );
			return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
		},

		end: function() {
			return this.prevObject || this.constructor();
		},

		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: push,
		sort: deletedIds.sort,
		splice: deletedIds.splice
	};

	jQuery.extend = jQuery.fn.extend = function() {
		var src, copyIsArray, copy, name, options, clone,
			target = arguments[ 0 ] || {},
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if ( typeof target === "boolean" ) {
			deep = target;

			// skip the boolean and the target
			target = arguments[ i ] || {};
			i++;
		}

		// Handle case when target is a string or something (possible in deep copy)
		if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
			target = {};
		}

		// extend jQuery itself if only one argument is passed
		if ( i === length ) {
			target = this;
			i--;
		}

		for ( ; i < length; i++ ) {

			// Only deal with non-null/undefined values
			if ( ( options = arguments[ i ] ) != null ) {

				// Extend the base object
				for ( name in options ) {
					src = target[ name ];
					copy = options[ name ];

					// Prevent never-ending loop
					if ( target === copy ) {
						continue;
					}

					// Recurse if we're merging plain objects or arrays
					if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
						( copyIsArray = jQuery.isArray( copy ) ) ) ) {

						if ( copyIsArray ) {
							copyIsArray = false;
							clone = src && jQuery.isArray( src ) ? src : [];

						} else {
							clone = src && jQuery.isPlainObject( src ) ? src : {};
						}

						// Never move original objects, clone them
						target[ name ] = jQuery.extend( deep, clone, copy );

					// Don't bring in undefined values
					} else if ( copy !== undefined ) {
						target[ name ] = copy;
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

	jQuery.extend( {

		// Unique for each copy of jQuery on the page
		expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

		// Assume jQuery is ready without the ready module
		isReady: true,

		error: function( msg ) {
			throw new Error( msg );
		},

		noop: function() {},

		// See test/unit/core.js for details concerning isFunction.
		// Since version 1.3, DOM methods and functions like alert
		// aren't supported. They return false on IE (#2968).
		isFunction: function( obj ) {
			return jQuery.type( obj ) === "function";
		},

		isArray: Array.isArray || function( obj ) {
			return jQuery.type( obj ) === "array";
		},

		isWindow: function( obj ) {
			/* jshint eqeqeq: false */
			return obj != null && obj == obj.window;
		},

		isNumeric: function( obj ) {

			// parseFloat NaNs numeric-cast false positives (null|true|false|"")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			// adding 1 corrects loss of precision from parseFloat (#15100)
			var realStringObj = obj && obj.toString();
			return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
		},

		isEmptyObject: function( obj ) {
			var name;
			for ( name in obj ) {
				return false;
			}
			return true;
		},

		isPlainObject: function( obj ) {
			var key;

			// Must be an Object.
			// Because of IE, we also have to check the presence of the constructor property.
			// Make sure that DOM nodes and window objects don't pass through, as well
			if ( !obj || jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
				return false;
			}

			try {

				// Not own constructor property must be Object
				if ( obj.constructor &&
					!hasOwn.call( obj, "constructor" ) &&
					!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
					return false;
				}
			} catch ( e ) {

				// IE8,9 Will throw exceptions on certain host objects #9897
				return false;
			}

			// Support: IE<9
			// Handle iteration over inherited properties before own properties.
			if ( !support.ownFirst ) {
				for ( key in obj ) {
					return hasOwn.call( obj, key );
				}
			}

			// Own properties are enumerated firstly, so to speed up,
			// if last one is own, then all properties are own.
			for ( key in obj ) {}

			return key === undefined || hasOwn.call( obj, key );
		},

		type: function( obj ) {
			if ( obj == null ) {
				return obj + "";
			}
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ toString.call( obj ) ] || "object" :
				typeof obj;
		},

		// Workarounds based on findings by Jim Driscoll
		// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
		globalEval: function( data ) {
			if ( data && jQuery.trim( data ) ) {

				// We use execScript on Internet Explorer
				// We use an anonymous function so that context is window
				// rather than jQuery in Firefox
				( window.execScript || function( data ) {
					window[ "eval" ].call( window, data ); // jscs:ignore requireDotNotation
				} )( data );
			}
		},

		// Convert dashed to camelCase; used by the css and data modules
		// Microsoft forgot to hump their vendor prefix (#9572)
		camelCase: function( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		},

		nodeName: function( elem, name ) {
			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		},

		each: function( obj, callback ) {
			var length, i = 0;

			if ( isArrayLike( obj ) ) {
				length = obj.length;
				for ( ; i < length; i++ ) {
					if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
						break;
					}
				}
			}

			return obj;
		},

		// Support: Android<4.1, IE<9
		trim: function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

		// results is for internal usage only
		makeArray: function( arr, results ) {
			var ret = results || [];

			if ( arr != null ) {
				if ( isArrayLike( Object( arr ) ) ) {
					jQuery.merge( ret,
						typeof arr === "string" ?
						[ arr ] : arr
					);
				} else {
					push.call( ret, arr );
				}
			}

			return ret;
		},

		inArray: function( elem, arr, i ) {
			var len;

			if ( arr ) {
				if ( indexOf ) {
					return indexOf.call( arr, elem, i );
				}

				len = arr.length;
				i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

				for ( ; i < len; i++ ) {

					// Skip accessing in sparse arrays
					if ( i in arr && arr[ i ] === elem ) {
						return i;
					}
				}
			}

			return -1;
		},

		merge: function( first, second ) {
			var len = +second.length,
				j = 0,
				i = first.length;

			while ( j < len ) {
				first[ i++ ] = second[ j++ ];
			}

			// Support: IE<9
			// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
			if ( len !== len ) {
				while ( second[ j ] !== undefined ) {
					first[ i++ ] = second[ j++ ];
				}
			}

			first.length = i;

			return first;
		},

		grep: function( elems, callback, invert ) {
			var callbackInverse,
				matches = [],
				i = 0,
				length = elems.length,
				callbackExpect = !invert;

			// Go through the array, only saving the items
			// that pass the validator function
			for ( ; i < length; i++ ) {
				callbackInverse = !callback( elems[ i ], i );
				if ( callbackInverse !== callbackExpect ) {
					matches.push( elems[ i ] );
				}
			}

			return matches;
		},

		// arg is for internal usage only
		map: function( elems, callback, arg ) {
			var length, value,
				i = 0,
				ret = [];

			// Go through the array, translating each of the items to their new values
			if ( isArrayLike( elems ) ) {
				length = elems.length;
				for ( ; i < length; i++ ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}

			// Go through every key on the object,
			} else {
				for ( i in elems ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}
			}

			// Flatten any nested arrays
			return concat.apply( [], ret );
		},

		// A global GUID counter for objects
		guid: 1,

		// Bind a function to a context, optionally partially applying any
		// arguments.
		proxy: function( fn, context ) {
			var args, proxy, tmp;

			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !jQuery.isFunction( fn ) ) {
				return undefined;
			}

			// Simulated bind
			args = slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		},

		now: function() {
			return +( new Date() );
		},

		// jQuery.support is not used in Core but other projects attach their
		// properties to it so it needs to exist.
		support: support
	} );

	// JSHint would error on this code due to the Symbol not being defined in ES5.
	// Defining this global in .jshintrc would create a danger of using the global
	// unguarded in another place, it seems safer to just disable JSHint for these
	// three lines.
	/* jshint ignore: start */
	if ( typeof Symbol === "function" ) {
		jQuery.fn[ Symbol.iterator ] = deletedIds[ Symbol.iterator ];
	}
	/* jshint ignore: end */

	// Populate the class2type map
	jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

	function isArrayLike( obj ) {

		// Support: iOS 8.2 (not reproducible in simulator)
		// `in` check used to prevent JIT error (gh-2145)
		// hasOwn isn't used here due to false negatives
		// regarding Nodelist length in IE
		var length = !!obj && "length" in obj && obj.length,
			type = jQuery.type( obj );

		if ( type === "function" || jQuery.isWindow( obj ) ) {
			return false;
		}

		return type === "array" || length === 0 ||
			typeof length === "number" && length > 0 && ( length - 1 ) in obj;
	}
	var Sizzle =
	/*!
	 * Sizzle CSS Selector Engine v2.2.1
	 * http://sizzlejs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2015-10-17
	 */
	(function( window ) {

	var i,
		support,
		Expr,
		getText,
		isXML,
		tokenize,
		compile,
		select,
		outermostContext,
		sortInput,
		hasDuplicate,

		// Local document vars
		setDocument,
		document,
		docElem,
		documentIsHTML,
		rbuggyQSA,
		rbuggyMatches,
		matches,
		contains,

		// Instance-specific data
		expando = "sizzle" + 1 * new Date(),
		preferredDoc = window.document,
		dirruns = 0,
		done = 0,
		classCache = createCache(),
		tokenCache = createCache(),
		compilerCache = createCache(),
		sortOrder = function( a, b ) {
			if ( a === b ) {
				hasDuplicate = true;
			}
			return 0;
		},

		// General-purpose constants
		MAX_NEGATIVE = 1 << 31,

		// Instance methods
		hasOwn = ({}).hasOwnProperty,
		arr = [],
		pop = arr.pop,
		push_native = arr.push,
		push = arr.push,
		slice = arr.slice,
		// Use a stripped-down indexOf as it's faster than native
		// http://jsperf.com/thor-indexof-vs-for/5
		indexOf = function( list, elem ) {
			var i = 0,
				len = list.length;
			for ( ; i < len; i++ ) {
				if ( list[i] === elem ) {
					return i;
				}
			}
			return -1;
		},

		booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

		// Regular expressions

		// http://www.w3.org/TR/css3-selectors/#whitespace
		whitespace = "[\\x20\\t\\r\\n\\f]",

		// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
		identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

		// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
		attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
			// Operator (capture 2)
			"*([*^$|!~]?=)" + whitespace +
			// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
			"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
			"*\\]",

		pseudos = ":(" + identifier + ")(?:\\((" +
			// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
			// 1. quoted (capture 3; capture 4 or capture 5)
			"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
			// 2. simple (capture 6)
			"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
			// 3. anything else (capture 2)
			".*" +
			")\\)|)",

		// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
		rwhitespace = new RegExp( whitespace + "+", "g" ),
		rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

		rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
		rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

		rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

		rpseudo = new RegExp( pseudos ),
		ridentifier = new RegExp( "^" + identifier + "$" ),

		matchExpr = {
			"ID": new RegExp( "^#(" + identifier + ")" ),
			"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
			"TAG": new RegExp( "^(" + identifier + "|[*])" ),
			"ATTR": new RegExp( "^" + attributes ),
			"PSEUDO": new RegExp( "^" + pseudos ),
			"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
				"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
				"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
			"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
			// For use in libraries implementing .is()
			// We use this for POS matching in `select`
			"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
				whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
		},

		rinputs = /^(?:input|select|textarea|button)$/i,
		rheader = /^h\d$/i,

		rnative = /^[^{]+\{\s*\[native \w/,

		// Easily-parseable/retrievable ID or TAG or CLASS selectors
		rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

		rsibling = /[+~]/,
		rescape = /'|\\/g,

		// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
		runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
		funescape = function( _, escaped, escapedWhitespace ) {
			var high = "0x" + escaped - 0x10000;
			// NaN means non-codepoint
			// Support: Firefox<24
			// Workaround erroneous numeric interpretation of +"0x"
			return high !== high || escapedWhitespace ?
				escaped :
				high < 0 ?
					// BMP codepoint
					String.fromCharCode( high + 0x10000 ) :
					// Supplemental Plane codepoint (surrogate pair)
					String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
		},

		// Used for iframes
		// See setDocument()
		// Removing the function wrapper causes a "Permission Denied"
		// error in IE
		unloadHandler = function() {
			setDocument();
		};

	// Optimize for push.apply( _, NodeList )
	try {
		push.apply(
			(arr = slice.call( preferredDoc.childNodes )),
			preferredDoc.childNodes
		);
		// Support: Android<4.0
		// Detect silently failing push.apply
		arr[ preferredDoc.childNodes.length ].nodeType;
	} catch ( e ) {
		push = { apply: arr.length ?

			// Leverage slice if possible
			function( target, els ) {
				push_native.apply( target, slice.call(els) );
			} :

			// Support: IE<9
			// Otherwise append directly
			function( target, els ) {
				var j = target.length,
					i = 0;
				// Can't trust NodeList.length
				while ( (target[j++] = els[i++]) ) {}
				target.length = j - 1;
			}
		};
	}

	function Sizzle( selector, context, results, seed ) {
		var m, i, elem, nid, nidselect, match, groups, newSelector,
			newContext = context && context.ownerDocument,

			// nodeType defaults to 9, since context defaults to document
			nodeType = context ? context.nodeType : 9;

		results = results || [];

		// Return early from calls with invalid selector or context
		if ( typeof selector !== "string" || !selector ||
			nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

			return results;
		}

		// Try to shortcut find operations (as opposed to filters) in HTML documents
		if ( !seed ) {

			if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
				setDocument( context );
			}
			context = context || document;

			if ( documentIsHTML ) {

				// If the selector is sufficiently simple, try using a "get*By*" DOM method
				// (excepting DocumentFragment context, where the methods don't exist)
				if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

					// ID selector
					if ( (m = match[1]) ) {

						// Document context
						if ( nodeType === 9 ) {
							if ( (elem = context.getElementById( m )) ) {

								// Support: IE, Opera, Webkit
								// TODO: identify versions
								// getElementById can match elements by name instead of ID
								if ( elem.id === m ) {
									results.push( elem );
									return results;
								}
							} else {
								return results;
							}

						// Element context
						} else {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( newContext && (elem = newContext.getElementById( m )) &&
								contains( context, elem ) &&
								elem.id === m ) {

								results.push( elem );
								return results;
							}
						}

					// Type selector
					} else if ( match[2] ) {
						push.apply( results, context.getElementsByTagName( selector ) );
						return results;

					// Class selector
					} else if ( (m = match[3]) && support.getElementsByClassName &&
						context.getElementsByClassName ) {

						push.apply( results, context.getElementsByClassName( m ) );
						return results;
					}
				}

				// Take advantage of querySelectorAll
				if ( support.qsa &&
					!compilerCache[ selector + " " ] &&
					(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

					if ( nodeType !== 1 ) {
						newContext = context;
						newSelector = selector;

					// qSA looks outside Element context, which is not what we want
					// Thanks to Andrew Dupont for this workaround technique
					// Support: IE <=8
					// Exclude object elements
					} else if ( context.nodeName.toLowerCase() !== "object" ) {

						// Capture the context ID, setting it first if necessary
						if ( (nid = context.getAttribute( "id" )) ) {
							nid = nid.replace( rescape, "\\$&" );
						} else {
							context.setAttribute( "id", (nid = expando) );
						}

						// Prefix every selector in the list
						groups = tokenize( selector );
						i = groups.length;
						nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
						while ( i-- ) {
							groups[i] = nidselect + " " + toSelector( groups[i] );
						}
						newSelector = groups.join( "," );

						// Expand context for sibling selectors
						newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
							context;
					}

					if ( newSelector ) {
						try {
							push.apply( results,
								newContext.querySelectorAll( newSelector )
							);
							return results;
						} catch ( qsaError ) {
						} finally {
							if ( nid === expando ) {
								context.removeAttribute( "id" );
							}
						}
					}
				}
			}
		}

		// All others
		return select( selector.replace( rtrim, "$1" ), context, results, seed );
	}

	/**
	 * Create key-value caches of limited size
	 * @returns {function(string, object)} Returns the Object data after storing it on itself with
	 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	 *	deleting the oldest entry
	 */
	function createCache() {
		var keys = [];

		function cache( key, value ) {
			// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
			if ( keys.push( key + " " ) > Expr.cacheLength ) {
				// Only keep the most recent entries
				delete cache[ keys.shift() ];
			}
			return (cache[ key + " " ] = value);
		}
		return cache;
	}

	/**
	 * Mark a function for special use by Sizzle
	 * @param {Function} fn The function to mark
	 */
	function markFunction( fn ) {
		fn[ expando ] = true;
		return fn;
	}

	/**
	 * Support testing using an element
	 * @param {Function} fn Passed the created div and expects a boolean result
	 */
	function assert( fn ) {
		var div = document.createElement("div");

		try {
			return !!fn( div );
		} catch (e) {
			return false;
		} finally {
			// Remove from its parent by default
			if ( div.parentNode ) {
				div.parentNode.removeChild( div );
			}
			// release memory in IE
			div = null;
		}
	}

	/**
	 * Adds the same handler for all of the specified attrs
	 * @param {String} attrs Pipe-separated list of attributes
	 * @param {Function} handler The method that will be applied
	 */
	function addHandle( attrs, handler ) {
		var arr = attrs.split("|"),
			i = arr.length;

		while ( i-- ) {
			Expr.attrHandle[ arr[i] ] = handler;
		}
	}

	/**
	 * Checks document order of two siblings
	 * @param {Element} a
	 * @param {Element} b
	 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
	 */
	function siblingCheck( a, b ) {
		var cur = b && a,
			diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
				( ~b.sourceIndex || MAX_NEGATIVE ) -
				( ~a.sourceIndex || MAX_NEGATIVE );

		// Use IE sourceIndex if available on both nodes
		if ( diff ) {
			return diff;
		}

		// Check if b follows a
		if ( cur ) {
			while ( (cur = cur.nextSibling) ) {
				if ( cur === b ) {
					return -1;
				}
			}
		}

		return a ? 1 : -1;
	}

	/**
	 * Returns a function to use in pseudos for input types
	 * @param {String} type
	 */
	function createInputPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for buttons
	 * @param {String} type
	 */
	function createButtonPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for positionals
	 * @param {Function} fn
	 */
	function createPositionalPseudo( fn ) {
		return markFunction(function( argument ) {
			argument = +argument;
			return markFunction(function( seed, matches ) {
				var j,
					matchIndexes = fn( [], seed.length, argument ),
					i = matchIndexes.length;

				// Match elements found at the specified indexes
				while ( i-- ) {
					if ( seed[ (j = matchIndexes[i]) ] ) {
						seed[j] = !(matches[j] = seed[j]);
					}
				}
			});
		});
	}

	/**
	 * Checks a node for validity as a Sizzle context
	 * @param {Element|Object=} context
	 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
	 */
	function testContext( context ) {
		return context && typeof context.getElementsByTagName !== "undefined" && context;
	}

	// Expose support vars for convenience
	support = Sizzle.support = {};

	/**
	 * Detects XML nodes
	 * @param {Element|Object} elem An element or a document
	 * @returns {Boolean} True iff elem is a non-HTML XML node
	 */
	isXML = Sizzle.isXML = function( elem ) {
		// documentElement is verified for cases where it doesn't yet exist
		// (such as loading iframes in IE - #4833)
		var documentElement = elem && (elem.ownerDocument || elem).documentElement;
		return documentElement ? documentElement.nodeName !== "HTML" : false;
	};

	/**
	 * Sets document-related variables once based on the current document
	 * @param {Element|Object} [doc] An element or document object to use to set the document
	 * @returns {Object} Returns the current document
	 */
	setDocument = Sizzle.setDocument = function( node ) {
		var hasCompare, parent,
			doc = node ? node.ownerDocument || node : preferredDoc;

		// Return early if doc is invalid or already selected
		if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
			return document;
		}

		// Update global variables
		document = doc;
		docElem = document.documentElement;
		documentIsHTML = !isXML( document );

		// Support: IE 9-11, Edge
		// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
		if ( (parent = document.defaultView) && parent.top !== parent ) {
			// Support: IE 11
			if ( parent.addEventListener ) {
				parent.addEventListener( "unload", unloadHandler, false );

			// Support: IE 9 - 10 only
			} else if ( parent.attachEvent ) {
				parent.attachEvent( "onunload", unloadHandler );
			}
		}

		/* Attributes
		---------------------------------------------------------------------- */

		// Support: IE<8
		// Verify that getAttribute really returns attributes and not properties
		// (excepting IE8 booleans)
		support.attributes = assert(function( div ) {
			div.className = "i";
			return !div.getAttribute("className");
		});

		/* getElement(s)By*
		---------------------------------------------------------------------- */

		// Check if getElementsByTagName("*") returns only elements
		support.getElementsByTagName = assert(function( div ) {
			div.appendChild( document.createComment("") );
			return !div.getElementsByTagName("*").length;
		});

		// Support: IE<9
		support.getElementsByClassName = rnative.test( document.getElementsByClassName );

		// Support: IE<10
		// Check if getElementById returns elements by name
		// The broken getElementById methods don't pick up programatically-set names,
		// so use a roundabout getElementsByName test
		support.getById = assert(function( div ) {
			docElem.appendChild( div ).id = expando;
			return !document.getElementsByName || !document.getElementsByName( expando ).length;
		});

		// ID find and filter
		if ( support.getById ) {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
					var m = context.getElementById( id );
					return m ? [ m ] : [];
				}
			};
			Expr.filter["ID"] = function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					return elem.getAttribute("id") === attrId;
				};
			};
		} else {
			// Support: IE6/7
			// getElementById is not reliable as a find shortcut
			delete Expr.find["ID"];

			Expr.filter["ID"] =  function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== "undefined" &&
						elem.getAttributeNode("id");
					return node && node.value === attrId;
				};
			};
		}

		// Tag
		Expr.find["TAG"] = support.getElementsByTagName ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== "undefined" ) {
					return context.getElementsByTagName( tag );

				// DocumentFragment nodes don't have gEBTN
				} else if ( support.qsa ) {
					return context.querySelectorAll( tag );
				}
			} :

			function( tag, context ) {
				var elem,
					tmp = [],
					i = 0,
					// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
					results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					while ( (elem = results[i++]) ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			};

		// Class
		Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
			if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
				return context.getElementsByClassName( className );
			}
		};

		/* QSA/matchesSelector
		---------------------------------------------------------------------- */

		// QSA and matchesSelector support

		// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
		rbuggyMatches = [];

		// qSa(:focus) reports false when true (Chrome 21)
		// We allow this because of a bug in IE8/9 that throws an error
		// whenever `document.activeElement` is accessed on an iframe
		// So, we allow :focus to pass through QSA all the time to avoid the IE error
		// See http://bugs.jquery.com/ticket/13378
		rbuggyQSA = [];

		if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
			// Build QSA regex
			// Regex strategy adopted from Diego Perini
			assert(function( div ) {
				// Select is set to empty string on purpose
				// This is to test IE's treatment of not explicitly
				// setting a boolean content attribute,
				// since its presence should be enough
				// http://bugs.jquery.com/ticket/12359
				docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
					"<select id='" + expando + "-\r\\' msallowcapture=''>" +
					"<option selected=''></option></select>";

				// Support: IE8, Opera 11-12.16
				// Nothing should be selected when empty strings follow ^= or $= or *=
				// The test attribute must be unknown in Opera but "safe" for WinRT
				// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
				if ( div.querySelectorAll("[msallowcapture^='']").length ) {
					rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
				}

				// Support: IE8
				// Boolean attributes and "value" are not treated correctly
				if ( !div.querySelectorAll("[selected]").length ) {
					rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
				}

				// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
				if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
					rbuggyQSA.push("~=");
				}

				// Webkit/Opera - :checked should return selected option elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":checked").length ) {
					rbuggyQSA.push(":checked");
				}

				// Support: Safari 8+, iOS 8+
				// https://bugs.webkit.org/show_bug.cgi?id=136851
				// In-page `selector#id sibing-combinator selector` fails
				if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
					rbuggyQSA.push(".#.+[+~]");
				}
			});

			assert(function( div ) {
				// Support: Windows 8 Native Apps
				// The type and name attributes are restricted during .innerHTML assignment
				var input = document.createElement("input");
				input.setAttribute( "type", "hidden" );
				div.appendChild( input ).setAttribute( "name", "D" );

				// Support: IE8
				// Enforce case-sensitivity of name attribute
				if ( div.querySelectorAll("[name=d]").length ) {
					rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
				}

				// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":enabled").length ) {
					rbuggyQSA.push( ":enabled", ":disabled" );
				}

				// Opera 10-11 does not throw on post-comma invalid pseudos
				div.querySelectorAll("*,:x");
				rbuggyQSA.push(",.*:");
			});
		}

		if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
			docElem.webkitMatchesSelector ||
			docElem.mozMatchesSelector ||
			docElem.oMatchesSelector ||
			docElem.msMatchesSelector) )) ) {

			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				support.disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				matches.call( div, "[s!='']:x" );
				rbuggyMatches.push( "!=", pseudos );
			});
		}

		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
		rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

		/* Contains
		---------------------------------------------------------------------- */
		hasCompare = rnative.test( docElem.compareDocumentPosition );

		// Element contains another
		// Purposefully self-exclusive
		// As in, an element does not contain itself
		contains = hasCompare || rnative.test( docElem.contains ) ?
			function( a, b ) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
					bup = b && b.parentNode;
				return a === bup || !!( bup && bup.nodeType === 1 && (
					adown.contains ?
						adown.contains( bup ) :
						a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
				));
			} :
			function( a, b ) {
				if ( b ) {
					while ( (b = b.parentNode) ) {
						if ( b === a ) {
							return true;
						}
					}
				}
				return false;
			};

		/* Sorting
		---------------------------------------------------------------------- */

		// Document order sorting
		sortOrder = hasCompare ?
		function( a, b ) {

			// Flag for duplicate removal
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			// Sort on method existence if only one input has compareDocumentPosition
			var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
			if ( compare ) {
				return compare;
			}

			// Calculate position if both inputs belong to the same document
			compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
				a.compareDocumentPosition( b ) :

				// Otherwise we know they are disconnected
				1;

			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

				// Choose the first element that is related to our preferred document
				if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
					return 1;
				}

				// Maintain original order
				return sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;
			}

			return compare & 4 ? -1 : 1;
		} :
		function( a, b ) {
			// Exit early if the nodes are identical
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			var cur,
				i = 0,
				aup = a.parentNode,
				bup = b.parentNode,
				ap = [ a ],
				bp = [ b ];

			// Parentless nodes are either documents or disconnected
			if ( !aup || !bup ) {
				return a === document ? -1 :
					b === document ? 1 :
					aup ? -1 :
					bup ? 1 :
					sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;

			// If the nodes are siblings, we can do a quick check
			} else if ( aup === bup ) {
				return siblingCheck( a, b );
			}

			// Otherwise we need full lists of their ancestors for comparison
			cur = a;
			while ( (cur = cur.parentNode) ) {
				ap.unshift( cur );
			}
			cur = b;
			while ( (cur = cur.parentNode) ) {
				bp.unshift( cur );
			}

			// Walk down the tree looking for a discrepancy
			while ( ap[i] === bp[i] ) {
				i++;
			}

			return i ?
				// Do a sibling check if the nodes have a common ancestor
				siblingCheck( ap[i], bp[i] ) :

				// Otherwise nodes in our document sort first
				ap[i] === preferredDoc ? -1 :
				bp[i] === preferredDoc ? 1 :
				0;
		};

		return document;
	};

	Sizzle.matches = function( expr, elements ) {
		return Sizzle( expr, null, null, elements );
	};

	Sizzle.matchesSelector = function( elem, expr ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		// Make sure that attribute selectors are quoted
		expr = expr.replace( rattributeQuotes, "='$1']" );

		if ( support.matchesSelector && documentIsHTML &&
			!compilerCache[ expr + " " ] &&
			( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
			( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

			try {
				var ret = matches.call( elem, expr );

				// IE 9's matchesSelector returns false on disconnected nodes
				if ( ret || support.disconnectedMatch ||
						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11 ) {
					return ret;
				}
			} catch (e) {}
		}

		return Sizzle( expr, document, null, [ elem ] ).length > 0;
	};

	Sizzle.contains = function( context, elem ) {
		// Set document vars if needed
		if ( ( context.ownerDocument || context ) !== document ) {
			setDocument( context );
		}
		return contains( context, elem );
	};

	Sizzle.attr = function( elem, name ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		var fn = Expr.attrHandle[ name.toLowerCase() ],
			// Don't get fooled by Object.prototype properties (jQuery #13807)
			val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
				fn( elem, name, !documentIsHTML ) :
				undefined;

		return val !== undefined ?
			val :
			support.attributes || !documentIsHTML ?
				elem.getAttribute( name ) :
				(val = elem.getAttributeNode(name)) && val.specified ?
					val.value :
					null;
	};

	Sizzle.error = function( msg ) {
		throw new Error( "Syntax error, unrecognized expression: " + msg );
	};

	/**
	 * Document sorting and removing duplicates
	 * @param {ArrayLike} results
	 */
	Sizzle.uniqueSort = function( results ) {
		var elem,
			duplicates = [],
			j = 0,
			i = 0;

		// Unless we *know* we can detect duplicates, assume their presence
		hasDuplicate = !support.detectDuplicates;
		sortInput = !support.sortStable && results.slice( 0 );
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			while ( (elem = results[i++]) ) {
				if ( elem === results[ i ] ) {
					j = duplicates.push( i );
				}
			}
			while ( j-- ) {
				results.splice( duplicates[ j ], 1 );
			}
		}

		// Clear input after sorting to release objects
		// See https://github.com/jquery/sizzle/pull/225
		sortInput = null;

		return results;
	};

	/**
	 * Utility function for retrieving the text value of an array of DOM nodes
	 * @param {Array|Element} elem
	 */
	getText = Sizzle.getText = function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {
			// If no nodeType, this is expected to be an array
			while ( (node = elem[i++]) ) {
				// Do not traverse comment nodes
				ret += getText( node );
			}
		} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (jQuery #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes

		return ret;
	};

	Expr = Sizzle.selectors = {

		// Can be adjusted by the user
		cacheLength: 50,

		createPseudo: markFunction,

		match: matchExpr,

		attrHandle: {},

		find: {},

		relative: {
			">": { dir: "parentNode", first: true },
			" ": { dir: "parentNode" },
			"+": { dir: "previousSibling", first: true },
			"~": { dir: "previousSibling" }
		},

		preFilter: {
			"ATTR": function( match ) {
				match[1] = match[1].replace( runescape, funescape );

				// Move the given value to match[3] whether quoted or unquoted
				match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

				if ( match[2] === "~=" ) {
					match[3] = " " + match[3] + " ";
				}

				return match.slice( 0, 4 );
			},

			"CHILD": function( match ) {
				/* matches from matchExpr["CHILD"]
					1 type (only|nth|...)
					2 what (child|of-type)
					3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
					4 xn-component of xn+y argument ([+-]?\d*n|)
					5 sign of xn-component
					6 x of xn-component
					7 sign of y-component
					8 y of y-component
				*/
				match[1] = match[1].toLowerCase();

				if ( match[1].slice( 0, 3 ) === "nth" ) {
					// nth-* requires argument
					if ( !match[3] ) {
						Sizzle.error( match[0] );
					}

					// numeric x and y parameters for Expr.filter.CHILD
					// remember that false/true cast respectively to 0/1
					match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
					match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

				// other types prohibit arguments
				} else if ( match[3] ) {
					Sizzle.error( match[0] );
				}

				return match;
			},

			"PSEUDO": function( match ) {
				var excess,
					unquoted = !match[6] && match[2];

				if ( matchExpr["CHILD"].test( match[0] ) ) {
					return null;
				}

				// Accept quoted arguments as-is
				if ( match[3] ) {
					match[2] = match[4] || match[5] || "";

				// Strip excess characters from unquoted arguments
				} else if ( unquoted && rpseudo.test( unquoted ) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					match[0] = match[0].slice( 0, excess );
					match[2] = unquoted.slice( 0, excess );
				}

				// Return only captures needed by the pseudo filter method (type and argument)
				return match.slice( 0, 3 );
			}
		},

		filter: {

			"TAG": function( nodeNameSelector ) {
				var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
				return nodeNameSelector === "*" ?
					function() { return true; } :
					function( elem ) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
			},

			"CLASS": function( className ) {
				var pattern = classCache[ className + " " ];

				return pattern ||
					(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
					classCache( className, function( elem ) {
						return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
					});
			},

			"ATTR": function( name, operator, check ) {
				return function( elem ) {
					var result = Sizzle.attr( elem, name );

					if ( result == null ) {
						return operator === "!=";
					}
					if ( !operator ) {
						return true;
					}

					result += "";

					return operator === "=" ? result === check :
						operator === "!=" ? result !== check :
						operator === "^=" ? check && result.indexOf( check ) === 0 :
						operator === "*=" ? check && result.indexOf( check ) > -1 :
						operator === "$=" ? check && result.slice( -check.length ) === check :
						operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
						operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
						false;
				};
			},

			"CHILD": function( type, what, argument, first, last ) {
				var simple = type.slice( 0, 3 ) !== "nth",
					forward = type.slice( -4 ) !== "last",
					ofType = what === "of-type";

				return first === 1 && last === 0 ?

					// Shortcut for :nth-*(n)
					function( elem ) {
						return !!elem.parentNode;
					} :

					function( elem, context, xml ) {
						var cache, uniqueCache, outerCache, node, nodeIndex, start,
							dir = simple !== forward ? "nextSibling" : "previousSibling",
							parent = elem.parentNode,
							name = ofType && elem.nodeName.toLowerCase(),
							useCache = !xml && !ofType,
							diff = false;

						if ( parent ) {

							// :(first|last|only)-(child|of-type)
							if ( simple ) {
								while ( dir ) {
									node = elem;
									while ( (node = node[ dir ]) ) {
										if ( ofType ?
											node.nodeName.toLowerCase() === name :
											node.nodeType === 1 ) {

											return false;
										}
									}
									// Reverse direction for :only-* (if we haven't yet done so)
									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}

							start = [ forward ? parent.firstChild : parent.lastChild ];

							// non-xml :nth-child(...) stores cache data on `parent`
							if ( forward && useCache ) {

								// Seek `elem` from a previously-cached index

								// ...in a gzip-friendly way
								node = parent;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex && cache[ 2 ];
								node = nodeIndex && parent.childNodes[ nodeIndex ];

								while ( (node = ++nodeIndex && node && node[ dir ] ||

									// Fallback to seeking `elem` from the start
									(diff = nodeIndex = 0) || start.pop()) ) {

									// When found, cache indexes on `parent` and break
									if ( node.nodeType === 1 && ++diff && node === elem ) {
										uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
										break;
									}
								}

							} else {
								// Use previously-cached element index if available
								if ( useCache ) {
									// ...in a gzip-friendly way
									node = elem;
									outerCache = node[ expando ] || (node[ expando ] = {});

									// Support: IE <9 only
									// Defend against cloned attroperties (jQuery gh-1709)
									uniqueCache = outerCache[ node.uniqueID ] ||
										(outerCache[ node.uniqueID ] = {});

									cache = uniqueCache[ type ] || [];
									nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
									diff = nodeIndex;
								}

								// xml :nth-child(...)
								// or :nth-last-child(...) or :nth(-last)?-of-type(...)
								if ( diff === false ) {
									// Use the same loop as above to seek `elem` from the start
									while ( (node = ++nodeIndex && node && node[ dir ] ||
										(diff = nodeIndex = 0) || start.pop()) ) {

										if ( ( ofType ?
											node.nodeName.toLowerCase() === name :
											node.nodeType === 1 ) &&
											++diff ) {

											// Cache the index of each encountered element
											if ( useCache ) {
												outerCache = node[ expando ] || (node[ expando ] = {});

												// Support: IE <9 only
												// Defend against cloned attroperties (jQuery gh-1709)
												uniqueCache = outerCache[ node.uniqueID ] ||
													(outerCache[ node.uniqueID ] = {});

												uniqueCache[ type ] = [ dirruns, diff ];
											}

											if ( node === elem ) {
												break;
											}
										}
									}
								}
							}

							// Incorporate the offset, then check against cycle size
							diff -= last;
							return diff === first || ( diff % first === 0 && diff / first >= 0 );
						}
					};
			},

			"PSEUDO": function( pseudo, argument ) {
				// pseudo-class names are case-insensitive
				// http://www.w3.org/TR/selectors/#pseudo-classes
				// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
				// Remember that setFilters inherits from pseudos
				var args,
					fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
						Sizzle.error( "unsupported pseudo: " + pseudo );

				// The user may use createPseudo to indicate that
				// arguments are needed to create the filter function
				// just as Sizzle does
				if ( fn[ expando ] ) {
					return fn( argument );
				}

				// But maintain support for old signatures
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
						markFunction(function( seed, matches ) {
							var idx,
								matched = fn( seed, argument ),
								i = matched.length;
							while ( i-- ) {
								idx = indexOf( seed, matched[i] );
								seed[ idx ] = !( matches[ idx ] = matched[i] );
							}
						}) :
						function( elem ) {
							return fn( elem, 0, args );
						};
				}

				return fn;
			}
		},

		pseudos: {
			// Potentially complex pseudos
			"not": markFunction(function( selector ) {
				// Trim the selector passed to compile
				// to avoid treating leading and trailing
				// spaces as combinators
				var input = [],
					results = [],
					matcher = compile( selector.replace( rtrim, "$1" ) );

				return matcher[ expando ] ?
					markFunction(function( seed, matches, context, xml ) {
						var elem,
							unmatched = matcher( seed, null, xml, [] ),
							i = seed.length;

						// Match elements unmatched by `matcher`
						while ( i-- ) {
							if ( (elem = unmatched[i]) ) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) :
					function( elem, context, xml ) {
						input[0] = elem;
						matcher( input, null, xml, results );
						// Don't keep the element (issue #299)
						input[0] = null;
						return !results.pop();
					};
			}),

			"has": markFunction(function( selector ) {
				return function( elem ) {
					return Sizzle( selector, elem ).length > 0;
				};
			}),

			"contains": markFunction(function( text ) {
				text = text.replace( runescape, funescape );
				return function( elem ) {
					return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
				};
			}),

			// "Whether an element is represented by a :lang() selector
			// is based solely on the element's language value
			// being equal to the identifier C,
			// or beginning with the identifier C immediately followed by "-".
			// The matching of C against the element's language value is performed case-insensitively.
			// The identifier C does not have to be a valid language name."
			// http://www.w3.org/TR/selectors/#lang-pseudo
			"lang": markFunction( function( lang ) {
				// lang value must be a valid identifier
				if ( !ridentifier.test(lang || "") ) {
					Sizzle.error( "unsupported lang: " + lang );
				}
				lang = lang.replace( runescape, funescape ).toLowerCase();
				return function( elem ) {
					var elemLang;
					do {
						if ( (elemLang = documentIsHTML ?
							elem.lang :
							elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

							elemLang = elemLang.toLowerCase();
							return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
						}
					} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
					return false;
				};
			}),

			// Miscellaneous
			"target": function( elem ) {
				var hash = window.location && window.location.hash;
				return hash && hash.slice( 1 ) === elem.id;
			},

			"root": function( elem ) {
				return elem === docElem;
			},

			"focus": function( elem ) {
				return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
			},

			// Boolean properties
			"enabled": function( elem ) {
				return elem.disabled === false;
			},

			"disabled": function( elem ) {
				return elem.disabled === true;
			},

			"checked": function( elem ) {
				// In CSS3, :checked should return both checked and selected elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				var nodeName = elem.nodeName.toLowerCase();
				return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
			},

			"selected": function( elem ) {
				// Accessing this property makes selected-by-default
				// options in Safari work properly
				if ( elem.parentNode ) {
					elem.parentNode.selectedIndex;
				}

				return elem.selected === true;
			},

			// Contents
			"empty": function( elem ) {
				// http://www.w3.org/TR/selectors/#empty-pseudo
				// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
				//   but not by others (comment: 8; processing instruction: 7; etc.)
				// nodeType < 6 works because attributes (2) do not appear as children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					if ( elem.nodeType < 6 ) {
						return false;
					}
				}
				return true;
			},

			"parent": function( elem ) {
				return !Expr.pseudos["empty"]( elem );
			},

			// Element/input types
			"header": function( elem ) {
				return rheader.test( elem.nodeName );
			},

			"input": function( elem ) {
				return rinputs.test( elem.nodeName );
			},

			"button": function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === "button" || name === "button";
			},

			"text": function( elem ) {
				var attr;
				return elem.nodeName.toLowerCase() === "input" &&
					elem.type === "text" &&

					// Support: IE<8
					// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
					( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
			},

			// Position-in-collection
			"first": createPositionalPseudo(function() {
				return [ 0 ];
			}),

			"last": createPositionalPseudo(function( matchIndexes, length ) {
				return [ length - 1 ];
			}),

			"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
				return [ argument < 0 ? argument + length : argument ];
			}),

			"even": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 0;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"odd": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 1;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; --i >= 0; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; ++i < length; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			})
		}
	};

	Expr.pseudos["nth"] = Expr.pseudos["eq"];

	// Add button/input type pseudos
	for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
		Expr.pseudos[ i ] = createInputPseudo( i );
	}
	for ( i in { submit: true, reset: true } ) {
		Expr.pseudos[ i ] = createButtonPseudo( i );
	}

	// Easy API for creating new setFilters
	function setFilters() {}
	setFilters.prototype = Expr.filters = Expr.pseudos;
	Expr.setFilters = new setFilters();

	tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
		var matched, match, tokens, type,
			soFar, groups, preFilters,
			cached = tokenCache[ selector + " " ];

		if ( cached ) {
			return parseOnly ? 0 : cached.slice( 0 );
		}

		soFar = selector;
		groups = [];
		preFilters = Expr.preFilter;

		while ( soFar ) {

			// Comma and first run
			if ( !matched || (match = rcomma.exec( soFar )) ) {
				if ( match ) {
					// Don't consume trailing commas as valid
					soFar = soFar.slice( match[0].length ) || soFar;
				}
				groups.push( (tokens = []) );
			}

			matched = false;

			// Combinators
			if ( (match = rcombinators.exec( soFar )) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					// Cast descendant combinators to space
					type: match[0].replace( rtrim, " " )
				});
				soFar = soFar.slice( matched.length );
			}

			// Filters
			for ( type in Expr.filter ) {
				if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
					(match = preFilters[ type ]( match ))) ) {
					matched = match.shift();
					tokens.push({
						value: matched,
						type: type,
						matches: match
					});
					soFar = soFar.slice( matched.length );
				}
			}

			if ( !matched ) {
				break;
			}
		}

		// Return the length of the invalid excess
		// if we're just parsing
		// Otherwise, throw an error or return tokens
		return parseOnly ?
			soFar.length :
			soFar ?
				Sizzle.error( selector ) :
				// Cache the tokens
				tokenCache( selector, groups ).slice( 0 );
	};

	function toSelector( tokens ) {
		var i = 0,
			len = tokens.length,
			selector = "";
		for ( ; i < len; i++ ) {
			selector += tokens[i].value;
		}
		return selector;
	}

	function addCombinator( matcher, combinator, base ) {
		var dir = combinator.dir,
			checkNonElements = base && dir === "parentNode",
			doneName = done++;

		return combinator.first ?
			// Check against closest ancestor/preceding element
			function( elem, context, xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						return matcher( elem, context, xml );
					}
				}
			} :

			// Check against all ancestor/preceding elements
			function( elem, context, xml ) {
				var oldCache, uniqueCache, outerCache,
					newCache = [ dirruns, doneName ];

				// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
				if ( xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							if ( matcher( elem, context, xml ) ) {
								return true;
							}
						}
					}
				} else {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							outerCache = elem[ expando ] || (elem[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

							if ( (oldCache = uniqueCache[ dir ]) &&
								oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

								// Assign to newCache so results back-propagate to previous elements
								return (newCache[ 2 ] = oldCache[ 2 ]);
							} else {
								// Reuse newcache so results back-propagate to previous elements
								uniqueCache[ dir ] = newCache;

								// A match means we're done; a fail means we have to keep checking
								if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
									return true;
								}
							}
						}
					}
				}
			};
	}

	function elementMatcher( matchers ) {
		return matchers.length > 1 ?
			function( elem, context, xml ) {
				var i = matchers.length;
				while ( i-- ) {
					if ( !matchers[i]( elem, context, xml ) ) {
						return false;
					}
				}
				return true;
			} :
			matchers[0];
	}

	function multipleContexts( selector, contexts, results ) {
		var i = 0,
			len = contexts.length;
		for ( ; i < len; i++ ) {
			Sizzle( selector, contexts[i], results );
		}
		return results;
	}

	function condense( unmatched, map, filter, context, xml ) {
		var elem,
			newUnmatched = [],
			i = 0,
			len = unmatched.length,
			mapped = map != null;

		for ( ; i < len; i++ ) {
			if ( (elem = unmatched[i]) ) {
				if ( !filter || filter( elem, context, xml ) ) {
					newUnmatched.push( elem );
					if ( mapped ) {
						map.push( i );
					}
				}
			}
		}

		return newUnmatched;
	}

	function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
		if ( postFilter && !postFilter[ expando ] ) {
			postFilter = setMatcher( postFilter );
		}
		if ( postFinder && !postFinder[ expando ] ) {
			postFinder = setMatcher( postFinder, postSelector );
		}
		return markFunction(function( seed, results, context, xml ) {
			var temp, i, elem,
				preMap = [],
				postMap = [],
				preexisting = results.length,

				// Get initial elements from seed or context
				elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

				// Prefilter to get matcher input, preserving a map for seed-results synchronization
				matcherIn = preFilter && ( seed || !selector ) ?
					condense( elems, preMap, preFilter, context, xml ) :
					elems,

				matcherOut = matcher ?
					// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
					postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

						// ...intermediate processing is necessary
						[] :

						// ...otherwise use results directly
						results :
					matcherIn;

			// Find primary matches
			if ( matcher ) {
				matcher( matcherIn, matcherOut, context, xml );
			}

			// Apply postFilter
			if ( postFilter ) {
				temp = condense( matcherOut, postMap );
				postFilter( temp, [], context, xml );

				// Un-match failing elements by moving them back to matcherIn
				i = temp.length;
				while ( i-- ) {
					if ( (elem = temp[i]) ) {
						matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
					}
				}
			}

			if ( seed ) {
				if ( postFinder || preFilter ) {
					if ( postFinder ) {
						// Get the final matcherOut by condensing this intermediate into postFinder contexts
						temp = [];
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) ) {
								// Restore matcherIn since elem is not yet a final match
								temp.push( (matcherIn[i] = elem) );
							}
						}
						postFinder( null, (matcherOut = []), temp, xml );
					}

					// Move matched elements from seed to results to keep them synchronized
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) &&
							(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

							seed[temp] = !(results[temp] = elem);
						}
					}
				}

			// Add elements to results, through postFinder if defined
			} else {
				matcherOut = condense(
					matcherOut === results ?
						matcherOut.splice( preexisting, matcherOut.length ) :
						matcherOut
				);
				if ( postFinder ) {
					postFinder( null, results, matcherOut, xml );
				} else {
					push.apply( results, matcherOut );
				}
			}
		});
	}

	function matcherFromTokens( tokens ) {
		var checkContext, matcher, j,
			len = tokens.length,
			leadingRelative = Expr.relative[ tokens[0].type ],
			implicitRelative = leadingRelative || Expr.relative[" "],
			i = leadingRelative ? 1 : 0,

			// The foundational matcher ensures that elements are reachable from top-level context(s)
			matchContext = addCombinator( function( elem ) {
				return elem === checkContext;
			}, implicitRelative, true ),
			matchAnyContext = addCombinator( function( elem ) {
				return indexOf( checkContext, elem ) > -1;
			}, implicitRelative, true ),
			matchers = [ function( elem, context, xml ) {
				var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
					(checkContext = context).nodeType ?
						matchContext( elem, context, xml ) :
						matchAnyContext( elem, context, xml ) );
				// Avoid hanging onto element (issue #299)
				checkContext = null;
				return ret;
			} ];

		for ( ; i < len; i++ ) {
			if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
				matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
			} else {
				matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

				// Return special upon seeing a positional matcher
				if ( matcher[ expando ] ) {
					// Find the next relative operator (if any) for proper handling
					j = ++i;
					for ( ; j < len; j++ ) {
						if ( Expr.relative[ tokens[j].type ] ) {
							break;
						}
					}
					return setMatcher(
						i > 1 && elementMatcher( matchers ),
						i > 1 && toSelector(
							// If the preceding token was a descendant combinator, insert an implicit any-element `*`
							tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
						).replace( rtrim, "$1" ),
						matcher,
						i < j && matcherFromTokens( tokens.slice( i, j ) ),
						j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
						j < len && toSelector( tokens )
					);
				}
				matchers.push( matcher );
			}
		}

		return elementMatcher( matchers );
	}

	function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
		var bySet = setMatchers.length > 0,
			byElement = elementMatchers.length > 0,
			superMatcher = function( seed, context, xml, results, outermost ) {
				var elem, j, matcher,
					matchedCount = 0,
					i = "0",
					unmatched = seed && [],
					setMatched = [],
					contextBackup = outermostContext,
					// We must always have either seed elements or outermost context
					elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
					len = elems.length;

				if ( outermost ) {
					outermostContext = context === document || context || outermost;
				}

				// Add elements passing elementMatchers directly to results
				// Support: IE<9, Safari
				// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
				for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
					if ( byElement && elem ) {
						j = 0;
						if ( !context && elem.ownerDocument !== document ) {
							setDocument( elem );
							xml = !documentIsHTML;
						}
						while ( (matcher = elementMatchers[j++]) ) {
							if ( matcher( elem, context || document, xml) ) {
								results.push( elem );
								break;
							}
						}
						if ( outermost ) {
							dirruns = dirrunsUnique;
						}
					}

					// Track unmatched elements for set filters
					if ( bySet ) {
						// They will have gone through all possible matchers
						if ( (elem = !matcher && elem) ) {
							matchedCount--;
						}

						// Lengthen the array for every element, matched or not
						if ( seed ) {
							unmatched.push( elem );
						}
					}
				}

				// `i` is now the count of elements visited above, and adding it to `matchedCount`
				// makes the latter nonnegative.
				matchedCount += i;

				// Apply set filters to unmatched elements
				// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
				// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
				// no element matchers and no seed.
				// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
				// case, which will result in a "00" `matchedCount` that differs from `i` but is also
				// numerically zero.
				if ( bySet && i !== matchedCount ) {
					j = 0;
					while ( (matcher = setMatchers[j++]) ) {
						matcher( unmatched, setMatched, context, xml );
					}

					if ( seed ) {
						// Reintegrate element matches to eliminate the need for sorting
						if ( matchedCount > 0 ) {
							while ( i-- ) {
								if ( !(unmatched[i] || setMatched[i]) ) {
									setMatched[i] = pop.call( results );
								}
							}
						}

						// Discard index placeholder values to get only actual matches
						setMatched = condense( setMatched );
					}

					// Add matches to results
					push.apply( results, setMatched );

					// Seedless set matches succeeding multiple successful matchers stipulate sorting
					if ( outermost && !seed && setMatched.length > 0 &&
						( matchedCount + setMatchers.length ) > 1 ) {

						Sizzle.uniqueSort( results );
					}
				}

				// Override manipulation of globals by nested matchers
				if ( outermost ) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}

				return unmatched;
			};

		return bySet ?
			markFunction( superMatcher ) :
			superMatcher;
	}

	compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
		var i,
			setMatchers = [],
			elementMatchers = [],
			cached = compilerCache[ selector + " " ];

		if ( !cached ) {
			// Generate a function of recursive functions that can be used to check each element
			if ( !match ) {
				match = tokenize( selector );
			}
			i = match.length;
			while ( i-- ) {
				cached = matcherFromTokens( match[i] );
				if ( cached[ expando ] ) {
					setMatchers.push( cached );
				} else {
					elementMatchers.push( cached );
				}
			}

			// Cache the compiled function
			cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

			// Save selector and tokenization
			cached.selector = selector;
		}
		return cached;
	};

	/**
	 * A low-level selection function that works with Sizzle's compiled
	 *  selector functions
	 * @param {String|Function} selector A selector or a pre-compiled
	 *  selector function built with Sizzle.compile
	 * @param {Element} context
	 * @param {Array} [results]
	 * @param {Array} [seed] A set of elements to match against
	 */
	select = Sizzle.select = function( selector, context, results, seed ) {
		var i, tokens, token, type, find,
			compiled = typeof selector === "function" && selector,
			match = !seed && tokenize( (selector = compiled.selector || selector) );

		results = results || [];

		// Try to minimize operations if there is only one selector in the list and no seed
		// (the latter of which guarantees us context)
		if ( match.length === 1 ) {

			// Reduce context if the leading compound selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {

				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;

				// Precompiled matchers will still verify ancestry, so step up a level
				} else if ( compiled ) {
					context = context.parentNode;
				}

				selector = selector.slice( tokens.shift().value.length );
			}

			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}

						break;
					}
				}
			}
		}

		// Compile and execute a filtering function if one is not provided
		// Provide `match` to avoid retokenization if we modified the selector above
		( compiled || compile( selector, match ) )(
			seed,
			context,
			!documentIsHTML,
			results,
			!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
		);
		return results;
	};

	// One-time assignments

	// Sort stability
	support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

	// Support: Chrome 14-35+
	// Always assume duplicates if they aren't passed to the comparison function
	support.detectDuplicates = !!hasDuplicate;

	// Initialize against the default document
	setDocument();

	// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
	// Detached nodes confoundingly follow *each other*
	support.sortDetached = assert(function( div1 ) {
		// Should return 1, but returns 4 (following)
		return div1.compareDocumentPosition( document.createElement("div") ) & 1;
	});

	// Support: IE<8
	// Prevent attribute/property "interpolation"
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	if ( !assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild.getAttribute("href") === "#" ;
	}) ) {
		addHandle( "type|href|height|width", function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
			}
		});
	}

	// Support: IE<9
	// Use defaultValue in place of getAttribute("value")
	if ( !support.attributes || !assert(function( div ) {
		div.innerHTML = "<input/>";
		div.firstChild.setAttribute( "value", "" );
		return div.firstChild.getAttribute( "value" ) === "";
	}) ) {
		addHandle( "value", function( elem, name, isXML ) {
			if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
				return elem.defaultValue;
			}
		});
	}

	// Support: IE<9
	// Use getAttributeNode to fetch booleans when getAttribute lies
	if ( !assert(function( div ) {
		return div.getAttribute("disabled") == null;
	}) ) {
		addHandle( booleans, function( elem, name, isXML ) {
			var val;
			if ( !isXML ) {
				return elem[ name ] === true ? name.toLowerCase() :
						(val = elem.getAttributeNode( name )) && val.specified ?
						val.value :
					null;
			}
		});
	}

	return Sizzle;

	})( window );



	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;
	jQuery.expr[ ":" ] = jQuery.expr.pseudos;
	jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;



	var dir = function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	};


	var siblings = function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	};


	var rneedsContext = jQuery.expr.match.needsContext;

	var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



	var risSimple = /^.[^:#\[\.,]*$/;

	// Implement the identical functionality for filter and not
	function winnow( elements, qualifier, not ) {
		if ( jQuery.isFunction( qualifier ) ) {
			return jQuery.grep( elements, function( elem, i ) {
				/* jshint -W018 */
				return !!qualifier.call( elem, i, elem ) !== not;
			} );

		}

		if ( qualifier.nodeType ) {
			return jQuery.grep( elements, function( elem ) {
				return ( elem === qualifier ) !== not;
			} );

		}

		if ( typeof qualifier === "string" ) {
			if ( risSimple.test( qualifier ) ) {
				return jQuery.filter( qualifier, elements, not );
			}

			qualifier = jQuery.filter( qualifier, elements );
		}

		return jQuery.grep( elements, function( elem ) {
			return ( jQuery.inArray( elem, qualifier ) > -1 ) !== not;
		} );
	}

	jQuery.filter = function( expr, elems, not ) {
		var elem = elems[ 0 ];

		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			} ) );
	};

	jQuery.fn.extend( {
		find: function( selector ) {
			var i,
				ret = [],
				self = this,
				len = self.length;

			if ( typeof selector !== "string" ) {
				return this.pushStack( jQuery( selector ).filter( function() {
					for ( i = 0; i < len; i++ ) {
						if ( jQuery.contains( self[ i ], this ) ) {
							return true;
						}
					}
				} ) );
			}

			for ( i = 0; i < len; i++ ) {
				jQuery.find( selector, self[ i ], ret );
			}

			// Needed because $( selector, context ) becomes $( context ).find( selector )
			ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
			ret.selector = this.selector ? this.selector + " " + selector : selector;
			return ret;
		},
		filter: function( selector ) {
			return this.pushStack( winnow( this, selector || [], false ) );
		},
		not: function( selector ) {
			return this.pushStack( winnow( this, selector || [], true ) );
		},
		is: function( selector ) {
			return !!winnow(
				this,

				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === "string" && rneedsContext.test( selector ) ?
					jQuery( selector ) :
					selector || [],
				false
			).length;
		}
	} );


	// Initialize a jQuery object


	// A central reference to the root jQuery(document)
	var rootjQuery,

		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

		init = jQuery.fn.init = function( selector, context, root ) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if ( !selector ) {
				return this;
			}

			// init accepts an alternate rootjQuery
			// so migrate can support jQuery.sub (gh-2101)
			root = root || rootjQuery;

			// Handle HTML strings
			if ( typeof selector === "string" ) {
				if ( selector.charAt( 0 ) === "<" &&
					selector.charAt( selector.length - 1 ) === ">" &&
					selector.length >= 3 ) {

					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [ null, selector, null ];

				} else {
					match = rquickExpr.exec( selector );
				}

				// Match html or make sure no context is specified for #id
				if ( match && ( match[ 1 ] || !context ) ) {

					// HANDLE: $(html) -> $(array)
					if ( match[ 1 ] ) {
						context = context instanceof jQuery ? context[ 0 ] : context;

						// scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge( this, jQuery.parseHTML(
							match[ 1 ],
							context && context.nodeType ? context.ownerDocument || context : document,
							true
						) );

						// HANDLE: $(html, props)
						if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
							for ( match in context ) {

								// Properties of context are called as methods if possible
								if ( jQuery.isFunction( this[ match ] ) ) {
									this[ match ]( context[ match ] );

								// ...and otherwise set as attributes
								} else {
									this.attr( match, context[ match ] );
								}
							}
						}

						return this;

					// HANDLE: $(#id)
					} else {
						elem = document.getElementById( match[ 2 ] );

						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document #6963
						if ( elem && elem.parentNode ) {

							// Handle the case where IE and Opera return items
							// by name instead of ID
							if ( elem.id !== match[ 2 ] ) {
								return rootjQuery.find( selector );
							}

							// Otherwise, we inject the element directly into the jQuery object
							this.length = 1;
							this[ 0 ] = elem;
						}

						this.context = document;
						this.selector = selector;
						return this;
					}

				// HANDLE: $(expr, $(...))
				} else if ( !context || context.jquery ) {
					return ( context || root ).find( selector );

				// HANDLE: $(expr, context)
				// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor( context ).find( selector );
				}

			// HANDLE: $(DOMElement)
			} else if ( selector.nodeType ) {
				this.context = this[ 0 ] = selector;
				this.length = 1;
				return this;

			// HANDLE: $(function)
			// Shortcut for document ready
			} else if ( jQuery.isFunction( selector ) ) {
				return typeof root.ready !== "undefined" ?
					root.ready( selector ) :

					// Execute immediately if ready is not present
					selector( jQuery );
			}

			if ( selector.selector !== undefined ) {
				this.selector = selector.selector;
				this.context = selector.context;
			}

			return jQuery.makeArray( selector, this );
		};

	// Give the init function the jQuery prototype for later instantiation
	init.prototype = jQuery.fn;

	// Initialize central reference
	rootjQuery = jQuery( document );


	var rparentsprev = /^(?:parents|prev(?:Until|All))/,

		// methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};

	jQuery.fn.extend( {
		has: function( target ) {
			var i,
				targets = jQuery( target, this ),
				len = targets.length;

			return this.filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( this, targets[ i ] ) ) {
						return true;
					}
				}
			} );
		},

		closest: function( selectors, context ) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
					jQuery( selectors, context || this.context ) :
					0;

			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( pos ?
						pos.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}

			return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
		},

		// Determine the position of an element within
		// the matched set of elements
		index: function( elem ) {

			// No argument, return index in parent
			if ( !elem ) {
				return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
			}

			// index in selector
			if ( typeof elem === "string" ) {
				return jQuery.inArray( this[ 0 ], jQuery( elem ) );
			}

			// Locate the position of the desired element
			return jQuery.inArray(

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[ 0 ] : elem, this );
		},

		add: function( selector, context ) {
			return this.pushStack(
				jQuery.uniqueSort(
					jQuery.merge( this.get(), jQuery( selector, context ) )
				)
			);
		},

		addBack: function( selector ) {
			return this.add( selector == null ?
				this.prevObject : this.prevObject.filter( selector )
			);
		}
	} );

	function sibling( cur, dir ) {
		do {
			cur = cur[ dir ];
		} while ( cur && cur.nodeType !== 1 );

		return cur;
	}

	jQuery.each( {
		parent: function( elem ) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function( elem ) {
			return dir( elem, "parentNode" );
		},
		parentsUntil: function( elem, i, until ) {
			return dir( elem, "parentNode", until );
		},
		next: function( elem ) {
			return sibling( elem, "nextSibling" );
		},
		prev: function( elem ) {
			return sibling( elem, "previousSibling" );
		},
		nextAll: function( elem ) {
			return dir( elem, "nextSibling" );
		},
		prevAll: function( elem ) {
			return dir( elem, "previousSibling" );
		},
		nextUntil: function( elem, i, until ) {
			return dir( elem, "nextSibling", until );
		},
		prevUntil: function( elem, i, until ) {
			return dir( elem, "previousSibling", until );
		},
		siblings: function( elem ) {
			return siblings( ( elem.parentNode || {} ).firstChild, elem );
		},
		children: function( elem ) {
			return siblings( elem.firstChild );
		},
		contents: function( elem ) {
			return jQuery.nodeName( elem, "iframe" ) ?
				elem.contentDocument || elem.contentWindow.document :
				jQuery.merge( [], elem.childNodes );
		}
	}, function( name, fn ) {
		jQuery.fn[ name ] = function( until, selector ) {
			var ret = jQuery.map( this, fn, until );

			if ( name.slice( -5 ) !== "Until" ) {
				selector = until;
			}

			if ( selector && typeof selector === "string" ) {
				ret = jQuery.filter( selector, ret );
			}

			if ( this.length > 1 ) {

				// Remove duplicates
				if ( !guaranteedUnique[ name ] ) {
					ret = jQuery.uniqueSort( ret );
				}

				// Reverse order for parents* and prev-derivatives
				if ( rparentsprev.test( name ) ) {
					ret = ret.reverse();
				}
			}

			return this.pushStack( ret );
		};
	} );
	var rnotwhite = ( /\S+/g );



	// Convert String-formatted options into Object-formatted ones
	function createOptions( options ) {
		var object = {};
		jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
			object[ flag ] = true;
		} );
		return object;
	}

	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function( options ) {

		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options = typeof options === "string" ?
			createOptions( options ) :
			jQuery.extend( {}, options );

		var // Flag to know if list is currently firing
			firing,

			// Last fire value for non-forgettable lists
			memory,

			// Flag to know if list was already fired
			fired,

			// Flag to prevent firing
			locked,

			// Actual callback list
			list = [],

			// Queue of execution data for repeatable lists
			queue = [],

			// Index of currently firing callback (modified by add/remove as needed)
			firingIndex = -1,

			// Fire callbacks
			fire = function() {

				// Enforce single-firing
				locked = options.once;

				// Execute callbacks for all pending executions,
				// respecting firingIndex overrides and runtime changes
				fired = firing = true;
				for ( ; queue.length; firingIndex = -1 ) {
					memory = queue.shift();
					while ( ++firingIndex < list.length ) {

						// Run callback and check for early termination
						if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
							options.stopOnFalse ) {

							// Jump to end and forget the data so .add doesn't re-fire
							firingIndex = list.length;
							memory = false;
						}
					}
				}

				// Forget the data if we're done with it
				if ( !options.memory ) {
					memory = false;
				}

				firing = false;

				// Clean up if we're done firing for good
				if ( locked ) {

					// Keep an empty list if we have data for future add calls
					if ( memory ) {
						list = [];

					// Otherwise, this object is spent
					} else {
						list = "";
					}
				}
			},

			// Actual Callbacks object
			self = {

				// Add a callback or a collection of callbacks to the list
				add: function() {
					if ( list ) {

						// If we have memory from a past run, we should fire after adding
						if ( memory && !firing ) {
							firingIndex = list.length - 1;
							queue.push( memory );
						}

						( function add( args ) {
							jQuery.each( args, function( _, arg ) {
								if ( jQuery.isFunction( arg ) ) {
									if ( !options.unique || !self.has( arg ) ) {
										list.push( arg );
									}
								} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

									// Inspect recursively
									add( arg );
								}
							} );
						} )( arguments );

						if ( memory && !firing ) {
							fire();
						}
					}
					return this;
				},

				// Remove a callback from the list
				remove: function() {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );

							// Handle firing indexes
							if ( index <= firingIndex ) {
								firingIndex--;
							}
						}
					} );
					return this;
				},

				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function( fn ) {
					return fn ?
						jQuery.inArray( fn, list ) > -1 :
						list.length > 0;
				},

				// Remove all callbacks from the list
				empty: function() {
					if ( list ) {
						list = [];
					}
					return this;
				},

				// Disable .fire and .add
				// Abort any current/pending executions
				// Clear all callbacks and values
				disable: function() {
					locked = queue = [];
					list = memory = "";
					return this;
				},
				disabled: function() {
					return !list;
				},

				// Disable .fire
				// Also disable .add unless we have memory (since it would have no effect)
				// Abort any pending executions
				lock: function() {
					locked = true;
					if ( !memory ) {
						self.disable();
					}
					return this;
				},
				locked: function() {
					return !!locked;
				},

				// Call all callbacks with the given context and arguments
				fireWith: function( context, args ) {
					if ( !locked ) {
						args = args || [];
						args = [ context, args.slice ? args.slice() : args ];
						queue.push( args );
						if ( !firing ) {
							fire();
						}
					}
					return this;
				},

				// Call all the callbacks with the given arguments
				fire: function() {
					self.fireWith( this, arguments );
					return this;
				},

				// To know if the callbacks have already been called at least once
				fired: function() {
					return !!fired;
				}
			};

		return self;
	};


	jQuery.extend( {

		Deferred: function( func ) {
			var tuples = [

					// action, add listener, listener list, final state
					[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
					[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
					[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
				],
				state = "pending",
				promise = {
					state: function() {
						return state;
					},
					always: function() {
						deferred.done( arguments ).fail( arguments );
						return this;
					},
					then: function( /* fnDone, fnFail, fnProgress */ ) {
						var fns = arguments;
						return jQuery.Deferred( function( newDefer ) {
							jQuery.each( tuples, function( i, tuple ) {
								var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

								// deferred[ done | fail | progress ] for forwarding actions to newDefer
								deferred[ tuple[ 1 ] ]( function() {
									var returned = fn && fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.progress( newDefer.notify )
											.done( newDefer.resolve )
											.fail( newDefer.reject );
									} else {
										newDefer[ tuple[ 0 ] + "With" ](
											this === promise ? newDefer.promise() : this,
											fn ? [ returned ] : arguments
										);
									}
								} );
							} );
							fns = null;
						} ).promise();
					},

					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function( obj ) {
						return obj != null ? jQuery.extend( obj, promise ) : promise;
					}
				},
				deferred = {};

			// Keep pipe for back-compat
			promise.pipe = promise.then;

			// Add list-specific methods
			jQuery.each( tuples, function( i, tuple ) {
				var list = tuple[ 2 ],
					stateString = tuple[ 3 ];

				// promise[ done | fail | progress ] = list.add
				promise[ tuple[ 1 ] ] = list.add;

				// Handle state
				if ( stateString ) {
					list.add( function() {

						// state = [ resolved | rejected ]
						state = stateString;

					// [ reject_list | resolve_list ].disable; progress_list.lock
					}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
				}

				// deferred[ resolve | reject | notify ]
				deferred[ tuple[ 0 ] ] = function() {
					deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
					return this;
				};
				deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
			} );

			// Make the deferred a promise
			promise.promise( deferred );

			// Call given func if any
			if ( func ) {
				func.call( deferred, deferred );
			}

			// All done!
			return deferred;
		},

		// Deferred helper
		when: function( subordinate /* , ..., subordinateN */ ) {
			var i = 0,
				resolveValues = slice.call( arguments ),
				length = resolveValues.length,

				// the count of uncompleted subordinates
				remaining = length !== 1 ||
					( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

				// the master Deferred.
				// If resolveValues consist of only a single Deferred, just use that.
				deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

				// Update function for both resolve and progress values
				updateFunc = function( i, contexts, values ) {
					return function( value ) {
						contexts[ i ] = this;
						values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
						if ( values === progressValues ) {
							deferred.notifyWith( contexts, values );

						} else if ( !( --remaining ) ) {
							deferred.resolveWith( contexts, values );
						}
					};
				},

				progressValues, progressContexts, resolveContexts;

			// add listeners to Deferred subordinates; treat others as resolved
			if ( length > 1 ) {
				progressValues = new Array( length );
				progressContexts = new Array( length );
				resolveContexts = new Array( length );
				for ( ; i < length; i++ ) {
					if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
						resolveValues[ i ].promise()
							.progress( updateFunc( i, progressContexts, progressValues ) )
							.done( updateFunc( i, resolveContexts, resolveValues ) )
							.fail( deferred.reject );
					} else {
						--remaining;
					}
				}
			}

			// if we're not waiting on anything, resolve the master
			if ( !remaining ) {
				deferred.resolveWith( resolveContexts, resolveValues );
			}

			return deferred.promise();
		}
	} );


	// The deferred used on DOM ready
	var readyList;

	jQuery.fn.ready = function( fn ) {

		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	};

	jQuery.extend( {

		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,

		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,

		// Hold (or release) the ready event
		holdReady: function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		},

		// Handle when the DOM is ready
		ready: function( wait ) {

			// Abort if there are pending holds or we're already ready
			if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
				return;
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
				jQuery( document ).off( "ready" );
			}
		}
	} );

	/**
	 * Clean-up method for dom ready events
	 */
	function detach() {
		if ( document.addEventListener ) {
			document.removeEventListener( "DOMContentLoaded", completed );
			window.removeEventListener( "load", completed );

		} else {
			document.detachEvent( "onreadystatechange", completed );
			window.detachEvent( "onload", completed );
		}
	}

	/**
	 * The ready event handler and self cleanup method
	 */
	function completed() {

		// readyState === "complete" is good enough for us to call the dom ready in oldIE
		if ( document.addEventListener ||
			window.event.type === "load" ||
			document.readyState === "complete" ) {

			detach();
			jQuery.ready();
		}
	}

	jQuery.ready.promise = function( obj ) {
		if ( !readyList ) {

			readyList = jQuery.Deferred();

			// Catch cases where $(document).ready() is called
			// after the browser event has already occurred.
			// Support: IE6-10
			// Older IE sometimes signals "interactive" too soon
			if ( document.readyState === "complete" ||
				( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

				// Handle it asynchronously to allow scripts the opportunity to delay ready
				window.setTimeout( jQuery.ready );

			// Standards-based browsers support DOMContentLoaded
			} else if ( document.addEventListener ) {

				// Use the handy event callback
				document.addEventListener( "DOMContentLoaded", completed );

				// A fallback to window.onload, that will always work
				window.addEventListener( "load", completed );

			// If IE event model is used
			} else {

				// Ensure firing before onload, maybe late but safe also for iframes
				document.attachEvent( "onreadystatechange", completed );

				// A fallback to window.onload, that will always work
				window.attachEvent( "onload", completed );

				// If IE and not a frame
				// continually check to see if the document is ready
				var top = false;

				try {
					top = window.frameElement == null && document.documentElement;
				} catch ( e ) {}

				if ( top && top.doScroll ) {
					( function doScrollCheck() {
						if ( !jQuery.isReady ) {

							try {

								// Use the trick by Diego Perini
								// http://javascript.nwbox.com/IEContentLoaded/
								top.doScroll( "left" );
							} catch ( e ) {
								return window.setTimeout( doScrollCheck, 50 );
							}

							// detach all dom ready events
							detach();

							// and execute any waiting functions
							jQuery.ready();
						}
					} )();
				}
			}
		}
		return readyList.promise( obj );
	};

	// Kick off the DOM ready check even if the user does not
	jQuery.ready.promise();




	// Support: IE<9
	// Iteration over object's inherited properties before its own
	var i;
	for ( i in jQuery( support ) ) {
		break;
	}
	support.ownFirst = i === "0";

	// Note: most support tests are defined in their respective modules.
	// false until the test is run
	support.inlineBlockNeedsLayout = false;

	// Execute ASAP in case we need to set body.style.zoom
	jQuery( function() {

		// Minified: var a,b,c,d
		var val, div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {

			// Return for frameset docs that don't have a body
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		if ( typeof div.style.zoom !== "undefined" ) {

			// Support: IE<8
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

			support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
			if ( val ) {

				// Prevent IE 6 from affecting layout for positioned elements #11048
				// Prevent IE from shrinking the body in IE 7 mode #12869
				// Support: IE<8
				body.style.zoom = 1;
			}
		}

		body.removeChild( container );
	} );


	( function() {
		var div = document.createElement( "div" );

		// Support: IE<9
		support.deleteExpando = true;
		try {
			delete div.test;
		} catch ( e ) {
			support.deleteExpando = false;
		}

		// Null elements to avoid leaks in IE.
		div = null;
	} )();
	var acceptData = function( elem ) {
		var noData = jQuery.noData[ ( elem.nodeName + " " ).toLowerCase() ],
			nodeType = +elem.nodeType || 1;

		// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
		return nodeType !== 1 && nodeType !== 9 ?
			false :

			// Nodes accept data unless otherwise specified; rejection can be conditional
			!noData || noData !== true && elem.getAttribute( "classid" ) === noData;
	};




	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		rmultiDash = /([A-Z])/g;

	function dataAttr( elem, key, data ) {

		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if ( data === undefined && elem.nodeType === 1 ) {

			var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

			data = elem.getAttribute( name );

			if ( typeof data === "string" ) {
				try {
					data = data === "true" ? true :
						data === "false" ? false :
						data === "null" ? null :

						// Only convert to a number if it doesn't change the string
						+data + "" === data ? +data :
						rbrace.test( data ) ? jQuery.parseJSON( data ) :
						data;
				} catch ( e ) {}

				// Make sure we set the data so it isn't changed later
				jQuery.data( elem, key, data );

			} else {
				data = undefined;
			}
		}

		return data;
	}

	// checks a cache object for emptiness
	function isEmptyDataObject( obj ) {
		var name;
		for ( name in obj ) {

			// if the public data object is empty, the private is still empty
			if ( name === "data" && jQuery.isEmptyObject( obj[ name ] ) ) {
				continue;
			}
			if ( name !== "toJSON" ) {
				return false;
			}
		}

		return true;
	}

	function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !acceptData( elem ) ) {
			return;
		}

		var ret, thisCache,
			internalKey = jQuery.expando,

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( ( !id || !cache[ id ] || ( !pvt && !cache[ id ].data ) ) &&
			data === undefined && typeof name === "string" ) {
			return;
		}

		if ( !id ) {

			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {

			// Avoid exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( typeof name === "string" ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	}

	function internalRemoveData( elem, name, pvt ) {
		if ( !acceptData( elem ) ) {
			return;
		}

		var thisCache, i,
			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,
			id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split( " " );
						}
					}
				} else {

					// If "name" is an array of keys...
					// When data is initially created, via ("key", "val") signature,
					// keys will be converted to camelCase.
					// Since there is no way to tell _how_ a key was added, remove
					// both plain key and camelCase key. #12786
					// This will only penalize the array argument path.
					name = name.concat( jQuery.map( name, jQuery.camelCase ) );
				}

				i = name.length;
				while ( i-- ) {
					delete thisCache[ name[ i ] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( pvt ? !isEmptyDataObject( thisCache ) : !jQuery.isEmptyObject( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject( cache[ id ] ) ) {
				return;
			}
		}

		// Destroy the cache
		if ( isNode ) {
			jQuery.cleanData( [ elem ], true );

		// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
		/* jshint eqeqeq: false */
		} else if ( support.deleteExpando || cache != cache.window ) {
			/* jshint eqeqeq: true */
			delete cache[ id ];

		// When all else fails, undefined
		} else {
			cache[ id ] = undefined;
		}
	}

	jQuery.extend( {
		cache: {},

		// The following elements (space-suffixed to avoid Object.prototype collisions)
		// throw uncatchable exceptions if you attempt to set expando properties
		noData: {
			"applet ": true,
			"embed ": true,

			// ...but Flash objects (which have this classid) *can* handle expandos
			"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
		},

		hasData: function( elem ) {
			elem = elem.nodeType ? jQuery.cache[ elem[ jQuery.expando ] ] : elem[ jQuery.expando ];
			return !!elem && !isEmptyDataObject( elem );
		},

		data: function( elem, name, data ) {
			return internalData( elem, name, data );
		},

		removeData: function( elem, name ) {
			return internalRemoveData( elem, name );
		},

		// For internal use only.
		_data: function( elem, name, data ) {
			return internalData( elem, name, data, true );
		},

		_removeData: function( elem, name ) {
			return internalRemoveData( elem, name, true );
		}
	} );

	jQuery.fn.extend( {
		data: function( key, value ) {
			var i, name, data,
				elem = this[ 0 ],
				attrs = elem && elem.attributes;

			// Special expections of .data basically thwart jQuery.access,
			// so implement the relevant behavior ourselves

			// Gets all values
			if ( key === undefined ) {
				if ( this.length ) {
					data = jQuery.data( elem );

					if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
						i = attrs.length;
						while ( i-- ) {

							// Support: IE11+
							// The attrs elements can be null (#14894)
							if ( attrs[ i ] ) {
								name = attrs[ i ].name;
								if ( name.indexOf( "data-" ) === 0 ) {
									name = jQuery.camelCase( name.slice( 5 ) );
									dataAttr( elem, name, data[ name ] );
								}
							}
						}
						jQuery._data( elem, "parsedAttrs", true );
					}
				}

				return data;
			}

			// Sets multiple values
			if ( typeof key === "object" ) {
				return this.each( function() {
					jQuery.data( this, key );
				} );
			}

			return arguments.length > 1 ?

				// Sets one value
				this.each( function() {
					jQuery.data( this, key, value );
				} ) :

				// Gets one value
				// Try to fetch any internally stored data first
				elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
		},

		removeData: function( key ) {
			return this.each( function() {
				jQuery.removeData( this, key );
			} );
		}
	} );


	jQuery.extend( {
		queue: function( elem, type, data ) {
			var queue;

			if ( elem ) {
				type = ( type || "fx" ) + "queue";
				queue = jQuery._data( elem, type );

				// Speed up dequeue by getting out quickly if this is just a lookup
				if ( data ) {
					if ( !queue || jQuery.isArray( data ) ) {
						queue = jQuery._data( elem, type, jQuery.makeArray( data ) );
					} else {
						queue.push( data );
					}
				}
				return queue || [];
			}
		},

		dequeue: function( elem, type ) {
			type = type || "fx";

			var queue = jQuery.queue( elem, type ),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks( elem, type ),
				next = function() {
					jQuery.dequeue( elem, type );
				};

			// If the fx queue is dequeued, always remove the progress sentinel
			if ( fn === "inprogress" ) {
				fn = queue.shift();
				startLength--;
			}

			if ( fn ) {

				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if ( type === "fx" ) {
					queue.unshift( "inprogress" );
				}

				// clear up the last queue stop function
				delete hooks.stop;
				fn.call( elem, next, hooks );
			}

			if ( !startLength && hooks ) {
				hooks.empty.fire();
			}
		},

		// not intended for public consumption - generates a queueHooks object,
		// or returns the current one
		_queueHooks: function( elem, type ) {
			var key = type + "queueHooks";
			return jQuery._data( elem, key ) || jQuery._data( elem, key, {
				empty: jQuery.Callbacks( "once memory" ).add( function() {
					jQuery._removeData( elem, type + "queue" );
					jQuery._removeData( elem, key );
				} )
			} );
		}
	} );

	jQuery.fn.extend( {
		queue: function( type, data ) {
			var setter = 2;

			if ( typeof type !== "string" ) {
				data = type;
				type = "fx";
				setter--;
			}

			if ( arguments.length < setter ) {
				return jQuery.queue( this[ 0 ], type );
			}

			return data === undefined ?
				this :
				this.each( function() {
					var queue = jQuery.queue( this, type, data );

					// ensure a hooks for this queue
					jQuery._queueHooks( this, type );

					if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
						jQuery.dequeue( this, type );
					}
				} );
		},
		dequeue: function( type ) {
			return this.each( function() {
				jQuery.dequeue( this, type );
			} );
		},
		clearQueue: function( type ) {
			return this.queue( type || "fx", [] );
		},

		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function( type, obj ) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function() {
					if ( !( --count ) ) {
						defer.resolveWith( elements, [ elements ] );
					}
				};

			if ( typeof type !== "string" ) {
				obj = type;
				type = undefined;
			}
			type = type || "fx";

			while ( i-- ) {
				tmp = jQuery._data( elements[ i ], type + "queueHooks" );
				if ( tmp && tmp.empty ) {
					count++;
					tmp.empty.add( resolve );
				}
			}
			resolve();
			return defer.promise( obj );
		}
	} );


	( function() {
		var shrinkWrapBlocksVal;

		support.shrinkWrapBlocks = function() {
			if ( shrinkWrapBlocksVal != null ) {
				return shrinkWrapBlocksVal;
			}

			// Will be changed later if needed.
			shrinkWrapBlocksVal = false;

			// Minified: var b,c,d
			var div, body, container;

			body = document.getElementsByTagName( "body" )[ 0 ];
			if ( !body || !body.style ) {

				// Test fired too early or in an unsupported environment, exit.
				return;
			}

			// Setup
			div = document.createElement( "div" );
			container = document.createElement( "div" );
			container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
			body.appendChild( container ).appendChild( div );

			// Support: IE6
			// Check if elements with layout shrink-wrap their children
			if ( typeof div.style.zoom !== "undefined" ) {

				// Reset CSS: box-sizing; display; margin; border
				div.style.cssText =

					// Support: Firefox<29, Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
					"box-sizing:content-box;display:block;margin:0;border:0;" +
					"padding:1px;width:1px;zoom:1";
				div.appendChild( document.createElement( "div" ) ).style.width = "5px";
				shrinkWrapBlocksVal = div.offsetWidth !== 3;
			}

			body.removeChild( container );

			return shrinkWrapBlocksVal;
		};

	} )();
	var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

	var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


	var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

	var isHidden = function( elem, el ) {

			// isHidden might be called from jQuery#filter function;
			// in that case, element will be second argument
			elem = el || elem;
			return jQuery.css( elem, "display" ) === "none" ||
				!jQuery.contains( elem.ownerDocument, elem );
		};



	function adjustCSS( elem, prop, valueParts, tween ) {
		var adjusted,
			scale = 1,
			maxIterations = 20,
			currentValue = tween ?
				function() { return tween.cur(); } :
				function() { return jQuery.css( elem, prop, "" ); },
			initial = currentValue(),
			unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

			// Starting value computation is required for potential unit mismatches
			initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
				rcssNum.exec( jQuery.css( elem, prop ) );

		if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

			// Trust units reported by jQuery.css
			unit = unit || initialInUnit[ 3 ];

			// Make sure we update the tween properties later on
			valueParts = valueParts || [];

			// Iteratively approximate from a nonzero starting point
			initialInUnit = +initial || 1;

			do {

				// If previous iteration zeroed out, double until we get *something*.
				// Use string for doubling so we don't accidentally see scale as unchanged below
				scale = scale || ".5";

				// Adjust and apply
				initialInUnit = initialInUnit / scale;
				jQuery.style( elem, prop, initialInUnit + unit );

			// Update scale, tolerating zero or NaN from tween.cur()
			// Break the loop if scale is unchanged or perfect, or if we've just had enough.
			} while (
				scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
			);
		}

		if ( valueParts ) {
			initialInUnit = +initialInUnit || +initial || 0;

			// Apply relative offset (+=/-=) if specified
			adjusted = valueParts[ 1 ] ?
				initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
				+valueParts[ 2 ];
			if ( tween ) {
				tween.unit = unit;
				tween.start = initialInUnit;
				tween.end = adjusted;
			}
		}
		return adjusted;
	}


	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			length = elems.length,
			bulk = key == null;

		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				access( elems, fn, i, key[ i ], true, emptyGet, raw );
			}

		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;

			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}

			if ( bulk ) {

				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;

				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}

			if ( fn ) {
				for ( ; i < length; i++ ) {
					fn(
						elems[ i ],
						key,
						raw ? value : value.call( elems[ i ], i, fn( elems[ i ], key ) )
					);
				}
			}
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[ 0 ], key ) : emptyGet;
	};
	var rcheckableType = ( /^(?:checkbox|radio)$/i );

	var rtagName = ( /<([\w:-]+)/ );

	var rscriptType = ( /^$|\/(?:java|ecma)script/i );

	var rleadingWhitespace = ( /^\s+/ );

	var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|" +
			"details|dialog|figcaption|figure|footer|header|hgroup|main|" +
			"mark|meter|nav|output|picture|progress|section|summary|template|time|video";



	function createSafeFragment( document ) {
		var list = nodeNames.split( "|" ),
			safeFrag = document.createDocumentFragment();

		if ( safeFrag.createElement ) {
			while ( list.length ) {
				safeFrag.createElement(
					list.pop()
				);
			}
		}
		return safeFrag;
	}


	( function() {
		var div = document.createElement( "div" ),
			fragment = document.createDocumentFragment(),
			input = document.createElement( "input" );

		// Setup
		div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

		// IE strips leading whitespace when .innerHTML is used
		support.leadingWhitespace = div.firstChild.nodeType === 3;

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		support.tbody = !div.getElementsByTagName( "tbody" ).length;

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		support.html5Clone =
			document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

		// Check if a disconnected checkbox will retain its checked
		// value of true after appended to the DOM (IE6/7)
		input.type = "checkbox";
		input.checked = true;
		fragment.appendChild( input );
		support.appendChecked = input.checked;

		// Make sure textarea (and checkbox) defaultValue is properly cloned
		// Support: IE6-IE11+
		div.innerHTML = "<textarea>x</textarea>";
		support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

		// #11217 - WebKit loses check when the name is after the checked attribute
		fragment.appendChild( div );

		// Support: Windows Web Apps (WWA)
		// `name` and `type` must use .setAttribute for WWA (#14901)
		input = document.createElement( "input" );
		input.setAttribute( "type", "radio" );
		input.setAttribute( "checked", "checked" );
		input.setAttribute( "name", "t" );

		div.appendChild( input );

		// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
		// old WebKit doesn't clone checked state correctly in fragments
		support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

		// Support: IE<9
		// Cloned elements keep attachEvent handlers, we use addEventListener on IE9+
		support.noCloneEvent = !!div.addEventListener;

		// Support: IE<9
		// Since attributes and properties are the same in IE,
		// cleanData must set properties to undefined rather than use removeAttribute
		div[ jQuery.expando ] = 1;
		support.attributes = !div.getAttribute( jQuery.expando );
	} )();


	// We have to close these tags to support XHTML (#13200)
	var wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		area: [ 1, "<map>", "</map>" ],

		// Support: IE8
		param: [ 1, "<object>", "</object>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
		// unless wrapped in a div with non-breaking characters in front of it.
		_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>" ]
	};

	// Support: IE8-IE9
	wrapMap.optgroup = wrapMap.option;

	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
	wrapMap.th = wrapMap.td;


	function getAll( context, tag ) {
		var elems, elem,
			i = 0,
			found = typeof context.getElementsByTagName !== "undefined" ?
				context.getElementsByTagName( tag || "*" ) :
				typeof context.querySelectorAll !== "undefined" ?
					context.querySelectorAll( tag || "*" ) :
					undefined;

		if ( !found ) {
			for ( found = [], elems = context.childNodes || context;
				( elem = elems[ i ] ) != null;
				i++
			) {
				if ( !tag || jQuery.nodeName( elem, tag ) ) {
					found.push( elem );
				} else {
					jQuery.merge( found, getAll( elem, tag ) );
				}
			}
		}

		return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
			jQuery.merge( [ context ], found ) :
			found;
	}


	// Mark scripts as having already been evaluated
	function setGlobalEval( elems, refElements ) {
		var elem,
			i = 0;
		for ( ; ( elem = elems[ i ] ) != null; i++ ) {
			jQuery._data(
				elem,
				"globalEval",
				!refElements || jQuery._data( refElements[ i ], "globalEval" )
			);
		}
	}


	var rhtml = /<|&#?\w+;/,
		rtbody = /<tbody/i;

	function fixDefaultChecked( elem ) {
		if ( rcheckableType.test( elem.type ) ) {
			elem.defaultChecked = elem.checked;
		}
	}

	function buildFragment( elems, context, scripts, selection, ignored ) {
		var j, elem, contains,
			tmp, tag, tbody, wrap,
			l = elems.length,

			// Ensure a safe fragment
			safe = createSafeFragment( context ),

			nodes = [],
			i = 0;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || safe.appendChild( context.createElement( "div" ) );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;

					tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Manually add leading whitespace removed by IE
					if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[ 0 ] ) );
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						elem = tag === "table" && !rtbody.test( elem ) ?
							tmp.firstChild :

							// String was a bare <thead> or <tfoot>
							wrap[ 1 ] === "<table>" && !rtbody.test( elem ) ?
								tmp :
								0;

						j = elem && elem.childNodes.length;
						while ( j-- ) {
							if ( jQuery.nodeName( ( tbody = elem.childNodes[ j ] ), "tbody" ) &&
								!tbody.childNodes.length ) {

								elem.removeChild( tbody );
							}
						}
					}

					jQuery.merge( nodes, tmp.childNodes );

					// Fix #12392 for WebKit and IE > 9
					tmp.textContent = "";

					// Fix #12392 for oldIE
					while ( tmp.firstChild ) {
						tmp.removeChild( tmp.firstChild );
					}

					// Remember the top-level container for proper cleanup
					tmp = safe.lastChild;
				}
			}
		}

		// Fix #11356: Clear elements from fragment
		if ( tmp ) {
			safe.removeChild( tmp );
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !support.appendChecked ) {
			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
		}

		i = 0;
		while ( ( elem = nodes[ i++ ] ) ) {

			// Skip elements already in the context collection (trac-4087)
			if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
				if ( ignored ) {
					ignored.push( elem );
				}

				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( safe.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( ( elem = tmp[ j++ ] ) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		tmp = null;

		return safe;
	}


	( function() {
		var i, eventName,
			div = document.createElement( "div" );

		// Support: IE<9 (lack submit/change bubble), Firefox (lack focus(in | out) events)
		for ( i in { submit: true, change: true, focusin: true } ) {
			eventName = "on" + i;

			if ( !( support[ i ] = eventName in window ) ) {

				// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
				div.setAttribute( eventName, "t" );
				support[ i ] = div.attributes[ eventName ].expando === false;
			}
		}

		// Null elements to avoid leaks in IE.
		div = null;
	} )();


	var rformElems = /^(?:input|select|textarea)$/i,
		rkeyEvent = /^key/,
		rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
		rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
		rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	// Support: IE9
	// See #13393 for more info
	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch ( err ) { }
	}

	function on( elem, types, selector, data, fn, one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {

			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {

				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				on( elem, type, selector, data, types[ type ], one );
			}
			return elem;
		}

		if ( data == null && fn == null ) {

			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {

				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {

				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return elem;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {

				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};

			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return elem.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		} );
	}

	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {

		global: {},

		add: function( elem, types, handler, data, selector ) {
			var tmp, events, t, handleObjIn,
				special, eventHandle, handleObj,
				handlers, type, namespaces, origType,
				elemData = jQuery._data( elem );

			// Don't attach events to noData or text/comment nodes (but allow plain objects)
			if ( !elemData ) {
				return;
			}

			// Caller can pass in an object of custom data in lieu of the handler
			if ( handler.handler ) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			// Make sure that the handler has a unique ID, used to find/remove it later
			if ( !handler.guid ) {
				handler.guid = jQuery.guid++;
			}

			// Init the element's event structure and main handler, if this is the first
			if ( !( events = elemData.events ) ) {
				events = elemData.events = {};
			}
			if ( !( eventHandle = elemData.handle ) ) {
				eventHandle = elemData.handle = function( e ) {

					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== "undefined" &&
						( !e || jQuery.event.triggered !== e.type ) ?
						jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
						undefined;
				};

				// Add elem as a property of the handle fn to prevent a memory leak
				// with IE non-native events
				eventHandle.elem = elem;
			}

			// Handle multiple events separated by a space
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[ t ] ) || [];
				type = origType = tmp[ 1 ];
				namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

				// There *must* be a type, no attaching namespace-only handlers
				if ( !type ) {
					continue;
				}

				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[ type ] || {};

				// If selector defined, determine special event api type, otherwise given type
				type = ( selector ? special.delegateType : special.bindType ) || type;

				// Update special based on newly reset type
				special = jQuery.event.special[ type ] || {};

				// handleObj is passed to all event handlers
				handleObj = jQuery.extend( {
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
					namespace: namespaces.join( "." )
				}, handleObjIn );

				// Init the event handler queue if we're the first
				if ( !( handlers = events[ type ] ) ) {
					handlers = events[ type ] = [];
					handlers.delegateCount = 0;

					// Only use addEventListener/attachEvent if the special events handler returns false
					if ( !special.setup ||
						special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

						// Bind the global event handler to the element
						if ( elem.addEventListener ) {
							elem.addEventListener( type, eventHandle, false );

						} else if ( elem.attachEvent ) {
							elem.attachEvent( "on" + type, eventHandle );
						}
					}
				}

				if ( special.add ) {
					special.add.call( elem, handleObj );

					if ( !handleObj.handler.guid ) {
						handleObj.handler.guid = handler.guid;
					}
				}

				// Add to the element's handler list, delegates in front
				if ( selector ) {
					handlers.splice( handlers.delegateCount++, 0, handleObj );
				} else {
					handlers.push( handleObj );
				}

				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[ type ] = true;
			}

			// Nullify elem to prevent memory leaks in IE
			elem = null;
		},

		// Detach an event or set of events from an element
		remove: function( elem, types, handler, selector, mappedTypes ) {
			var j, handleObj, tmp,
				origCount, t, events,
				special, handlers, type,
				namespaces, origType,
				elemData = jQuery.hasData( elem ) && jQuery._data( elem );

			if ( !elemData || !( events = elemData.events ) ) {
				return;
			}

			// Once for each type.namespace in types; type may be omitted
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[ t ] ) || [];
				type = origType = tmp[ 1 ];
				namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

				// Unbind all events (on this namespace, if provided) for the element
				if ( !type ) {
					for ( type in events ) {
						jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
					}
					continue;
				}

				special = jQuery.event.special[ type ] || {};
				type = ( selector ? special.delegateType : special.bindType ) || type;
				handlers = events[ type ] || [];
				tmp = tmp[ 2 ] &&
					new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

				// Remove matching events
				origCount = j = handlers.length;
				while ( j-- ) {
					handleObj = handlers[ j ];

					if ( ( mappedTypes || origType === handleObj.origType ) &&
						( !handler || handler.guid === handleObj.guid ) &&
						( !tmp || tmp.test( handleObj.namespace ) ) &&
						( !selector || selector === handleObj.selector ||
							selector === "**" && handleObj.selector ) ) {
						handlers.splice( j, 1 );

						if ( handleObj.selector ) {
							handlers.delegateCount--;
						}
						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}
				}

				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if ( origCount && !handlers.length ) {
					if ( !special.teardown ||
						special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

						jQuery.removeEvent( elem, type, elemData.handle );
					}

					delete events[ type ];
				}
			}

			// Remove the expando if it's no longer used
			if ( jQuery.isEmptyObject( events ) ) {
				delete elemData.handle;

				// removeData also checks for emptiness and clears the expando if empty
				// so use it instead of delete
				jQuery._removeData( elem, "events" );
			}
		},

		trigger: function( event, data, elem, onlyHandlers ) {
			var handle, ontype, cur,
				bubbleType, special, tmp, i,
				eventPath = [ elem || document ],
				type = hasOwn.call( event, "type" ) ? event.type : event,
				namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

			cur = tmp = elem = elem || document;

			// Don't do events on text and comment nodes
			if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
				return;
			}

			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
				return;
			}

			if ( type.indexOf( "." ) > -1 ) {

				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split( "." );
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf( ":" ) < 0 && "on" + type;

			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[ jQuery.expando ] ?
				event :
				new jQuery.Event( type, typeof event === "object" && event );

			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join( "." );
			event.rnamespace = event.namespace ?
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
				null;

			// Clean up the event in case it is being reused
			event.result = undefined;
			if ( !event.target ) {
				event.target = elem;
			}

			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ?
				[ event ] :
				jQuery.makeArray( data, [ event ] );

			// Allow special events to draw outside the lines
			special = jQuery.event.special[ type ] || {};
			if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
				return;
			}

			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

				bubbleType = special.delegateType || type;
				if ( !rfocusMorph.test( bubbleType + type ) ) {
					cur = cur.parentNode;
				}
				for ( ; cur; cur = cur.parentNode ) {
					eventPath.push( cur );
					tmp = cur;
				}

				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if ( tmp === ( elem.ownerDocument || document ) ) {
					eventPath.push( tmp.defaultView || tmp.parentWindow || window );
				}
			}

			// Fire handlers on the event path
			i = 0;
			while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

				event.type = i > 1 ?
					bubbleType :
					special.bindType || type;

				// jQuery handler
				handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] &&
					jQuery._data( cur, "handle" );

				if ( handle ) {
					handle.apply( cur, data );
				}

				// Native handler
				handle = ontype && cur[ ontype ];
				if ( handle && handle.apply && acceptData( cur ) ) {
					event.result = handle.apply( cur, data );
					if ( event.result === false ) {
						event.preventDefault();
					}
				}
			}
			event.type = type;

			// If nobody prevented the default action, do it now
			if ( !onlyHandlers && !event.isDefaultPrevented() ) {

				if (
					( !special._default ||
					 special._default.apply( eventPath.pop(), data ) === false
					) && acceptData( elem )
				) {

					// Call a native DOM method on the target with the same name name as the event.
					// Can't use an .isFunction() check here because IE6/7 fails that test.
					// Don't do default actions on window, that's where global variables be (#6170)
					if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ ontype ];

						if ( tmp ) {
							elem[ ontype ] = null;
						}

						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;
						try {
							elem[ type ]();
						} catch ( e ) {

							// IE<9 dies on focus/blur to hidden element (#1486,#12518)
							// only reproducible on winXP IE8 native, not IE9 in IE8 mode
						}
						jQuery.event.triggered = undefined;

						if ( tmp ) {
							elem[ ontype ] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		dispatch: function( event ) {

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( event );

			var i, j, ret, matched, handleObj,
				handlerQueue = [],
				args = slice.call( arguments ),
				handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
				special = jQuery.event.special[ event.type ] || {};

			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[ 0 ] = event;
			event.delegateTarget = this;

			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
				return;
			}

			// Determine handlers
			handlerQueue = jQuery.event.handlers.call( this, event, handlers );

			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
				event.currentTarget = matched.elem;

				j = 0;
				while ( ( handleObj = matched.handlers[ j++ ] ) &&
					!event.isImmediatePropagationStopped() ) {

					// Triggered event must either 1) have no namespace, or 2) have namespace(s)
					// a subset or equal to those in the bound event (both can have no namespace).
					if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
							handleObj.handler ).apply( matched.elem, args );

						if ( ret !== undefined ) {
							if ( ( event.result = ret ) === false ) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			// Call the postDispatch hook for the mapped type
			if ( special.postDispatch ) {
				special.postDispatch.call( this, event );
			}

			return event.result;
		},

		handlers: function( event, handlers ) {
			var i, matches, sel, handleObj,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;

			// Support (at least): Chrome, IE9
			// Find delegate handlers
			// Black-hole SVG <use> instance trees (#13180)
			//
			// Support: Firefox<=42+
			// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
			if ( delegateCount && cur.nodeType &&
				( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

				/* jshint eqeqeq: false */
				for ( ; cur != this; cur = cur.parentNode || this ) {
					/* jshint eqeqeq: true */

					// Don't check non-elements (#13208)
					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
						matches = [];
						for ( i = 0; i < delegateCount; i++ ) {
							handleObj = handlers[ i ];

							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + " ";

							if ( matches[ sel ] === undefined ) {
								matches[ sel ] = handleObj.needsContext ?
									jQuery( sel, this ).index( cur ) > -1 :
									jQuery.find( sel, this, null, [ cur ] ).length;
							}
							if ( matches[ sel ] ) {
								matches.push( handleObj );
							}
						}
						if ( matches.length ) {
							handlerQueue.push( { elem: cur, handlers: matches } );
						}
					}
				}
			}

			// Add the remaining (directly-bound) handlers
			if ( delegateCount < handlers.length ) {
				handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
			}

			return handlerQueue;
		},

		fix: function( event ) {
			if ( event[ jQuery.expando ] ) {
				return event;
			}

			// Create a writable copy of the event object and normalize some properties
			var i, prop, copy,
				type = event.type,
				originalEvent = event,
				fixHook = this.fixHooks[ type ];

			if ( !fixHook ) {
				this.fixHooks[ type ] = fixHook =
					rmouseEvent.test( type ) ? this.mouseHooks :
					rkeyEvent.test( type ) ? this.keyHooks :
					{};
			}
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

			event = new jQuery.Event( originalEvent );

			i = copy.length;
			while ( i-- ) {
				prop = copy[ i ];
				event[ prop ] = originalEvent[ prop ];
			}

			// Support: IE<9
			// Fix target property (#1925)
			if ( !event.target ) {
				event.target = originalEvent.srcElement || document;
			}

			// Support: Safari 6-8+
			// Target should not be a text node (#504, #13143)
			if ( event.target.nodeType === 3 ) {
				event.target = event.target.parentNode;
			}

			// Support: IE<9
			// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
			event.metaKey = !!event.metaKey;

			return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
		},

		// Includes some event props shared by KeyEvent and MouseEvent
		props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
			"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

		fixHooks: {},

		keyHooks: {
			props: "char charCode key keyCode".split( " " ),
			filter: function( event, original ) {

				// Add which for key events
				if ( event.which == null ) {
					event.which = original.charCode != null ? original.charCode : original.keyCode;
				}

				return event;
			}
		},

		mouseHooks: {
			props: ( "button buttons clientX clientY fromElement offsetX offsetY " +
				"pageX pageY screenX screenY toElement" ).split( " " ),
			filter: function( event, original ) {
				var body, eventDoc, doc,
					button = original.button,
					fromElement = original.fromElement;

				// Calculate pageX/Y if missing and clientX/Y available
				if ( event.pageX == null && original.clientX != null ) {
					eventDoc = event.target.ownerDocument || document;
					doc = eventDoc.documentElement;
					body = eventDoc.body;

					event.pageX = original.clientX +
						( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
						( doc && doc.clientLeft || body && body.clientLeft || 0 );
					event.pageY = original.clientY +
						( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
						( doc && doc.clientTop  || body && body.clientTop  || 0 );
				}

				// Add relatedTarget, if necessary
				if ( !event.relatedTarget && fromElement ) {
					event.relatedTarget = fromElement === event.target ?
						original.toElement :
						fromElement;
				}

				// Add which for click: 1 === left; 2 === middle; 3 === right
				// Note: button is not normalized, so don't use it
				if ( !event.which && button !== undefined ) {
					event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
				}

				return event;
			}
		},

		special: {
			load: {

				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true
			},
			focus: {

				// Fire native event if possible so blur/focus sequence is correct
				trigger: function() {
					if ( this !== safeActiveElement() && this.focus ) {
						try {
							this.focus();
							return false;
						} catch ( e ) {

							// Support: IE<9
							// If we error on focus to hidden element (#1486, #12518),
							// let .trigger() run the handlers
						}
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function() {
					if ( this === safeActiveElement() && this.blur ) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {

				// For checkbox, fire native event so checked state will be right
				trigger: function() {
					if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
						this.click();
						return false;
					}
				},

				// For cross-browser consistency, don't fire native .click() on links
				_default: function( event ) {
					return jQuery.nodeName( event.target, "a" );
				}
			},

			beforeunload: {
				postDispatch: function( event ) {

					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if ( event.result !== undefined && event.originalEvent ) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		},

		// Piggyback on a donor event to simulate a different one
		simulate: function( type, elem, event ) {
			var e = jQuery.extend(
				new jQuery.Event(),
				event,
				{
					type: type,
					isSimulated: true

					// Previously, `originalEvent: {}` was set here, so stopPropagation call
					// would not be triggered on donor event, since in our own
					// jQuery.event.stopPropagation function we had a check for existence of
					// originalEvent.stopPropagation method, so, consequently it would be a noop.
					//
					// Guard for simulated events was moved to jQuery.event.stopPropagation function
					// since `originalEvent` should point to the original event for the
					// constancy with other events and for more focused logic
				}
			);

			jQuery.event.trigger( e, null, elem );

			if ( e.isDefaultPrevented() ) {
				event.preventDefault();
			}
		}
	};

	jQuery.removeEvent = document.removeEventListener ?
		function( elem, type, handle ) {

			// This "if" is needed for plain objects
			if ( elem.removeEventListener ) {
				elem.removeEventListener( type, handle );
			}
		} :
		function( elem, type, handle ) {
			var name = "on" + type;

			if ( elem.detachEvent ) {

				// #8545, #7054, preventing memory leaks for custom events in IE6-8
				// detachEvent needed property on element, by name of that event,
				// to properly expose it to GC
				if ( typeof elem[ name ] === "undefined" ) {
					elem[ name ] = null;
				}

				elem.detachEvent( name, handle );
			}
		};

	jQuery.Event = function( src, props ) {

		// Allow instantiation without the 'new' keyword
		if ( !( this instanceof jQuery.Event ) ) {
			return new jQuery.Event( src, props );
		}

		// Event object
		if ( src && src.type ) {
			this.originalEvent = src;
			this.type = src.type;

			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented = src.defaultPrevented ||
					src.defaultPrevented === undefined &&

					// Support: IE < 9, Android < 4.0
					src.returnValue === false ?
				returnTrue :
				returnFalse;

		// Event type
		} else {
			this.type = src;
		}

		// Put explicitly provided properties onto the event object
		if ( props ) {
			jQuery.extend( this, props );
		}

		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = src && src.timeStamp || jQuery.now();

		// Mark it as fixed
		this[ jQuery.expando ] = true;
	};

	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		constructor: jQuery.Event,
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,

		preventDefault: function() {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;
			if ( !e ) {
				return;
			}

			// If preventDefault exists, run it on the original event
			if ( e.preventDefault ) {
				e.preventDefault();

			// Support: IE
			// Otherwise set the returnValue property of the original event to false
			} else {
				e.returnValue = false;
			}
		},
		stopPropagation: function() {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if ( !e || this.isSimulated ) {
				return;
			}

			// If stopPropagation exists, run it on the original event
			if ( e.stopPropagation ) {
				e.stopPropagation();
			}

			// Support: IE
			// Set the cancelBubble property of the original event to true
			e.cancelBubble = true;
		},
		stopImmediatePropagation: function() {
			var e = this.originalEvent;

			this.isImmediatePropagationStopped = returnTrue;

			if ( e && e.stopImmediatePropagation ) {
				e.stopImmediatePropagation();
			}

			this.stopPropagation();
		}
	};

	// Create mouseenter/leave events using mouseover/out and event-time checks
	// so that event delegation works in jQuery.
	// Do the same for pointerenter/pointerleave and pointerover/pointerout
	//
	// Support: Safari 7 only
	// Safari sends mouseenter too often; see:
	// https://code.google.com/p/chromium/issues/detail?id=470258
	// for the description of the bug (it existed in older Chrome versions as well).
	jQuery.each( {
		mouseenter: "mouseover",
		mouseleave: "mouseout",
		pointerenter: "pointerover",
		pointerleave: "pointerout"
	}, function( orig, fix ) {
		jQuery.event.special[ orig ] = {
			delegateType: fix,
			bindType: fix,

			handle: function( event ) {
				var ret,
					target = this,
					related = event.relatedTarget,
					handleObj = event.handleObj;

				// For mouseenter/leave call the handler if related is outside the target.
				// NB: No relatedTarget if the mouse left/entered the browser window
				if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply( this, arguments );
					event.type = fix;
				}
				return ret;
			}
		};
	} );

	// IE submit delegation
	if ( !support.submit ) {

		jQuery.event.special.submit = {
			setup: function() {

				// Only need this for delegated form submit events
				if ( jQuery.nodeName( this, "form" ) ) {
					return false;
				}

				// Lazy-add a submit handler when a descendant form may potentially be submitted
				jQuery.event.add( this, "click._submit keypress._submit", function( e ) {

					// Node name check avoids a VML-related crash in IE (#9807)
					var elem = e.target,
						form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ?

							// Support: IE <=8
							// We use jQuery.prop instead of elem.form
							// to allow fixing the IE8 delegated submit issue (gh-2332)
							// by 3rd party polyfills/workarounds.
							jQuery.prop( elem, "form" ) :
							undefined;

					if ( form && !jQuery._data( form, "submit" ) ) {
						jQuery.event.add( form, "submit._submit", function( event ) {
							event._submitBubble = true;
						} );
						jQuery._data( form, "submit", true );
					}
				} );

				// return undefined since we don't need an event listener
			},

			postDispatch: function( event ) {

				// If form was submitted by the user, bubble the event up the tree
				if ( event._submitBubble ) {
					delete event._submitBubble;
					if ( this.parentNode && !event.isTrigger ) {
						jQuery.event.simulate( "submit", this.parentNode, event );
					}
				}
			},

			teardown: function() {

				// Only need this for delegated form submit events
				if ( jQuery.nodeName( this, "form" ) ) {
					return false;
				}

				// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
				jQuery.event.remove( this, "._submit" );
			}
		};
	}

	// IE change delegation and checkbox/radio fix
	if ( !support.change ) {

		jQuery.event.special.change = {

			setup: function() {

				if ( rformElems.test( this.nodeName ) ) {

					// IE doesn't fire change on a check/radio until blur; trigger it on click
					// after a propertychange. Eat the blur-change in special.change.handle.
					// This still fires onchange a second time for check/radio after blur.
					if ( this.type === "checkbox" || this.type === "radio" ) {
						jQuery.event.add( this, "propertychange._change", function( event ) {
							if ( event.originalEvent.propertyName === "checked" ) {
								this._justChanged = true;
							}
						} );
						jQuery.event.add( this, "click._change", function( event ) {
							if ( this._justChanged && !event.isTrigger ) {
								this._justChanged = false;
							}

							// Allow triggered, simulated change events (#11500)
							jQuery.event.simulate( "change", this, event );
						} );
					}
					return false;
				}

				// Delegated event; lazy-add a change handler on descendant inputs
				jQuery.event.add( this, "beforeactivate._change", function( e ) {
					var elem = e.target;

					if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "change" ) ) {
						jQuery.event.add( elem, "change._change", function( event ) {
							if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
								jQuery.event.simulate( "change", this.parentNode, event );
							}
						} );
						jQuery._data( elem, "change", true );
					}
				} );
			},

			handle: function( event ) {
				var elem = event.target;

				// Swallow native change events from checkbox/radio, we already triggered them above
				if ( this !== elem || event.isSimulated || event.isTrigger ||
					( elem.type !== "radio" && elem.type !== "checkbox" ) ) {

					return event.handleObj.handler.apply( this, arguments );
				}
			},

			teardown: function() {
				jQuery.event.remove( this, "._change" );

				return !rformElems.test( this.nodeName );
			}
		};
	}

	// Support: Firefox
	// Firefox doesn't have focus(in | out) events
	// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
	//
	// Support: Chrome, Safari
	// focus(in | out) events fire after focus & blur events,
	// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
	// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
	if ( !support.focusin ) {
		jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

			// Attach a single capturing handler on the document while someone wants focusin/focusout
			var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
			};

			jQuery.event.special[ fix ] = {
				setup: function() {
					var doc = this.ownerDocument || this,
						attaches = jQuery._data( doc, fix );

					if ( !attaches ) {
						doc.addEventListener( orig, handler, true );
					}
					jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
				},
				teardown: function() {
					var doc = this.ownerDocument || this,
						attaches = jQuery._data( doc, fix ) - 1;

					if ( !attaches ) {
						doc.removeEventListener( orig, handler, true );
						jQuery._removeData( doc, fix );
					} else {
						jQuery._data( doc, fix, attaches );
					}
				}
			};
		} );
	}

	jQuery.fn.extend( {

		on: function( types, selector, data, fn ) {
			return on( this, types, selector, data, fn );
		},
		one: function( types, selector, data, fn ) {
			return on( this, types, selector, data, fn, 1 );
		},
		off: function( types, selector, fn ) {
			var handleObj, type;
			if ( types && types.preventDefault && types.handleObj ) {

				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery( types.delegateTarget ).off(
					handleObj.namespace ?
						handleObj.origType + "." + handleObj.namespace :
						handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if ( typeof types === "object" ) {

				// ( types-object [, selector] )
				for ( type in types ) {
					this.off( type, selector, types[ type ] );
				}
				return this;
			}
			if ( selector === false || typeof selector === "function" ) {

				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if ( fn === false ) {
				fn = returnFalse;
			}
			return this.each( function() {
				jQuery.event.remove( this, types, fn, selector );
			} );
		},

		trigger: function( type, data ) {
			return this.each( function() {
				jQuery.event.trigger( type, data, this );
			} );
		},
		triggerHandler: function( type, data ) {
			var elem = this[ 0 ];
			if ( elem ) {
				return jQuery.event.trigger( type, data, elem, true );
			}
		}
	} );


	var rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
		rnoshimcache = new RegExp( "<(?:" + nodeNames + ")[\\s/>]", "i" ),
		rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

		// Support: IE 10-11, Edge 10240+
		// In IE/Edge using regex groups here causes severe slowdowns.
		// See https://connect.microsoft.com/IE/feedback/details/1736512/
		rnoInnerhtml = /<script|<style|<link/i,

		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rscriptTypeMasked = /^true\/(.*)/,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
		safeFragment = createSafeFragment( document ),
		fragmentDiv = safeFragment.appendChild( document.createElement( "div" ) );

	// Support: IE<8
	// Manipulating tables requires a tbody
	function manipulationTarget( elem, content ) {
		return jQuery.nodeName( elem, "table" ) &&
			jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

			elem.getElementsByTagName( "tbody" )[ 0 ] ||
				elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
			elem;
	}

	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript( elem ) {
		elem.type = ( jQuery.find.attr( elem, "type" ) !== null ) + "/" + elem.type;
		return elem;
	}
	function restoreScript( elem ) {
		var match = rscriptTypeMasked.exec( elem.type );
		if ( match ) {
			elem.type = match[ 1 ];
		} else {
			elem.removeAttribute( "type" );
		}
		return elem;
	}

	function cloneCopyEvent( src, dest ) {
		if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
			return;
		}

		var type, i, l,
			oldData = jQuery._data( src ),
			curData = jQuery._data( dest, oldData ),
			events = oldData.events;

		if ( events ) {
			delete curData.handle;
			curData.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}

		// make the cloned public data object a copy from the original
		if ( curData.data ) {
			curData.data = jQuery.extend( {}, curData.data );
		}
	}

	function fixCloneNodeIssues( src, dest ) {
		var nodeName, e, data;

		// We do not need to do anything for non-Elements
		if ( dest.nodeType !== 1 ) {
			return;
		}

		nodeName = dest.nodeName.toLowerCase();

		// IE6-8 copies events bound via attachEvent when using cloneNode.
		if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
			data = jQuery._data( dest );

			for ( e in data.events ) {
				jQuery.removeEvent( dest, e, data.handle );
			}

			// Event data gets referenced instead of copied if the expando gets copied too
			dest.removeAttribute( jQuery.expando );
		}

		// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
		if ( nodeName === "script" && dest.text !== src.text ) {
			disableScript( dest ).text = src.text;
			restoreScript( dest );

		// IE6-10 improperly clones children of object elements using classid.
		// IE10 throws NoModificationAllowedError if parent is null, #12132.
		} else if ( nodeName === "object" ) {
			if ( dest.parentNode ) {
				dest.outerHTML = src.outerHTML;
			}

			// This path appears unavoidable for IE9. When cloning an object
			// element in IE9, the outerHTML strategy above is not sufficient.
			// If the src has innerHTML and the destination does not,
			// copy the src.innerHTML into the dest.innerHTML. #10324
			if ( support.html5Clone && ( src.innerHTML && !jQuery.trim( dest.innerHTML ) ) ) {
				dest.innerHTML = src.innerHTML;
			}

		} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {

			// IE6-8 fails to persist the checked state of a cloned checkbox
			// or radio button. Worse, IE6-7 fail to give the cloned element
			// a checked appearance if the defaultChecked value isn't also set

			dest.defaultChecked = dest.checked = src.checked;

			// IE6-7 get confused and end up setting the value of a cloned
			// checkbox/radio button to an empty string instead of "on"
			if ( dest.value !== src.value ) {
				dest.value = src.value;
			}

		// IE6-8 fails to return the selected option to the default selected
		// state when cloning options
		} else if ( nodeName === "option" ) {
			dest.defaultSelected = dest.selected = src.defaultSelected;

		// IE6-8 fails to set the defaultValue to the correct value when
		// cloning other types of input fields
		} else if ( nodeName === "input" || nodeName === "textarea" ) {
			dest.defaultValue = src.defaultValue;
		}
	}

	function domManip( collection, args, callback, ignored ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var first, node, hasScripts,
			scripts, doc, fragment,
			i = 0,
			l = collection.length,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return collection.each( function( index ) {
				var self = collection.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				domManip( self, args, callback, ignored );
			} );
		}

		if ( l ) {
			fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			// Require either new content or an interest in ignored elements to invoke the callback
			if ( first || ignored ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item
				// instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {

							// Support: Android<4.1, PhantomJS<2
							// push.apply(_, arraylike) throws on ancient WebKit
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( collection[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!jQuery._data( node, "globalEval" ) &&
							jQuery.contains( doc, node ) ) {

							if ( node.src ) {

								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval(
									( node.text || node.textContent || node.innerHTML || "" )
										.replace( rcleanScript, "" )
								);
							}
						}
					}
				}

				// Fix #11809: Avoid leaking memory
				fragment = first = null;
			}
		}

		return collection;
	}

	function remove( elem, selector, keepData ) {
		var node,
			elems = selector ? jQuery.filter( selector, elem ) : elem,
			i = 0;

		for ( ; ( node = elems[ i ] ) != null; i++ ) {

			if ( !keepData && node.nodeType === 1 ) {
				jQuery.cleanData( getAll( node ) );
			}

			if ( node.parentNode ) {
				if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
					setGlobalEval( getAll( node, "script" ) );
				}
				node.parentNode.removeChild( node );
			}
		}

		return elem;
	}

	jQuery.extend( {
		htmlPrefilter: function( html ) {
			return html.replace( rxhtmlTag, "<$1></$2>" );
		},

		clone: function( elem, dataAndEvents, deepDataAndEvents ) {
			var destElements, node, clone, i, srcElements,
				inPage = jQuery.contains( elem.ownerDocument, elem );

			if ( support.html5Clone || jQuery.isXMLDoc( elem ) ||
				!rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {

				clone = elem.cloneNode( true );

			// IE<=8 does not properly clone detached, unknown element nodes
			} else {
				fragmentDiv.innerHTML = elem.outerHTML;
				fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
			}

			if ( ( !support.noCloneEvent || !support.noCloneChecked ) &&
					( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {

				// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
				destElements = getAll( clone );
				srcElements = getAll( elem );

				// Fix all IE cloning issues
				for ( i = 0; ( node = srcElements[ i ] ) != null; ++i ) {

					// Ensure that the destination node is not null; Fixes #9587
					if ( destElements[ i ] ) {
						fixCloneNodeIssues( node, destElements[ i ] );
					}
				}
			}

			// Copy the events from the original to the clone
			if ( dataAndEvents ) {
				if ( deepDataAndEvents ) {
					srcElements = srcElements || getAll( elem );
					destElements = destElements || getAll( clone );

					for ( i = 0; ( node = srcElements[ i ] ) != null; i++ ) {
						cloneCopyEvent( node, destElements[ i ] );
					}
				} else {
					cloneCopyEvent( elem, clone );
				}
			}

			// Preserve script evaluation history
			destElements = getAll( clone, "script" );
			if ( destElements.length > 0 ) {
				setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
			}

			destElements = srcElements = node = null;

			// Return the cloned set
			return clone;
		},

		cleanData: function( elems, /* internal */ forceAcceptData ) {
			var elem, type, id, data,
				i = 0,
				internalKey = jQuery.expando,
				cache = jQuery.cache,
				attributes = support.attributes,
				special = jQuery.event.special;

			for ( ; ( elem = elems[ i ] ) != null; i++ ) {
				if ( forceAcceptData || acceptData( elem ) ) {

					id = elem[ internalKey ];
					data = id && cache[ id ];

					if ( data ) {
						if ( data.events ) {
							for ( type in data.events ) {
								if ( special[ type ] ) {
									jQuery.event.remove( elem, type );

								// This is a shortcut to avoid jQuery.event.remove's overhead
								} else {
									jQuery.removeEvent( elem, type, data.handle );
								}
							}
						}

						// Remove cache only if it was not already removed by jQuery.event.remove
						if ( cache[ id ] ) {

							delete cache[ id ];

							// Support: IE<9
							// IE does not allow us to delete expando properties from nodes
							// IE creates expando attributes along with the property
							// IE does not have a removeAttribute function on Document nodes
							if ( !attributes && typeof elem.removeAttribute !== "undefined" ) {
								elem.removeAttribute( internalKey );

							// Webkit & Blink performance suffers when deleting properties
							// from DOM nodes, so set to undefined instead
							// https://code.google.com/p/chromium/issues/detail?id=378607
							} else {
								elem[ internalKey ] = undefined;
							}

							deletedIds.push( id );
						}
					}
				}
			}
		}
	} );

	jQuery.fn.extend( {

		// Keep domManip exposed until 3.0 (gh-2225)
		domManip: domManip,

		detach: function( selector ) {
			return remove( this, selector, true );
		},

		remove: function( selector ) {
			return remove( this, selector );
		},

		text: function( value ) {
			return access( this, function( value ) {
				return value === undefined ?
					jQuery.text( this ) :
					this.empty().append(
						( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value )
					);
			}, null, value, arguments.length );
		},

		append: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.appendChild( elem );
				}
			} );
		},

		prepend: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.insertBefore( elem, target.firstChild );
				}
			} );
		},

		before: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this );
				}
			} );
		},

		after: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this.nextSibling );
				}
			} );
		},

		empty: function() {
			var elem,
				i = 0;

			for ( ; ( elem = this[ i ] ) != null; i++ ) {

				// Remove element nodes and prevent memory leaks
				if ( elem.nodeType === 1 ) {
					jQuery.cleanData( getAll( elem, false ) );
				}

				// Remove any remaining nodes
				while ( elem.firstChild ) {
					elem.removeChild( elem.firstChild );
				}

				// If this is a select, ensure that it displays empty (#12336)
				// Support: IE<9
				if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
					elem.options.length = 0;
				}
			}

			return this;
		},

		clone: function( dataAndEvents, deepDataAndEvents ) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map( function() {
				return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
			} );
		},

		html: function( value ) {
			return access( this, function( value ) {
				var elem = this[ 0 ] || {},
					i = 0,
					l = this.length;

				if ( value === undefined ) {
					return elem.nodeType === 1 ?
						elem.innerHTML.replace( rinlinejQuery, "" ) :
						undefined;
				}

				// See if we can take a shortcut and just use innerHTML
				if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
					( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
					( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
					!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

					value = jQuery.htmlPrefilter( value );

					try {
						for ( ; i < l; i++ ) {

							// Remove element nodes and prevent memory leaks
							elem = this[ i ] || {};
							if ( elem.nodeType === 1 ) {
								jQuery.cleanData( getAll( elem, false ) );
								elem.innerHTML = value;
							}
						}

						elem = 0;

					// If using innerHTML throws an exception, use the fallback method
					} catch ( e ) {}
				}

				if ( elem ) {
					this.empty().append( value );
				}
			}, null, value, arguments.length );
		},

		replaceWith: function() {
			var ignored = [];

			// Make the changes, replacing each non-ignored context element with the new content
			return domManip( this, arguments, function( elem ) {
				var parent = this.parentNode;

				if ( jQuery.inArray( this, ignored ) < 0 ) {
					jQuery.cleanData( getAll( this ) );
					if ( parent ) {
						parent.replaceChild( elem, this );
					}
				}

			// Force callback invocation
			}, ignored );
		}
	} );

	jQuery.each( {
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var elems,
				i = 0,
				ret = [],
				insert = jQuery( selector ),
				last = insert.length - 1;

			for ( ; i <= last; i++ ) {
				elems = i === last ? this : this.clone( true );
				jQuery( insert[ i ] )[ original ]( elems );

				// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
				push.apply( ret, elems.get() );
			}

			return this.pushStack( ret );
		};
	} );


	var iframe,
		elemdisplay = {

			// Support: Firefox
			// We have to pre-define these values for FF (#10227)
			HTML: "block",
			BODY: "block"
		};

	/**
	 * Retrieve the actual display of a element
	 * @param {String} name nodeName of the element
	 * @param {Object} doc Document object
	 */

	// Called only from within defaultDisplay
	function actualDisplay( name, doc ) {
		var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

			display = jQuery.css( elem[ 0 ], "display" );

		// We don't have any data stored on the element,
		// so use "detach" method as fast way to get rid of the element
		elem.detach();

		return display;
	}

	/**
	 * Try to determine the default display value of an element
	 * @param {String} nodeName
	 */
	function defaultDisplay( nodeName ) {
		var doc = document,
			display = elemdisplay[ nodeName ];

		if ( !display ) {
			display = actualDisplay( nodeName, doc );

			// If the simple way fails, read from inside an iframe
			if ( display === "none" || !display ) {

				// Use the already-created iframe if possible
				iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
					.appendTo( doc.documentElement );

				// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
				doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

				// Support: IE
				doc.write();
				doc.close();

				display = actualDisplay( nodeName, doc );
				iframe.detach();
			}

			// Store the correct default display
			elemdisplay[ nodeName ] = display;
		}

		return display;
	}
	var rmargin = ( /^margin/ );

	var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

	var swap = function( elem, options, callback, args ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.apply( elem, args || [] );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	};


	var documentElement = document.documentElement;



	( function() {
		var pixelPositionVal, pixelMarginRightVal, boxSizingReliableVal,
			reliableHiddenOffsetsVal, reliableMarginRightVal, reliableMarginLeftVal,
			container = document.createElement( "div" ),
			div = document.createElement( "div" );

		// Finish early in limited (non-browser) environments
		if ( !div.style ) {
			return;
		}

		div.style.cssText = "float:left;opacity:.5";

		// Support: IE<9
		// Make sure that element opacity exists (as opposed to filter)
		support.opacity = div.style.opacity === "0.5";

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		support.cssFloat = !!div.style.cssFloat;

		div.style.backgroundClip = "content-box";
		div.cloneNode( true ).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";

		container = document.createElement( "div" );
		container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
			"padding:0;margin-top:1px;position:absolute";
		div.innerHTML = "";
		container.appendChild( div );

		// Support: Firefox<29, Android 2.3
		// Vendor-prefix box-sizing
		support.boxSizing = div.style.boxSizing === "" || div.style.MozBoxSizing === "" ||
			div.style.WebkitBoxSizing === "";

		jQuery.extend( support, {
			reliableHiddenOffsets: function() {
				if ( pixelPositionVal == null ) {
					computeStyleTests();
				}
				return reliableHiddenOffsetsVal;
			},

			boxSizingReliable: function() {

				// We're checking for pixelPositionVal here instead of boxSizingReliableVal
				// since that compresses better and they're computed together anyway.
				if ( pixelPositionVal == null ) {
					computeStyleTests();
				}
				return boxSizingReliableVal;
			},

			pixelMarginRight: function() {

				// Support: Android 4.0-4.3
				if ( pixelPositionVal == null ) {
					computeStyleTests();
				}
				return pixelMarginRightVal;
			},

			pixelPosition: function() {
				if ( pixelPositionVal == null ) {
					computeStyleTests();
				}
				return pixelPositionVal;
			},

			reliableMarginRight: function() {

				// Support: Android 2.3
				if ( pixelPositionVal == null ) {
					computeStyleTests();
				}
				return reliableMarginRightVal;
			},

			reliableMarginLeft: function() {

				// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
				if ( pixelPositionVal == null ) {
					computeStyleTests();
				}
				return reliableMarginLeftVal;
			}
		} );

		function computeStyleTests() {
			var contents, divStyle,
				documentElement = document.documentElement;

			// Setup
			documentElement.appendChild( container );

			div.style.cssText =

				// Support: Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:border-box;box-sizing:border-box;" +
				"position:relative;display:block;" +
				"margin:auto;border:1px;padding:1px;" +
				"top:1%;width:50%";

			// Support: IE<9
			// Assume reasonable values in the absence of getComputedStyle
			pixelPositionVal = boxSizingReliableVal = reliableMarginLeftVal = false;
			pixelMarginRightVal = reliableMarginRightVal = true;

			// Check for getComputedStyle so that this code is not run in IE<9.
			if ( window.getComputedStyle ) {
				divStyle = window.getComputedStyle( div );
				pixelPositionVal = ( divStyle || {} ).top !== "1%";
				reliableMarginLeftVal = ( divStyle || {} ).marginLeft === "2px";
				boxSizingReliableVal = ( divStyle || { width: "4px" } ).width === "4px";

				// Support: Android 4.0 - 4.3 only
				// Some styles come back with percentage values, even though they shouldn't
				div.style.marginRight = "50%";
				pixelMarginRightVal = ( divStyle || { marginRight: "4px" } ).marginRight === "4px";

				// Support: Android 2.3 only
				// Div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				contents = div.appendChild( document.createElement( "div" ) );

				// Reset CSS: box-sizing; display; margin; border; padding
				contents.style.cssText = div.style.cssText =

					// Support: Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
					"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
				contents.style.marginRight = contents.style.width = "0";
				div.style.width = "1px";

				reliableMarginRightVal =
					!parseFloat( ( window.getComputedStyle( contents ) || {} ).marginRight );

				div.removeChild( contents );
			}

			// Support: IE6-8
			// First check that getClientRects works as expected
			// Check if table cells still have offsetWidth/Height when they are set
			// to display:none and there are still other visible table cells in a
			// table row; if so, offsetWidth/Height are not reliable for use when
			// determining if an element has been hidden directly using
			// display:none (it is still safe to use offsets if a parent element is
			// hidden; don safety goggles and see bug #4512 for more information).
			div.style.display = "none";
			reliableHiddenOffsetsVal = div.getClientRects().length === 0;
			if ( reliableHiddenOffsetsVal ) {
				div.style.display = "";
				div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
				div.childNodes[ 0 ].style.borderCollapse = "separate";
				contents = div.getElementsByTagName( "td" );
				contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
				reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
				if ( reliableHiddenOffsetsVal ) {
					contents[ 0 ].style.display = "";
					contents[ 1 ].style.display = "none";
					reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
				}
			}

			// Teardown
			documentElement.removeChild( container );
		}

	} )();


	var getStyles, curCSS,
		rposition = /^(top|right|bottom|left)$/;

	if ( window.getComputedStyle ) {
		getStyles = function( elem ) {

			// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
			// IE throws on elements created in popups
			// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
			var view = elem.ownerDocument.defaultView;

			if ( !view || !view.opener ) {
				view = window;
			}

			return view.getComputedStyle( elem );
		};

		curCSS = function( elem, name, computed ) {
			var width, minWidth, maxWidth, ret,
				style = elem.style;

			computed = computed || getStyles( elem );

			// getPropertyValue is only needed for .css('filter') in IE9, see #12537
			ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

			// Support: Opera 12.1x only
			// Fall back to style even without computed
			// computed is undefined for elems on document fragments
			if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			if ( computed ) {

				// A tribute to the "awesome hack by Dean Edwards"
				// Chrome < 17 and Safari 5.0 uses "computed value"
				// instead of "used value" for margin-right
				// Safari 5.1.7 (at least) returns percentage for a larger set of values,
				// but width seems to be reliably pixels
				// this is against the CSSOM draft spec:
				// http://dev.w3.org/csswg/cssom/#resolved-values
				if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

					// Remember the original values
					width = style.width;
					minWidth = style.minWidth;
					maxWidth = style.maxWidth;

					// Put in the new values to get a computed value out
					style.minWidth = style.maxWidth = style.width = ret;
					ret = computed.width;

					// Revert the changed values
					style.width = width;
					style.minWidth = minWidth;
					style.maxWidth = maxWidth;
				}
			}

			// Support: IE
			// IE returns zIndex value as an integer.
			return ret === undefined ?
				ret :
				ret + "";
		};
	} else if ( documentElement.currentStyle ) {
		getStyles = function( elem ) {
			return elem.currentStyle;
		};

		curCSS = function( elem, name, computed ) {
			var left, rs, rsLeft, ret,
				style = elem.style;

			computed = computed || getStyles( elem );
			ret = computed ? computed[ name ] : undefined;

			// Avoid setting ret to empty string here
			// so we don't default to auto
			if ( ret == null && style && style[ name ] ) {
				ret = style[ name ];
			}

			// From the awesome hack by Dean Edwards
			// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

			// If we're not dealing with a regular pixel number
			// but a number that has a weird ending, we need to convert it to pixels
			// but not position css attributes, as those are
			// proportional to the parent element instead
			// and we can't measure the parent instead because it
			// might trigger a "stacking dolls" problem
			if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

				// Remember the original values
				left = style.left;
				rs = elem.runtimeStyle;
				rsLeft = rs && rs.left;

				// Put in the new values to get a computed value out
				if ( rsLeft ) {
					rs.left = elem.currentStyle.left;
				}
				style.left = name === "fontSize" ? "1em" : ret;
				ret = style.pixelLeft + "px";

				// Revert the changed values
				style.left = left;
				if ( rsLeft ) {
					rs.left = rsLeft;
				}
			}

			// Support: IE
			// IE returns zIndex value as an integer.
			return ret === undefined ?
				ret :
				ret + "" || "auto";
		};
	}




	function addGetHookIf( conditionFn, hookFn ) {

		// Define the hook, we'll check on the first run if it's really needed.
		return {
			get: function() {
				if ( conditionFn() ) {

					// Hook not needed (or it's not possible to use it due
					// to missing dependency), remove it.
					delete this.get;
					return;
				}

				// Hook needed; redefine it so that the support test is not executed again.
				return ( this.get = hookFn ).apply( this, arguments );
			}
		};
	}


	var

			ralpha = /alpha\([^)]*\)/i,
		ropacity = /opacity\s*=\s*([^)]*)/i,

		// swappable if display is none or starts with table except
		// "table", "table-cell", or "table-caption"
		// see here for display values:
		// https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,
		rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),

		cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		cssNormalTransform = {
			letterSpacing: "0",
			fontWeight: "400"
		},

		cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
		emptyStyle = document.createElement( "div" ).style;


	// return a css property mapped to a potentially vendor prefixed property
	function vendorPropName( name ) {

		// shortcut for names that are not vendor prefixed
		if ( name in emptyStyle ) {
			return name;
		}

		// check for vendor prefixed names
		var capName = name.charAt( 0 ).toUpperCase() + name.slice( 1 ),
			i = cssPrefixes.length;

		while ( i-- ) {
			name = cssPrefixes[ i ] + capName;
			if ( name in emptyStyle ) {
				return name;
			}
		}
	}

	function showHide( elements, show ) {
		var display, elem, hidden,
			values = [],
			index = 0,
			length = elements.length;

		for ( ; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}

			values[ index ] = jQuery._data( elem, "olddisplay" );
			display = elem.style.display;
			if ( show ) {

				// Reset the inline display of this element to learn if it is
				// being hidden by cascaded rules or not
				if ( !values[ index ] && display === "none" ) {
					elem.style.display = "";
				}

				// Set elements which have been overridden with display: none
				// in a stylesheet to whatever the default browser style is
				// for such an element
				if ( elem.style.display === "" && isHidden( elem ) ) {
					values[ index ] =
						jQuery._data( elem, "olddisplay", defaultDisplay( elem.nodeName ) );
				}
			} else {
				hidden = isHidden( elem );

				if ( display && display !== "none" || !hidden ) {
					jQuery._data(
						elem,
						"olddisplay",
						hidden ? display : jQuery.css( elem, "display" )
					);
				}
			}
		}

		// Set the display of most of the elements in a second loop
		// to avoid the constant reflow
		for ( index = 0; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
			if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
				elem.style.display = show ? values[ index ] || "" : "none";
			}
		}

		return elements;
	}

	function setPositiveNumber( elem, value, subtract ) {
		var matches = rnumsplit.exec( value );
		return matches ?

			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
	}

	function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
		var i = extra === ( isBorderBox ? "border" : "content" ) ?

			// If we already have the right measurement, avoid augmentation
			4 :

			// Otherwise initialize for horizontal or vertical properties
			name === "width" ? 1 : 0,

			val = 0;

		for ( ; i < 4; i += 2 ) {

			// both box models exclude margin, so add it if we want it
			if ( extra === "margin" ) {
				val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
			}

			if ( isBorderBox ) {

				// border-box includes padding, so remove it if we want content
				if ( extra === "content" ) {
					val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
				}

				// at this point, extra isn't border nor margin, so remove border
				if ( extra !== "margin" ) {
					val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			} else {

				// at this point, extra isn't content, so add padding
				val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

				// at this point, extra isn't content nor padding, so add border
				if ( extra !== "padding" ) {
					val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			}
		}

		return val;
	}

	function getWidthOrHeight( elem, name, extra ) {

		// Start with offset property, which is equivalent to the border-box value
		var valueIsBorderBox = true,
			val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
			styles = getStyles( elem ),
			isBorderBox = support.boxSizing &&
				jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// some non-html elements return undefined for offsetWidth, so check for null/undefined
		// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
		// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
		if ( val <= 0 || val == null ) {

			// Fall back to computed then uncomputed css if necessary
			val = curCSS( elem, name, styles );
			if ( val < 0 || val == null ) {
				val = elem.style[ name ];
			}

			// Computed unit is not pixels. Stop here and return.
			if ( rnumnonpx.test( val ) ) {
				return val;
			}

			// we need the check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = isBorderBox &&
				( support.boxSizingReliable() || val === elem.style[ name ] );

			// Normalize "", auto, and prepare for extra
			val = parseFloat( val ) || 0;
		}

		// use the active box-sizing model to add/subtract irrelevant styles
		return ( val +
			augmentWidthOrHeight(
				elem,
				name,
				extra || ( isBorderBox ? "border" : "content" ),
				valueIsBorderBox,
				styles
			)
		) + "px";
	}

	jQuery.extend( {

		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function( elem, computed ) {
					if ( computed ) {

						// We should always get a number back from opacity
						var ret = curCSS( elem, "opacity" );
						return ret === "" ? "1" : ret;
					}
				}
			}
		},

		// Don't automatically add "px" to these possibly-unitless properties
		cssNumber: {
			"animationIterationCount": true,
			"columnCount": true,
			"fillOpacity": true,
			"flexGrow": true,
			"flexShrink": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"order": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},

		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {

			// normalize float css property
			"float": support.cssFloat ? "cssFloat" : "styleFloat"
		},

		// Get and set the style property on a DOM Node
		style: function( elem, name, value, extra ) {

			// Don't set styles on text and comment nodes
			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
				return;
			}

			// Make sure that we're working with the right name
			var ret, type, hooks,
				origName = jQuery.camelCase( name ),
				style = elem.style;

			name = jQuery.cssProps[ origName ] ||
				( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

			// gets hook for the prefixed version
			// followed by the unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// Check if we're setting a value
			if ( value !== undefined ) {
				type = typeof value;

				// Convert "+=" or "-=" to relative numbers (#7345)
				if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
					value = adjustCSS( elem, name, ret );

					// Fixes bug #9237
					type = "number";
				}

				// Make sure that null and NaN values aren't set. See: #7116
				if ( value == null || value !== value ) {
					return;
				}

				// If a number was passed in, add the unit (except for certain CSS properties)
				if ( type === "number" ) {
					value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
				}

				// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
				// but it would mean to define eight
				// (for every problematic property) identical functions
				if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
					style[ name ] = "inherit";
				}

				// If a hook was provided, use that value, otherwise just set the specified value
				if ( !hooks || !( "set" in hooks ) ||
					( value = hooks.set( elem, value, extra ) ) !== undefined ) {

					// Support: IE
					// Swallow errors from 'invalid' CSS values (#5509)
					try {
						style[ name ] = value;
					} catch ( e ) {}
				}

			} else {

				// If a hook was provided get the non-computed value from there
				if ( hooks && "get" in hooks &&
					( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

					return ret;
				}

				// Otherwise just get the value from the style object
				return style[ name ];
			}
		},

		css: function( elem, name, extra, styles ) {
			var num, val, hooks,
				origName = jQuery.camelCase( name );

			// Make sure that we're working with the right name
			name = jQuery.cssProps[ origName ] ||
				( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

			// gets hook for the prefixed version
			// followed by the unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// If a hook was provided get the computed value from there
			if ( hooks && "get" in hooks ) {
				val = hooks.get( elem, true, extra );
			}

			// Otherwise, if a way to get the computed value exists, use that
			if ( val === undefined ) {
				val = curCSS( elem, name, styles );
			}

			//convert "normal" to computed value
			if ( val === "normal" && name in cssNormalTransform ) {
				val = cssNormalTransform[ name ];
			}

			// Return, converting to number if forced or a qualifier was provided and val looks numeric
			if ( extra === "" || extra ) {
				num = parseFloat( val );
				return extra === true || isFinite( num ) ? num || 0 : val;
			}
			return val;
		}
	} );

	jQuery.each( [ "height", "width" ], function( i, name ) {
		jQuery.cssHooks[ name ] = {
			get: function( elem, computed, extra ) {
				if ( computed ) {

					// certain elements can have dimension info if we invisibly show them
					// however, it must have a current display style that would benefit from this
					return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
						elem.offsetWidth === 0 ?
							swap( elem, cssShow, function() {
								return getWidthOrHeight( elem, name, extra );
							} ) :
							getWidthOrHeight( elem, name, extra );
				}
			},

			set: function( elem, value, extra ) {
				var styles = extra && getStyles( elem );
				return setPositiveNumber( elem, value, extra ?
					augmentWidthOrHeight(
						elem,
						name,
						extra,
						support.boxSizing &&
							jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						styles
					) : 0
				);
			}
		};
	} );

	if ( !support.opacity ) {
		jQuery.cssHooks.opacity = {
			get: function( elem, computed ) {

				// IE uses filters for opacity
				return ropacity.test( ( computed && elem.currentStyle ?
					elem.currentStyle.filter :
					elem.style.filter ) || "" ) ?
						( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
						computed ? "1" : "";
			},

			set: function( elem, value ) {
				var style = elem.style,
					currentStyle = elem.currentStyle,
					opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
					filter = currentStyle && currentStyle.filter || style.filter || "";

				// IE has trouble with opacity if it does not have layout
				// Force it by setting the zoom level
				style.zoom = 1;

				// if setting opacity to 1, and no other filters exist -
				// attempt to remove filter attribute #6652
				// if value === "", then remove inline opacity #12685
				if ( ( value >= 1 || value === "" ) &&
						jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
						style.removeAttribute ) {

					// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
					// if "filter:" is present at all, clearType is disabled, we want to avoid this
					// style.removeAttribute is IE Only, but so apparently is this code path...
					style.removeAttribute( "filter" );

					// if there is no filter style applied in a css rule
					// or unset inline opacity, we are done
					if ( value === "" || currentStyle && !currentStyle.filter ) {
						return;
					}
				}

				// otherwise, set new filter values
				style.filter = ralpha.test( filter ) ?
					filter.replace( ralpha, opacity ) :
					filter + " " + opacity;
			}
		};
	}

	jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
		function( elem, computed ) {
			if ( computed ) {
				return swap( elem, { "display": "inline-block" },
					curCSS, [ elem, "marginRight" ] );
			}
		}
	);

	jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
		function( elem, computed ) {
			if ( computed ) {
				return (
					parseFloat( curCSS( elem, "marginLeft" ) ) ||

					// Support: IE<=11+
					// Running getBoundingClientRect on a disconnected node in IE throws an error
					// Support: IE8 only
					// getClientRects() errors on disconnected elems
					( jQuery.contains( elem.ownerDocument, elem ) ?
						elem.getBoundingClientRect().left -
							swap( elem, { marginLeft: 0 }, function() {
								return elem.getBoundingClientRect().left;
							} ) :
						0
					)
				) + "px";
			}
		}
	);

	// These hooks are used by animate to expand properties
	jQuery.each( {
		margin: "",
		padding: "",
		border: "Width"
	}, function( prefix, suffix ) {
		jQuery.cssHooks[ prefix + suffix ] = {
			expand: function( value ) {
				var i = 0,
					expanded = {},

					// assumes a single number if not a string
					parts = typeof value === "string" ? value.split( " " ) : [ value ];

				for ( ; i < 4; i++ ) {
					expanded[ prefix + cssExpand[ i ] + suffix ] =
						parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
				}

				return expanded;
			}
		};

		if ( !rmargin.test( prefix ) ) {
			jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
		}
	} );

	jQuery.fn.extend( {
		css: function( name, value ) {
			return access( this, function( elem, name, value ) {
				var styles, len,
					map = {},
					i = 0;

				if ( jQuery.isArray( name ) ) {
					styles = getStyles( elem );
					len = name.length;

					for ( ; i < len; i++ ) {
						map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
					}

					return map;
				}

				return value !== undefined ?
					jQuery.style( elem, name, value ) :
					jQuery.css( elem, name );
			}, name, value, arguments.length > 1 );
		},
		show: function() {
			return showHide( this, true );
		},
		hide: function() {
			return showHide( this );
		},
		toggle: function( state ) {
			if ( typeof state === "boolean" ) {
				return state ? this.show() : this.hide();
			}

			return this.each( function() {
				if ( isHidden( this ) ) {
					jQuery( this ).show();
				} else {
					jQuery( this ).hide();
				}
			} );
		}
	} );


	function Tween( elem, options, prop, end, easing ) {
		return new Tween.prototype.init( elem, options, prop, end, easing );
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function( elem, options, prop, end, easing, unit ) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || jQuery.easing._default;
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
		},
		cur: function() {
			var hooks = Tween.propHooks[ this.prop ];

			return hooks && hooks.get ?
				hooks.get( this ) :
				Tween.propHooks._default.get( this );
		},
		run: function( percent ) {
			var eased,
				hooks = Tween.propHooks[ this.prop ];

			if ( this.options.duration ) {
				this.pos = eased = jQuery.easing[ this.easing ](
					percent, this.options.duration * percent, 0, 1, this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = ( this.end - this.start ) * eased + this.start;

			if ( this.options.step ) {
				this.options.step.call( this.elem, this.now, this );
			}

			if ( hooks && hooks.set ) {
				hooks.set( this );
			} else {
				Tween.propHooks._default.set( this );
			}
			return this;
		}
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function( tween ) {
				var result;

				// Use a property on the element directly when it is not a DOM element,
				// or when there is no matching style property that exists.
				if ( tween.elem.nodeType !== 1 ||
					tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
					return tween.elem[ tween.prop ];
				}

				// passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails
				// so, simple values such as "10px" are parsed to Float.
				// complex values such as "rotate(1rad)" are returned as is.
				result = jQuery.css( tween.elem, tween.prop, "" );

				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === "auto" ? 0 : result;
			},
			set: function( tween ) {

				// use step hook for back compat - use cssHook if its there - use .style if its
				// available and use plain properties where available
				if ( jQuery.fx.step[ tween.prop ] ) {
					jQuery.fx.step[ tween.prop ]( tween );
				} else if ( tween.elem.nodeType === 1 &&
					( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
						jQuery.cssHooks[ tween.prop ] ) ) {
					jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
				} else {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		}
	};

	// Support: IE <=9
	// Panic based approach to setting things on disconnected nodes

	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function( tween ) {
			if ( tween.elem.nodeType && tween.elem.parentNode ) {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	};

	jQuery.easing = {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return 0.5 - Math.cos( p * Math.PI ) / 2;
		},
		_default: "swing"
	};

	jQuery.fx = Tween.prototype.init;

	// Back Compat <1.8 extension point
	jQuery.fx.step = {};




	var
		fxNow, timerId,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rrun = /queueHooks$/;

	// Animations created synchronously will run synchronously
	function createFxNow() {
		window.setTimeout( function() {
			fxNow = undefined;
		} );
		return ( fxNow = jQuery.now() );
	}

	// Generate parameters to create a standard animation
	function genFx( type, includeWidth ) {
		var which,
			attrs = { height: type },
			i = 0;

		// if we include width, step value is 1 to do all cssExpand values,
		// if we don't include width, step value is 2 to skip over Left and Right
		includeWidth = includeWidth ? 1 : 0;
		for ( ; i < 4 ; i += 2 - includeWidth ) {
			which = cssExpand[ i ];
			attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
		}

		if ( includeWidth ) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	function createTween( value, prop, animation ) {
		var tween,
			collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

				// we're done with this property
				return tween;
			}
		}
	}

	function defaultPrefilter( elem, props, opts ) {
		/* jshint validthis: true */
		var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
			anim = this,
			orig = {},
			style = elem.style,
			hidden = elem.nodeType && isHidden( elem ),
			dataShow = jQuery._data( elem, "fxshow" );

		// handle queue: false promises
		if ( !opts.queue ) {
			hooks = jQuery._queueHooks( elem, "fx" );
			if ( hooks.unqueued == null ) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function() {
					if ( !hooks.unqueued ) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always( function() {

				// doing this makes sure that the complete handler will be called
				// before this completes
				anim.always( function() {
					hooks.unqueued--;
					if ( !jQuery.queue( elem, "fx" ).length ) {
						hooks.empty.fire();
					}
				} );
			} );
		}

		// height/width overflow pass
		if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

			// Make sure that nothing sneaks out
			// Record all 3 overflow attributes because IE does not
			// change the overflow attribute when overflowX and
			// overflowY are set to the same value
			opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

			// Set display property to inline-block for height/width
			// animations on inline elements that are having width/height animated
			display = jQuery.css( elem, "display" );

			// Test default display if display is currently "none"
			checkDisplay = display === "none" ?
				jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

			if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

				// inline-level elements accept inline-block;
				// block-level elements need to be inline with layout
				if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
					style.display = "inline-block";
				} else {
					style.zoom = 1;
				}
			}
		}

		if ( opts.overflow ) {
			style.overflow = "hidden";
			if ( !support.shrinkWrapBlocks() ) {
				anim.always( function() {
					style.overflow = opts.overflow[ 0 ];
					style.overflowX = opts.overflow[ 1 ];
					style.overflowY = opts.overflow[ 2 ];
				} );
			}
		}

		// show/hide pass
		for ( prop in props ) {
			value = props[ prop ];
			if ( rfxtypes.exec( value ) ) {
				delete props[ prop ];
				toggle = toggle || value === "toggle";
				if ( value === ( hidden ? "hide" : "show" ) ) {

					// If there is dataShow left over from a stopped hide or show
					// and we are going to proceed with show, we should pretend to be hidden
					if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
						hidden = true;
					} else {
						continue;
					}
				}
				orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

			// Any non-fx value stops us from restoring the original display value
			} else {
				display = undefined;
			}
		}

		if ( !jQuery.isEmptyObject( orig ) ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = jQuery._data( elem, "fxshow", {} );
			}

			// store state if its toggle - enables .stop().toggle() to "reverse"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			if ( hidden ) {
				jQuery( elem ).show();
			} else {
				anim.done( function() {
					jQuery( elem ).hide();
				} );
			}
			anim.done( function() {
				var prop;
				jQuery._removeData( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
			for ( prop in orig ) {
				tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = tween.start;
					if ( hidden ) {
						tween.end = tween.start;
						tween.start = prop === "width" || prop === "height" ? 1 : 0;
					}
				}
			}

		// If this is a noop like .hide().hide(), restore an overwritten display value
		} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
			style.display = display;
		}
	}

	function propFilter( props, specialEasing ) {
		var index, name, easing, value, hooks;

		// camelCase, specialEasing and expand cssHook pass
		for ( index in props ) {
			name = jQuery.camelCase( index );
			easing = specialEasing[ name ];
			value = props[ index ];
			if ( jQuery.isArray( value ) ) {
				easing = value[ 1 ];
				value = props[ index ] = value[ 0 ];
			}

			if ( index !== name ) {
				props[ name ] = value;
				delete props[ index ];
			}

			hooks = jQuery.cssHooks[ name ];
			if ( hooks && "expand" in hooks ) {
				value = hooks.expand( value );
				delete props[ name ];

				// not quite $.extend, this wont overwrite keys already present.
				// also - reusing 'index' from above because we have the correct "name"
				for ( index in value ) {
					if ( !( index in props ) ) {
						props[ index ] = value[ index ];
						specialEasing[ index ] = easing;
					}
				}
			} else {
				specialEasing[ name ] = easing;
			}
		}
	}

	function Animation( elem, properties, options ) {
		var result,
			stopped,
			index = 0,
			length = Animation.prefilters.length,
			deferred = jQuery.Deferred().always( function() {

				// don't match elem in the :animated selector
				delete tick.elem;
			} ),
			tick = function() {
				if ( stopped ) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

					// Support: Android 2.3
					// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( percent );
				}

				deferred.notifyWith( elem, [ animation, percent, remaining ] );

				if ( percent < 1 && length ) {
					return remaining;
				} else {
					deferred.resolveWith( elem, [ animation ] );
					return false;
				}
			},
			animation = deferred.promise( {
				elem: elem,
				props: jQuery.extend( {}, properties ),
				opts: jQuery.extend( true, {
					specialEasing: {},
					easing: jQuery.easing._default
				}, options ),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function( prop, end ) {
					var tween = jQuery.Tween( elem, animation.opts, prop, end,
							animation.opts.specialEasing[ prop ] || animation.opts.easing );
					animation.tweens.push( tween );
					return tween;
				},
				stop: function( gotoEnd ) {
					var index = 0,

						// if we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if ( stopped ) {
						return this;
					}
					stopped = true;
					for ( ; index < length ; index++ ) {
						animation.tweens[ index ].run( 1 );
					}

					// resolve when we played the last frame
					// otherwise, reject
					if ( gotoEnd ) {
						deferred.notifyWith( elem, [ animation, 1, 0 ] );
						deferred.resolveWith( elem, [ animation, gotoEnd ] );
					} else {
						deferred.rejectWith( elem, [ animation, gotoEnd ] );
					}
					return this;
				}
			} ),
			props = animation.props;

		propFilter( props, animation.opts.specialEasing );

		for ( ; index < length ; index++ ) {
			result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
			if ( result ) {
				if ( jQuery.isFunction( result.stop ) ) {
					jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
						jQuery.proxy( result.stop, result );
				}
				return result;
			}
		}

		jQuery.map( props, createTween, animation );

		if ( jQuery.isFunction( animation.opts.start ) ) {
			animation.opts.start.call( elem, animation );
		}

		jQuery.fx.timer(
			jQuery.extend( tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			} )
		);

		// attach callbacks from options
		return animation.progress( animation.opts.progress )
			.done( animation.opts.done, animation.opts.complete )
			.fail( animation.opts.fail )
			.always( animation.opts.always );
	}

	jQuery.Animation = jQuery.extend( Animation, {

		tweeners: {
			"*": [ function( prop, value ) {
				var tween = this.createTween( prop, value );
				adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
				return tween;
			} ]
		},

		tweener: function( props, callback ) {
			if ( jQuery.isFunction( props ) ) {
				callback = props;
				props = [ "*" ];
			} else {
				props = props.match( rnotwhite );
			}

			var prop,
				index = 0,
				length = props.length;

			for ( ; index < length ; index++ ) {
				prop = props[ index ];
				Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
				Animation.tweeners[ prop ].unshift( callback );
			}
		},

		prefilters: [ defaultPrefilter ],

		prefilter: function( callback, prepend ) {
			if ( prepend ) {
				Animation.prefilters.unshift( callback );
			} else {
				Animation.prefilters.push( callback );
			}
		}
	} );

	jQuery.speed = function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ?
				jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function() {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			}
		};

		return opt;
	};

	jQuery.fn.extend( {
		fadeTo: function( speed, to, easing, callback ) {

			// show any hidden elements after setting opacity to 0
			return this.filter( isHidden ).css( "opacity", 0 ).show()

				// animate to the value specified
				.end().animate( { opacity: to }, speed, easing, callback );
		},
		animate: function( prop, speed, easing, callback ) {
			var empty = jQuery.isEmptyObject( prop ),
				optall = jQuery.speed( speed, easing, callback ),
				doAnimation = function() {

					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation( this, jQuery.extend( {}, prop ), optall );

					// Empty animations, or finishing resolves immediately
					if ( empty || jQuery._data( this, "finish" ) ) {
						anim.stop( true );
					}
				};
				doAnimation.finish = doAnimation;

			return empty || optall.queue === false ?
				this.each( doAnimation ) :
				this.queue( optall.queue, doAnimation );
		},
		stop: function( type, clearQueue, gotoEnd ) {
			var stopQueue = function( hooks ) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop( gotoEnd );
			};

			if ( typeof type !== "string" ) {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if ( clearQueue && type !== false ) {
				this.queue( type || "fx", [] );
			}

			return this.each( function() {
				var dequeue = true,
					index = type != null && type + "queueHooks",
					timers = jQuery.timers,
					data = jQuery._data( this );

				if ( index ) {
					if ( data[ index ] && data[ index ].stop ) {
						stopQueue( data[ index ] );
					}
				} else {
					for ( index in data ) {
						if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
							stopQueue( data[ index ] );
						}
					}
				}

				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this &&
						( type == null || timers[ index ].queue === type ) ) {

						timers[ index ].anim.stop( gotoEnd );
						dequeue = false;
						timers.splice( index, 1 );
					}
				}

				// start the next in the queue if the last step wasn't forced
				// timers currently will call their complete callbacks, which will dequeue
				// but only if they were gotoEnd
				if ( dequeue || !gotoEnd ) {
					jQuery.dequeue( this, type );
				}
			} );
		},
		finish: function( type ) {
			if ( type !== false ) {
				type = type || "fx";
			}
			return this.each( function() {
				var index,
					data = jQuery._data( this ),
					queue = data[ type + "queue" ],
					hooks = data[ type + "queueHooks" ],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;

				// enable finishing flag on private data
				data.finish = true;

				// empty the queue first
				jQuery.queue( this, type, [] );

				if ( hooks && hooks.stop ) {
					hooks.stop.call( this, true );
				}

				// look for any active animations, and finish them
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
						timers[ index ].anim.stop( true );
						timers.splice( index, 1 );
					}
				}

				// look for any animations in the old queue and finish them
				for ( index = 0; index < length; index++ ) {
					if ( queue[ index ] && queue[ index ].finish ) {
						queue[ index ].finish.call( this );
					}
				}

				// turn off finishing flag
				delete data.finish;
			} );
		}
	} );

	jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
		var cssFn = jQuery.fn[ name ];
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return speed == null || typeof speed === "boolean" ?
				cssFn.apply( this, arguments ) :
				this.animate( genFx( name, true ), speed, easing, callback );
		};
	} );

	// Generate shortcuts for custom animations
	jQuery.each( {
		slideDown: genFx( "show" ),
		slideUp: genFx( "hide" ),
		slideToggle: genFx( "toggle" ),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function( name, props ) {
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return this.animate( props, speed, easing, callback );
		};
	} );

	jQuery.timers = [];
	jQuery.fx.tick = function() {
		var timer,
			timers = jQuery.timers,
			i = 0;

		fxNow = jQuery.now();

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];

			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function( timer ) {
		jQuery.timers.push( timer );
		if ( timer() ) {
			jQuery.fx.start();
		} else {
			jQuery.timers.pop();
		}
	};

	jQuery.fx.interval = 13;

	jQuery.fx.start = function() {
		if ( !timerId ) {
			timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
		}
	};

	jQuery.fx.stop = function() {
		window.clearInterval( timerId );
		timerId = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,

		// Default speed
		_default: 400
	};


	// Based off of the plugin by Clint Helfers, with permission.
	// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
	jQuery.fn.delay = function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = window.setTimeout( next, time );
			hooks.stop = function() {
				window.clearTimeout( timeout );
			};
		} );
	};


	( function() {
		var a,
			input = document.createElement( "input" ),
			div = document.createElement( "div" ),
			select = document.createElement( "select" ),
			opt = select.appendChild( document.createElement( "option" ) );

		// Setup
		div = document.createElement( "div" );
		div.setAttribute( "className", "t" );
		div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
		a = div.getElementsByTagName( "a" )[ 0 ];

		// Support: Windows Web Apps (WWA)
		// `type` must use .setAttribute for WWA (#14901)
		input.setAttribute( "type", "checkbox" );
		div.appendChild( input );

		a = div.getElementsByTagName( "a" )[ 0 ];

		// First batch of tests.
		a.style.cssText = "top:1px";

		// Test setAttribute on camelCase class.
		// If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		support.getSetAttribute = div.className !== "t";

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		support.style = /top/.test( a.getAttribute( "style" ) );

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		support.hrefNormalized = a.getAttribute( "href" ) === "/a";

		// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
		support.checkOn = !!input.value;

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		support.optSelected = opt.selected;

		// Tests for enctype support on a form (#6743)
		support.enctype = !!document.createElement( "form" ).enctype;

		// Make sure that the options inside disabled selects aren't marked as disabled
		// (WebKit marks them as disabled)
		select.disabled = true;
		support.optDisabled = !opt.disabled;

		// Support: IE8 only
		// Check if we can trust getAttribute("value")
		input = document.createElement( "input" );
		input.setAttribute( "value", "" );
		support.input = input.getAttribute( "value" ) === "";

		// Check if an input maintains its value after becoming a radio
		input.value = "t";
		input.setAttribute( "type", "radio" );
		support.radioValue = input.value === "t";
	} )();


	var rreturn = /\r/g,
		rspaces = /[\x20\t\r\n\f]+/g;

	jQuery.fn.extend( {
		val: function( value ) {
			var hooks, ret, isFunction,
				elem = this[ 0 ];

			if ( !arguments.length ) {
				if ( elem ) {
					hooks = jQuery.valHooks[ elem.type ] ||
						jQuery.valHooks[ elem.nodeName.toLowerCase() ];

					if (
						hooks &&
						"get" in hooks &&
						( ret = hooks.get( elem, "value" ) ) !== undefined
					) {
						return ret;
					}

					ret = elem.value;

					return typeof ret === "string" ?

						// handle most common string cases
						ret.replace( rreturn, "" ) :

						// handle cases where value is null/undef or number
						ret == null ? "" : ret;
				}

				return;
			}

			isFunction = jQuery.isFunction( value );

			return this.each( function( i ) {
				var val;

				if ( this.nodeType !== 1 ) {
					return;
				}

				if ( isFunction ) {
					val = value.call( this, i, jQuery( this ).val() );
				} else {
					val = value;
				}

				// Treat null/undefined as ""; convert numbers to string
				if ( val == null ) {
					val = "";
				} else if ( typeof val === "number" ) {
					val += "";
				} else if ( jQuery.isArray( val ) ) {
					val = jQuery.map( val, function( value ) {
						return value == null ? "" : value + "";
					} );
				}

				hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

				// If set returns undefined, fall back to normal setting
				if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
					this.value = val;
				}
			} );
		}
	} );

	jQuery.extend( {
		valHooks: {
			option: {
				get: function( elem ) {
					var val = jQuery.find.attr( elem, "value" );
					return val != null ?
						val :

						// Support: IE10-11+
						// option.text throws exceptions (#14686, #14858)
						// Strip and collapse whitespace
						// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
						jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
				}
			},
			select: {
				get: function( elem ) {
					var value, option,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === "select-one" || index < 0,
						values = one ? null : [],
						max = one ? index + 1 : options.length,
						i = index < 0 ?
							max :
							one ? index : 0;

					// Loop through all the selected options
					for ( ; i < max; i++ ) {
						option = options[ i ];

						// oldIE doesn't update selected after form reset (#2551)
						if ( ( option.selected || i === index ) &&

								// Don't return options that are disabled or in a disabled optgroup
								( support.optDisabled ?
									!option.disabled :
									option.getAttribute( "disabled" ) === null ) &&
								( !option.parentNode.disabled ||
									!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

							// Get the specific value for the option
							value = jQuery( option ).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				},

				set: function( elem, value ) {
					var optionSet, option,
						options = elem.options,
						values = jQuery.makeArray( value ),
						i = options.length;

					while ( i-- ) {
						option = options[ i ];

						if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1 ) {

							// Support: IE6
							// When new option element is added to select box we need to
							// force reflow of newly added node in order to workaround delay
							// of initialization properties
							try {
								option.selected = optionSet = true;

							} catch ( _ ) {

								// Will be executed only in IE6
								option.scrollHeight;
							}

						} else {
							option.selected = false;
						}
					}

					// Force browsers to behave consistently when non-matching value is set
					if ( !optionSet ) {
						elem.selectedIndex = -1;
					}

					return options;
				}
			}
		}
	} );

	// Radios and checkboxes getter/setter
	jQuery.each( [ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			set: function( elem, value ) {
				if ( jQuery.isArray( value ) ) {
					return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
				}
			}
		};
		if ( !support.checkOn ) {
			jQuery.valHooks[ this ].get = function( elem ) {
				return elem.getAttribute( "value" ) === null ? "on" : elem.value;
			};
		}
	} );




	var nodeHook, boolHook,
		attrHandle = jQuery.expr.attrHandle,
		ruseDefault = /^(?:checked|selected)$/i,
		getSetAttribute = support.getSetAttribute,
		getSetInput = support.input;

	jQuery.fn.extend( {
		attr: function( name, value ) {
			return access( this, jQuery.attr, name, value, arguments.length > 1 );
		},

		removeAttr: function( name ) {
			return this.each( function() {
				jQuery.removeAttr( this, name );
			} );
		}
	} );

	jQuery.extend( {
		attr: function( elem, name, value ) {
			var ret, hooks,
				nType = elem.nodeType;

			// Don't get/set attributes on text, comment and attribute nodes
			if ( nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			// Fallback to prop when attributes are not supported
			if ( typeof elem.getAttribute === "undefined" ) {
				return jQuery.prop( elem, name, value );
			}

			// All attributes are lowercase
			// Grab necessary hook if one is defined
			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
				name = name.toLowerCase();
				hooks = jQuery.attrHooks[ name ] ||
					( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
			}

			if ( value !== undefined ) {
				if ( value === null ) {
					jQuery.removeAttr( elem, name );
					return;
				}

				if ( hooks && "set" in hooks &&
					( ret = hooks.set( elem, value, name ) ) !== undefined ) {
					return ret;
				}

				elem.setAttribute( name, value + "" );
				return value;
			}

			if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
				return ret;
			}

			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ? undefined : ret;
		},

		attrHooks: {
			type: {
				set: function( elem, value ) {
					if ( !support.radioValue && value === "radio" &&
						jQuery.nodeName( elem, "input" ) ) {

						// Setting the type on a radio button after the value resets the value in IE8-9
						// Reset value to default in case type is set after value during creation
						var val = elem.value;
						elem.setAttribute( "type", value );
						if ( val ) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		},

		removeAttr: function( elem, value ) {
			var name, propName,
				i = 0,
				attrNames = value && value.match( rnotwhite );

			if ( attrNames && elem.nodeType === 1 ) {
				while ( ( name = attrNames[ i++ ] ) ) {
					propName = jQuery.propFix[ name ] || name;

					// Boolean attributes get special treatment (#10870)
					if ( jQuery.expr.match.bool.test( name ) ) {

						// Set corresponding property to false
						if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
							elem[ propName ] = false;

						// Support: IE<9
						// Also clear defaultChecked/defaultSelected (if appropriate)
						} else {
							elem[ jQuery.camelCase( "default-" + name ) ] =
								elem[ propName ] = false;
						}

					// See #9699 for explanation of this approach (setting first, then removal)
					} else {
						jQuery.attr( elem, name, "" );
					}

					elem.removeAttribute( getSetAttribute ? name : propName );
				}
			}
		}
	} );

	// Hooks for boolean attributes
	boolHook = {
		set: function( elem, value, name ) {
			if ( value === false ) {

				// Remove boolean attributes when set to false
				jQuery.removeAttr( elem, name );
			} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {

				// IE<8 needs the *property* name
				elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

			} else {

				// Support: IE<9
				// Use defaultChecked and defaultSelected for oldIE
				elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
			}
			return name;
		}
	};

	jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
		var getter = attrHandle[ name ] || jQuery.find.attr;

		if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
			attrHandle[ name ] = function( elem, name, isXML ) {
				var ret, handle;
				if ( !isXML ) {

					// Avoid an infinite loop by temporarily removing this function from the getter
					handle = attrHandle[ name ];
					attrHandle[ name ] = ret;
					ret = getter( elem, name, isXML ) != null ?
						name.toLowerCase() :
						null;
					attrHandle[ name ] = handle;
				}
				return ret;
			};
		} else {
			attrHandle[ name ] = function( elem, name, isXML ) {
				if ( !isXML ) {
					return elem[ jQuery.camelCase( "default-" + name ) ] ?
						name.toLowerCase() :
						null;
				}
			};
		}
	} );

	// fix oldIE attroperties
	if ( !getSetInput || !getSetAttribute ) {
		jQuery.attrHooks.value = {
			set: function( elem, value, name ) {
				if ( jQuery.nodeName( elem, "input" ) ) {

					// Does not return so that setAttribute is also used
					elem.defaultValue = value;
				} else {

					// Use nodeHook if defined (#1954); otherwise setAttribute is fine
					return nodeHook && nodeHook.set( elem, value, name );
				}
			}
		};
	}

	// IE6/7 do not support getting/setting some attributes with get/setAttribute
	if ( !getSetAttribute ) {

		// Use this for any attribute in IE6/7
		// This fixes almost every IE6/7 issue
		nodeHook = {
			set: function( elem, value, name ) {

				// Set the existing or create a new attribute node
				var ret = elem.getAttributeNode( name );
				if ( !ret ) {
					elem.setAttributeNode(
						( ret = elem.ownerDocument.createAttribute( name ) )
					);
				}

				ret.value = value += "";

				// Break association with cloned elements by also using setAttribute (#9646)
				if ( name === "value" || value === elem.getAttribute( name ) ) {
					return value;
				}
			}
		};

		// Some attributes are constructed with empty-string values when not defined
		attrHandle.id = attrHandle.name = attrHandle.coords =
			function( elem, name, isXML ) {
				var ret;
				if ( !isXML ) {
					return ( ret = elem.getAttributeNode( name ) ) && ret.value !== "" ?
						ret.value :
						null;
				}
			};

		// Fixing value retrieval on a button requires this module
		jQuery.valHooks.button = {
			get: function( elem, name ) {
				var ret = elem.getAttributeNode( name );
				if ( ret && ret.specified ) {
					return ret.value;
				}
			},
			set: nodeHook.set
		};

		// Set contenteditable to false on removals(#10429)
		// Setting to empty string throws an error as an invalid value
		jQuery.attrHooks.contenteditable = {
			set: function( elem, value, name ) {
				nodeHook.set( elem, value === "" ? false : value, name );
			}
		};

		// Set width and height to auto instead of 0 on empty string( Bug #8150 )
		// This is for removals
		jQuery.each( [ "width", "height" ], function( i, name ) {
			jQuery.attrHooks[ name ] = {
				set: function( elem, value ) {
					if ( value === "" ) {
						elem.setAttribute( name, "auto" );
						return value;
					}
				}
			};
		} );
	}

	if ( !support.style ) {
		jQuery.attrHooks.style = {
			get: function( elem ) {

				// Return undefined in the case of empty string
				// Note: IE uppercases css property names, but if we were to .toLowerCase()
				// .cssText, that would destroy case sensitivity in URL's, like in "background"
				return elem.style.cssText || undefined;
			},
			set: function( elem, value ) {
				return ( elem.style.cssText = value + "" );
			}
		};
	}




	var rfocusable = /^(?:input|select|textarea|button|object)$/i,
		rclickable = /^(?:a|area)$/i;

	jQuery.fn.extend( {
		prop: function( name, value ) {
			return access( this, jQuery.prop, name, value, arguments.length > 1 );
		},

		removeProp: function( name ) {
			name = jQuery.propFix[ name ] || name;
			return this.each( function() {

				// try/catch handles cases where IE balks (such as removing a property on window)
				try {
					this[ name ] = undefined;
					delete this[ name ];
				} catch ( e ) {}
			} );
		}
	} );

	jQuery.extend( {
		prop: function( elem, name, value ) {
			var ret, hooks,
				nType = elem.nodeType;

			// Don't get/set properties on text, comment and attribute nodes
			if ( nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

				// Fix name and attach hooks
				name = jQuery.propFix[ name ] || name;
				hooks = jQuery.propHooks[ name ];
			}

			if ( value !== undefined ) {
				if ( hooks && "set" in hooks &&
					( ret = hooks.set( elem, value, name ) ) !== undefined ) {
					return ret;
				}

				return ( elem[ name ] = value );
			}

			if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
				return ret;
			}

			return elem[ name ];
		},

		propHooks: {
			tabIndex: {
				get: function( elem ) {

					// elem.tabIndex doesn't always return the
					// correct value when it hasn't been explicitly set
					// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
					// Use proper attribute retrieval(#12072)
					var tabindex = jQuery.find.attr( elem, "tabindex" );

					return tabindex ?
						parseInt( tabindex, 10 ) :
						rfocusable.test( elem.nodeName ) ||
							rclickable.test( elem.nodeName ) && elem.href ?
								0 :
								-1;
				}
			}
		},

		propFix: {
			"for": "htmlFor",
			"class": "className"
		}
	} );

	// Some attributes require a special call on IE
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	if ( !support.hrefNormalized ) {

		// href/src property should get the full normalized URL (#10299/#12915)
		jQuery.each( [ "href", "src" ], function( i, name ) {
			jQuery.propHooks[ name ] = {
				get: function( elem ) {
					return elem.getAttribute( name, 4 );
				}
			};
		} );
	}

	// Support: Safari, IE9+
	// Accessing the selectedIndex property
	// forces the browser to respect setting selected
	// on the option
	// The getter ensures a default option is selected
	// when in an optgroup
	if ( !support.optSelected ) {
		jQuery.propHooks.selected = {
			get: function( elem ) {
				var parent = elem.parentNode;

				if ( parent ) {
					parent.selectedIndex;

					// Make sure that it also works with optgroups, see #5701
					if ( parent.parentNode ) {
						parent.parentNode.selectedIndex;
					}
				}
				return null;
			},
			set: function( elem ) {
				var parent = elem.parentNode;
				if ( parent ) {
					parent.selectedIndex;

					if ( parent.parentNode ) {
						parent.parentNode.selectedIndex;
					}
				}
			}
		};
	}

	jQuery.each( [
		"tabIndex",
		"readOnly",
		"maxLength",
		"cellSpacing",
		"cellPadding",
		"rowSpan",
		"colSpan",
		"useMap",
		"frameBorder",
		"contentEditable"
	], function() {
		jQuery.propFix[ this.toLowerCase() ] = this;
	} );

	// IE6/7 call enctype encoding
	if ( !support.enctype ) {
		jQuery.propFix.enctype = "encoding";
	}




	var rclass = /[\t\r\n\f]/g;

	function getClass( elem ) {
		return jQuery.attr( elem, "class" ) || "";
	}

	jQuery.fn.extend( {
		addClass: function( value ) {
			var classes, elem, cur, curValue, clazz, j, finalValue,
				i = 0;

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( j ) {
					jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
				} );
			}

			if ( typeof value === "string" && value ) {
				classes = value.match( rnotwhite ) || [];

				while ( ( elem = this[ i++ ] ) ) {
					curValue = getClass( elem );
					cur = elem.nodeType === 1 &&
						( " " + curValue + " " ).replace( rclass, " " );

					if ( cur ) {
						j = 0;
						while ( ( clazz = classes[ j++ ] ) ) {
							if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
								cur += clazz + " ";
							}
						}

						// only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( curValue !== finalValue ) {
							jQuery.attr( elem, "class", finalValue );
						}
					}
				}
			}

			return this;
		},

		removeClass: function( value ) {
			var classes, elem, cur, curValue, clazz, j, finalValue,
				i = 0;

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( j ) {
					jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
				} );
			}

			if ( !arguments.length ) {
				return this.attr( "class", "" );
			}

			if ( typeof value === "string" && value ) {
				classes = value.match( rnotwhite ) || [];

				while ( ( elem = this[ i++ ] ) ) {
					curValue = getClass( elem );

					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 &&
						( " " + curValue + " " ).replace( rclass, " " );

					if ( cur ) {
						j = 0;
						while ( ( clazz = classes[ j++ ] ) ) {

							// Remove *all* instances
							while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
								cur = cur.replace( " " + clazz + " ", " " );
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( curValue !== finalValue ) {
							jQuery.attr( elem, "class", finalValue );
						}
					}
				}
			}

			return this;
		},

		toggleClass: function( value, stateVal ) {
			var type = typeof value;

			if ( typeof stateVal === "boolean" && type === "string" ) {
				return stateVal ? this.addClass( value ) : this.removeClass( value );
			}

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( i ) {
					jQuery( this ).toggleClass(
						value.call( this, i, getClass( this ), stateVal ),
						stateVal
					);
				} );
			}

			return this.each( function() {
				var className, i, self, classNames;

				if ( type === "string" ) {

					// Toggle individual class names
					i = 0;
					self = jQuery( this );
					classNames = value.match( rnotwhite ) || [];

					while ( ( className = classNames[ i++ ] ) ) {

						// Check each className given, space separated list
						if ( self.hasClass( className ) ) {
							self.removeClass( className );
						} else {
							self.addClass( className );
						}
					}

				// Toggle whole class name
				} else if ( value === undefined || type === "boolean" ) {
					className = getClass( this );
					if ( className ) {

						// store className if set
						jQuery._data( this, "__className__", className );
					}

					// If the element has a class name or if we're passed "false",
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					jQuery.attr( this, "class",
						className || value === false ?
						"" :
						jQuery._data( this, "__className__" ) || ""
					);
				}
			} );
		},

		hasClass: function( selector ) {
			var className, elem,
				i = 0;

			className = " " + selector + " ";
			while ( ( elem = this[ i++ ] ) ) {
				if ( elem.nodeType === 1 &&
					( " " + getClass( elem ) + " " ).replace( rclass, " " )
						.indexOf( className ) > -1
				) {
					return true;
				}
			}

			return false;
		}
	} );




	// Return jQuery for attributes-only inclusion


	jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
		"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
		function( i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	} );

	jQuery.fn.extend( {
		hover: function( fnOver, fnOut ) {
			return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
		}
	} );


	var location = window.location;

	var nonce = jQuery.now();

	var rquery = ( /\?/ );



	var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

	jQuery.parseJSON = function( data ) {

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {

			// Support: Android 2.3
			// Workaround failure to string-cast null input
			return window.JSON.parse( data + "" );
		}

		var requireNonComma,
			depth = null,
			str = jQuery.trim( data + "" );

		// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
		// after removing valid tokens
		return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

			// Force termination if we see a misplaced comma
			if ( requireNonComma && comma ) {
				depth = 0;
			}

			// Perform no more replacements after returning to outermost depth
			if ( depth === 0 ) {
				return token;
			}

			// Commas must not follow "[", "{", or ","
			requireNonComma = open || comma;

			// Determine new depth
			// array/object open ("[" or "{"): depth += true - false (increment)
			// array/object close ("]" or "}"): depth += false - true (decrement)
			// other cases ("," or primitive): depth += true - true (numeric cast)
			depth += !close - !open;

			// Remove this token
			return "";
		} ) ) ?
			( Function( "return " + str ) )() :
			jQuery.error( "Invalid JSON: " + data );
	};


	// Cross-browser xml parsing
	jQuery.parseXML = function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new window.DOMParser();
				xml = tmp.parseFromString( data, "text/xml" );
			} else { // IE
				xml = new window.ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch ( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	};


	var
		rhash = /#.*$/,
		rts = /([?&])_=[^&]*/,

		// IE leaves an \r character at EOL
		rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,

		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,
		rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},

		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},

		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = "*/".concat( "*" ),

		// Document location
		ajaxLocation = location.href,

		// Segment location into parts
		ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports( structure ) {

		// dataTypeExpression is optional and defaults to "*"
		return function( dataTypeExpression, func ) {

			if ( typeof dataTypeExpression !== "string" ) {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}

			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

			if ( jQuery.isFunction( func ) ) {

				// For each dataType in the dataTypeExpression
				while ( ( dataType = dataTypes[ i++ ] ) ) {

					// Prepend if requested
					if ( dataType.charAt( 0 ) === "+" ) {
						dataType = dataType.slice( 1 ) || "*";
						( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

					// Otherwise append
					} else {
						( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
					}
				}
			}
		};
	}

	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

		var inspected = {},
			seekingTransport = ( structure === transports );

		function inspect( dataType ) {
			var selected;
			inspected[ dataType ] = true;
			jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
				var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
				if ( typeof dataTypeOrTransport === "string" &&
					!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

					options.dataTypes.unshift( dataTypeOrTransport );
					inspect( dataTypeOrTransport );
					return false;
				} else if ( seekingTransport ) {
					return !( selected = dataTypeOrTransport );
				}
			} );
			return selected;
		}

		return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
	}

	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend( target, src ) {
		var deep, key,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for ( key in src ) {
			if ( src[ key ] !== undefined ) {
				( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
			}
		}
		if ( deep ) {
			jQuery.extend( true, target, deep );
		}

		return target;
	}

	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses( s, jqXHR, responses ) {
		var firstDataType, ct, finalDataType, type,
			contents = s.contents,
			dataTypes = s.dataTypes;

		// Remove auto dataType and get content-type in the process
		while ( dataTypes[ 0 ] === "*" ) {
			dataTypes.shift();
			if ( ct === undefined ) {
				ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
			}
		}

		// Check if we're dealing with a known content-type
		if ( ct ) {
			for ( type in contents ) {
				if ( contents[ type ] && contents[ type ].test( ct ) ) {
					dataTypes.unshift( type );
					break;
				}
			}
		}

		// Check to see if we have a response for the expected dataType
		if ( dataTypes[ 0 ] in responses ) {
			finalDataType = dataTypes[ 0 ];
		} else {

			// Try convertible dataTypes
			for ( type in responses ) {
				if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
					finalDataType = type;
					break;
				}
				if ( !firstDataType ) {
					firstDataType = type;
				}
			}

			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}

		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if ( finalDataType ) {
			if ( finalDataType !== dataTypes[ 0 ] ) {
				dataTypes.unshift( finalDataType );
			}
			return responses[ finalDataType ];
		}
	}

	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert( s, response, jqXHR, isSuccess ) {
		var conv2, current, conv, tmp, prev,
			converters = {},

			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

		// Create converters map with lowercased keys
		if ( dataTypes[ 1 ] ) {
			for ( conv in s.converters ) {
				converters[ conv.toLowerCase() ] = s.converters[ conv ];
			}
		}

		current = dataTypes.shift();

		// Convert to each sequential dataType
		while ( current ) {

			if ( s.responseFields[ current ] ) {
				jqXHR[ s.responseFields[ current ] ] = response;
			}

			// Apply the dataFilter if provided
			if ( !prev && isSuccess && s.dataFilter ) {
				response = s.dataFilter( response, s.dataType );
			}

			prev = current;
			current = dataTypes.shift();

			if ( current ) {

				// There's only work to do if current dataType is non-auto
				if ( current === "*" ) {

					current = prev;

				// Convert response if prev dataType is non-auto and differs from current
				} else if ( prev !== "*" && prev !== current ) {

					// Seek a direct converter
					conv = converters[ prev + " " + current ] || converters[ "* " + current ];

					// If none found, seek a pair
					if ( !conv ) {
						for ( conv2 in converters ) {

							// If conv2 outputs current
							tmp = conv2.split( " " );
							if ( tmp[ 1 ] === current ) {

								// If prev can be converted to accepted input
								conv = converters[ prev + " " + tmp[ 0 ] ] ||
									converters[ "* " + tmp[ 0 ] ];
								if ( conv ) {

									// Condense equivalence converters
									if ( conv === true ) {
										conv = converters[ conv2 ];

									// Otherwise, insert the intermediate dataType
									} else if ( converters[ conv2 ] !== true ) {
										current = tmp[ 0 ];
										dataTypes.unshift( tmp[ 1 ] );
									}
									break;
								}
							}
						}
					}

					// Apply converter (if not an equivalence)
					if ( conv !== true ) {

						// Unless errors are allowed to bubble, catch and return them
						if ( conv && s[ "throws" ] ) { // jscs:ignore requireDotNotation
							response = conv( response );
						} else {
							try {
								response = conv( response );
							} catch ( e ) {
								return {
									state: "parsererror",
									error: conv ? e : "No conversion from " + prev + " to " + current
								};
							}
						}
					}
				}
			}
		}

		return { state: "success", data: response };
	}

	jQuery.extend( {

		// Counter for holding the number of active queries
		active: 0,

		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: ajaxLocation,
			type: "GET",
			isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",
			/*
			timeout: 0,
			data: null,
			dataType: null,
			username: null,
			password: null,
			cache: null,
			throws: false,
			traditional: false,
			headers: {},
			*/

			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},

			contents: {
				xml: /\bxml\b/,
				html: /\bhtml/,
				json: /\bjson\b/
			},

			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},

			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {

				// Convert anything to text
				"* text": String,

				// Text to html (true = no transformation)
				"text html": true,

				// Evaluate text as a json expression
				"text json": jQuery.parseJSON,

				// Parse text as xml
				"text xml": jQuery.parseXML
			},

			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true
			}
		},

		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function( target, settings ) {
			return settings ?

				// Building a settings object
				ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

				// Extending ajaxSettings
				ajaxExtend( jQuery.ajaxSettings, target );
		},

		ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
		ajaxTransport: addToPrefiltersOrTransports( transports ),

		// Main method
		ajax: function( url, options ) {

			// If url is an object, simulate pre-1.5 signature
			if ( typeof url === "object" ) {
				options = url;
				url = undefined;
			}

			// Force options to be an object
			options = options || {};

			var

				// Cross-domain detection vars
				parts,

				// Loop variable
				i,

				// URL without anti-cache param
				cacheURL,

				// Response headers as string
				responseHeadersString,

				// timeout handle
				timeoutTimer,

				// To know if global events are to be dispatched
				fireGlobals,

				transport,

				// Response headers
				responseHeaders,

				// Create the final options object
				s = jQuery.ajaxSetup( {}, options ),

				// Callbacks context
				callbackContext = s.context || s,

				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context &&
					( callbackContext.nodeType || callbackContext.jquery ) ?
						jQuery( callbackContext ) :
						jQuery.event,

				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks( "once memory" ),

				// Status-dependent callbacks
				statusCode = s.statusCode || {},

				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},

				// The jqXHR state
				state = 0,

				// Default abort message
				strAbort = "canceled",

				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function( key ) {
						var match;
						if ( state === 2 ) {
							if ( !responseHeaders ) {
								responseHeaders = {};
								while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
									responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
								}
							}
							match = responseHeaders[ key.toLowerCase() ];
						}
						return match == null ? null : match;
					},

					// Raw string
					getAllResponseHeaders: function() {
						return state === 2 ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function( name, value ) {
						var lname = name.toLowerCase();
						if ( !state ) {
							name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
							requestHeaders[ name ] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function( type ) {
						if ( !state ) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function( map ) {
						var code;
						if ( map ) {
							if ( state < 2 ) {
								for ( code in map ) {

									// Lazy-add the new callback in a way that preserves old ones
									statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
								}
							} else {

								// Execute the appropriate callbacks
								jqXHR.always( map[ jqXHR.status ] );
							}
						}
						return this;
					},

					// Cancel the request
					abort: function( statusText ) {
						var finalText = statusText || strAbort;
						if ( transport ) {
							transport.abort( finalText );
						}
						done( 0, finalText );
						return this;
					}
				};

			// Attach deferreds
			deferred.promise( jqXHR ).complete = completeDeferred.add;
			jqXHR.success = jqXHR.done;
			jqXHR.error = jqXHR.fail;

			// Remove hash character (#7531: and string promotion)
			// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ( ( url || s.url || ajaxLocation ) + "" )
				.replace( rhash, "" )
				.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;

			// Extract dataTypes list
			s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

			// A cross-domain request is in order when we have a protocol:host:port mismatch
			if ( s.crossDomain == null ) {
				parts = rurl.exec( s.url.toLowerCase() );
				s.crossDomain = !!( parts &&
					( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
						( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
							( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
				);
			}

			// Convert data if not already a string
			if ( s.data && s.processData && typeof s.data !== "string" ) {
				s.data = jQuery.param( s.data, s.traditional );
			}

			// Apply prefilters
			inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

			// If request was aborted inside a prefilter, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// We can fire global events as of now if asked to
			// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
			fireGlobals = jQuery.event && s.global;

			// Watch for a new set of requests
			if ( fireGlobals && jQuery.active++ === 0 ) {
				jQuery.event.trigger( "ajaxStart" );
			}

			// Uppercase the type
			s.type = s.type.toUpperCase();

			// Determine if request has content
			s.hasContent = !rnoContent.test( s.type );

			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			cacheURL = s.url;

			// More options handling for requests with no content
			if ( !s.hasContent ) {

				// If data is available, append data to url
				if ( s.data ) {
					cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}

				// Add anti-cache in url if needed
				if ( s.cache === false ) {
					s.url = rts.test( cacheURL ) ?

						// If there is already a '_' parameter, set its value
						cacheURL.replace( rts, "$1_=" + nonce++ ) :

						// Otherwise add one to the end
						cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
				}
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
				}
				if ( jQuery.etag[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
				}
			}

			// Set the correct header, if data is being sent
			if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
				jqXHR.setRequestHeader( "Content-Type", s.contentType );
			}

			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				"Accept",
				s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
					s.accepts[ s.dataTypes[ 0 ] ] +
						( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
					s.accepts[ "*" ]
			);

			// Check for headers option
			for ( i in s.headers ) {
				jqXHR.setRequestHeader( i, s.headers[ i ] );
			}

			// Allow custom headers/mimetypes and early abort
			if ( s.beforeSend &&
				( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

				// Abort if not done already and return
				return jqXHR.abort();
			}

			// aborting is no longer a cancellation
			strAbort = "abort";

			// Install callbacks on deferreds
			for ( i in { success: 1, error: 1, complete: 1 } ) {
				jqXHR[ i ]( s[ i ] );
			}

			// Get transport
			transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

			// If no transport, we auto-abort
			if ( !transport ) {
				done( -1, "No Transport" );
			} else {
				jqXHR.readyState = 1;

				// Send global event
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
				}

				// If request was aborted inside ajaxSend, stop there
				if ( state === 2 ) {
					return jqXHR;
				}

				// Timeout
				if ( s.async && s.timeout > 0 ) {
					timeoutTimer = window.setTimeout( function() {
						jqXHR.abort( "timeout" );
					}, s.timeout );
				}

				try {
					state = 1;
					transport.send( requestHeaders, done );
				} catch ( e ) {

					// Propagate exception as error if not done
					if ( state < 2 ) {
						done( -1, e );

					// Simply rethrow otherwise
					} else {
						throw e;
					}
				}
			}

			// Callback for when everything is done
			function done( status, nativeStatusText, responses, headers ) {
				var isSuccess, success, error, response, modified,
					statusText = nativeStatusText;

				// Called once
				if ( state === 2 ) {
					return;
				}

				// State is "done" now
				state = 2;

				// Clear timeout if it exists
				if ( timeoutTimer ) {
					window.clearTimeout( timeoutTimer );
				}

				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;

				// Cache response headers
				responseHeadersString = headers || "";

				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;

				// Determine if successful
				isSuccess = status >= 200 && status < 300 || status === 304;

				// Get response data
				if ( responses ) {
					response = ajaxHandleResponses( s, jqXHR, responses );
				}

				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert( s, response, jqXHR, isSuccess );

				// If successful, handle type chaining
				if ( isSuccess ) {

					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if ( s.ifModified ) {
						modified = jqXHR.getResponseHeader( "Last-Modified" );
						if ( modified ) {
							jQuery.lastModified[ cacheURL ] = modified;
						}
						modified = jqXHR.getResponseHeader( "etag" );
						if ( modified ) {
							jQuery.etag[ cacheURL ] = modified;
						}
					}

					// if no content
					if ( status === 204 || s.type === "HEAD" ) {
						statusText = "nocontent";

					// if not modified
					} else if ( status === 304 ) {
						statusText = "notmodified";

					// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {

					// We extract error from statusText
					// then normalize statusText and status for non-aborts
					error = statusText;
					if ( status || !statusText ) {
						statusText = "error";
						if ( status < 0 ) {
							status = 0;
						}
					}
				}

				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = ( nativeStatusText || statusText ) + "";

				// Success/Error
				if ( isSuccess ) {
					deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
				} else {
					deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
				}

				// Status-dependent callbacks
				jqXHR.statusCode( statusCode );
				statusCode = undefined;

				if ( fireGlobals ) {
					globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
						[ jqXHR, s, isSuccess ? success : error ] );
				}

				// Complete
				completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

					// Handle the global AJAX counter
					if ( !( --jQuery.active ) ) {
						jQuery.event.trigger( "ajaxStop" );
					}
				}
			}

			return jqXHR;
		},

		getJSON: function( url, data, callback ) {
			return jQuery.get( url, data, callback, "json" );
		},

		getScript: function( url, callback ) {
			return jQuery.get( url, undefined, callback, "script" );
		}
	} );

	jQuery.each( [ "get", "post" ], function( i, method ) {
		jQuery[ method ] = function( url, data, callback, type ) {

			// shift arguments if data argument was omitted
			if ( jQuery.isFunction( data ) ) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			// The url can be an options object (which then must have .url)
			return jQuery.ajax( jQuery.extend( {
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			}, jQuery.isPlainObject( url ) && url ) );
		};
	} );


	jQuery._evalUrl = function( url ) {
		return jQuery.ajax( {
			url: url,

			// Make this explicit, since user can override this through ajaxSetup (#11264)
			type: "GET",
			dataType: "script",
			cache: true,
			async: false,
			global: false,
			"throws": true
		} );
	};


	jQuery.fn.extend( {
		wrapAll: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each( function( i ) {
					jQuery( this ).wrapAll( html.call( this, i ) );
				} );
			}

			if ( this[ 0 ] ) {

				// The elements to wrap the target around
				var wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

				if ( this[ 0 ].parentNode ) {
					wrap.insertBefore( this[ 0 ] );
				}

				wrap.map( function() {
					var elem = this;

					while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
						elem = elem.firstChild;
					}

					return elem;
				} ).append( this );
			}

			return this;
		},

		wrapInner: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each( function( i ) {
					jQuery( this ).wrapInner( html.call( this, i ) );
				} );
			}

			return this.each( function() {
				var self = jQuery( this ),
					contents = self.contents();

				if ( contents.length ) {
					contents.wrapAll( html );

				} else {
					self.append( html );
				}
			} );
		},

		wrap: function( html ) {
			var isFunction = jQuery.isFunction( html );

			return this.each( function( i ) {
				jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
			} );
		},

		unwrap: function() {
			return this.parent().each( function() {
				if ( !jQuery.nodeName( this, "body" ) ) {
					jQuery( this ).replaceWith( this.childNodes );
				}
			} ).end();
		}
	} );


	function getDisplay( elem ) {
		return elem.style && elem.style.display || jQuery.css( elem, "display" );
	}

	function filterHidden( elem ) {

		// Disconnected elements are considered hidden
		if ( !jQuery.contains( elem.ownerDocument || document, elem ) ) {
			return true;
		}
		while ( elem && elem.nodeType === 1 ) {
			if ( getDisplay( elem ) === "none" || elem.type === "hidden" ) {
				return true;
			}
			elem = elem.parentNode;
		}
		return false;
	}

	jQuery.expr.filters.hidden = function( elem ) {

		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		return support.reliableHiddenOffsets() ?
			( elem.offsetWidth <= 0 && elem.offsetHeight <= 0 &&
				!elem.getClientRects().length ) :
				filterHidden( elem );
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};




	var r20 = /%20/g,
		rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;

	function buildParams( prefix, obj, traditional, add ) {
		var name;

		if ( jQuery.isArray( obj ) ) {

			// Serialize array item.
			jQuery.each( obj, function( i, v ) {
				if ( traditional || rbracket.test( prefix ) ) {

					// Treat each array item as a scalar.
					add( prefix, v );

				} else {

					// Item is non-scalar (array or object), encode its numeric index.
					buildParams(
						prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
						v,
						traditional,
						add
					);
				}
			} );

		} else if ( !traditional && jQuery.type( obj ) === "object" ) {

			// Serialize object item.
			for ( name in obj ) {
				buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
			}

		} else {

			// Serialize scalar item.
			add( prefix, obj );
		}
	}

	// Serialize an array of form elements or a set of
	// key/values into a query string
	jQuery.param = function( a, traditional ) {
		var prefix,
			s = [],
			add = function( key, value ) {

				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			} );

		} else {

			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	};

	jQuery.fn.extend( {
		serialize: function() {
			return jQuery.param( this.serializeArray() );
		},
		serializeArray: function() {
			return this.map( function() {

				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop( this, "elements" );
				return elements ? jQuery.makeArray( elements ) : this;
			} )
			.filter( function() {
				var type = this.type;

				// Use .is(":disabled") so that fieldset[disabled] works
				return this.name && !jQuery( this ).is( ":disabled" ) &&
					rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
					( this.checked || !rcheckableType.test( type ) );
			} )
			.map( function( i, elem ) {
				var val = jQuery( this ).val();

				return val == null ?
					null :
					jQuery.isArray( val ) ?
						jQuery.map( val, function( val ) {
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						} ) :
						{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
			} ).get();
		}
	} );


	// Create the request object
	// (This is still attached to ajaxSettings for backward compatibility)
	jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?

		// Support: IE6-IE8
		function() {

			// XHR cannot access local files, always use ActiveX for that case
			if ( this.isLocal ) {
				return createActiveXHR();
			}

			// Support: IE 9-11
			// IE seems to error on cross-domain PATCH requests when ActiveX XHR
			// is used. In IE 9+ always use the native XHR.
			// Note: this condition won't catch Edge as it doesn't define
			// document.documentMode but it also doesn't support ActiveX so it won't
			// reach this code.
			if ( document.documentMode > 8 ) {
				return createStandardXHR();
			}

			// Support: IE<9
			// oldIE XHR does not support non-RFC2616 methods (#13240)
			// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
			// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
			// Although this check for six methods instead of eight
			// since IE also does not support "trace" and "connect"
			return /^(get|post|head|put|delete|options)$/i.test( this.type ) &&
				createStandardXHR() || createActiveXHR();
		} :

		// For all other browsers, use the standard XMLHttpRequest object
		createStandardXHR;

	var xhrId = 0,
		xhrCallbacks = {},
		xhrSupported = jQuery.ajaxSettings.xhr();

	// Support: IE<10
	// Open requests must be manually aborted on unload (#5280)
	// See https://support.microsoft.com/kb/2856746 for more info
	if ( window.attachEvent ) {
		window.attachEvent( "onunload", function() {
			for ( var key in xhrCallbacks ) {
				xhrCallbacks[ key ]( undefined, true );
			}
		} );
	}

	// Determine support properties
	support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
	xhrSupported = support.ajax = !!xhrSupported;

	// Create transport if the browser can provide an xhr
	if ( xhrSupported ) {

		jQuery.ajaxTransport( function( options ) {

			// Cross domain only allowed if supported through XMLHttpRequest
			if ( !options.crossDomain || support.cors ) {

				var callback;

				return {
					send: function( headers, complete ) {
						var i,
							xhr = options.xhr(),
							id = ++xhrId;

						// Open the socket
						xhr.open(
							options.type,
							options.url,
							options.async,
							options.username,
							options.password
						);

						// Apply custom fields if provided
						if ( options.xhrFields ) {
							for ( i in options.xhrFields ) {
								xhr[ i ] = options.xhrFields[ i ];
							}
						}

						// Override mime type if needed
						if ( options.mimeType && xhr.overrideMimeType ) {
							xhr.overrideMimeType( options.mimeType );
						}

						// X-Requested-With header
						// For cross-domain requests, seeing as conditions for a preflight are
						// akin to a jigsaw puzzle, we simply never set it to be sure.
						// (it can always be set on a per-request basis or even using ajaxSetup)
						// For same-domain requests, won't change header if already provided.
						if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
							headers[ "X-Requested-With" ] = "XMLHttpRequest";
						}

						// Set headers
						for ( i in headers ) {

							// Support: IE<9
							// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
							// request header to a null-value.
							//
							// To keep consistent with other XHR implementations, cast the value
							// to string and ignore `undefined`.
							if ( headers[ i ] !== undefined ) {
								xhr.setRequestHeader( i, headers[ i ] + "" );
							}
						}

						// Do send the request
						// This may raise an exception which is actually
						// handled in jQuery.ajax (so no try/catch here)
						xhr.send( ( options.hasContent && options.data ) || null );

						// Listener
						callback = function( _, isAbort ) {
							var status, statusText, responses;

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Clean up
								delete xhrCallbacks[ id ];
								callback = undefined;
								xhr.onreadystatechange = jQuery.noop;

								// Abort manually if needed
								if ( isAbort ) {
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									responses = {};
									status = xhr.status;

									// Support: IE<10
									// Accessing binary-data responseText throws an exception
									// (#11426)
									if ( typeof xhr.responseText === "string" ) {
										responses.text = xhr.responseText;
									}

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch ( e ) {

										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && options.isLocal && !options.crossDomain ) {
										status = responses.text ? 200 : 404;

									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}

							// Call complete if needed
							if ( responses ) {
								complete( status, statusText, responses, xhr.getAllResponseHeaders() );
							}
						};

						// Do send the request
						// `xhr.send` may raise an exception, but it will be
						// handled in jQuery.ajax (so no try/catch here)
						if ( !options.async ) {

							// If we're in sync mode we fire the callback
							callback();
						} else if ( xhr.readyState === 4 ) {

							// (IE6 & IE7) if it's in cache and has been
							// retrieved directly we need to fire the callback
							window.setTimeout( callback );
						} else {

							// Register the callback, but delay it in case `xhr.send` throws
							// Add to the list of active xhr callbacks
							xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
						}
					},

					abort: function() {
						if ( callback ) {
							callback( undefined, true );
						}
					}
				};
			}
		} );
	}

	// Functions to create xhrs
	function createStandardXHR() {
		try {
			return new window.XMLHttpRequest();
		} catch ( e ) {}
	}

	function createActiveXHR() {
		try {
			return new window.ActiveXObject( "Microsoft.XMLHTTP" );
		} catch ( e ) {}
	}




	// Install script dataType
	jQuery.ajaxSetup( {
		accepts: {
			script: "text/javascript, application/javascript, " +
				"application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /\b(?:java|ecma)script\b/
		},
		converters: {
			"text script": function( text ) {
				jQuery.globalEval( text );
				return text;
			}
		}
	} );

	// Handle cache's special case and global
	jQuery.ajaxPrefilter( "script", function( s ) {
		if ( s.cache === undefined ) {
			s.cache = false;
		}
		if ( s.crossDomain ) {
			s.type = "GET";
			s.global = false;
		}
	} );

	// Bind script tag hack transport
	jQuery.ajaxTransport( "script", function( s ) {

		// This transport only deals with cross domain requests
		if ( s.crossDomain ) {

			var script,
				head = document.head || jQuery( "head" )[ 0 ] || document.documentElement;

			return {

				send: function( _, callback ) {

					script = document.createElement( "script" );

					script.async = true;

					if ( s.scriptCharset ) {
						script.charset = s.scriptCharset;
					}

					script.src = s.url;

					// Attach handlers for all browsers
					script.onload = script.onreadystatechange = function( _, isAbort ) {

						if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

							// Handle memory leak in IE
							script.onload = script.onreadystatechange = null;

							// Remove the script
							if ( script.parentNode ) {
								script.parentNode.removeChild( script );
							}

							// Dereference the script
							script = null;

							// Callback if not abort
							if ( !isAbort ) {
								callback( 200, "success" );
							}
						}
					};

					// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
					// Use native DOM manipulation to avoid our domManip AJAX trickery
					head.insertBefore( script, head.firstChild );
				},

				abort: function() {
					if ( script ) {
						script.onload( undefined, true );
					}
				}
			};
		}
	} );




	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;

	// Default jsonp settings
	jQuery.ajaxSetup( {
		jsonp: "callback",
		jsonpCallback: function() {
			var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
			this[ callback ] = true;
			return callback;
		}
	} );

	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

		var callbackName, overwritten, responseContainer,
			jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
				"url" :
				typeof s.data === "string" &&
					( s.contentType || "" )
						.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
					rjsonp.test( s.data ) && "data"
			);

		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
				s.jsonpCallback() :
				s.jsonpCallback;

			// Insert callback into url or form data
			if ( jsonProp ) {
				s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
			} else if ( s.jsonp !== false ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
			}

			// Use data converter to retrieve json after script execution
			s.converters[ "script json" ] = function() {
				if ( !responseContainer ) {
					jQuery.error( callbackName + " was not called" );
				}
				return responseContainer[ 0 ];
			};

			// force json dataType
			s.dataTypes[ 0 ] = "json";

			// Install callback
			overwritten = window[ callbackName ];
			window[ callbackName ] = function() {
				responseContainer = arguments;
			};

			// Clean-up function (fires after converters)
			jqXHR.always( function() {

				// If previous value didn't exist - remove it
				if ( overwritten === undefined ) {
					jQuery( window ).removeProp( callbackName );

				// Otherwise restore preexisting value
				} else {
					window[ callbackName ] = overwritten;
				}

				// Save back as free
				if ( s[ callbackName ] ) {

					// make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;

					// save the callback name for future use
					oldCallbacks.push( callbackName );
				}

				// Call if it was a function and we have a response
				if ( responseContainer && jQuery.isFunction( overwritten ) ) {
					overwritten( responseContainer[ 0 ] );
				}

				responseContainer = overwritten = undefined;
			} );

			// Delegate to script
			return "script";
		}
	} );




	// data: string of html
	// context (optional): If specified, the fragment will be created in this context,
	// defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	jQuery.parseHTML = function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;

		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];

		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[ 1 ] ) ];
		}

		parsed = buildFragment( [ data ], context, scripts );

		if ( scripts && scripts.length ) {
			jQuery( scripts ).remove();
		}

		return jQuery.merge( [], parsed.childNodes );
	};


	// Keep a copy of the old load method
	var _load = jQuery.fn.load;

	/**
	 * Load a url into a page
	 */
	jQuery.fn.load = function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );
		}

		var selector, type, response,
			self = this,
			off = url.indexOf( " " );

		if ( off > -1 ) {
			selector = jQuery.trim( url.slice( off, url.length ) );
			url = url.slice( 0, off );
		}

		// If it's a function
		if ( jQuery.isFunction( params ) ) {

			// We assume that it's the callback
			callback = params;
			params = undefined;

		// Otherwise, build a param string
		} else if ( params && typeof params === "object" ) {
			type = "POST";
		}

		// If we have elements to modify, make the request
		if ( self.length > 0 ) {
			jQuery.ajax( {
				url: url,

				// If "type" variable is undefined, then "GET" method will be used.
				// Make value of this field explicit since
				// user can override it through ajaxSetup method
				type: type || "GET",
				dataType: "html",
				data: params
			} ).done( function( responseText ) {

				// Save response for use in complete callback
				response = arguments;

				self.html( selector ?

					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

					// Otherwise use the full result
					responseText );

			// If the request succeeds, this function gets "data", "status", "jqXHR"
			// but they are ignored because response was set above.
			// If it fails, this function gets "jqXHR", "status", "error"
			} ).always( callback && function( jqXHR, status ) {
				self.each( function() {
					callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
				} );
			} );
		}

		return this;
	};




	// Attach a bunch of functions for handling common AJAX events
	jQuery.each( [
		"ajaxStart",
		"ajaxStop",
		"ajaxComplete",
		"ajaxError",
		"ajaxSuccess",
		"ajaxSend"
	], function( i, type ) {
		jQuery.fn[ type ] = function( fn ) {
			return this.on( type, fn );
		};
	} );




	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep( jQuery.timers, function( fn ) {
			return elem === fn.elem;
		} ).length;
	};





	/**
	 * Gets a window from an element
	 */
	function getWindow( elem ) {
		return jQuery.isWindow( elem ) ?
			elem :
			elem.nodeType === 9 ?
				elem.defaultView || elem.parentWindow :
				false;
	}

	jQuery.offset = {
		setOffset: function( elem, options, i ) {
			var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
				position = jQuery.css( elem, "position" ),
				curElem = jQuery( elem ),
				props = {};

			// set position first, in-case top/left are set even on static elem
			if ( position === "static" ) {
				elem.style.position = "relative";
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css( elem, "top" );
			curCSSLeft = jQuery.css( elem, "left" );
			calculatePosition = ( position === "absolute" || position === "fixed" ) &&
				jQuery.inArray( "auto", [ curCSSTop, curCSSLeft ] ) > -1;

			// need to be able to calculate position if either top or left
			// is auto and position is either absolute or fixed
			if ( calculatePosition ) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;
			} else {
				curTop = parseFloat( curCSSTop ) || 0;
				curLeft = parseFloat( curCSSLeft ) || 0;
			}

			if ( jQuery.isFunction( options ) ) {

				// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
				options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
			}

			if ( options.top != null ) {
				props.top = ( options.top - curOffset.top ) + curTop;
			}
			if ( options.left != null ) {
				props.left = ( options.left - curOffset.left ) + curLeft;
			}

			if ( "using" in options ) {
				options.using.call( elem, props );
			} else {
				curElem.css( props );
			}
		}
	};

	jQuery.fn.extend( {
		offset: function( options ) {
			if ( arguments.length ) {
				return options === undefined ?
					this :
					this.each( function( i ) {
						jQuery.offset.setOffset( this, options, i );
					} );
			}

			var docElem, win,
				box = { top: 0, left: 0 },
				elem = this[ 0 ],
				doc = elem && elem.ownerDocument;

			if ( !doc ) {
				return;
			}

			docElem = doc.documentElement;

			// Make sure it's not a disconnected DOM node
			if ( !jQuery.contains( docElem, elem ) ) {
				return box;
			}

			// If we don't have gBCR, just use 0,0 rather than error
			// BlackBerry 5, iOS 3 (original iPhone)
			if ( typeof elem.getBoundingClientRect !== "undefined" ) {
				box = elem.getBoundingClientRect();
			}
			win = getWindow( doc );
			return {
				top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
				left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
			};
		},

		position: function() {
			if ( !this[ 0 ] ) {
				return;
			}

			var offsetParent, offset,
				parentOffset = { top: 0, left: 0 },
				elem = this[ 0 ];

			// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
			// because it is its only offset parent
			if ( jQuery.css( elem, "position" ) === "fixed" ) {

				// we assume that getBoundingClientRect is available when computed position is fixed
				offset = elem.getBoundingClientRect();
			} else {

				// Get *real* offsetParent
				offsetParent = this.offsetParent();

				// Get correct offsets
				offset = this.offset();
				if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
					parentOffset = offsetParent.offset();
				}

				// Add offsetParent borders
				parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
			}

			// Subtract parent offsets and element margins
			// note: when an element has margin: auto the offsetLeft and marginLeft
			// are the same in Safari causing offset.left to incorrectly be 0
			return {
				top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
				left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
			};
		},

		offsetParent: function() {
			return this.map( function() {
				var offsetParent = this.offsetParent;

				while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) &&
					jQuery.css( offsetParent, "position" ) === "static" ) ) {
					offsetParent = offsetParent.offsetParent;
				}
				return offsetParent || documentElement;
			} );
		}
	} );

	// Create scrollLeft and scrollTop methods
	jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
		var top = /Y/.test( prop );

		jQuery.fn[ method ] = function( val ) {
			return access( this, function( elem, method, val ) {
				var win = getWindow( elem );

				if ( val === undefined ) {
					return win ? ( prop in win ) ? win[ prop ] :
						win.document.documentElement[ method ] :
						elem[ method ];
				}

				if ( win ) {
					win.scrollTo(
						!top ? val : jQuery( win ).scrollLeft(),
						top ? val : jQuery( win ).scrollTop()
					);

				} else {
					elem[ method ] = val;
				}
			}, method, val, arguments.length, null );
		};
	} );

	// Support: Safari<7-8+, Chrome<37-44+
	// Add the top/left cssHooks using jQuery.fn.position
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// getComputedStyle returns percent when specified for top/left/bottom/right
	// rather than make the css module depend on the offset module, we just check for it here
	jQuery.each( [ "top", "left" ], function( i, prop ) {
		jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
			function( elem, computed ) {
				if ( computed ) {
					computed = curCSS( elem, prop );

					// if curCSS returns percentage, fallback to offset
					return rnumnonpx.test( computed ) ?
						jQuery( elem ).position()[ prop ] + "px" :
						computed;
				}
			}
		);
	} );


	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
		jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

			// margin is only for outerHeight, outerWidth
			jQuery.fn[ funcName ] = function( margin, value ) {
				var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
					extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

				return access( this, function( elem, type, value ) {
					var doc;

					if ( jQuery.isWindow( elem ) ) {

						// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
						// isn't a whole lot we can do. See pull request at this URL for discussion:
						// https://github.com/jquery/jquery/pull/764
						return elem.document.documentElement[ "client" + name ];
					}

					// Get document width or height
					if ( elem.nodeType === 9 ) {
						doc = elem.documentElement;

						// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
						// whichever is greatest
						// unfortunately, this causes bug #3838 in IE6/8 only,
						// but there is currently no good, small way to fix it.
						return Math.max(
							elem.body[ "scroll" + name ], doc[ "scroll" + name ],
							elem.body[ "offset" + name ], doc[ "offset" + name ],
							doc[ "client" + name ]
						);
					}

					return value === undefined ?

						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css( elem, type, extra ) :

						// Set width or height on the element
						jQuery.style( elem, type, value, extra );
				}, type, chainable ? margin : undefined, chainable, null );
			};
		} );
	} );


	jQuery.fn.extend( {

		bind: function( types, data, fn ) {
			return this.on( types, null, data, fn );
		},
		unbind: function( types, fn ) {
			return this.off( types, null, fn );
		},

		delegate: function( selector, types, data, fn ) {
			return this.on( types, selector, data, fn );
		},
		undelegate: function( selector, types, fn ) {

			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1 ?
				this.off( selector, "**" ) :
				this.off( types, selector || "**", fn );
		}
	} );

	// The number of elements contained in the matched element set
	jQuery.fn.size = function() {
		return this.length;
	};

	jQuery.fn.andSelf = jQuery.fn.addBack;




	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.

	// Note that for maximum portability, libraries that are not jQuery should
	// declare themselves as anonymous modules, and avoid setting a global if an
	// AMD loader is present. jQuery is a special case. For more information, see
	// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

	if ( true ) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return jQuery;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}



	var

		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,

		// Map over the $ in case of overwrite
		_$ = window.$;

	jQuery.noConflict = function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	};

	// Expose jQuery and $ identifiers, even in
	// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
	// and CommonJS for browser emulators (#13566)
	if ( !noGlobal ) {
		window.jQuery = window.$ = jQuery;
	}

	return jQuery;
	}));


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/*! eruda v1.5.0 https://eruda.liriliri.io/ */
	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else if(typeof exports === 'object')
			exports["eruda"] = factory();
		else
			root["eruda"] = factory();
	})(typeof self !== 'undefined' ? self : this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, {
	/******/ 				configurable: false,
	/******/ 				enumerable: true,
	/******/ 				get: getter
	/******/ 			});
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "/assets/";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 82);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	/* WEBPACK VAR INJECTION */(function(global, process) {// Built by eustia.


	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.wrap = exports.viewportScale = exports.unique = exports.uniqId = exports.tryIt = exports.stripHtmlTag = exports.LocalStore = exports.stringify = exports.type = exports.ajax = exports.Url = exports.query = exports.getFileName = exports.trim = exports.rtrim = exports.rmCookie = exports.pxToNum = exports.perfNow = exports.orientation = exports.Store = exports.Logger = exports.Emitter = exports.once = exports.partial = exports.restArgs = exports.now = exports.nextTick = exports.detectBrowser = exports.toInt = exports.ms = exports.toNum = exports.meta = exports.safeStorage = exports.memStorage = exports.$ = exports.$class = exports.some = undefined;
	exports.concat = exports.$event = exports.delegate = exports.$show = exports.$remove = exports.$property = exports.$offset = exports.$insert = exports.$css = exports.$data = exports.$attr = exports.$safeEls = exports.Select = exports.MutationObserver = exports.Enum = exports.Class = exports.toArr = exports.cookie = exports.decodeUriComponent = exports.map = exports.evalCss = exports.filter = exports.safeCb = exports.matcher = exports.ltrim = exports.dateFormat = exports.lpad = exports.repeat = exports.loadJs = exports.isRegExp = exports.isNull = exports.isNative = exports.toSrc = exports.isNil = exports.isNaN = exports.prefix = exports.isMobile = exports.memoize = exports.isMatch = exports.isErudaEl = exports.isErr = exports.isEl = exports.isCrossOrig = exports.isBool = exports.isEmpty = exports.isStr = exports.contain = exports.values = exports.extendOwn = exports.clone = exports.extend = exports.defaults = exports.createAssigner = exports.each = exports.isArrLike = exports.isNum = exports.isMiniProgram = exports.isFn = exports.isDate = exports.safeGet = exports.castPath = exports.isArr = exports.isArgs = exports.objToStr = exports.identity = exports.getObjType = exports.upperFirst = exports.fullUrl = exports.fileSize = exports.escapeRegExp = exports.escapeJsonStr = exports.escapeJsStr = exports.escape = exports.endWith = exports.optimizeCb = exports.detectOs = exports.freeze = exports.keys = exports.detectMocha = exports.root = exports.utf8 = exports.ucs2 = exports.toStr = exports.idxOf = exports.clamp = exports.chunk = exports.kebabCase = exports.camelCase = exports.splitCase = exports.before = exports.allKeys = exports.noop = exports.isBrowser = exports.slice = exports.has = exports.inherits = exports.startWith = exports.isObj = exports.isUndef = exports.last = undefined;

	var _stringify = __webpack_require__(34);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _setImmediate2 = __webpack_require__(123);

	var _setImmediate3 = _interopRequireDefault(_setImmediate2);

	var _defineProperty = __webpack_require__(65);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	var _getOwnPropertyDescriptor = __webpack_require__(35);

	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

	var _freeze = __webpack_require__(130);

	var _freeze2 = _interopRequireDefault(_freeze);

	var _keys2 = __webpack_require__(36);

	var _keys3 = _interopRequireDefault(_keys2);

	var _fromCodePoint = __webpack_require__(135);

	var _fromCodePoint2 = _interopRequireDefault(_fromCodePoint);

	var _create = __webpack_require__(72);

	var _create2 = _interopRequireDefault(_create);

	var _typeof2 = __webpack_require__(25);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _ = {};

	/* ------------------------------ last ------------------------------ */

	var _last = _.last = function () {
	    /* Get the last element of array.
	     *
	     * |Name  |Type |Desc                     |
	     * |------|-----|-------------------------|
	     * |arr   |array|The array to query       |
	     * |return|*    |The last element of array|
	     *
	     * ```javascript
	     * last([1, 2]); // -> 2
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(arr) {
	        var len = arr ? arr.length : 0;

	        if (len) return arr[len - 1];
	    }

	    return exports;
	}();

	/* ------------------------------ isUndef ------------------------------ */

	exports.last = _last;
	var isUndef = exports.isUndef = _.isUndef = function () {
	    /* Check if value is undefined.
	     *
	     * |Name  |Type   |Desc                      |
	     * |------|-------|--------------------------|
	     * |val   |*      |Value to check            |
	     * |return|boolean|True if value is undefined|
	     *
	     * ```javascript
	     * isUndef(void 0); // -> true
	     * isUndef(null); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val === void 0;
	    }

	    return exports;
	}();

	/* ------------------------------ isObj ------------------------------ */

	var isObj = exports.isObj = _.isObj = function () {
	    /* Check if value is the language type of Object.
	     *
	     * |Name  |Type   |Desc                      |
	     * |------|-------|--------------------------|
	     * |val   |*      |Value to check            |
	     * |return|boolean|True if value is an object|
	     *
	     * [Language Spec](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	     *
	     * ```javascript
	     * isObj({}); // -> true
	     * isObj([]); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        var type = typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val);

	        return !!val && (type === 'function' || type === 'object');
	    }

	    return exports;
	}();

	/* ------------------------------ startWith ------------------------------ */

	var startWith = exports.startWith = _.startWith = function () {
	    /* Check if string starts with the given target string.
	     *
	     * |Name  |Type   |Desc                             |
	     * |------|-------|---------------------------------|
	     * |str   |string |String to search                 |
	     * |prefix|string |String prefix                    |
	     * |return|boolean|True if string starts with prefix|
	     *
	     * ```javascript
	     * startWith('ab', 'a'); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(str, prefix) {
	        return str.indexOf(prefix) === 0;
	    }

	    return exports;
	}();

	/* ------------------------------ inherits ------------------------------ */

	var inherits = exports.inherits = _.inherits = function () {
	    /* Inherit the prototype methods from one constructor into another.
	     *
	     * |Name      |Type    |Desc       |
	     * |----------|--------|-----------|
	     * |Class     |function|Child Class|
	     * |SuperClass|function|Super Class|
	     *
	     * ```javascript
	     * function People(name)
	     * {
	     *     this._name = name;
	     * }
	     * People.prototype = {
	     *     getName: function ()
	     *     {
	     *         return this._name;
	     *     }
	     * };
	     * function Student(name)
	     * {
	     *     this._name = name;
	     * }
	     * inherits(Student, People);
	     * var s = new Student('RedHood');
	     * s.getName(); // -> 'RedHood'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(Class, SuperClass) {
	        if (objCreate) return Class.prototype = objCreate(SuperClass.prototype);

	        noop.prototype = SuperClass.prototype;
	        Class.prototype = new noop();
	    }

	    var objCreate = _create2.default;

	    function noop() {}

	    return exports;
	}();

	/* ------------------------------ has ------------------------------ */

	var has = exports.has = _.has = function () {
	    /* Checks if key is a direct property.
	     *
	     * |Name  |Type   |Desc                            |
	     * |------|-------|--------------------------------|
	     * |obj   |object |Object to query                 |
	     * |key   |string |Path to check                   |
	     * |return|boolean|True if key is a direct property|
	     *
	     * ```javascript
	     * has({one: 1}, 'one'); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var hasOwnProp = Object.prototype.hasOwnProperty;

	    function exports(obj, key) {
	        return hasOwnProp.call(obj, key);
	    }

	    return exports;
	}();

	/* ------------------------------ slice ------------------------------ */

	var slice = exports.slice = _.slice = function () {
	    /* Create slice of source array or array-like object.
	     *
	     * |Name              |Type  |Desc                      |
	     * |------------------|------|--------------------------|
	     * |array             |array |Array to slice            |
	     * |[start=0]         |number|Start position            |
	     * |[end=array.length]|number|End position, not included|
	     *
	     * ```javascript
	     * slice([1, 2, 3, 4], 1, 2); // -> [2]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(arr, start, end) {
	        var len = arr.length;

	        if (start == null) {
	            start = 0;
	        } else if (start < 0) {
	            start = Math.max(len + start, 0);
	        } else {
	            start = Math.min(start, len);
	        }

	        if (end == null) {
	            end = len;
	        } else if (end < 0) {
	            end = Math.max(len + end, 0);
	        } else {
	            end = Math.min(end, len);
	        }

	        var ret = [];
	        while (start < end) {
	            ret.push(arr[start++]);
	        }return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ isBrowser ------------------------------ */

	var isBrowser = exports.isBrowser = _.isBrowser = function (exports) {
	    /* Check if running in a browser.
	     *
	     * ```javascript
	     * console.log(isBrowser); // -> true if running in a browser
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    exports = (typeof window === 'undefined' ? 'undefined' : (0, _typeof3.default)(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : (0, _typeof3.default)(document)) === 'object' && document.nodeType === 9;

	    return exports;
	}({});

	/* ------------------------------ noop ------------------------------ */

	var noop = exports.noop = _.noop = function () {
	    /* A no-operation function.
	     *
	     * ```javascript
	     * noop(); // Does nothing
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports() {}

	    return exports;
	}();

	/* ------------------------------ allKeys ------------------------------ */

	var allKeys = exports.allKeys = _.allKeys = function () {
	    /* Retrieve all the names of object's own and inherited properties.
	     *
	     * |Name  |Type  |Desc                       |
	     * |------|------|---------------------------|
	     * |obj   |object|Object to query            |
	     * |return|array |Array of all property names|
	     *
	     * > Members of Object's prototype won't be retrieved.
	     *
	     * ```javascript
	     * var obj = Object.create({zero: 0});
	     * obj.one = 1;
	     * allKeys(obj) // -> ['zero', 'one']
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(obj) {
	        var ret = [],
	            key;

	        for (key in obj) {
	            ret.push(key);
	        }return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ before ------------------------------ */

	var before = exports.before = _.before = function () {
	    /* Create a function that invokes less than n times.
	     *
	     * |Name  |Type    |Desc                                            |
	     * |------|--------|------------------------------------------------|
	     * |n     |number  |Number of calls at which fn is no longer invoked|
	     * |fn    |function|Function to restrict                            |
	     * |return|function|New restricted function                         |
	     *
	     * Subsequent calls to the created function return the result of the last fn invocation.
	     *
	     * ```javascript
	     * $(element).on('click', before(5, function() {}));
	     * // -> allow function to be call 4 times at last.
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(n, fn) {
	        var memo;

	        return function () {
	            if (--n > 0) memo = fn.apply(this, arguments);
	            if (n <= 1) fn = null;

	            return memo;
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ splitCase ------------------------------ */

	var splitCase = exports.splitCase = _.splitCase = function () {
	    /* Split different string case to an array.
	     *
	     * |Name  |Type  |Desc           |
	     * |------|------|---------------|
	     * |str   |string|String to split|
	     * |return|array |Result array   |
	     *
	     * ```javascript
	     * splitCase('foo-bar'); // -> ['foo', 'bar']
	     * splitCase('foo bar'); // -> ['foo', 'bar']
	     * splitCase('foo_bar'); // -> ['foo', 'bar']
	     * splitCase('foo.bar'); // -> ['foo', 'bar']
	     * splitCase('fooBar'); // -> ['foo', 'bar']
	     * splitCase('foo-Bar'); // -> ['foo', 'bar']
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var regUpperCase = /([A-Z])/g,
	        regSeparator = /[_.\- ]+/g,
	        regTrim = /(^-)|(-$)/g;

	    function exports(str) {
	        str = str.replace(regUpperCase, '-$1').toLowerCase().replace(regSeparator, '-').replace(regTrim, '');

	        return str.split('-');
	    }

	    return exports;
	}();

	/* ------------------------------ camelCase ------------------------------ */

	var camelCase = exports.camelCase = _.camelCase = function () {
	    /* Convert string to "camelCase".
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |str   |string|String to convert |
	     * |return|string|Camel cased string|
	     *
	     * ```javascript
	     * camelCase('foo-bar'); // -> fooBar
	     * camelCase('foo bar'); // -> fooBar
	     * camelCase('foo_bar'); // -> fooBar
	     * camelCase('foo.bar'); // -> fooBar
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * splitCase 
	     */

	    function exports(str) {
	        var arr = splitCase(str);

	        var ret = arr[0];
	        arr.shift();

	        arr.forEach(capitalize, arr);
	        ret += arr.join('');

	        return ret;
	    }

	    function capitalize(val, idx) {
	        this[idx] = val.replace(/\w/, function (match) {
	            return match.toUpperCase();
	        });
	    }

	    return exports;
	}();

	/* ------------------------------ kebabCase ------------------------------ */

	var kebabCase = exports.kebabCase = _.kebabCase = function () {
	    /* Convert string to "kebabCase".
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |str   |string|String to convert |
	     * |return|string|Kebab cased string|
	     *
	     * ```javascript
	     * kebabCase('fooBar'); // -> foo-bar
	     * kebabCase('foo bar'); // -> foo-bar
	     * kebabCase('foo_bar'); // -> foo-bar
	     * kebabCase('foo.bar'); // -> foo-bar
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * splitCase 
	     */

	    function exports(str) {
	        return splitCase(str).join('-');
	    }

	    return exports;
	}();

	/* ------------------------------ chunk ------------------------------ */

	var chunk = exports.chunk = _.chunk = function () {
	    /* Split array into groups the length of given size.
	     *
	     * |Name  |Type  |Desc                |
	     * |------|------|--------------------|
	     * |arr   |array |Array to process    |
	     * |size=1|number|Length of each chunk|
	     * 
	     * ```javascript
	     * chunk([1, 2, 3, 4], 2); // -> [[1, 2], [3, 4]]
	     * chunk([1, 2, 3, 4], 3); // -> [[1, 2, 3], [4]]
	     * chunk([1, 2, 3, 4]); // -> [[1], [2], [3], [4]]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(arr, size) {
	        var ret = [];

	        size = size || 1;

	        for (var i = 0, len = Math.ceil(arr.length / size); i < len; i++) {
	            var start = i * size,
	                end = start + size;

	            ret.push(arr.slice(start, end));
	        }

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ clamp ------------------------------ */

	var clamp = exports.clamp = _.clamp = function () {
	    /* Clamp number within the inclusive lower and upper bounds.
	     *
	     * |Name   |Type  |Desc           |
	     * |-------|------|---------------|
	     * |n      |number|Number to clamp|
	     * |[lower]|number|Lower bound    |
	     * |upper  |number|Upper bound    |
	     * |return |number|Clamped number |
	     *
	     * ```javascript
	     * clamp(-10, -5, 5); // -> -5
	     * clamp(10, -5, 5); // -> 5
	     * clamp(2, -5, 5); // -> 2
	     * clamp(10, 5); // -> 5
	     * clamp(2, 5); // -> 2
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isUndef 
	     */

	    function exports(n, lower, upper) {
	        if (isUndef(upper)) {
	            upper = lower;
	            lower = undefined;
	        }

	        if (!isUndef(lower) && n < lower) return lower;

	        if (n > upper) return upper;

	        return n;
	    }

	    return exports;
	}();

	/* ------------------------------ idxOf ------------------------------ */

	var idxOf = exports.idxOf = _.idxOf = function () {
	    /* Get the index at which the first occurrence of value.
	     *
	     * |Name     |Type  |Desc                |
	     * |---------|------|--------------------|
	     * |arr      |array |Array to search     |
	     * |val      |*     |Value to search for |
	     * |fromIdx=0|number|Index to search from|
	     *
	     * ```javascript
	     * idxOf([1, 2, 1, 2], 2, 2); // -> 3
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(arr, val, fromIdx) {
	        return Array.prototype.indexOf.call(arr, val, fromIdx);
	    }

	    return exports;
	}();

	/* ------------------------------ toStr ------------------------------ */

	var toStr = exports.toStr = _.toStr = function () {
	    /* Convert value to a string.
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |val   |*     |Value to convert|
	     * |return|string|Resulted string |
	     *
	     * ```javascript
	     * toStr(null); // -> ''
	     * toStr(1); // -> '1'
	     * toStr(false); // -> 'false'
	     * toStr([1, 2, 3]); // -> '1,2,3'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val == null ? '' : val.toString();
	    }

	    return exports;
	}();

	/* ------------------------------ ucs2 ------------------------------ */

	var ucs2 = exports.ucs2 = _.ucs2 = function (exports) {
	    /* UCS-2 encoding and decoding.
	     *
	     * ### encode
	     * 
	     * Create a string using an array of code point values.
	     * 
	     * |Name  |Type  |Desc                |
	     * |------|------|--------------------|
	     * |arr   |array |Array of code points|
	     * |return|string|Encoded string      |
	     * 
	     * ### decode
	     * 
	     * Create an array of code point values using a string.
	     * 
	     * |Name  |Type  |Desc                |
	     * |------|------|--------------------|
	     * |str   |string|Input string        |
	     * |return|array |Array of code points|
	     * 
	     * ```javascript
	     * ucs2.encode([0x61, 0x62, 0x63]); // -> 'abc'
	     * ucs2.decode('abc'); // -> [0x61, 0x62, 0x63]
	     * '𝌆'.length; // -> 2
	     * ucs2.decode('𝌆').length; // -> 1
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    // https://mathiasbynens.be/notes/javascript-encoding
	    exports = {
	        encode: function encode(arr) {
	            return _fromCodePoint2.default.apply(String, arr);
	        },
	        decode: function decode(str) {
	            var ret = [];

	            var i = 0,
	                len = str.length;

	            while (i < len) {
	                var c = str.charCodeAt(i++);

	                // A high surrogate
	                if (c >= 0xd800 && c <= 0xdbff && i < len) {
	                    var tail = str.charCodeAt(i++);
	                    // nextC >= 0xDC00 && nextC <= 0xDFFF
	                    if ((tail & 0xfc00) === 0xdc00) {
	                        // C = (H - 0xD800) * 0x400 + L - 0xDC00 + 0x10000
	                        ret.push(((c & 0x3ff) << 10) + (tail & 0x3ff) + 0x10000);
	                    } else {
	                        ret.push(c);
	                        i--;
	                    }
	                } else {
	                    ret.push(c);
	                }
	            }

	            return ret;
	        }
	    };

	    return exports;
	}({});

	/* ------------------------------ utf8 ------------------------------ */

	var utf8 = exports.utf8 = _.utf8 = function (exports) {
	    /* UTF-8 encoding and decoding.
	     *
	     * ### encode
	     * 
	     * Turn any UTF-8 decoded string into UTF-8 encoded string.
	     * 
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |str   |string|String to encode|
	     * |return|string|Encoded string  |
	     * 
	     * ### decode
	     * 
	     * |Name        |Type   |Desc                  |
	     * |------------|-------|----------------------|
	     * |str         |string |String to decode      |
	     * |[safe=false]|boolean|Suppress error if true|
	     * |return      |string |Decoded string        |
	     * 
	     * Turn any UTF-8 encoded string into UTF-8 decoded string.
	     * 
	     * ```javascript
	     * utf8.encode('\uD800\uDC00'); // ->  '\xF0\x90\x80\x80'
	     * utf8.decode('\xF0\x90\x80\x80'); // -> '\uD800\uDC00'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * ucs2 
	     */

	    // https://encoding.spec.whatwg.org/#utf-8
	    exports = {
	        encode: function encode(str) {
	            var codePoints = ucs2.decode(str);

	            var byteArr = '';

	            for (var i = 0, len = codePoints.length; i < len; i++) {
	                byteArr += encodeCodePoint(codePoints[i]);
	            }

	            return byteArr;
	        },
	        decode: function decode(str, safe) {
	            byteArr = ucs2.decode(str);
	            byteIdx = 0;
	            byteCount = byteArr.length;
	            codePoint = 0;
	            bytesSeen = 0;
	            bytesNeeded = 0;
	            lowerBoundary = 0x80;
	            upperBoundary = 0xbf;

	            var codePoints = [];

	            var tmp;

	            while ((tmp = decodeCodePoint(safe)) !== false) {
	                codePoints.push(tmp);
	            }

	            return ucs2.encode(codePoints);
	        }
	    };

	    var fromCharCode = String.fromCharCode;

	    function encodeCodePoint(codePoint) {
	        // U+0000 to U+0080, ASCII code point
	        if ((codePoint & 0xffffff80) === 0) {
	            return fromCharCode(codePoint);
	        }

	        var ret = '',
	            count,
	            offset;

	        // U+0080 to U+07FF, inclusive
	        if ((codePoint & 0xfffff800) === 0) {
	            count = 1;
	            offset = 0xc0;
	        } else if ((codePoint & 0xffff0000) === 0) {
	            // U+0800 to U+FFFF, inclusive
	            count = 2;
	            offset = 0xe0;
	        } else if ((codePoint & 0xffe00000) == 0) {
	            // U+10000 to U+10FFFF, inclusive
	            count = 3;
	            offset = 0xf0;
	        }

	        ret += fromCharCode((codePoint >> 6 * count) + offset);

	        while (count > 0) {
	            var tmp = codePoint >> 6 * (count - 1);
	            ret += fromCharCode(0x80 | tmp & 0x3f);
	            count--;
	        }

	        return ret;
	    }

	    var byteArr, byteIdx, byteCount, codePoint, bytesSeen, bytesNeeded, lowerBoundary, upperBoundary;

	    function decodeCodePoint(safe) {
	        /* eslint-disable no-constant-condition */
	        while (true) {
	            if (byteIdx >= byteCount && bytesNeeded) {
	                if (safe) return goBack();
	                throw new Error('Invalid byte index');
	            }

	            if (byteIdx === byteCount) return false;

	            var byte = byteArr[byteIdx];
	            byteIdx++;

	            if (!bytesNeeded) {
	                // 0x00 to 0x7F
	                if ((byte & 0x80) === 0) {
	                    return byte;
	                }
	                // 0xC2 to 0xDF
	                if ((byte & 0xe0) === 0xc0) {
	                    bytesNeeded = 1;
	                    codePoint = byte & 0x1f;
	                } else if ((byte & 0xf0) === 0xe0) {
	                    // 0xE0 to 0xEF
	                    if (byte === 0xe0) lowerBoundary = 0xa0;
	                    if (byte === 0xed) upperBoundary = 0x9f;
	                    bytesNeeded = 2;
	                    codePoint = byte & 0xf;
	                } else if ((byte & 0xf8) === 0xf0) {
	                    // 0xF0 to 0xF4
	                    if (byte === 0xf0) lowerBoundary = 0x90;
	                    if (byte === 0xf4) upperBoundary = 0x8f;
	                    bytesNeeded = 3;
	                    codePoint = byte & 0x7;
	                } else {
	                    if (safe) return goBack();
	                    throw new Error('Invalid UTF-8 detected');
	                }

	                continue;
	            }

	            if (byte < lowerBoundary || byte > upperBoundary) {
	                if (safe) {
	                    byteIdx--;
	                    return goBack();
	                }
	                throw new Error('Invalid continuation byte');
	            }

	            lowerBoundary = 0x80;
	            upperBoundary = 0xbf;

	            codePoint = codePoint << 6 | byte & 0x3f;

	            bytesSeen++;

	            if (bytesSeen !== bytesNeeded) continue;

	            var tmp = codePoint;

	            codePoint = 0;
	            bytesNeeded = 0;
	            bytesSeen = 0;

	            return tmp;
	        }
	    }

	    function goBack() {
	        var start = byteIdx - bytesSeen - 1;
	        byteIdx = start + 1;
	        codePoint = 0;
	        bytesNeeded = 0;
	        bytesSeen = 0;
	        lowerBoundary = 0x80;
	        upperBoundary = 0xbf;

	        return byteArr[start];
	    }

	    return exports;
	}({});

	/* ------------------------------ root ------------------------------ */

	var root = exports.root = _.root = function (exports) {
	    /* Root object reference, `global` in nodeJs, `window` in browser. */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isBrowser 
	     */

	    exports = isBrowser ? window : global;

	    return exports;
	}({});

	/* ------------------------------ detectMocha ------------------------------ */

	var detectMocha = exports.detectMocha = _.detectMocha = function () {
	    /* Detect if mocha is running.
	     *
	     * ```javascript
	     * detectMocha(); // -> True if mocha is running.
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * root 
	     */

	    function exports() {
	        for (var i = 0, len = methods.length; i < len; i++) {
	            var method = methods[i];

	            if (typeof root[method] !== 'function') return false;
	        }

	        return true;
	    }

	    var methods = ['afterEach', 'after', 'beforeEach', 'before', 'describe', 'it'];

	    return exports;
	}();

	/* ------------------------------ keys ------------------------------ */

	var keys = exports.keys = _.keys = function (exports) {
	    /* Create an array of the own enumerable property names of object.
	     *
	     * |Name  |Type  |Desc                   |
	     * |------|------|-----------------------|
	     * |obj   |object|Object to query        |
	     * |return|array |Array of property names|
	     * 
	     * ```javascript
	     * keys({a: 1}); // -> ['a']
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * has detectMocha 
	     */

	    if (_keys3.default && !detectMocha()) {
	        exports = _keys3.default;
	    } else {
	        exports = function exports(obj) {
	            var ret = [],
	                key;

	            for (key in obj) {
	                if (has(obj, key)) ret.push(key);
	            }

	            return ret;
	        };
	    }

	    return exports;
	}({});

	/* ------------------------------ freeze ------------------------------ */

	var freeze = exports.freeze = _.freeze = function () {
	    /* Shortcut for Object.freeze.
	     *
	     * Use Object.defineProperties if Object.freeze is not supported.
	     * 
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |obj   |object|Object to freeze|
	     * |return|object|Object passed in|
	     * 
	     * ```javascript
	     * var a = {b: 1};
	     * freeze(a);
	     * a.b = 2;
	     * console.log(a); // -> {b: 1}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * keys 
	     */

	    function exports(obj) {
	        if (_freeze2.default) return (0, _freeze2.default)(obj);

	        keys(obj).forEach(function (prop) {
	            if (!(0, _getOwnPropertyDescriptor2.default)(obj, prop).configurable) return;

	            (0, _defineProperty2.default)(obj, prop, {
	                writable: false,
	                configurable: false
	            });
	        });

	        return obj;
	    }

	    return exports;
	}();

	/* ------------------------------ detectOs ------------------------------ */

	var detectOs = exports.detectOs = _.detectOs = function () {
	    /* Detect operating system using ua.
	     * 
	     * |Name                    |Type  |Desc                 |
	     * |------------------------|------|---------------------|
	     * |[ua=navigator.userAgent]|string|Browser userAgent    |
	     * |return                  |string|Operating system name|
	     * 
	     * Supported os: windows, os x, linux, ios, android, windows phone
	     * 
	     * ```javascript
	     * if (detectOs() === 'ios') 
	     * {
	     *     // Do something about ios...
	     * }
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isBrowser 
	     */

	    function exports(ua) {
	        ua = ua || (isBrowser ? navigator.userAgent : '');

	        ua = ua.toLowerCase();

	        if (detect('windows phone')) return 'windows phone';
	        if (detect('win')) return 'windows';
	        if (detect('android')) return 'android';
	        if (detect('ipad') || detect('iphone') || detect('ipod')) return 'ios';
	        if (detect('mac')) return 'os x';
	        if (detect('linux')) return 'linux';

	        function detect(keyword) {
	            return ua.indexOf(keyword) > -1;
	        }

	        return 'unknown';
	    }

	    return exports;
	}();

	/* ------------------------------ optimizeCb ------------------------------ */

	var optimizeCb = exports.optimizeCb = _.optimizeCb = function () {
	    /* Used for function context binding.
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isUndef 
	     */

	    function exports(fn, ctx, argCount) {
	        if (isUndef(ctx)) return fn;

	        switch (argCount == null ? 3 : argCount) {
	            case 1:
	                return function (val) {
	                    return fn.call(ctx, val);
	                };
	            case 3:
	                return function (val, idx, collection) {
	                    return fn.call(ctx, val, idx, collection);
	                };
	            case 4:
	                return function (accumulator, val, idx, collection) {
	                    return fn.call(ctx, accumulator, val, idx, collection);
	                };
	        }

	        return function () {
	            return fn.apply(ctx, arguments);
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ endWith ------------------------------ */

	var endWith = exports.endWith = _.endWith = function () {
	    /* Check if string ends with the given target string.
	     *
	     * |Name  |Type   |Desc                           |
	     * |------|-------|-------------------------------|
	     * |str   |string |The string to search           |
	     * |suffix|string |String suffix                  |
	     * |return|boolean|True if string ends with target|
	     *
	     * ```javascript
	     * endWith('ab', 'b'); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(str, suffix) {
	        var idx = str.length - suffix.length;

	        return idx >= 0 && str.indexOf(suffix, idx) === idx;
	    }

	    return exports;
	}();

	/* ------------------------------ escape ------------------------------ */

	var escape = exports.escape = _.escape = function () {
	    /* Escapes a string for insertion into HTML, replacing &, <, >, ", `, and ' characters.
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |str   |string|String to escape|
	     * |return|string|Escaped string  |
	     *
	     * ```javascript
	     * escape('You & Me'); -> // -> 'You &amp; Me'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * keys 
	     */

	    function exports(str) {
	        return regTest.test(str) ? str.replace(regReplace, replaceFn) : str;
	    }

	    var map = exports.map = {
	        '&': '&amp;',
	        '<': '&lt;',
	        '>': '&gt;',
	        '"': '&quot;',
	        "'": '&#x27;',
	        '`': '&#x60;'
	    };

	    var regSrc = '(?:' + keys(map).join('|') + ')',
	        regTest = new RegExp(regSrc),
	        regReplace = new RegExp(regSrc, 'g');

	    function replaceFn(match) {
	        return map[match];
	    }

	    return exports;
	}();

	/* ------------------------------ escapeJsStr ------------------------------ */

	var escapeJsStr = exports.escapeJsStr = _.escapeJsStr = function () {
	    /* Escape string to be a valid JavaScript string literal between quotes.
	     *
	     * http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |str   |string|String to escape|
	     * |return|string|Escaped string  |
	     * 
	     * ```javascript
	     * escapeJsStr('\"\n'); // -> '\\"\\\\n'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * toStr 
	     */

	    function exports(str) {
	        return toStr(str).replace(regEscapeChars, function (char) {
	            switch (char) {
	                case '"':
	                case "'":
	                case '\\':
	                    return '\\' + char;
	                case '\n':
	                    return '\\n';
	                case '\r':
	                    return '\\r';
	                // Line separator
	                case '\u2028':
	                    return '\\u2028';
	                // Paragraph separator
	                case '\u2029':
	                    return '\\u2029';
	            }
	        });
	    }

	    var regEscapeChars = /["'\\\n\r\u2028\u2029]/g;

	    return exports;
	}();

	/* ------------------------------ escapeJsonStr ------------------------------ */

	var escapeJsonStr = exports.escapeJsonStr = _.escapeJsonStr = function () {
	    /* Escape json string.
	     */

	    /* dependencies
	     * escapeJsStr 
	     */

	    function exports(str) {
	        return escapeJsStr(str).replace(/\\'/g, "'");
	    }

	    return exports;
	}();

	/* ------------------------------ escapeRegExp ------------------------------ */

	var escapeRegExp = exports.escapeRegExp = _.escapeRegExp = function () {
	    /* Escape special chars to be used as literals in RegExp constructors.
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |str   |string|String to escape|
	     * |return|string|Escaped string  |
	     *
	     * ```javascript
	     * escapeRegExp('[licia]'); // -> '\\[licia\\]'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(str) {
	        return str.replace(/\W/g, '\\$&');
	    }

	    return exports;
	}();

	/* ------------------------------ fileSize ------------------------------ */

	var fileSize = exports.fileSize = _.fileSize = function () {
	    /* Turn bytes into human readable file size.
	     * 
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |bytes |number|File bytes        |
	     * |return|string|Readable file size|
	     * 
	     * ```javascript
	     * fileSize(5); // -> '5'
	     * fileSize(1500); // -> '1.46K'
	     * fileSize(1500000); // -> '1.43M'
	     * fileSize(1500000000); // -> '1.4G'
	     * fileSize(1500000000000); // -> '1.36T'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(bytes) {
	        if (bytes <= 0) return '0';

	        var suffixIdx = Math.floor(Math.log(bytes) / Math.log(1024)),
	            val = bytes / Math.pow(2, suffixIdx * 10);

	        return +val.toFixed(2) + suffixList[suffixIdx];
	    }

	    var suffixList = ['', 'K', 'M', 'G', 'T'];

	    return exports;
	}();

	/* ------------------------------ fullUrl ------------------------------ */

	var fullUrl = exports.fullUrl = _.fullUrl = function () {
	    /* Add origin to url if needed.
	     */

	    /* dependencies
	     * startWith 
	     */

	    var origin = window.location.origin;

	    function exports(url) {
	        if (startWith(url, 'http')) return url;

	        if (!startWith(url, '/')) url = '/' + url;

	        return origin + url;
	    }

	    return exports;
	}();

	/* ------------------------------ upperFirst ------------------------------ */

	var upperFirst = exports.upperFirst = _.upperFirst = function () {
	    /* Convert the first character of string to upper case.
	     *
	     * |Name  |Type  |Desc             |
	     * |------|------|-----------------|
	     * |str   |string|String to convert|
	     * |return|string|Converted string |
	     *
	     * ```javascript
	     * upperFirst('red'); // -> Red
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(str) {
	        if (str.length < 1) return str;

	        return str[0].toUpperCase() + str.slice(1);
	    }

	    return exports;
	}();

	/* ------------------------------ getObjType ------------------------------ */

	var getObjType = exports.getObjType = _.getObjType = function () {
	    /* Get object type.
	     */

	    /* dependencies
	     * upperFirst 
	     */

	    function exports(obj) {
	        if (obj.constructor && obj.constructor.name) return obj.constructor.name;

	        return upperFirst({}.toString.call(obj).replace(/(\[object )|]/g, ''));
	    }

	    return exports;
	}();

	/* ------------------------------ identity ------------------------------ */

	var identity = exports.identity = _.identity = function () {
	    /* Return the first argument given.
	     *
	     * |Name  |Type|Desc       |
	     * |------|----|-----------|
	     * |val   |*   |Any value  |
	     * |return|*   |Given value|
	     *
	     * ```javascript
	     * identity('a'); // -> 'a'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val;
	    }

	    return exports;
	}();

	/* ------------------------------ objToStr ------------------------------ */

	var objToStr = exports.objToStr = _.objToStr = function () {
	    /* Alias of Object.prototype.toString.
	     *
	     * |Name  |Type  |Desc                                |
	     * |------|------|------------------------------------|
	     * |value |*     |Source value                        |
	     * |return|string|String representation of given value|
	     * 
	     * ```javascript
	     * objToStr(5); // -> '[object Number]'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var ObjToStr = Object.prototype.toString;

	    function exports(val) {
	        return ObjToStr.call(val);
	    }

	    return exports;
	}();

	/* ------------------------------ isArgs ------------------------------ */

	var isArgs = exports.isArgs = _.isArgs = function () {
	    /* Check if value is classified as an arguments object.
	     *
	     * |Name  |Type   |Desc                                |
	     * |------|-------|------------------------------------|
	     * |val   |*      |Value to check                      |
	     * |return|boolean|True if value is an arguments object|
	     *
	     * ```javascript
	     * (function () {
	     *     isArgs(arguments); // -> true
	     * })();
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object Arguments]';
	    }

	    return exports;
	}();

	/* ------------------------------ isArr ------------------------------ */

	var isArr = exports.isArr = _.isArr = function (exports) {
	    /* Check if value is an `Array` object.
	     *
	     * |Name  |Type   |Desc                              |
	     * |------|-------|----------------------------------|
	     * |val   |*      |Value to check                    |
	     * |return|boolean|True if value is an `Array` object|
	     *
	     * ```javascript
	     * isArr([]); // -> true
	     * isArr({}); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    exports = Array.isArray || function (val) {
	        return objToStr(val) === '[object Array]';
	    };

	    return exports;
	}({});

	/* ------------------------------ castPath ------------------------------ */

	var castPath = exports.castPath = _.castPath = function () {
	    /* Cast value into a property path array.
	     *
	     * |Name  |Type  |Desc               |
	     * |------|------|-------------------|
	     * |str   |*     |Value to inspect   |
	     * |[obj] |object|Object to query    |
	     * |return|array |Property path array|
	     * 
	     * ```javascript
	     * castPath('a.b.c'); // -> ['a', 'b', 'c']
	     * castPath(['a']); // -> ['a']
	     * castPath('a[0].b'); // -> ['a', '0', 'b']
	     * castPath('a.b.c', {'a.b.c': true}); // -> ['a.b.c']
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * has isArr 
	     */

	    function exports(str, obj) {
	        if (isArr(str)) return str;
	        if (obj && has(obj, str)) return [str];

	        var ret = [];

	        str.replace(regPropName, function (match, number, quote, str) {
	            ret.push(quote ? str.replace(regEscapeChar, '$1') : number || match);
	        });

	        return ret;
	    }

	    // Lodash _stringToPath
	    var regPropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
	        regEscapeChar = /\\(\\)?/g;

	    return exports;
	}();

	/* ------------------------------ safeGet ------------------------------ */

	var safeGet = exports.safeGet = _.safeGet = function () {
	    /* Get object property, don't throw undefined error.
	     *
	     * |Name  |Type        |Desc                     |
	     * |------|------------|-------------------------|
	     * |obj   |object      |Object to query          |
	     * |path  |array string|Path of property to get  |
	     * |return|*           |Target value or undefined|
	     *
	     * ```javascript
	     * var obj = {a: {aa: {aaa: 1}}};
	     * safeGet(obj, 'a.aa.aaa'); // -> 1
	     * safeGet(obj, ['a', 'aa']); // -> {aaa: 1}
	     * safeGet(obj, 'a.b'); // -> undefined
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isUndef castPath 
	     */

	    function exports(obj, path) {
	        path = castPath(path, obj);

	        var prop;

	        prop = path.shift();
	        while (!isUndef(prop)) {
	            obj = obj[prop];
	            if (obj == null) return;
	            prop = path.shift();
	        }

	        return obj;
	    }

	    return exports;
	}();

	/* ------------------------------ isDate ------------------------------ */

	var isDate = exports.isDate = _.isDate = function () {
	    /* Check if value is classified as a Date object.
	     *
	     * |Name  |Type   |Desc                          |
	     * |------|-------|------------------------------|
	     * |val   |*      |value to check                |
	     * |return|boolean|True if value is a Date object|
	     *
	     * ```javascript
	     * isDate(new Date()); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object Date]';
	    }

	    return exports;
	}();

	/* ------------------------------ isFn ------------------------------ */

	var isFn = exports.isFn = _.isFn = function () {
	    /* Check if value is a function.
	     *
	     * |Name  |Type   |Desc                       |
	     * |------|-------|---------------------------|
	     * |val   |*      |Value to check             |
	     * |return|boolean|True if value is a function|
	     *
	     * Generator function is also classified as true.
	     *
	     * ```javascript
	     * isFn(function() {}); // -> true
	     * isFn(function*() {}); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        var objStr = objToStr(val);

	        return objStr === '[object Function]' || objStr === '[object GeneratorFunction]';
	    }

	    return exports;
	}();

	/* ------------------------------ isMiniProgram ------------------------------ */

	var isMiniProgram = exports.isMiniProgram = _.isMiniProgram = function (exports) {
	    /* Check if running in wechat mini program.
	     *
	     * ```javascript
	     * console.log(isMiniProgram); // -> true if running in mini program.
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isFn 
	     */

	    /* eslint-disable no-undef */
	    exports = typeof wx !== 'undefined' && isFn(wx.openLocation);

	    return exports;
	}({});

	/* ------------------------------ isNum ------------------------------ */

	var isNum = exports.isNum = _.isNum = function () {
	    /* Check if value is classified as a Number primitive or object.
	     *
	     * |Name  |Type   |Desc                                 |
	     * |------|-------|-------------------------------------|
	     * |val   |*      |Value to check                       |
	     * |return|boolean|True if value is correctly classified|
	     * 
	     * ```javascript
	     * isNum(5); // -> true
	     * isNum(5.1); // -> true
	     * isNum({}); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object Number]';
	    }

	    return exports;
	}();

	/* ------------------------------ isArrLike ------------------------------ */

	var isArrLike = exports.isArrLike = _.isArrLike = function () {
	    /* Check if value is array-like.
	     *
	     * |Name  |Type   |Desc                       |
	     * |------|-------|---------------------------|
	     * |val   |*      |Value to check             |
	     * |return|boolean|True if value is array like|
	     *
	     * > Function returns false.
	     *
	     * ```javascript
	     * isArrLike('test'); // -> true
	     * isArrLike(document.body.children); // -> true;
	     * isArrLike([1, 2, 3]); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isNum isFn 
	     */

	    var MAX_ARR_IDX = Math.pow(2, 53) - 1;

	    function exports(val) {
	        if (!val) return false;

	        var len = val.length;

	        return isNum(len) && len >= 0 && len <= MAX_ARR_IDX && !isFn(val);
	    }

	    return exports;
	}();

	/* ------------------------------ each ------------------------------ */

	var _each = _.each = function () {
	    /* Iterate over elements of collection and invokes iteratee for each element.
	     *
	     * |Name    |Type        |Desc                          |
	     * |--------|------------|------------------------------|
	     * |obj     |object array|Collection to iterate over    |
	     * |iteratee|function    |Function invoked per iteration|
	     * |[ctx]   |*           |Function context              |
	     *
	     * ```javascript
	     * each({'a': 1, 'b': 2}, function (val, key) {});
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isArrLike keys optimizeCb 
	     */

	    function exports(obj, iteratee, ctx) {
	        iteratee = optimizeCb(iteratee, ctx);

	        var i, len;

	        if (isArrLike(obj)) {
	            for (i = 0, len = obj.length; i < len; i++) {
	                iteratee(obj[i], i, obj);
	            }
	        } else {
	            var _keys = keys(obj);
	            for (i = 0, len = _keys.length; i < len; i++) {
	                iteratee(obj[_keys[i]], _keys[i], obj);
	            }
	        }

	        return obj;
	    }

	    return exports;
	}();

	/* ------------------------------ createAssigner ------------------------------ */

	exports.each = _each;
	var createAssigner = exports.createAssigner = _.createAssigner = function () {
	    /* Used to create extend, extendOwn and defaults.
	     *
	     * |Name    |Type    |Desc                          |
	     * |--------|--------|------------------------------|
	     * |keysFn  |function|Function to get object keys   |
	     * |defaults|boolean |No override when set to true  |
	     * |return  |function|Result function, extend...    |
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isUndef each 
	     */

	    function exports(keysFn, defaults) {
	        return function (obj) {
	            _each(arguments, function (src, idx) {
	                if (idx === 0) return;

	                var keys = keysFn(src);

	                _each(keys, function (key) {
	                    if (!defaults || isUndef(obj[key])) obj[key] = src[key];
	                });
	            });

	            return obj;
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ defaults ------------------------------ */

	var defaults = exports.defaults = _.defaults = function (exports) {
	    /* Fill in undefined properties in object with the first value present in the following list of defaults objects.
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |obj   |object|Destination object|
	     * |*src  |object|Sources objects   |
	     * |return|object|Destination object|
	     *
	     * ```javascript
	     * defaults({name: 'RedHood'}, {name: 'Unknown', age: 24}); // -> {name: 'RedHood', age: 24}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * createAssigner allKeys 
	     */

	    exports = createAssigner(allKeys, true);

	    return exports;
	}({});

	/* ------------------------------ extend ------------------------------ */

	var extend = exports.extend = _.extend = function (exports) {
	    /* Copy all of the properties in the source objects over to the destination object.
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |obj   |object|Destination object|
	     * |...src|object|Sources objects   |
	     * |return|object|Destination object|
	     *
	     * ```javascript
	     * extend({name: 'RedHood'}, {age: 24}); // -> {name: 'RedHood', age: 24}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * createAssigner allKeys 
	     */

	    exports = createAssigner(allKeys);

	    return exports;
	}({});

	/* ------------------------------ clone ------------------------------ */

	var clone = exports.clone = _.clone = function () {
	    /* Create a shallow-copied clone of the provided plain object.
	     *
	     * Any nested objects or arrays will be copied by reference, not duplicated.
	     *
	     * |Name  |Type|Desc          |
	     * |------|----|--------------|
	     * |val   |*   |Value to clone|
	     * |return|*   |Cloned value  |
	     *
	     * ```javascript
	     * clone({name: 'eustia'}); // -> {name: 'eustia'}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isObj isArr extend 
	     */

	    function exports(obj) {
	        if (!isObj(obj)) return obj;

	        return isArr(obj) ? obj.slice() : extend({}, obj);
	    }

	    return exports;
	}();

	/* ------------------------------ extendOwn ------------------------------ */

	var extendOwn = exports.extendOwn = _.extendOwn = function (exports) {
	    /* Like extend, but only copies own properties over to the destination object.
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |obj   |object|Destination object|
	     * |*src  |object|Sources objects   |
	     * |return|object|Destination object|
	     *
	     * ```javascript
	     * extendOwn({name: 'RedHood'}, {age: 24}); // -> {name: 'RedHood', age: 24}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * keys createAssigner 
	     */

	    exports = createAssigner(keys);

	    return exports;
	}({});

	/* ------------------------------ values ------------------------------ */

	var values = exports.values = _.values = function () {
	    /* Create an array of the own enumerable property values of object.
	     *
	     * |Name  |Type  |Desc                    |
	     * |------|------|------------------------|
	     * |obj   |object|Object to query         |
	     * |return|array |Array of property values|
	     *
	     * ```javascript
	     * values({one: 1, two: 2}); // -> [1, 2]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * each 
	     */

	    function exports(obj) {
	        var ret = [];

	        _each(obj, function (val) {
	            ret.push(val);
	        });

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ contain ------------------------------ */

	var contain = exports.contain = _.contain = function () {
	    /* Check if the value is present in the list.
	     *
	     * |Name  |Type        |Desc                                |
	     * |------|------------|------------------------------------|
	     * |array |array object|Target list                         |
	     * |value |*           |Value to check                      |
	     * |return|boolean     |True if value is present in the list|
	     *
	     * ```javascript
	     * contain([1, 2, 3], 1); // -> true
	     * contain({a: 1, b: 2}, 1); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * idxOf isArrLike values 
	     */

	    function exports(arr, val) {
	        if (!isArrLike(arr)) arr = values(arr);

	        return idxOf(arr, val) >= 0;
	    }

	    return exports;
	}();

	/* ------------------------------ isStr ------------------------------ */

	var isStr = exports.isStr = _.isStr = function () {
	    /* Check if value is a string primitive.
	     *
	     * |Name  |Type   |Desc                               |
	     * |------|-------|-----------------------------------|
	     * |val   |*      |Value to check                     |
	     * |return|boolean|True if value is a string primitive|
	     *
	     * ```javascript
	     * isStr('licia'); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object String]';
	    }

	    return exports;
	}();

	/* ------------------------------ isEmpty ------------------------------ */

	var isEmpty = exports.isEmpty = _.isEmpty = function () {
	    /* Check if value is an empty object or array.
	     *
	     * |Name  |Type   |Desc                  |
	     * |------|-------|----------------------|
	     * |val   |*      |Value to check        |
	     * |return|boolean|True if value is empty|
	     *
	     * ```javascript
	     * isEmpty([]); // -> true
	     * isEmpty({}); // -> true
	     * isEmpty(''); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isArrLike isArr isStr isArgs keys 
	     */

	    function exports(val) {
	        if (val == null) return true;

	        if (isArrLike(val) && (isArr(val) || isStr(val) || isArgs(val))) {
	            return val.length === 0;
	        }

	        return keys(val).length === 0;
	    }

	    return exports;
	}();

	/* ------------------------------ isBool ------------------------------ */

	var isBool = exports.isBool = _.isBool = function () {
	    /* Check if value is a boolean primitive.
	     *
	     * |Name  |Type   |Desc                      |
	     * |------|-------|--------------------------|
	     * |val   |*      |Value to check            |
	     * |return|boolean|True if value is a boolean|
	     *
	     * ```javascript
	     * isBool(true); // -> true
	     * isBool(false); // -> true
	     * isBool(1); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val === true || val === false;
	    }

	    return exports;
	}();

	/* ------------------------------ isCrossOrig ------------------------------ */

	var isCrossOrig = exports.isCrossOrig = _.isCrossOrig = function () {
	    /* Check if a url is cross origin.
	     */

	    /* dependencies
	     * startWith 
	     */

	    var origin = window.location.origin;

	    function exports(url) {
	        return !startWith(url, origin);
	    }

	    return exports;
	}();

	/* ------------------------------ isEl ------------------------------ */

	var isEl = exports.isEl = _.isEl = function () {
	    /* Check if value is a DOM element.
	     *
	     * |Name  |Type   |Desc                          |
	     * |------|-------|------------------------------|
	     * |val   |*      |Value to check                |
	     * |return|boolean|True if value is a DOM element|
	     *
	     * ```javascript
	     * isEl(document.body); // -> true
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    function exports(val) {
	        return !!(val && val.nodeType === 1);
	    }

	    return exports;
	}();

	/* ------------------------------ isErr ------------------------------ */

	var isErr = exports.isErr = _.isErr = function () {
	    /* Check if value is an error.
	     *
	     * |Name  |Type   |Desc                     |
	     * |------|-------|-------------------------|
	     * |val   |*      |Value to check           |
	     * |return|boolean|True if value is an error|
	     *
	     * ```javascript
	     * isErr(new Error()); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object Error]';
	    }

	    return exports;
	}();

	/* ------------------------------ isErudaEl ------------------------------ */

	var isErudaEl = exports.isErudaEl = _.isErudaEl = function () {
	    /* See if an element is within eruda.
	     */

	    function exports(el) {
	        var parentNode = el.parentNode;

	        if (!parentNode) return false;

	        while (parentNode) {
	            parentNode = parentNode.parentNode;
	            if (parentNode && parentNode.id === 'eruda') return true;
	        }

	        return false;
	    }

	    return exports;
	}();

	/* ------------------------------ isMatch ------------------------------ */

	var isMatch = exports.isMatch = _.isMatch = function () {
	    /* Check if keys and values in src are contained in obj.
	     *
	     * |Name  |Type   |Desc                              |
	     * |------|-------|----------------------------------|
	     * |obj   |object |Object to inspect                 |
	     * |src   |object |Object of property values to match|
	     * |return|boolean|True if object is match           |
	     *
	     * ```javascript
	     * isMatch({a: 1, b: 2}, {a: 1}); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * keys 
	     */

	    function exports(obj, src) {
	        var _keys = keys(src),
	            len = _keys.length;

	        if (obj == null) return !len;

	        obj = Object(obj);

	        for (var i = 0; i < len; i++) {
	            var key = _keys[i];
	            if (src[key] !== obj[key] || !(key in obj)) return false;
	        }

	        return true;
	    }

	    return exports;
	}();

	/* ------------------------------ memoize ------------------------------ */

	var memoize = exports.memoize = _.memoize = function () {
	    /* Memoize a given function by caching the computed result.
	     *
	     * |Name    |Type    |Desc                                |
	     * |--------|--------|------------------------------------|
	     * |fn      |function|Function to have its output memoized|
	     * |[hashFn]|function|Function to create cache key        |
	     * |return  |function|New memoized function               |
	     *
	     * ```javascript
	     * var fibonacci = memoize(function(n)
	     * {
	     *     return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
	     * });
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * has 
	     */

	    function exports(fn, hashFn) {
	        var memoize = function memoize(key) {
	            var cache = memoize.cache,
	                address = '' + (hashFn ? hashFn.apply(this, arguments) : key);

	            if (!has(cache, address)) cache[address] = fn.apply(this, arguments);

	            return cache[address];
	        };

	        memoize.cache = {};

	        return memoize;
	    }

	    return exports;
	}();

	/* ------------------------------ isMobile ------------------------------ */

	var isMobile = exports.isMobile = _.isMobile = function (exports) {
	    /* Check whether client is using a mobile browser using ua.
	     *
	     * |Name                    |Type   |Desc                                 |
	     * |------------------------|-------|-------------------------------------|
	     * |[ua=navigator.userAgent]|string |User agent                           |
	     * |return                  |boolean|True if ua belongs to mobile browsers|
	     *
	     * ```javascript
	     * isMobile(navigator.userAgent);
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isBrowser memoize 
	     */

	    var regMobileAll = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
	        regMobileFour = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i;

	    exports = memoize(function (ua) {
	        ua = ua || (isBrowser ? navigator.userAgent : '');

	        return regMobileAll.test(ua) || regMobileFour.test(ua.substr(0, 4));
	    });

	    return exports;
	}({});

	/* ------------------------------ prefix ------------------------------ */

	var prefix = exports.prefix = _.prefix = function (exports) {
	    /* Add vendor prefixes to a CSS attribute.
	     *
	     * |Name  |Type  |Desc                  |
	     * |------|------|----------------------|
	     * |name  |string|Property name         |
	     * |return|string|Prefixed property name|
	     * 
	     * ### dash
	     * 
	     * Create a dasherize version.
	     * 
	     * ```javascript
	     * prefix('text-emphasis'); // -> 'WebkitTextEmphasis'
	     * prefix.dash('text-emphasis'); // -> '-webkit-text-emphasis'
	     * prefix('color'); // -> 'color'
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * memoize camelCase upperFirst has kebabCase 
	     */

	    exports = memoize(function (name) {
	        name = name.replace(regPrefixes, '');
	        name = camelCase(name);

	        if (has(style, name)) return name;

	        var i = prefixes.length;
	        while (i--) {
	            var prefixName = prefixes[i] + upperFirst(name);
	            if (has(style, prefixName)) return prefixName;
	        }

	        return name;
	    });

	    exports.dash = memoize(function (name) {
	        var camelCaseResult = exports(name);

	        return (regPrefixes.test(camelCaseResult) ? '-' : '') + kebabCase(camelCaseResult);
	    });

	    var prefixes = ['O', 'ms', 'Moz', 'Webkit'],
	        regPrefixes = /^(O)|(ms)|(Moz)|(Webkit)|(-o-)|(-ms-)|(-moz-)|(-webkit-)/g,
	        style = document.createElement('p').style;

	    return exports;
	}({});

	/* ------------------------------ isNaN ------------------------------ */

	var isNaN = exports.isNaN = _.isNaN = function () {
	    /* Check if value is an NaN.
	     *
	     * |Name  |Type   |Desc                   |
	     * |------|-------|-----------------------|
	     * |val   |*      |Value to check         |
	     * |return|boolean|True if value is an NaN|
	     *
	     * Undefined is not an NaN, different from global isNaN function.
	     *
	     * ```javascript
	     * isNaN(0); // -> false
	     * isNaN(NaN); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isNum 
	     */

	    function exports(val) {
	        return isNum(val) && val !== +val;
	    }

	    return exports;
	}();

	/* ------------------------------ isNil ------------------------------ */

	var isNil = exports.isNil = _.isNil = function () {
	    /* Check if value is null or undefined, the same as value == null.
	     * 
	     * |Name  |Type   |Desc                              |
	     * |------|-------|----------------------------------|
	     * |val   |*      |Value to check                    |
	     * |return|boolean|True if value is null or undefined|
	     * 
	     * ```javascript
	     * isNil(null); // -> true
	     * isNil(void 0); // -> true
	     * isNil(undefined); // -> true
	     * isNil(false); // -> false
	     * isNil(0); // -> false
	     * isNil([]); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val == null;
	    }

	    return exports;
	}();

	/* ------------------------------ toSrc ------------------------------ */

	var toSrc = exports.toSrc = _.toSrc = function () {
	    /* Convert function to its source code.
	     * 
	     * |Name  |Type    |Desc               |
	     * |------|--------|-------------------|
	     * |fn    |function|Function to convert|
	     * |return|string  |Source code        |
	     * 
	     * ```javascript
	     * toSrc(Math.min); // -> 'function min() { [native code] }'
	     * toSrc(function () {}) // -> 'function () { }'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isNil 
	     */

	    function exports(fn) {
	        if (isNil(fn)) return '';

	        try {
	            return fnToStr.call(fn);
	            /* eslint-disable no-empty */
	        } catch (e) {}

	        try {
	            return fn + '';
	            /* eslint-disable no-empty */
	        } catch (e) {}

	        return '';
	    }

	    var fnToStr = Function.prototype.toString;

	    return exports;
	}();

	/* ------------------------------ isNative ------------------------------ */

	var isNative = exports.isNative = _.isNative = function () {
	    /* Check if value is a native function.
	     * 
	     * |Name  |Type   |Desc                              |
	     * |------|-------|----------------------------------|
	     * |val   |*      |Value to check                    |
	     * |return|boolean|True if value is a native function|
	     * 
	     * ```javascript
	     * isNative(function () {}); // -> false
	     * isNative(Math.min); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isObj isFn has toSrc 
	     */

	    function exports(val) {
	        if (!isObj(val)) return false;

	        if (isFn(val)) return regIsNative.test(toSrc(val));

	        // Detect host constructors (Safari > 4; really typed array specific)
	        return regIsHostCtor.test(toSrc(val));
	    }

	    var hasOwnProperty = Object.prototype.hasOwnProperty;

	    var regIsNative = new RegExp('^' + toSrc(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

	    var regIsHostCtor = /^\[object .+?Constructor\]$/;

	    return exports;
	}();

	/* ------------------------------ isNull ------------------------------ */

	var isNull = exports.isNull = _.isNull = function () {
	    /* Check if value is an Null.
	     *
	     * |Name  |Type   |Desc                    |
	     * |------|-------|------------------------|
	     * |val   |*      |Value to check          |
	     * |return|boolean|True if value is an Null|
	     *
	     * ```javascript
	     * isNull(null); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val === null;
	    }

	    return exports;
	}();

	/* ------------------------------ isRegExp ------------------------------ */

	var isRegExp = exports.isRegExp = _.isRegExp = function () {
	    /* Check if value is a regular expression.
	     *
	     * |Name  |Type   |Desc                                 |
	     * |------|-------|-------------------------------------|
	     * |val   |*      |Value to check                       |
	     * |return|boolean|True if value is a regular expression|
	     *
	     * ```javascript
	     * isRegExp(/a/); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object RegExp]';
	    }

	    return exports;
	}();

	/* ------------------------------ loadJs ------------------------------ */

	var loadJs = exports.loadJs = _.loadJs = function () {
	    /* Inject script tag into page with given src value.
	     *
	     * |Name|Type    |Desc           |
	     * |----|--------|---------------|
	     * |src |string  |Script source  |
	     * |cb  |function|Onload callback|
	     *
	     * ```javascript
	     * loadJs('main.js', function (isLoaded)
	     * {
	     *     // Do something...
	     * });
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    function exports(src, cb) {
	        var script = document.createElement('script');
	        script.src = src;
	        script.onload = function () {
	            var isNotLoaded = script.readyState && script.readyState != 'complete' && script.readyState != 'loaded';

	            cb && cb(!isNotLoaded);
	        };
	        document.body.appendChild(script);
	    }

	    return exports;
	}();

	/* ------------------------------ repeat ------------------------------ */

	var repeat = exports.repeat = _.repeat = function (exports) {
	    /* Repeat string n-times.
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |str   |string|String to repeat|
	     * |n     |number|Repeat times    |
	     * |return|string|Repeated string |
	     *
	     * ```javascript
	     * repeat('a', 3); // -> 'aaa'
	     * repeat('ab', 2); // -> 'abab'
	     * repeat('*', 0); // -> ''
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    exports = function exports(str, n) {
	        var ret = '';

	        if (n < 1) return '';

	        while (n > 0) {
	            if (n & 1) ret += str;
	            n >>= 1;
	            str += str;
	        }

	        return ret;
	    };

	    return exports;
	}({});

	/* ------------------------------ lpad ------------------------------ */

	var lpad = exports.lpad = _.lpad = function () {
	    /* Pad string on the left side if it's shorter than length.
	     *
	     * |Name   |Type  |Desc                  |
	     * |-------|------|----------------------|
	     * |str    |string|String to pad         |
	     * |len    |number|Padding length        |
	     * |[chars]|string|String used as padding|
	     * |return |string|Resulted string       |
	     *
	     * ```javascript
	     * lpad('a', 5); // -> '    a'
	     * lpad('a', 5, '-'); // -> '----a'
	     * lpad('abc', 3, '-'); // -> 'abc'
	     * lpad('abc', 5, 'ab'); // -> 'ababc'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * repeat toStr 
	     */

	    function exports(str, len, chars) {
	        str = toStr(str);

	        var strLen = str.length;

	        chars = chars || ' ';

	        if (strLen < len) str = (repeat(chars, len - strLen) + str).slice(-len);

	        return str;
	    }

	    return exports;
	}();

	/* ------------------------------ dateFormat ------------------------------ */

	var dateFormat = exports.dateFormat = _.dateFormat = function () {
	    /* Simple but extremely useful date format function.
	     *
	     * |Name           |Type   |Desc                 |
	     * |---------------|-------|---------------------|
	     * |[date=new Date]|Date   |Date object to format|
	     * |mask           |string |Format mask          |
	     * |[utc=false]    |boolean|UTC or not           |
	     * |[gmt=false]    |boolean|GMT or not           |
	     *
	     * |Mask|Description                                                      |
	     * |----|-----------------------------------------------------------------|
	     * |d   |Day of the month as digits; no leading zero for single-digit days|
	     * |dd  |Day of the month as digits; leading zero for single-digit days   |
	     * |ddd |Day of the week as a three-letter abbreviation                   |
	     * |dddd|Day of the week as its full name                                 |
	     * |m   |Month as digits; no leading zero for single-digit months         |
	     * |mm  |Month as digits; leading zero for single-digit months            |
	     * |mmm |Month as a three-letter abbreviation                             |
	     * |mmmm|Month as its full name                                           |
	     * |yy  |Year as last two digits; leading zero for years less than 10     |
	     * |yyyy|Year represented by four digits                                  |
	     * |h   |Hours; no leading zero for single-digit hours (12-hour clock)    |
	     * |hh  |Hours; leading zero for single-digit hours (12-hour clock)       |
	     * |H   |Hours; no leading zero for single-digit hours (24-hour clock)    |
	     * |HH  |Hours; leading zero for single-digit hours (24-hour clock)       |
	     * |M   |Minutes; no leading zero for single-digit minutes                |
	     * |MM  |Minutes; leading zero for single-digit minutes                   |
	     * |s   |Seconds; no leading zero for single-digit seconds                |
	     * |ss  |Seconds; leading zero for single-digit seconds                   |
	     * |l L |Milliseconds. l gives 3 digits. L gives 2 digits                 |
	     * |t   |Lowercase, single-character time marker string: a or p           |
	     * |tt  |Lowercase, two-character time marker string: am or pm            |
	     * |T   |Uppercase, single-character time marker string: A or P           |
	     * |TT  |Uppercase, two-character time marker string: AM or PM            |
	     * |Z   |US timezone abbreviation, e.g. EST or MDT                        |
	     * |o   |GMT/UTC timezone offset, e.g. -0500 or +0230                     |
	     * |S   |The date's ordinal suffix (st, nd, rd, or th)                    |
	     * |UTC:|Must be the first four characters of the mask                    |
	     *
	     * ```javascript
	     * dateFormat('isoDate'); // -> 2016-11-19
	     * dateFormat('yyyy-mm-dd HH:MM:ss'); // -> 2016-11-19 19:00:04
	     * dateFormat(new Date(), 'yyyy-mm-dd'); // -> 2016-11-19
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isStr isDate toStr lpad 
	     */

	    function exports(date, mask, utc, gmt) {
	        if (arguments.length === 1 && isStr(date) && !regNum.test(date)) {
	            mask = date;
	            date = undefined;
	        }

	        date = date || new Date();

	        if (!isDate(date)) date = new Date(date);

	        mask = toStr(exports.masks[mask] || mask || exports.masks['default']);

	        var maskSlice = mask.slice(0, 4);

	        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
	            mask = mask.slice(4);
	            utc = true;
	            if (maskSlice === 'GMT:') gmt = true;
	        }

	        var prefix = utc ? 'getUTC' : 'get',
	            d = date[prefix + 'Date'](),
	            D = date[prefix + 'Day'](),
	            m = date[prefix + 'Month'](),
	            y = date[prefix + 'FullYear'](),
	            H = date[prefix + 'Hours'](),
	            M = date[prefix + 'Minutes'](),
	            s = date[prefix + 'Seconds'](),
	            L = date[prefix + 'Milliseconds'](),
	            o = utc ? 0 : date.getTimezoneOffset(),
	            flags = {
	            d: d,
	            dd: padZero(d),
	            ddd: exports.i18n.dayNames[D],
	            dddd: exports.i18n.dayNames[D + 7],
	            m: m + 1,
	            mm: padZero(m + 1),
	            mmm: exports.i18n.monthNames[m],
	            mmmm: exports.i18n.monthNames[m + 12],
	            yy: toStr(y).slice(2),
	            yyyy: y,
	            h: H % 12 || 12,
	            hh: padZero(H % 12 || 12),
	            H: H,
	            HH: padZero(H),
	            M: M,
	            MM: padZero(M),
	            s: s,
	            ss: padZero(s),
	            l: padZero(L, 3),
	            L: padZero(Math.round(L / 10)),
	            t: H < 12 ? 'a' : 'p',
	            tt: H < 12 ? 'am' : 'pm',
	            T: H < 12 ? 'A' : 'P',
	            TT: H < 12 ? 'AM' : 'PM',
	            Z: gmt ? 'GMT' : utc ? 'UTC' : (toStr(date).match(regTimezone) || ['']).pop().replace(regTimezoneClip, ''),
	            o: (o > 0 ? '-' : '+') + padZero(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
	            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]
	        };

	        return mask.replace(regToken, function (match) {
	            if (match in flags) return flags[match];

	            return match.slice(1, match.length - 1);
	        });
	    }

	    function padZero(str, len) {
	        return lpad(toStr(str), len || 2, '0');
	    }

	    var regToken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|'[^']*'|'[^']*'/g,
	        regTimezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
	        regNum = /\d/,
	        regTimezoneClip = /[^-+\dA-Z]/g;

	    exports.masks = {
	        default: 'ddd mmm dd yyyy HH:MM:ss',
	        shortDate: 'm/d/yy',
	        mediumDate: 'mmm d, yyyy',
	        longDate: 'mmmm d, yyyy',
	        fullDate: 'dddd, mmmm d, yyyy',
	        shortTime: 'h:MM TT',
	        mediumTime: 'h:MM:ss TT',
	        longTime: 'h:MM:ss TT Z',
	        isoDate: 'yyyy-mm-dd',
	        isoTime: 'HH:MM:ss',
	        isoDateTime: "yyyy-mm-dd'T'HH:MM:sso",
	        isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",
	        expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'
	    };

	    exports.i18n = {
	        dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
	        monthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
	    };

	    return exports;
	}();

	/* ------------------------------ ltrim ------------------------------ */

	var ltrim = exports.ltrim = _.ltrim = function () {
	    /* Remove chars or white-spaces from beginning of string.
	     *
	     * |Name  |Type        |Desc              |
	     * |------|------------|------------------|
	     * |str   |string      |String to trim    |
	     * |chars |string array|Characters to trim|
	     * |return|string      |Trimmed string    |
	     *
	     * ```javascript
	     * ltrim(' abc  '); // -> 'abc  '
	     * ltrim('_abc_', '_'); // -> 'abc_'
	     * ltrim('_abc_', ['a', '_']); // -> 'bc_'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var regSpace = /^\s+/;

	    function exports(str, chars) {
	        if (chars == null) return str.replace(regSpace, '');

	        var start = 0,
	            len = str.length,
	            charLen = chars.length,
	            found = true,
	            i,
	            c;

	        while (found && start < len) {
	            found = false;
	            i = -1;
	            c = str.charAt(start);

	            while (++i < charLen) {
	                if (c === chars[i]) {
	                    found = true;
	                    start++;
	                    break;
	                }
	            }
	        }

	        return start >= len ? '' : str.substr(start, len);
	    }

	    return exports;
	}();

	/* ------------------------------ matcher ------------------------------ */

	var matcher = exports.matcher = _.matcher = function () {
	    /* Return a predicate function that checks if attrs are contained in an object.
	     *
	     * |Name  |Type    |Desc                              |
	     * |------|--------|----------------------------------|
	     * |attrs |object  |Object of property values to match|
	     * |return|function|New predicate function            |
	     *
	     * ```javascript
	     * var objects = [
	     *     {a: 1, b: 2, c: 3 },
	     *     {a: 4, b: 5, c: 6 }
	     * ];
	     * filter(objects, matcher({a: 4, c: 6 })); // -> [{a: 4, b: 5, c: 6 }]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * extendOwn isMatch 
	     */

	    function exports(attrs) {
	        attrs = extendOwn({}, attrs);

	        return function (obj) {
	            return isMatch(obj, attrs);
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ safeCb ------------------------------ */

	var safeCb = exports.safeCb = _.safeCb = function (exports) {
	    /* Create callback based on input value.
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isFn isObj optimizeCb matcher identity 
	     */

	    exports = function exports(val, ctx, argCount) {
	        if (val == null) return identity;

	        if (isFn(val)) return optimizeCb(val, ctx, argCount);

	        if (isObj(val)) return matcher(val);

	        return function (key) {
	            return function (obj) {
	                return obj == null ? undefined : obj[key];
	            };
	        };
	    };

	    return exports;
	}({});

	/* ------------------------------ filter ------------------------------ */

	var filter = exports.filter = _.filter = function () {
	    /* Iterates over elements of collection, returning an array of all the values that pass a truth test.
	     *
	     * |Name     |Type    |Desc                                   |
	     * |---------|--------|---------------------------------------|
	     * |obj      |array   |Collection to iterate over             |
	     * |predicate|function|Function invoked per iteration         |
	     * |[ctx]    |*       |Predicate context                      |
	     * |return   |array   |Array of all values that pass predicate|
	     *
	     * ```javascript
	     * filter([1, 2, 3, 4, 5], function (val)
	     * {
	     *     return val % 2 === 0;
	     * }); // -> [2, 4]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * safeCb each 
	     */

	    function exports(obj, predicate, ctx) {
	        var ret = [];

	        predicate = safeCb(predicate, ctx);

	        _each(obj, function (val, idx, list) {
	            if (predicate(val, idx, list)) ret.push(val);
	        });

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ evalCss ------------------------------ */

	var evalCss = exports.evalCss = _.evalCss = function () {
	    /* Eval css.
	     */

	    /* dependencies
	     * toStr each filter 
	     */

	    var styleList = [],
	        scale = 1;

	    function exports(css, container) {
	        css = toStr(css);

	        for (var i = 0, len = styleList.length; i < len; i++) {
	            if (styleList[i].css === css) return;
	        }

	        container = container || exports.container || document.head;
	        var el = document.createElement('style');

	        el.type = 'text/css';
	        container.appendChild(el);

	        var style = { css: css, el: el, container: container };
	        resetStyle(style);
	        styleList.push(style);

	        return style;
	    }

	    exports.setScale = function (s) {
	        scale = s;
	        _each(styleList, function (style) {
	            return resetStyle(style);
	        });
	    };

	    exports.clear = function () {
	        _each(styleList, function (_ref) {
	            var container = _ref.container,
	                el = _ref.el;
	            return container.removeChild(el);
	        });
	        styleList = [];
	    };

	    exports.remove = function (style) {
	        styleList = filter(styleList, function (s) {
	            return s !== style;
	        });

	        style.container.removeChild(style.el);
	    };

	    function resetStyle(_ref2) {
	        var css = _ref2.css,
	            el = _ref2.el;

	        el.innerText = css.replace(/(\d+)px/g, function ($0, $1) {
	            return +$1 * scale + 'px';
	        });
	    }

	    return exports;
	}();

	/* ------------------------------ map ------------------------------ */

	var map = exports.map = _.map = function () {
	    /* Create an array of values by running each element in collection through iteratee.
	     *
	     * |Name    |Type        |Desc                          |
	     * |--------|------------|------------------------------|
	     * |obj     |array object|Collection to iterate over    |
	     * |iteratee|function    |Function invoked per iteration|
	     * |[ctx]   |*           |Function context              |
	     * |return  |array       |New mapped array              |
	     *
	     * ```javascript
	     * map([4, 8], function (n) { return n * n; }); // -> [16, 64]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * safeCb keys isArrLike 
	     */

	    function exports(obj, iteratee, ctx) {
	        iteratee = safeCb(iteratee, ctx);

	        var _keys = !isArrLike(obj) && keys(obj),
	            len = (_keys || obj).length,
	            results = Array(len);

	        for (var i = 0; i < len; i++) {
	            var curKey = _keys ? _keys[i] : i;
	            results[i] = iteratee(obj[curKey], curKey, obj);
	        }

	        return results;
	    }

	    return exports;
	}();

	/* ------------------------------ decodeUriComponent ------------------------------ */

	var decodeUriComponent = exports.decodeUriComponent = _.decodeUriComponent = function () {
	    /* Better decodeURIComponent that does not throw if input is invalid.
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |str   |string|String to decode|
	     * |return|string|Decoded string  |
	     * 
	     * ```javascript
	     * decodeUriComponent('%%25%'); // -> '%%%'
	     * decodeUriComponent('%E0%A4%A'); // -> '\xE0\xA4%A'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * each ucs2 map utf8 
	     */

	    function exports(str) {
	        try {
	            return decodeURIComponent(str);
	        } catch (e) {
	            var replaceMap = {};

	            var matches = str.match(regMatcher);

	            _each(matches, function (match) {
	                str = str.replace(match, decode(match));
	            });

	            return str;
	        }
	    }

	    function decode(str) {
	        str = str.split('%').slice(1);

	        var bytes = map(str, hexToInt);

	        str = ucs2.encode(bytes);
	        str = utf8.decode(str, true);

	        return str;
	    }

	    function hexToInt(numStr) {
	        return +('0x' + numStr);
	    }

	    var regMatcher = /(%[a-f0-9]{2})+/gi;

	    return exports;
	}();

	/* ------------------------------ cookie ------------------------------ */

	var cookie = exports.cookie = _.cookie = function (exports) {
	    /* Simple api for handling browser cookies.
	     *
	     * ### get
	     *
	     * Get cookie value.
	     *
	     * |Name  |Type  |Desc                      |
	     * |------|------|--------------------------|
	     * |key   |string|Cookie key                |
	     * |return|string|Corresponding cookie value|
	     *
	     * ### set
	     *
	     * Set cookie value.
	     *
	     * |Name     |Type   |Desc          |
	     * |---------|-------|--------------|
	     * |key      |string |Cookie key    |
	     * |val      |string |Cookie value  |
	     * |[options]|object |Cookie options|
	     * |return   |exports|Module cookie |
	     *
	     * ### remove
	     *
	     * Remove cookie value.
	     *
	     * |Name     |Type   |Desc          |
	     * |---------|-------|--------------|
	     * |key      |string |Cookie key    |
	     * |[options]|object |Cookie options|
	     * |return   |exports|Module cookie |
	     *
	     * ```javascript
	     * cookie.set('a', '1', {path: '/'});
	     * cookie.get('a'); // -> '1'
	     * cookie.remove('a');
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * defaults isNum isUndef decodeUriComponent 
	     */

	    var defOpts = { path: '/' };

	    function setCookie(key, val, options) {
	        if (!isUndef(val)) {
	            options = options || {};
	            options = defaults(options, defOpts);

	            if (isNum(options.expires)) {
	                var expires = new Date();
	                expires.setMilliseconds(expires.getMilliseconds() + options.expires * 864e5);
	                options.expires = expires;
	            }

	            val = encodeURIComponent(val);
	            key = encodeURIComponent(key);

	            document.cookie = [key, '=', val, options.expires && '; expires=' + options.expires.toUTCString(), options.path && '; path=' + options.path, options.domain && '; domain=' + options.domain, options.secure ? '; secure' : ''].join('');

	            return exports;
	        }

	        var cookies = document.cookie ? document.cookie.split('; ') : [],
	            result = key ? undefined : {};

	        for (var i = 0, len = cookies.length; i < len; i++) {
	            var c = cookies[i],
	                parts = c.split('='),
	                name = decodeUriComponent(parts.shift());

	            c = parts.join('=');
	            c = decodeUriComponent(c);

	            if (key === name) {
	                result = c;
	                break;
	            }

	            if (!key) result[name] = c;
	        }

	        return result;
	    }

	    exports = {
	        get: setCookie,
	        set: setCookie,
	        remove: function remove(key, options) {
	            options = options || {};
	            options.expires = -1;

	            return setCookie(key, '', options);
	        }
	    };

	    return exports;
	}({});

	/* ------------------------------ toArr ------------------------------ */

	var toArr = exports.toArr = _.toArr = function () {
	    /* Convert value to an array.
	     *
	     * |Name  |Type |Desc            |
	     * |------|-----|----------------|
	     * |val   |*    |Value to convert|
	     * |return|array|Converted array |
	     *
	     * ```javascript
	     * toArr({a: 1, b: 2}); // -> [{a: 1, b: 2}]
	     * toArr('abc'); // -> ['abc']
	     * toArr(1); // -> [1]
	     * toArr(null); // -> []
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isArrLike map isArr isStr 
	     */

	    function exports(val) {
	        if (!val) return [];

	        if (isArr(val)) return val;

	        if (isArrLike(val) && !isStr(val)) return map(val);

	        return [val];
	    }

	    return exports;
	}();

	/* ------------------------------ Class ------------------------------ */

	var Class = exports.Class = _.Class = function () {
	    /* Create JavaScript class.
	     *
	     * |Name     |Type    |Desc                             |
	     * |---------|--------|---------------------------------|
	     * |methods  |object  |Public methods                   |
	     * |[statics]|object  |Static methods                   |
	     * |return   |function|Function used to create instances|
	     *
	     * ```javascript
	     * var People = Class({
	     *     initialize: function People(name, age)
	     *     {
	     *         this.name = name;
	     *         this.age = age;
	     *     },
	     *     introduce: function ()
	     *     {
	     *         return 'I am ' + this.name + ', ' + this.age + ' years old.';
	     *     }
	     * });
	     *
	     * var Student = People.extend({
	     *     initialize: function Student(name, age, school)
	     *     {
	     *         this.callSuper(People, 'initialize', arguments);
	     *
	     *         this.school = school;
	     *     },
	     *     introduce: function ()
	     *     {
	     *         return this.callSuper(People, 'introduce') + '\n I study at ' + this.school + '.';
	     *     }
	     * }, {
	     *     is: function (obj)
	     *     {
	     *         return obj instanceof Student;
	     *     }
	     * });
	     *
	     * var a = new Student('allen', 17, 'Hogwarts');
	     * a.introduce(); // -> 'I am allen, 17 years old. \n I study at Hogwarts.'
	     * Student.is(a); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * extend toArr inherits has safeGet isMiniProgram 
	     */

	    function exports(methods, statics) {
	        return Base.extend(methods, statics);
	    }

	    function makeClass(parent, methods, statics) {
	        statics = statics || {};
	        var className = methods.className || safeGet(methods, 'initialize.name') || '';
	        delete methods.className;

	        var ctor;
	        if (isMiniProgram) {
	            ctor = function ctor() {
	                var args = toArr(arguments);
	                return this.initialize ? this.initialize.apply(this, args) || this : this;
	            };
	        } else {
	            ctor = new Function('toArr', 'return function ' + className + '()' + '{' + 'var args = toArr(arguments);' + 'return this.initialize ? this.initialize.apply(this, args) || this : this;' + '};')(toArr);
	        }

	        inherits(ctor, parent);
	        ctor.prototype.constructor = ctor;

	        ctor.extend = function (methods, statics) {
	            return makeClass(ctor, methods, statics);
	        };
	        ctor.inherits = function (Class) {
	            inherits(ctor, Class);
	        };
	        ctor.methods = function (methods) {
	            extend(ctor.prototype, methods);
	            return ctor;
	        };
	        ctor.statics = function (statics) {
	            extend(ctor, statics);
	            return ctor;
	        };

	        ctor.methods(methods).statics(statics);

	        return ctor;
	    }

	    var Base = exports.Base = makeClass(Object, {
	        className: 'Base',
	        callSuper: function callSuper(parent, name, args) {
	            var superMethod = parent.prototype[name];

	            return superMethod.apply(this, args);
	        },
	        toString: function toString() {
	            return this.constructor.name;
	        }
	    });

	    return exports;
	}();

	/* ------------------------------ Enum ------------------------------ */

	var Enum = exports.Enum = _.Enum = function (exports) {
	    /* Enum type implementation.
	     *
	     * ### constructor
	     *
	     * |Name|Type |Desc            |
	     * |----|-----|----------------|
	     * |arr |array|Array of strings|
	     *
	     * |Name|Type  |Desc                  |
	     * |----|------|----------------------|
	     * |obj |object|Pairs of key and value|
	     *
	     * ```javascript
	     * var importance = new Enum([
	     *     'NONE', 'TRIVIAL', 'REGULAR', 'IMPORTANT', 'CRITICAL'
	     * ]);
	     *
	     * if (val === importance.CRITICAL)
	     * {
	     *     // Do something.
	     * }
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * Class freeze isArr each keys 
	     */

	    exports = Class({
	        initialize: function Enum(map) {
	            if (isArr(map)) {
	                this.size = map.length;
	                _each(map, function (member, val) {
	                    this[member] = val;
	                }, this);
	            } else {
	                this.size = keys(map).length;
	                _each(map, function (val, member) {
	                    this[member] = val;
	                }, this);
	            }

	            freeze(this);
	        }
	    });

	    return exports;
	}({});

	/* ------------------------------ MutationObserver ------------------------------ */

	var MutationObserver = exports.MutationObserver = _.MutationObserver = function (exports) {
	    /* Safe MutationObserver, does nothing if MutationObserver is not supported.
	     * 
	     * ```javascript
	     * var observer = new MutationObserver(function (mutations) 
	     * {
	     *     // Do something.     
	     * });
	     * observer.observe(document.htmlElement);
	     * observer.disconnect();
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * Class 
	     */

	    exports = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;

	    if (!exports) {
	        exports = Class({
	            initialize: function MutationObserver() {},
	            observe: function observe() {},
	            disconnect: function disconnect() {},
	            takeRecords: function takeRecords() {}
	        });
	    }

	    return exports;
	}({});

	/* ------------------------------ Select ------------------------------ */

	var Select = exports.Select = _.Select = function (exports) {
	    /* Simple wrapper of querySelectorAll to make dom selection easier.
	     *
	     * ### constructor
	     *
	     * |Name    |Type  |Desc               |
	     * |--------|------|-------------------|
	     * |selector|string|Dom selector string|
	     *
	     * ### find
	     *
	     * Get desdendants of current matched elements.
	     *
	     * |Name    |Type  |Desc               |
	     * |--------|------|-------------------|
	     * |selector|string|Dom selector string|
	     *
	     * ### each
	     *
	     * Iterate over matched elements.
	     *
	     * |Name|Type    |Desc                                |
	     * |----|--------|------------------------------------|
	     * |fn  |function|Function to execute for each element|
	     *
	     * ```javascript
	     * var $test = new Select('#test');
	     * $test.find('.test').each(function (idx, element)
	     * {
	     *     // Manipulate dom nodes
	     * });
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * Class isStr each 
	     */

	    exports = Class({
	        className: 'Select',
	        initialize: function initialize(selector) {
	            this.length = 0;

	            if (!selector) return this;

	            if (isStr(selector)) return rootSelect.find(selector);

	            if (selector.nodeType) {
	                this[0] = selector;
	                this.length = 1;
	            }
	        },
	        find: function find(selector) {
	            var ret = new Select();

	            this.each(function () {
	                mergeArr(ret, this.querySelectorAll(selector));
	            });

	            return ret;
	        },
	        each: function each(fn) {
	            _each(this, function (element, idx) {
	                fn.call(element, idx, element);
	            });

	            return this;
	        }
	    });

	    var rootSelect = new exports(document);

	    function mergeArr(first, second) {
	        var len = second.length,
	            i = first.length;

	        for (var j = 0; j < len; j++) {
	            first[i++] = second[j];
	        }first.length = i;

	        return first;
	    }

	    return exports;
	}({});

	/* ------------------------------ $safeEls ------------------------------ */

	var $safeEls = exports.$safeEls = _.$safeEls = function () {
	    /* Convert value into an array, if it's a string, do querySelector.
	     *
	     * |Name  |Type                |Desc             |
	     * |------|--------------------|-----------------|
	     * |value |element array string|Value to convert |
	     * |return|array               |Array of elements|
	     *
	     * ```javascript
	     * $safeEls('.test'); // -> Array of elements with test class
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * isStr toArr Select 
	     */

	    function exports(val) {
	        return toArr(isStr(val) ? new Select(val) : val);
	    }

	    return exports;
	}();

	/* ------------------------------ $attr ------------------------------ */

	var $attr = exports.$attr = _.$attr = function () {
	    /* Element attribute manipulation.
	     *
	     * Get the value of an attribute for the first element in the set of matched elements.
	     *
	     * |Name   |Type                |Desc                            |
	     * |-------|--------------------|--------------------------------|
	     * |element|string array element|Elements to manipulate          |
	     * |name   |string              |Attribute name                  |
	     * |return |string              |Attribute value of first element|
	     *
	     * Set one or more attributes for the set of matched elements.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to manipulate|
	     * |name   |string              |Attribute name        |
	     * |value  |string              |Attribute value       |
	     *
	     * |Name      |Type                |Desc                                  |
	     * |----------|--------------------|--------------------------------------|
	     * |element   |string array element|Elements to manipulate                |
	     * |attributes|object              |Object of attribute-value pairs to set|
	     *
	     * ### remove
	     *
	     * Remove an attribute from each element in the set of matched elements.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to manipulate|
	     * |name   |string              |Attribute name        |
	     *
	     * ```javascript
	     * $attr('#test', 'attr1', 'test');
	     * $attr('#test', 'attr1'); // -> test
	     * $attr.remove('#test', 'attr1');
	     * $attr('#test', {
	     *     'attr1': 'test',
	     *     'attr2': 'test'
	     * });
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * toArr isObj isStr each isUndef $safeEls 
	     */

	    function exports(els, name, val) {
	        els = $safeEls(els);

	        var isGetter = isUndef(val) && isStr(name);
	        if (isGetter) return getAttr(els[0], name);

	        var attrs = name;
	        if (!isObj(attrs)) {
	            attrs = {};
	            attrs[name] = val;
	        }

	        setAttr(els, attrs);
	    }

	    exports.remove = function (els, names) {
	        els = $safeEls(els);
	        names = toArr(names);

	        _each(els, function (node) {
	            _each(names, function (name) {
	                node.removeAttribute(name);
	            });
	        });
	    };

	    function getAttr(el, name) {
	        return el.getAttribute(name);
	    }

	    function setAttr(els, attrs) {
	        _each(els, function (el) {
	            _each(attrs, function (val, name) {
	                el.setAttribute(name, val);
	            });
	        });
	    }

	    return exports;
	}();

	/* ------------------------------ $data ------------------------------ */

	var $data = exports.$data = _.$data = function () {
	    /* Wrapper of $attr, adds data- prefix to keys.
	     *
	     * ```javascript
	     * $data('#test', 'attr1', 'eustia');
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * $attr isStr isObj each 
	     */

	    function exports(nodes, name, val) {
	        var dataName = name;

	        if (isStr(name)) dataName = 'data-' + name;
	        if (isObj(name)) {
	            dataName = {};
	            _each(name, function (val, key) {
	                dataName['data-' + key] = val;
	            });
	        }

	        return $attr(nodes, dataName, val);
	    }

	    return exports;
	}();

	/* ------------------------------ $css ------------------------------ */

	var $css = exports.$css = _.$css = function () {
	    /* Element css manipulation.
	     *
	     * Get the computed style properties for the first element in the set of matched elements.
	     *
	     * |Name   |Type                |Desc                      |
	     * |-------|--------------------|--------------------------|
	     * |element|string array element|Elements to manipulate    |
	     * |name   |string              |Property name             |
	     * |return |string              |Css value of first element|
	     *
	     * Set one or more CSS properties for the set of matched elements.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to manipulate|
	     * |name   |string              |Property name         |
	     * |value  |string              |Css value             |
	     *
	     * |Name      |Type                |Desc                            |
	     * |----------|--------------------|--------------------------------|
	     * |element   |string array element|Elements to manipulate          |
	     * |properties|object              |Object of css-value pairs to set|
	     *
	     * ```javascript
	     * $css('#test', {
	     *     'color': '#fff',
	     *     'background': 'black'
	     * });
	     * $css('#test', 'display', 'block');
	     * $css('#test', 'color'); // -> #fff
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * isStr isObj kebabCase isUndef contain isNum $safeEls startWith prefix 
	     */

	    function exports(nodes, name, val) {
	        nodes = $safeEls(nodes);

	        var isGetter = isUndef(val) && isStr(name);
	        if (isGetter) return getCss(nodes[0], name);

	        var css = name;
	        if (!isObj(css)) {
	            css = {};
	            css[name] = val;
	        }

	        setCss(nodes, css);
	    }

	    function getCss(node, name) {
	        return node.style[prefix(name)] || getComputedStyle(node, '').getPropertyValue(name);
	    }

	    function setCss(nodes, css) {
	        _each(nodes, function (node) {
	            var cssText = ';';
	            _each(css, function (val, key) {
	                key = prefix.dash(key);
	                cssText += key + ':' + addPx(key, val) + ';';
	            });
	            node.style.cssText += cssText;
	        });
	    }

	    var cssNumProps = ['column-count', 'columns', 'font-weight', 'line-weight', 'opacity', 'z-index', 'zoom'];

	    function addPx(key, val) {
	        var needPx = isNum(val) && !contain(cssNumProps, kebabCase(key));

	        return needPx ? val + 'px' : val;
	    }

	    return exports;
	}();

	/* ------------------------------ $insert ------------------------------ */

	var $insert = exports.$insert = _.$insert = function (exports) {
	    /* Insert html on different position.
	     *
	     * ### before
	     *
	     * Insert content before elements.
	     *
	     * ### after
	     *
	     * Insert content after elements.
	     *
	     * ### prepend
	     *
	     * Insert content to the beginning of elements.
	     *
	     * ### append
	     *
	     * Insert content to the end of elements.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to manipulate|
	     * |content|string              |Html strings          |
	     *
	     * ```javascript
	     * // <div id="test"><div class="mark"></div></div>
	     * $insert.before('#test', '<div>licia</div>');
	     * // -> <div>licia</div><div id="test"><div class="mark"></div></div>
	     * $insert.after('#test', '<div>licia</div>');
	     * // -> <div id="test"><div class="mark"></div></div><div>licia</div>
	     * $insert.prepend('#test', '<div>licia</div>');
	     * // -> <div id="test"><div>licia</div><div class="mark"></div></div>
	     * $insert.append('#test', '<div>licia</div>');
	     * // -> <div id="test"><div class="mark"></div><div>licia</div></div>
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * each $safeEls 
	     */

	    exports = {
	        before: insertFactory('beforebegin'),
	        after: insertFactory('afterend'),
	        append: insertFactory('beforeend'),
	        prepend: insertFactory('afterbegin')
	    };

	    function insertFactory(type) {
	        return function (nodes, val) {
	            nodes = $safeEls(nodes);

	            _each(nodes, function (node) {
	                node.insertAdjacentHTML(type, val);
	            });
	        };
	    }

	    return exports;
	}({});

	/* ------------------------------ $offset ------------------------------ */

	var $offset = exports.$offset = _.$offset = function () {
	    /* Get the position of the element in document.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to get offset|
	     *
	     * ```javascript
	     * $offset('#test'); // -> {left: 0, top: 0, width: 0, height: 0}
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * $safeEls 
	     */

	    function exports(els) {
	        els = $safeEls(els);

	        var el = els[0];

	        var clientRect = el.getBoundingClientRect();

	        return {
	            left: clientRect.left + window.pageXOffset,
	            top: clientRect.top + window.pageYOffset,
	            width: Math.round(clientRect.width),
	            height: Math.round(clientRect.height)
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ $property ------------------------------ */

	var $property = exports.$property = _.$property = function (exports) {
	    /* Element property html, text, val getter and setter.
	     *
	     * ### html
	     *
	     * Get the HTML contents of the first element in the set of matched elements or
	     * set the HTML contents of every matched element.
	     *
	     * ### text
	     *
	     * Get the combined text contents of each element in the set of matched
	     * elements, including their descendants, or set the text contents of the
	     * matched elements.
	     *
	     * ### val
	     *
	     * Get the current value of the first element in the set of matched elements or
	     * set the value of every matched element.
	     *
	     * ```javascript
	     * $property.html('#test', 'licia');
	     * $property.html('#test'); // -> licia
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * isUndef each $safeEls 
	     */

	    exports = {
	        html: propFactory('innerHTML'),
	        text: propFactory('textContent'),
	        val: propFactory('value')
	    };

	    function propFactory(name) {
	        return function (nodes, val) {
	            nodes = $safeEls(nodes);

	            if (isUndef(val)) return nodes[0][name];

	            _each(nodes, function (node) {
	                node[name] = val;
	            });
	        };
	    }

	    return exports;
	}({});

	/* ------------------------------ $remove ------------------------------ */

	var $remove = exports.$remove = _.$remove = function () {
	    /* Remove the set of matched elements from the DOM.
	     *
	     * |Name   |Type                |Desc              |
	     * |-------|--------------------|------------------|
	     * |element|string array element|Elements to delete|
	     *
	     * ```javascript
	     * $remove('#test');
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * each $safeEls 
	     */

	    function exports(els) {
	        els = $safeEls(els);

	        _each(els, function (el) {
	            var parent = el.parentNode;

	            if (parent) parent.removeChild(el);
	        });
	    }

	    return exports;
	}();

	/* ------------------------------ $show ------------------------------ */

	var $show = exports.$show = _.$show = function () {
	    /* Show elements.
	     *
	     * |Name   |Type                |Desc            |
	     * |-------|--------------------|----------------|
	     * |element|string array element|Elements to show|
	     *
	     * ```javascript
	     * $show('#test');
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * each $safeEls 
	     */

	    function exports(els) {
	        els = $safeEls(els);

	        _each(els, function (el) {
	            if (isHidden(el)) {
	                el.style.display = getDefDisplay(el.nodeName);
	            }
	        });
	    }

	    function isHidden(el) {
	        return getComputedStyle(el, '').getPropertyValue('display') == 'none';
	    }

	    var elDisplay = {};

	    function getDefDisplay(elName) {
	        var el, display;

	        if (!elDisplay[elName]) {
	            el = document.createElement(elName);
	            document.documentElement.appendChild(el);
	            display = getComputedStyle(el, '').getPropertyValue('display');
	            el.parentNode.removeChild(el);
	            display == 'none' && (display = 'block');
	            elDisplay[elName] = display;
	        }

	        return elDisplay[elName];
	    }

	    return exports;
	}();

	/* ------------------------------ delegate ------------------------------ */

	var delegate = exports.delegate = _.delegate = function (exports) {
	    /* Event delegation.
	     *
	     * ### add
	     *
	     * Add event delegation.
	     *
	     * |Name    |Type    |Desc          |
	     * |--------|--------|--------------|
	     * |el      |element |Parent element|
	     * |type    |string  |Event type    |
	     * |selector|string  |Match selector|
	     * |cb      |function|Event callback|
	     *
	     * ### remove
	     *
	     * Remove event delegation.
	     *
	     * ```javascript
	     * var container = document.getElementById('container');
	     * function clickHandler()
	     * {
	     *     // Do something...
	     * }
	     * delegate.add(container, 'click', '.children', clickHandler);
	     * delegate.remove(container, 'click', '.children', clickHandler);
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * Class contain 
	     */

	    function retTrue() {
	        return true;
	    }
	    function retFalse() {
	        return false;
	    }

	    function trigger(e) {
	        var handlers = this.events[e.type],
	            handler,
	            handlerQueue = formatHandlers.call(this, e, handlers);

	        e = new exports.Event(e);

	        var i = 0,
	            j,
	            matched,
	            ret;

	        while ((matched = handlerQueue[i++]) && !e.isPropagationStopped()) {
	            e.curTarget = matched.el;
	            j = 0;
	            while ((handler = matched.handlers[j++]) && !e.isImmediatePropagationStopped()) {
	                ret = handler.handler.apply(matched.el, [e]);

	                if (ret === false) {
	                    e.preventDefault();
	                    e.stopPropagation();
	                }
	            }
	        }
	    }

	    function formatHandlers(e, handlers) {
	        var current = e.target,
	            ret = [],
	            delegateCount = handlers.delegateCount,
	            selector,
	            matches,
	            handler,
	            i;

	        if (current.nodeType) {
	            for (; current !== this; current = current.parentNode || this) {
	                matches = [];
	                for (i = 0; i < delegateCount; i++) {
	                    handler = handlers[i];
	                    selector = handler.selector + ' ';
	                    if (matches[selector] === undefined) {
	                        matches[selector] = contain(this.querySelectorAll(selector), current);
	                    }
	                    if (matches[selector]) matches.push(handler);
	                }
	                if (matches.length) ret.push({ el: current, handlers: matches });
	            }
	        }

	        if (delegateCount < handlers.length) {
	            ret.push({
	                el: this,
	                handlers: handlers.slice(delegateCount)
	            });
	        }

	        return ret;
	    }

	    exports = {
	        add: function add(el, type, selector, fn) {
	            var handler = {
	                selector: selector,
	                handler: fn
	            },
	                handlers;

	            if (!el.events) el.events = {};

	            if (!(handlers = el.events[type])) {
	                handlers = el.events[type] = [];
	                handlers.delegateCount = 0;
	                el.addEventListener(type, function (e) {
	                    trigger.apply(el, arguments);
	                }, false);
	            }

	            selector ? handlers.splice(handlers.delegateCount++, 0, handler) : handlers.push(handler);
	        },
	        remove: function remove(el, type, selector, fn) {
	            var events = el.events;

	            if (!events || !events[type]) return;

	            var handlers = events[type],
	                i = handlers.length,
	                handler;

	            while (i--) {
	                handler = handlers[i];

	                if ((!selector || handler.selector == selector) && handler.handler == fn) {
	                    handlers.splice(i, 1);
	                    if (handler.selector) {
	                        handlers.delegateCount--;
	                    }
	                }
	            }
	        },
	        Event: Class({
	            className: 'Event',
	            initialize: function Event(e) {
	                this.origEvent = e;
	            },
	            isDefaultPrevented: retFalse,
	            isPropagationStopped: retFalse,
	            isImmediatePropagationStopped: retFalse,
	            preventDefault: function preventDefault() {
	                var e = this.origEvent;

	                this.isDefaultPrevented = retTrue;
	                if (e && e.preventDefault) e.preventDefault();
	            },
	            stopPropagation: function stopPropagation() {
	                var e = this.origEvent;

	                this.isPropagationStopped = retTrue;
	                if (e && e.stopPropagation) e.stopPropagation();
	            },
	            stopImmediatePropagation: function stopImmediatePropagation() {
	                var e = this.origEvent;

	                this.isImmediatePropagationStopped = retTrue;
	                if (e && e.stopImmediatePropagation) e.stopImmediatePropagation();
	                this.stopPropagation();
	            }
	        })
	    };

	    return exports;
	}({});

	/* ------------------------------ $event ------------------------------ */

	var $event = exports.$event = _.$event = function (exports) {
	    /* bind events to certain dom elements.
	     *
	     * ```javascript
	     * function clickHandler()
	     * {
	     *     // Do something...
	     * }
	     * $event.on('#test', 'click', clickHandler);
	     * $event.off('#test', 'click', clickHandler);
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * delegate isUndef $safeEls 
	     */

	    exports = {
	        on: eventFactory('add'),
	        off: eventFactory('remove')
	    };

	    function eventFactory(type) {
	        return function (nodes, event, selector, handler) {
	            nodes = $safeEls(nodes);

	            if (isUndef(handler)) {
	                handler = selector;
	                selector = undefined;
	            }

	            _each(nodes, function (node) {
	                delegate[type](node, event, selector, handler);
	            });
	        };
	    }

	    return exports;
	}({});

	/* ------------------------------ concat ------------------------------ */

	var concat = exports.concat = _.concat = function () {
	    /* Concat multiple arrays into a single array.
	     *
	     * |Name  |Type |Desc              |
	     * |------|-----|------------------|
	     * |...arr|array|Arrays to concat  |
	     * |return|array|Concatenated array|
	     *
	     * ```javascript
	     * concat([1, 2], [3], [4, 5]); // -> [1, 2, 3, 4, 5]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * toArr 
	     */

	    function exports() {
	        var args = toArr(arguments),
	            ret = [];

	        for (var i = 0, len = args.length; i < len; i++) {
	            ret = ret.concat(toArr(args[i]));
	        }

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ some ------------------------------ */

	var some = exports.some = _.some = function () {
	    /* Check if predicate return truthy for any element.
	     *
	     * |Name     |Type        |Desc                                          |
	     * |---------|------------|----------------------------------------------|
	     * |obj      |array object|Collection to iterate over                    |
	     * |predicate|function    |Function to invoked per iteration             |
	     * |ctx      |*           |Predicate context                             |
	     * |return   |boolean     |True if any element passes the predicate check|
	     *
	     * ```javascript
	     * some([2, 5], function (val)
	     * {
	     *     return val % 2 === 0;
	     * }); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * safeCb isArrLike keys 
	     */

	    function exports(obj, predicate, ctx) {
	        predicate = safeCb(predicate, ctx);

	        var _keys = !isArrLike(obj) && keys(obj),
	            len = (_keys || obj).length;

	        for (var i = 0; i < len; i++) {
	            var key = _keys ? _keys[i] : i;
	            if (predicate(obj[key], key, obj)) return true;
	        }

	        return false;
	    }

	    return exports;
	}();

	/* ------------------------------ $class ------------------------------ */

	var $class = exports.$class = _.$class = function (exports) {
	    /* Element class manipulations.
	     *
	     * ### add
	     *
	     * Add the specified class(es) to each element in the set of matched elements.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to manipulate|
	     * |names  |string array        |Classes to add        |
	     *
	     * ### has
	     *
	     * Determine whether any of the matched elements are assigned the given class.
	     *
	     * |Name   |Type                |Desc                                 |
	     * |-------|--------------------|-------------------------------------|
	     * |element|string array element|Elements to manipulate               |
	     * |name   |string              |Class name                           |
	     * |return |boolean             |True if elements has given class name|
	     *
	     * ### toggle
	     *
	     * Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the state argument.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to manipulate|
	     * |name   |string              |Class name to toggle  |
	     *
	     * ### remove
	     *
	     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.
	     *
	     * |Name   |Type                |Desc                  |
	     * |-------|--------------------|----------------------|
	     * |element|string array element|Elements to manipulate|
	     * |names  |string              |Class names to remove |
	     *
	     * ```javascript
	     * $class.add('#test', 'class1');
	     * $class.add('#test', ['class1', 'class2']);
	     * $class.has('#test', 'class1'); // -> true
	     * $class.remove('#test', 'class1');
	     * $class.has('#test', 'class1'); // -> false
	     * $class.toggle('#test', 'class1');
	     * $class.has('#test', 'class1'); // -> true
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * toArr some $safeEls isStr 
	     */

	    exports = {
	        add: function add(els, name) {
	            els = $safeEls(els);
	            var names = safeName(name);

	            _each(els, function (el) {
	                var classList = [];

	                _each(names, function (name) {
	                    if (!exports.has(el, name)) classList.push(name);
	                });

	                if (classList.length !== 0) el.className += ' ' + classList.join(' ');
	            });
	        },
	        has: function has(els, name) {
	            els = $safeEls(els);

	            var regName = new RegExp('(^|\\s)' + name + '(\\s|$)');

	            return some(els, function (el) {
	                return regName.test(el.className);
	            });
	        },
	        toggle: function toggle(els, name) {
	            els = $safeEls(els);

	            _each(els, function (el) {
	                if (!exports.has(el, name)) return exports.add(el, name);

	                exports.remove(el, name);
	            });
	        },
	        remove: function remove(els, name) {
	            els = $safeEls(els);
	            var names = safeName(name);

	            _each(els, function (el) {
	                _each(names, function (name) {
	                    el.classList.remove(name);
	                });
	            });
	        }
	    };

	    function safeName(name) {
	        return isStr(name) ? name.split(/\s+/) : toArr(name);
	    }

	    return exports;
	}({});

	/* ------------------------------ $ ------------------------------ */

	var $ = exports.$ = _.$ = function () {
	    /* jQuery like style dom manipulator.
	     *
	     * ### Available methods
	     *
	     * offset, hide, show, first, last, get, eq, on, off, html, text, val, css, attr,
	     * data, rmAttr, remove, addClass, rmClass, toggleClass, hasClass, append, prepend,
	     * before, after
	     *
	     * ```javascript
	     * var $btn = $('#btn');
	     * $btn.html('eustia');
	     * $btn.addClass('btn');
	     * $btn.show();
	     * $btn.on('click', function ()
	     * {
	     *     // Do something...
	     * });
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * Select $offset $show $css $attr $property last $remove $data $event $class $insert isUndef isStr 
	     */

	    function exports(selector) {
	        return new Select(selector);
	    }

	    Select.methods({
	        offset: function offset() {
	            return $offset(this);
	        },
	        hide: function hide() {
	            return this.css('display', 'none');
	        },
	        show: function show() {
	            $show(this);

	            return this;
	        },
	        first: function first() {
	            return exports(this[0]);
	        },
	        last: function last() {
	            return exports(_last(this));
	        },
	        get: function get(idx) {
	            return this[idx];
	        },
	        eq: function eq(idx) {
	            return exports(this[idx]);
	        },
	        on: function on(event, selector, handler) {
	            $event.on(this, event, selector, handler);

	            return this;
	        },
	        off: function off(event, selector, handler) {
	            $event.off(this, event, selector, handler);

	            return this;
	        },
	        html: function html(val) {
	            var result = $property.html(this, val);

	            if (isUndef(val)) return result;

	            return this;
	        },
	        text: function text(val) {
	            var result = $property.text(this, val);

	            if (isUndef(val)) return result;

	            return this;
	        },
	        val: function val(_val) {
	            var result = $property.val(this, _val);

	            if (isUndef(_val)) return result;

	            return this;
	        },
	        css: function css(name, val) {
	            var result = $css(this, name, val);

	            if (isGetter(name, val)) return result;

	            return this;
	        },
	        attr: function attr(name, val) {
	            var result = $attr(this, name, val);

	            if (isGetter(name, val)) return result;

	            return this;
	        },
	        data: function data(name, val) {
	            var result = $data(this, name, val);

	            if (isGetter(name, val)) return result;

	            return this;
	        },
	        rmAttr: function rmAttr(name) {
	            $attr.remove(this, name);

	            return this;
	        },
	        remove: function remove() {
	            $remove(this);

	            return this;
	        },
	        addClass: function addClass(name) {
	            $class.add(this, name);

	            return this;
	        },
	        rmClass: function rmClass(name) {
	            $class.remove(this, name);

	            return this;
	        },
	        toggleClass: function toggleClass(name) {
	            $class.toggle(this, name);

	            return this;
	        },
	        hasClass: function hasClass(name) {
	            return $class.has(this, name);
	        },
	        parent: function parent() {
	            return exports(this[0].parentNode);
	        },
	        append: function append(val) {
	            $insert.append(this, val);

	            return this;
	        },
	        prepend: function prepend(val) {
	            $insert.prepend(this, val);

	            return this;
	        },
	        before: function before(val) {
	            $insert.before(this, val);

	            return this;
	        },
	        after: function after(val) {
	            $insert.after(this, val);

	            return this;
	        }
	    });

	    function isGetter(name, val) {
	        return isUndef(val) && isStr(name);
	    }

	    return exports;
	}();

	/* ------------------------------ memStorage ------------------------------ */

	var memStorage = exports.memStorage = _.memStorage = function (exports) {
	    /* Memory-backed implementation of the Web Storage API.
	     *
	     * A replacement for environments where localStorage or sessionStorage is not available.
	     *
	     * ```javascript
	     * var localStorage = window.localStorage || memStorage;
	     * localStorage.setItem('test', 'licia');
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * keys 
	     */

	    exports = {
	        getItem: function getItem(key) {
	            return (API_KEYS[key] ? cloak[key] : this[key]) || null;
	        },
	        setItem: function setItem(key, val) {
	            API_KEYS[key] ? cloak[key] = val : this[key] = val;
	        },
	        removeItem: function removeItem(key) {
	            API_KEYS[key] ? delete cloak[key] : delete this[key];
	        },
	        key: function key(i) {
	            var keys = enumerableKeys();

	            return i >= 0 && i < keys.length ? keys[i] : null;
	        },
	        clear: function clear() {
	            var keys = uncloakedKeys();

	            /* eslint-disable no-cond-assign */
	            for (var i = 0, key; key = keys[i]; i++) {
	                delete this[key];
	            }keys = cloakedKeys();

	            /* eslint-disable no-cond-assign */
	            for (i = 0; key = keys[i]; i++) {
	                delete cloak[key];
	            }
	        }
	    };

	    Object.defineProperty(exports, 'length', {
	        enumerable: false,
	        configurable: true,
	        get: function get() {
	            return enumerableKeys().length;
	        }
	    });

	    var cloak = {};

	    var API_KEYS = {
	        getItem: 1,
	        setItem: 1,
	        removeItem: 1,
	        key: 1,
	        clear: 1,
	        length: 1
	    };

	    function enumerableKeys() {
	        return uncloakedKeys().concat(cloakedKeys());
	    }

	    function uncloakedKeys() {
	        return keys(exports).filter(function (key) {
	            return !API_KEYS[key];
	        });
	    }

	    function cloakedKeys() {
	        return keys(cloak);
	    }

	    return exports;
	}({});

	/* ------------------------------ safeStorage ------------------------------ */

	var safeStorage = exports.safeStorage = _.safeStorage = function () {
	    /* Safe localStorage and sessionStorage.
	     */

	    /* dependencies
	     * isUndef memStorage 
	     */

	    function exports(type, memReplacement) {
	        if (isUndef(memReplacement)) memReplacement = true;

	        var ret;

	        switch (type) {
	            case 'local':
	                ret = window.localStorage;
	                break;
	            case 'session':
	                ret = window.sessionStorage;
	                break;
	        }

	        try {
	            // Safari private browsing
	            var x = 'test-localStorage-' + Date.now();
	            ret.setItem(x, x);
	            var y = ret.getItem(x);
	            ret.removeItem(x);
	            if (y !== x) throw new Error();
	        } catch (e) {
	            if (memReplacement) return memStorage;
	            return;
	        }

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ meta ------------------------------ */

	var meta = exports.meta = _.meta = function () {
	    /* Document meta manipulation, turn name and content into key value pairs.
	     *
	     * Get meta content with given name. If name is omitted, all pairs will be return.
	     * 
	     * |Name  |Type        |Desc        |
	     * |------|------------|------------|
	     * |[name]|string array|Meta name   |
	     * |return|string      |Meta content|
	     * 
	     * Set meta content.
	     * 
	     * |Name   |Type  |Desc        |
	     * |-------|------|------------|
	     * |name   |string|Meta name   |
	     * |content|string|Meta content|
	     * 
	     * |Name |Type  |Desc                        |
	     * |-----|------|----------------------------|
	     * |metas|object|Object of name content pairs|
	     * 
	     * ### remove
	     * 
	     * Remove metas.
	     * 
	     * |Name|Type        |Desc     |
	     * |----|------------|---------|
	     * |name|string array|Meta name|
	     * 
	     * ```javascript
	     * // <meta name="a" content="1"/> <meta name="b" content="2"/> <meta name="c" content="3"/>
	     * meta(); // -> {a: '1', b: '2', c: '3'}
	     * meta('a'); // -> '1'
	     * meta(['a', 'c']); // -> {a: '1', c: '3'}
	     * meta('d', '4');
	     * meta({
	     *     d: '5',
	     *     e: '6',
	     *     f: '7'
	     * });
	     * meta.remove('d');
	     * meta.remove(['e', 'f']);
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * each isStr isUndef contain isArr isObj toArr 
	     */

	    function exports(name, content) {
	        if (isUndef(name)) return getAllMeta();

	        var isGetter = isStr(name) && isUndef(content) || isArr(name);
	        if (isGetter) return getMeta(name);

	        var metas = name;
	        if (!isObj(metas)) {
	            metas = {};
	            metas[name] = content;
	        }
	        setMeta(metas);
	    }

	    exports.remove = function (nameList) {
	        nameList = toArr(nameList);

	        _each(nameList, function (name) {
	            var meta = selectMeta(name);
	            if (meta) doc.head.removeChild(meta);
	        });
	    };

	    var doc = document;

	    function getAllMeta() {
	        var ret = {};

	        metaEach(function (name, content) {
	            ret[name] = content;
	        });

	        return ret;
	    }

	    function getMeta(name) {
	        if (isStr(name)) {
	            var meta = selectMeta(name);

	            if (meta) return meta.getAttribute('content');
	        } else {
	            var ret = {};

	            metaEach(function (key, val) {
	                if (contain(name, key)) ret[key] = val;
	            });

	            return ret;
	        }
	    }

	    function setMeta(metas) {
	        _each(metas, function (content, name) {
	            var meta = selectMeta(name);
	            if (meta) return meta.setAttribute('content', content);

	            meta = doc.createElement('meta');
	            meta.setAttribute('name', name);
	            meta.setAttribute('content', content);
	            doc.head.appendChild(meta);
	        });
	    }

	    function metaEach(fn) {
	        var metaList = doc.querySelectorAll('meta');

	        _each(metaList, function (meta) {
	            var name = meta.getAttribute('name'),
	                content = meta.getAttribute('content');

	            if (!name || !content) return;

	            fn(name, content);
	        });
	    }

	    function selectMeta(name) {
	        return doc.querySelector('meta[name="' + name + '"]');
	    }

	    return exports;
	}();

	/* ------------------------------ toNum ------------------------------ */

	var toNum = exports.toNum = _.toNum = function (exports) {
	    /* Convert value to a number.
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |val   |*     |Value to process|
	     * |return|number|Resulted number |
	     *
	     * ```javascript
	     * toNum('5'); // -> 5
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isNum isObj isFn isStr 
	     */

	    exports = function exports(val) {
	        if (isNum(val)) return val;

	        if (isObj(val)) {
	            var temp = isFn(val.valueOf) ? val.valueOf() : val;
	            val = isObj(temp) ? temp + '' : temp;
	        }

	        if (!isStr(val)) return val === 0 ? val : +val;

	        return +val;
	    };

	    return exports;
	}({});

	/* ------------------------------ ms ------------------------------ */

	var ms = exports.ms = _.ms = function () {
	    /* Convert time string formats to milliseconds.
	     *
	     * Turn time string into milliseconds.
	     * 
	     * |Name  |Type  |Desc         |
	     * |------|------|-------------|
	     * |str   |string|String format|
	     * |return|number|Milliseconds |
	     * 
	     * Turn milliseconds into time string.
	     * 
	     * |Name  |Type  |Desc         |
	     * |------|------|-------------|
	     * |num   |number|Milliseconds |
	     * |return|string|String format|
	     * 
	     * ```javascript
	     * ms('1s'); // -> 1000 
	     * ms('1m'); // -> 60000 
	     * ms('1.5h'); // -> 5400000 
	     * ms('1d'); // -> 86400000
	     * ms('1y'); // -> 31557600000
	     * ms('1000'); // -> 1000
	     * ms(1500); // -> '1.5s'
	     * ms(60000); // -> '1m'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * toNum isStr 
	     */

	    function exports(str) {
	        if (isStr(str)) {
	            var match = str.match(regStrTime);

	            if (!match) return 0;

	            return toNum(match[1]) * factor[match[2] || 'ms'];
	        } else {
	            var num = str,
	                suffix = 'ms';

	            for (var i = 0, len = suffixList.length; i < len; i++) {
	                if (num >= factor[suffixList[i]]) {
	                    suffix = suffixList[i];
	                    break;
	                }
	            }

	            return +(num / factor[suffix]).toFixed(2) + suffix;
	        }
	    }

	    var factor = {
	        ms: 1,
	        s: 1000
	    };
	    factor.m = factor.s * 60;
	    factor.h = factor.m * 60;
	    factor.d = factor.h * 24;
	    factor.y = factor.d * 365.25;

	    var suffixList = ['y', 'd', 'h', 'm', 's'];

	    var regStrTime = /^((?:\d+)?\.?\d+) *(s|m|h|d|y)?$/;

	    return exports;
	}();

	/* ------------------------------ toInt ------------------------------ */

	var toInt = exports.toInt = _.toInt = function () {
	    /* Convert value to an integer.
	     *
	     * |Name  |Type  |Desc             |
	     * |------|------|-----------------|
	     * |val   |*     |Value to convert |
	     * |return|number|Converted integer|
	     *
	     * ```javascript
	     * toInt(1.1); // -> 1
	     * toInt(undefined); // -> 0
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * toNum 
	     */

	    function exports(val) {
	        if (!val) return val === 0 ? val : 0;

	        val = toNum(val);

	        return val - val % 1;
	    }

	    return exports;
	}();

	/* ------------------------------ detectBrowser ------------------------------ */

	var detectBrowser = exports.detectBrowser = _.detectBrowser = function () {
	    /* Detect browser info using ua.
	     *
	     * |Name                    |Type  |Desc                              |
	     * |------------------------|------|----------------------------------|
	     * |[ua=navigator.userAgent]|string|Browser userAgent                 |
	     * |return                  |object|Object containing name and version|
	     * 
	     * Browsers supported: ie, chrome, edge, firefox, opera, safari, ios(mobile safari), android(android browser)
	     *
	     * ```javascript
	     * var browser = detectBrowser();
	     * if (browser.name === 'ie' && browser.version < 9) 
	     * {
	     *     // Do something about old IE...
	     * }
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isBrowser toInt keys 
	     */

	    function exports(ua) {
	        ua = ua || (isBrowser ? navigator.userAgent : '');
	        ua = ua.toLowerCase();

	        var ieVer = getVer(ua, 'msie ');

	        if (ieVer) return {
	            version: ieVer,
	            name: 'ie'
	        };

	        if (regIe11.test(ua)) return {
	            version: 11,
	            name: 'ie'
	        };

	        for (var i = 0, len = browsers.length; i < len; i++) {
	            var name = browsers[i],
	                match = ua.match(regBrowsers[name]);

	            if (match == null) continue;

	            var version = toInt(match[1].split('.')[0]);

	            if (name === 'opera') version = getVer(ua, 'version/') || version;

	            return {
	                name: name,
	                version: version
	            };
	        }

	        return {
	            name: 'unknown',
	            version: -1
	        };
	    }

	    var regBrowsers = {
	        edge: /edge\/([0-9._]+)/,
	        firefox: /firefox\/([0-9.]+)(?:\s|$)/,
	        opera: /opera\/([0-9.]+)(?:\s|$)/,
	        android: /android\s([0-9.]+)/,
	        ios: /version\/([0-9._]+).*mobile.*safari.*/,
	        safari: /version\/([0-9._]+).*safari/,
	        chrome: /(?!chrom.*opr)chrom(?:e|ium)\/([0-9.]+)(:?\s|$)/
	    };

	    var regIe11 = /trident\/7\./,
	        browsers = keys(regBrowsers);

	    function getVer(ua, mark) {
	        var idx = ua.indexOf(mark);

	        if (idx > -1) return toInt(ua.substring(idx + mark.length, ua.indexOf('.', idx)));
	    }

	    return exports;
	}();

	/* ------------------------------ nextTick ------------------------------ */

	var nextTick = exports.nextTick = _.nextTick = function (exports) {
	    /* Next tick for both node and browser.
	     *
	     * |Name|Type    |Desc            |
	     * |----|--------|----------------|
	     * |cb  |function|Function to call|
	     *
	     * Use process.nextTick if available.
	     *
	     * Otherwise setImmediate or setTimeout is used as fallback.
	     *
	     * ```javascript
	     * nextTick(function ()
	     * {
	     *     // Do something...
	     * });
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    if ((typeof process === 'undefined' ? 'undefined' : (0, _typeof3.default)(process)) === 'object' && process.nextTick) {
	        exports = process.nextTick;
	    } else if (typeof _setImmediate3.default === 'function') {
	        exports = function exports(cb) {
	            (0, _setImmediate3.default)(ensureCallable(cb));
	        };
	    } else {
	        exports = function exports(cb) {
	            setTimeout(ensureCallable(cb), 0);
	        };
	    }

	    function ensureCallable(fn) {
	        if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');

	        return fn;
	    }

	    return exports;
	}({});

	/* ------------------------------ now ------------------------------ */

	var now = exports.now = _.now = function (exports) {
	    /* Gets the number of milliseconds that have elapsed since the Unix epoch.
	     *
	     * ```javascript
	     * now(); // -> 1468826678701
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    exports = Date.now || function () {
	        return new Date().getTime();
	    };

	    return exports;
	}({});

	/* ------------------------------ restArgs ------------------------------ */

	var restArgs = exports.restArgs = _.restArgs = function () {
	    /* This accumulates the arguments passed into an array, after a given index.
	     *
	     * |Name      |Type    |Desc                                   |
	     * |----------|--------|---------------------------------------|
	     * |function  |function|Function that needs rest parameters    |
	     * |startIndex|number  |The start index to accumulates         |
	     * |return    |function|Generated function with rest parameters|
	     *
	     * ```javascript
	     * var paramArr = restArgs(function (rest) { return rest });
	     * paramArr(1, 2, 3, 4); // -> [1, 2, 3, 4]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(fn, startIdx) {
	        startIdx = startIdx == null ? fn.length - 1 : +startIdx;

	        return function () {
	            var len = Math.max(arguments.length - startIdx, 0),
	                rest = new Array(len),
	                i;

	            for (i = 0; i < len; i++) {
	                rest[i] = arguments[i + startIdx];
	            } // Call runs faster than apply.
	            switch (startIdx) {
	                case 0:
	                    return fn.call(this, rest);
	                case 1:
	                    return fn.call(this, arguments[0], rest);
	                case 2:
	                    return fn.call(this, arguments[0], arguments[1], rest);
	            }

	            var args = new Array(startIdx + 1);

	            for (i = 0; i < startIdx; i++) {
	                args[i] = arguments[i];
	            }args[startIdx] = rest;

	            return fn.apply(this, args);
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ partial ------------------------------ */

	var partial = exports.partial = _.partial = function (exports) {
	    /* Partially apply a function by filling in given arguments.
	     *
	     * |Name       |Type    |Desc                                    |
	     * |-----------|--------|----------------------------------------|
	     * |fn         |function|Function to partially apply arguments to|
	     * |...partials|*       |Arguments to be partially applied       |
	     * |return     |function|New partially applied function          |
	     *
	     * ```javascript
	     * var sub5 = partial(function (a, b) { return b - a }, 5);
	     * sub(20); // -> 15
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * restArgs toArr 
	     */

	    exports = restArgs(function (fn, partials) {
	        return function () {
	            var args = [];

	            args = args.concat(partials);
	            args = args.concat(toArr(arguments));

	            return fn.apply(this, args);
	        };
	    });

	    return exports;
	}({});

	/* ------------------------------ once ------------------------------ */

	var _once = _.once = function (exports) {
	    /* Create a function that invokes once.
	     *
	     * |Name  |Type    |Desc                   |
	     * |------|--------|-----------------------|
	     * |fn    |function|Function to restrict   |
	     * |return|function|New restricted function|
	     *
	     * ```javascript
	     * function init() {};
	     * var initOnce = once(init);
	     * initOnce();
	     * initOnce(); // -> init is invoked once
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * partial before 
	     */

	    exports = partial(before, 2);

	    return exports;
	}({});

	/* ------------------------------ Emitter ------------------------------ */

	exports.once = _once;
	var Emitter = exports.Emitter = _.Emitter = function (exports) {
	    /* Event emitter class which provides observer pattern.
	     *
	     * ### on
	     *
	     * Bind event.
	     *
	     * ### off
	     *
	     * Unbind event.
	     *
	     * ### once
	     *
	     * Bind event that trigger once.
	     *
	     * |Name    |Type    |Desc          |
	     * |--------|--------|--------------|
	     * |event   |string  |Event name    |
	     * |listener|function|Event listener|
	     *
	     * ### emit
	     *
	     * Emit event.
	     *
	     * |Name   |Type  |Desc                        |
	     * |-------|------|----------------------------|
	     * |event  |string|Event name                  |
	     * |...args|*     |Arguments passed to listener|
	     *
	     * ### mixin
	     *
	     * [static] Mixin object class methods.
	     *
	     * |Name|Type  |Desc           |
	     * |----|------|---------------|
	     * |obj |object|Object to mixin|
	     *
	     * ```javascript
	     * var event = new Emitter();
	     * event.on('test', function () { console.log('test') });
	     * event.emit('test'); // Logs out 'test'.
	     * Emitter.mixin({});
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * Class has each slice once 
	     */

	    exports = Class({
	        initialize: function Emitter() {
	            this._events = this._events || {};
	        },
	        on: function on(event, listener) {
	            this._events[event] = this._events[event] || [];
	            this._events[event].push(listener);

	            return this;
	        },
	        off: function off(event, listener) {
	            if (!has(this._events, event)) return;

	            this._events[event].splice(this._events[event].indexOf(listener), 1);

	            return this;
	        },
	        once: function once(event, listener) {
	            this.on(event, _once(listener));

	            return this;
	        },
	        emit: function emit(event) {
	            if (!has(this._events, event)) return;

	            var args = slice(arguments, 1);

	            _each(this._events[event], function (val) {
	                val.apply(this, args);
	            }, this);

	            return this;
	        }
	    }, {
	        mixin: function mixin(obj) {
	            _each(['on', 'off', 'once', 'emit'], function (val) {
	                obj[val] = exports.prototype[val];
	            });

	            obj._events = obj._events || {};
	        }
	    });

	    return exports;
	}({});

	/* ------------------------------ Logger ------------------------------ */

	var Logger = exports.Logger = _.Logger = function (exports) {
	    /* Simple logger with level filter.
	     *
	     * ### constructor
	     * 
	     * |Name         |Type  |Desc        |
	     * |-------------|------|------------|
	     * |name         |string|Logger name |
	     * |[level=DEBUG]|number|Logger level|
	     * 
	     * ### setLevel
	     * 
	     * |Name |Type         |Desc        |
	     * |-----|-------------|------------|
	     * |level|number string|Logger level|
	     * 
	     * ### getLevel
	     * 
	     * Get current level.
	     * 
	     * ### trace, debug, info, warn, error
	     * 
	     * Logging methods.
	     * 
	     * ### Log Levels
	     * 
	     * TRACE, DEBUG, INFO, WARN, ERROR and SILENT.
	     * 
	     * ```javascript
	     * var logger = new Logger('licia', Logger.level.ERROR);
	     * logger.trace('test');
	     * 
	     * // Format output.
	     * logger.formatter = function (type, argList)
	     * {
	     *     argList.push(new Date().getTime());
	     * 
	     *     return argList;
	     * };
	     * 
	     * logger.on('all', function (type, argList) 
	     * {
	     *     // It's not affected by log level.
	     * });
	     * 
	     * logger.on('debug', function (argList) 
	     * {
	     *     // Affected by log level.
	     * });
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * Emitter Enum toArr isUndef clone isStr isNum 
	     */

	    exports = Emitter.extend({
	        initialize: function Logger(name, level) {
	            this.name = name;

	            this.setLevel(isUndef(level) ? exports.level.DEBUG : level);
	            this.callSuper(Emitter, 'initialize', arguments);
	        },
	        setLevel: function setLevel(level) {
	            if (isStr(level)) {
	                level = exports.level[level.toUpperCase()];
	                if (level) this._level = level;
	                return this;
	            }
	            if (isNum(level)) this._level = level;

	            return this;
	        },
	        getLevel: function getLevel() {
	            return this._level;
	        },
	        formatter: function formatter(type, argList) {
	            return argList;
	        },
	        trace: function trace() {
	            return this._log('trace', arguments);
	        },
	        debug: function debug() {
	            return this._log('debug', arguments);
	        },
	        info: function info() {
	            return this._log('info', arguments);
	        },
	        warn: function warn() {
	            return this._log('warn', arguments);
	        },
	        error: function error() {
	            return this._log('error', arguments);
	        },
	        _log: function _log(type, argList) {
	            argList = toArr(argList);
	            if (argList.length === 0) return this;

	            this.emit('all', type, clone(argList));

	            if (exports.level[type.toUpperCase()] < this._level) return this;
	            this.emit(type, clone(argList));
	            /* eslint-disable no-console */
	            var consoleMethod = type === 'debug' ? console.log : console[type];
	            consoleMethod.apply(console, this.formatter(type, argList));

	            return this;
	        }
	    }, {
	        level: new Enum({
	            TRACE: 0,
	            DEBUG: 1,
	            INFO: 2,
	            WARN: 3,
	            ERROR: 4,
	            SILENT: 5
	        })
	    });

	    return exports;
	}({});

	/* ------------------------------ Store ------------------------------ */

	var Store = exports.Store = _.Store = function (exports) {
	    /* Memory storage.
	     *
	     * Extend from Emitter.
	     *
	     * ### constructor
	     * 
	     * |Name|Type  |Desc        |
	     * |----|------|------------|
	     * |data|object|Initial data|
	     * 
	     * ### set
	     * 
	     * Set value.
	     * 
	     * |Name|Type  |Desc        |
	     * |----|------|------------|
	     * |key |string|Value key   |
	     * |val |*     |Value to set|
	     * 
	     * Set values.
	     * 
	     * |Name|Type  |Desc           |
	     * |----|------|---------------|
	     * |vals|object|Key value pairs|
	     * 
	     * This emit a change event whenever is called.
	     * 
	     * ### get
	     * 
	     * Get value.
	     * 
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |key   |string|Value key         |
	     * |return|*     |Value of given key|
	     * 
	     * Get values.
	     * 
	     * |Name  |Type  |Desc           |
	     * |------|------|---------------|
	     * |keys  |array |Array of keys  |
	     * |return|object|Key value pairs|
	     * 
	     * ### remove
	     * 
	     * Remove value.
	     * 
	     * |Name|Type        |Desc         |
	     * |----|------------|-------------|
	     * |key |string array|Key to remove|
	     * 
	     * ### clear
	     * 
	     * Clear all data.
	     * 
	     * ### each
	     * 
	     * Iterate over values.
	     * 
	     * |Name|Type    |Desc                           |
	     * |----|--------|-------------------------------|
	     * |fn  |function|Function invoked per interation|
	     * 
	     * ```javascript
	     * var store = new Store('test');
	     * store.set('user', {name: 'licia'});
	     * store.get('user').name; // -> 'licia'
	     * store.clear();
	     * store.each(function (val, key) 
	     * {
	     *     // Do something.
	     * });
	     * store.on('change', function (key, newVal, oldVal) 
	     * {
	     *     // It triggers whenever set is called.
	     * });
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * Emitter isStr isObj each toArr 
	     */

	    exports = Emitter.extend({
	        initialize: function Store(data) {
	            this.callSuper(Emitter, 'initialize', arguments);
	            this._data = data || {};
	            this.save(this._data);
	        },
	        set: function set(key, val) {
	            var data;

	            if (isStr(key)) {
	                data = {};
	                data[key] = val;
	            } else if (isObj(key)) {
	                data = key;
	            }

	            var self = this;

	            _each(data, function (val, key) {
	                var oldVal = self._data[key];
	                self._data[key] = val;
	                self.emit('change', key, val, oldVal);
	            });

	            this.save(this._data);
	        },
	        get: function get(key) {
	            var data = this._data;

	            if (isStr(key)) return data[key];

	            var ret = {};
	            _each(key, function (val) {
	                ret[val] = data[val];
	            });

	            return ret;
	        },
	        remove: function remove(key) {
	            key = toArr(key);

	            var data = this._data;

	            _each(key, function (val) {
	                delete data[val];
	            });

	            this.save(data);
	        },
	        clear: function clear() {
	            this._data = {};

	            this.save(this._data);
	        },
	        each: function each(fn) {
	            _each(this._data, fn);
	        },
	        // This methods exists to be overwritten.
	        save: function save(data) {
	            this._data = data;
	        }
	    });

	    return exports;
	}({});

	/* ------------------------------ orientation ------------------------------ */

	var orientation = exports.orientation = _.orientation = function (exports) {
	    /* Screen orientation helper.
	     *
	     * ### on
	     *
	     * Bind change event.
	     *  
	     * ### off 
	     * 
	     * Unbind change event.
	     * 
	     * ### get
	     * 
	     * Get current orientation(landscape or portrait).
	     * 
	     * ```javascript
	     * orientation.on('change', function (direction) 
	     * {
	     *     console.log(direction); // -> 'portrait'
	     * });
	     * orientation.get(); // -> 'landscape'
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * Emitter safeGet 
	     */

	    var screen = window.screen;

	    exports = {
	        get: function get() {
	            if (screen) {
	                var orientation = safeGet(screen, 'orientation.type');
	                if (orientation) return orientation.split('-').shift();
	            }

	            return window.innerWidth > window.innerHeight ? 'landscape' : 'portrait';
	        }
	    };

	    Emitter.mixin(exports);

	    window.addEventListener('orientationchange', function () {
	        setTimeout(function () {
	            exports.emit('change', exports.get());
	        }, 200);
	    }, false);

	    return exports;
	}({});

	/* ------------------------------ perfNow ------------------------------ */

	var perfNow = exports.perfNow = _.perfNow = function (exports) {
	    /* High resolution time up to microsecond precision.
	     *
	     * ```javascript
	     * var start = perfNow();
	     * 
	     * // Do something.
	     * 
	     * console.log(perfNow() - start);
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * now root 
	     */

	    var performance = root.performance,
	        process = root.process,
	        loadTime;

	    if (performance && performance.now) {
	        exports = function exports() {
	            return performance.now();
	        };
	    } else if (process && process.hrtime) {
	        var getNanoSeconds = function getNanoSeconds() {
	            var hr = process.hrtime();
	            return hr[0] * 1e9 + hr[1];
	        };
	        loadTime = getNanoSeconds() - process.uptime() * 1e9;
	        exports = function exports() {
	            return (getNanoSeconds() - loadTime) / 1e6;
	        };
	    } else {
	        loadTime = now();
	        exports = function exports() {
	            return now() - loadTime;
	        };
	    }

	    return exports;
	}({});

	/* ------------------------------ pxToNum ------------------------------ */

	var pxToNum = exports.pxToNum = _.pxToNum = function () {
	    /* Turn string like '0px' to number.
	     */

	    /* dependencies
	     * toNum 
	     */

	    function exports(str) {
	        return toNum(str.replace('px', ''));
	    }

	    return exports;
	}();

	/* ------------------------------ rmCookie ------------------------------ */

	var rmCookie = exports.rmCookie = _.rmCookie = function () {
	    /* Loop through all possible path and domain to remove cookie.
	     *
	     * |Name|Type  |Desc      |
	     * |----|------|----------|
	     * |key |string|Cookie key|
	     * 
	     * ```javascript
	     * rmCookie('test');
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * cookie 
	     */

	    function exports(key) {
	        var location = window.location,
	            hostname = location.hostname,
	            pathname = location.pathname,
	            hostNames = hostname.split('.'),
	            pathNames = pathname.split('/'),
	            domain = '',
	            pathLen = pathNames.length,
	            path;

	        if (del()) return;

	        for (var i = hostNames.length - 1; i >= 0; i--) {
	            var hostName = hostNames[i];
	            if (hostName === '') continue;
	            domain = domain === '' ? hostName : hostName + '.' + domain;

	            path = '/';
	            if (del({ domain: domain, path: path }) || del({ domain: domain })) return;

	            for (var j = 0; j < pathLen; j++) {
	                var pathName = pathNames[j];
	                if (pathName === '') continue;

	                path += pathName;
	                if (del({ domain: domain, path: path }) || del({ path: path })) return;

	                path += '/';
	                if (del({ domain: domain, path: path }) || del({ path: path })) return;
	            }
	        }

	        function del(options) {
	            options = options || {};

	            cookie.remove(key, options);

	            return !cookie.get(key);
	        }
	    }

	    return exports;
	}();

	/* ------------------------------ rtrim ------------------------------ */

	var rtrim = exports.rtrim = _.rtrim = function () {
	    /* Remove chars or white-spaces from end of string.
	     *
	     * |Name  |Type        |Desc              |
	     * |------|------------|------------------|
	     * |str   |string      |String to trim    |
	     * |chars |string array|Characters to trim|
	     * |return|string      |Trimmed string    |
	     *
	     * ```javascript
	     * rtrim(' abc  '); // -> ' abc'
	     * rtrim('_abc_', '_'); // -> '_abc'
	     * rtrim('_abc_', ['c', '_']); // -> '_ab'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var regSpace = /\s+$/;

	    function exports(str, chars) {
	        if (chars == null) return str.replace(regSpace, '');

	        var end = str.length - 1,
	            charLen = chars.length,
	            found = true,
	            i,
	            c;

	        while (found && end >= 0) {
	            found = false;
	            i = -1;
	            c = str.charAt(end);

	            while (++i < charLen) {
	                if (c === chars[i]) {
	                    found = true;
	                    end--;
	                    break;
	                }
	            }
	        }

	        return end >= 0 ? str.substring(0, end + 1) : '';
	    }

	    return exports;
	}();

	/* ------------------------------ trim ------------------------------ */

	var trim = exports.trim = _.trim = function () {
	    /* Remove chars or white-spaces from beginning end of string.
	     *
	     * |Name  |Type        |Desc              |
	     * |------|------------|------------------|
	     * |str   |string      |String to trim    |
	     * |chars |string array|Characters to trim|
	     * |return|string      |Trimmed string    |
	     *
	     * ```javascript
	     * trim(' abc  '); // -> 'abc'
	     * trim('_abc_', '_'); // -> 'abc'
	     * trim('_abc_', ['a', 'c', '_']); // -> 'b'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * ltrim rtrim 
	     */

	    var regSpace = /^\s+|\s+$/g;

	    function exports(str, chars) {
	        if (chars == null) return str.replace(regSpace, '');

	        return ltrim(rtrim(str, chars), chars);
	    }

	    return exports;
	}();

	/* ------------------------------ getFileName ------------------------------ */

	var getFileName = exports.getFileName = _.getFileName = function () {
	    /* Extract file name from url.
	     */

	    /* dependencies
	     * last trim 
	     */

	    function exports(url) {
	        var ret = _last(url.split('/'));

	        if (ret.indexOf('?') > -1) ret = trim(ret.split('?')[0]);

	        return ret === '' ? 'unknown' : ret;
	    }

	    return exports;
	}();

	/* ------------------------------ query ------------------------------ */

	var query = exports.query = _.query = function (exports) {
	    /* Parse and stringify url query strings.
	     *
	     * ### parse
	     *
	     * Parse a query string into an object.
	     *
	     * |Name  |Type  |Desc        |
	     * |------|------|------------|
	     * |str   |string|Query string|
	     * |return|object|Query object|
	     *
	     * ### stringify
	     *
	     * Stringify an object into a query string.
	     *
	     * |Name  |Type  |Desc        |
	     * |------|------|------------|
	     * |obj   |object|Query object|
	     * |return|string|Query string|
	     *
	     * ```javascript
	     * query.parse('foo=bar&eruda=true'); // -> {foo: 'bar', eruda: 'true'}
	     * query.stringify({foo: 'bar', eruda: 'true'}); // -> 'foo=bar&eruda=true'
	     * query.parse('name=eruda&name=eustia'); // -> {name: ['eruda', 'eustia']}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * trim each isUndef isArr map isEmpty filter isObj 
	     */

	    exports = {
	        parse: function parse(str) {
	            var ret = {};

	            str = trim(str).replace(regIllegalChars, '');

	            _each(str.split('&'), function (param) {
	                var parts = param.split('=');

	                var key = parts.shift(),
	                    val = parts.length > 0 ? parts.join('=') : null;

	                key = decodeURIComponent(key);
	                val = decodeURIComponent(val);

	                if (isUndef(ret[key])) {
	                    ret[key] = val;
	                } else if (isArr(ret[key])) {
	                    ret[key].push(val);
	                } else {
	                    ret[key] = [ret[key], val];
	                }
	            });

	            return ret;
	        },
	        stringify: function stringify(obj, arrKey) {
	            return filter(map(obj, function (val, key) {
	                if (isObj(val) && isEmpty(val)) return '';
	                if (isArr(val)) return exports.stringify(val, key);

	                return (arrKey ? encodeURIComponent(arrKey) : encodeURIComponent(key)) + '=' + encodeURIComponent(val);
	            }), function (str) {
	                return str.length > 0;
	            }).join('&');
	        }
	    };

	    var regIllegalChars = /^(\?|#|&)/g;

	    return exports;
	}({});

	/* ------------------------------ Url ------------------------------ */

	var Url = exports.Url = _.Url = function (exports) {
	    /* Simple url manipulator.
	     *
	     * ### constructor
	     *
	     * |Name        |Type  |Desc      |
	     * |------------|------|----------|
	     * |url=location|string|Url string|
	     *
	     * ### setQuery
	     *
	     * Set query value.
	     *
	     * |Name  |Type  |Desc       |
	     * |------|------|-----------|
	     * |name  |string|Query name |
	     * |value |string|Query value|
	     * |return|Url   |this       |
	     *
	     * |Name  |Type  |Desc        |
	     * |------|------|------------|
	     * |names |object|query object|
	     * |return|Url   |this        |
	     *
	     * ### rmQuery
	     *
	     * Remove query value.
	     *
	     * |Name  |Type        |Desc      |
	     * |------|------------|----------|
	     * |name  |string array|Query name|
	     * |return|Url         |this      |
	     *
	     * ### parse
	     *
	     * [static] Parse url into an object.
	     *
	     * |Name  |Type  |Desc      |
	     * |------|------|----------|
	     * |url   |string|Url string|
	     * |return|object|Url object|
	     *
	     * ### stringify
	     *
	     * [static] Stringify url object into a string.
	     *
	     * |Name  |Type  |Desc      |
	     * |------|------|----------|
	     * |url   |object|Url object|
	     * |return|string|Url string|
	     *
	     * An url object contains the following properties:
	     *
	     * |Name    |Desc                                                                                  |
	     * |--------|--------------------------------------------------------------------------------------|
	     * |protocol|The protocol scheme of the URL (e.g. http:)                                           |
	     * |slashes |A boolean which indicates whether the protocol is followed by two forward slashes (//)|
	     * |auth    |Authentication information portion (e.g. username:password)                           |
	     * |hostname|Host name without port number                                                         |
	     * |port    |Optional port number                                                                  |
	     * |pathname|URL path                                                                              |
	     * |query   |Parsed object containing query string                                                 |
	     * |hash    |The "fragment" portion of the URL including the pound-sign (#)                        |
	     *
	     * ```javascript
	     * var url = new Url('http://example.com:8080?eruda=true');
	     * console.log(url.port); // -> '8080'
	     * url.query.foo = 'bar';
	     * url.rmQuery('eruda');
	     * utl.toString(); // -> 'http://example.com:8080/?foo=bar'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * Class extend trim query isEmpty each isArr toArr isBrowser 
	     */

	    exports = Class({
	        className: 'Url',
	        initialize: function initialize(url) {
	            if (!url && isBrowser) url = window.location.href;
	            extend(this, exports.parse(url || ''));
	        },
	        setQuery: function setQuery(name, val) {
	            var query = this.query;

	            if (isObj(name)) {
	                _each(name, function (val, key) {
	                    query[key] = val;
	                });
	            } else {
	                query[name] = val;
	            }

	            return this;
	        },
	        rmQuery: function rmQuery(name) {
	            var query = this.query;

	            if (!isArr(name)) name = toArr(name);
	            _each(name, function (key) {
	                delete query[key];
	            });

	            return this;
	        },
	        toString: function toString() {
	            return exports.stringify(this);
	        }
	    }, {
	        parse: function parse(url) {
	            var ret = {
	                protocol: '',
	                auth: '',
	                hostname: '',
	                hash: '',
	                query: {},
	                port: '',
	                pathname: '',
	                slashes: false
	            },
	                rest = trim(url);

	            var proto = rest.match(regProto);
	            if (proto) {
	                proto = proto[0];
	                ret.protocol = proto.toLowerCase();
	                rest = rest.substr(proto.length);
	            }

	            if (proto) {
	                var slashes = rest.substr(0, 2) === '//';
	                if (slashes) {
	                    rest = rest.slice(2);
	                    ret.slashes = true;
	                }
	            }

	            if (slashes) {
	                var hostEnd = -1;
	                for (var i = 0, len = hostEndingChars.length; i < len; i++) {
	                    var pos = rest.indexOf(hostEndingChars[i]);
	                    if (pos !== -1 && (hostEnd === -1 || pos < hostEnd)) hostEnd = pos;
	                }

	                var host = rest.slice(0, hostEnd);
	                rest = rest.slice(hostEnd);

	                var atSign = host.lastIndexOf('@');

	                if (atSign !== -1) {
	                    ret.auth = decodeURIComponent(host.slice(0, atSign));
	                    host = host.slice(atSign + 1);
	                }

	                ret.hostname = host;
	                var port = host.match(regPort);
	                if (port) {
	                    port = port[0];
	                    if (port !== ':') ret.port = port.substr(1);
	                    ret.hostname = host.substr(0, host.length - port.length);
	                }
	            }

	            var hash = rest.indexOf('#');

	            if (hash !== -1) {
	                ret.hash = rest.substr(hash);
	                rest = rest.slice(0, hash);
	            }

	            var queryMark = rest.indexOf('?');

	            if (queryMark !== -1) {
	                ret.query = query.parse(rest.substr(queryMark + 1));
	                rest = rest.slice(0, queryMark);
	            }

	            ret.pathname = rest || '/';

	            return ret;
	        },
	        stringify: function stringify(obj) {
	            var ret = obj.protocol + (obj.slashes ? '//' : '') + (obj.auth ? encodeURIComponent(obj.auth) + '@' : '') + obj.hostname + (obj.port ? ':' + obj.port : '') + obj.pathname;

	            if (!isEmpty(obj.query)) ret += '?' + query.stringify(obj.query);
	            if (obj.hash) ret += obj.hash;

	            return ret;
	        }
	    });

	    var regProto = /^([a-z0-9.+-]+:)/i,
	        regPort = /:[0-9]*$/,
	        hostEndingChars = ['/', '?', '#'];

	    return exports;
	}({});

	/* ------------------------------ ajax ------------------------------ */

	var ajax = exports.ajax = _.ajax = function () {
	    /* Perform an asynchronous HTTP request.
	     *
	     * |Name   |Type  |Desc        |
	     * |-------|------|------------|
	     * |options|object|Ajax options|
	     *
	     * Available options:
	     *
	     * |Name                                         |Type         |Desc                      |
	     * |---------------------------------------------|-------------|---------------------------|
	     * |url                                          |string       |Request url                |
	     * |data                                         |string object|Request data               |
	     * |dataType=json                                |string       |Response type(json, xml)   |
	     * |contentType=application/x-www-form-urlencoded|string       |Request header Content-Type|
	     * |success                                      |function     |Success callback           |
	     * |error                                        |function     |Error callback             |
	     * |complete                                     |function     |Callback after request     |
	     * |timeout                                      |number       |Request timeout            |
	     *
	     * ### get
	     *
	     * Shortcut for type = GET;
	     *
	     * ### post
	     *
	     * Shortcut for type = POST;
	     *
	     * |Name    |Type         |Desc            |
	     * |--------|-------------|----------------|
	     * |url     |string       |Request url     |
	     * |[data]  |string object|Request data    |
	     * |success |function     |Success callback|
	     * |dataType|function     |Response type   |
	     *
	     * ```javascript
	     * ajax({
	     *     url: 'http://example.com',
	     *     data: {test: 'true'},
	     *     error: function () {},
	     *     success: function (data)
	     *     {
	     *         // ...
	     *     },
	     *     dataType: 'json'
	     * });
	     *
	     * ajax.get('http://example.com', {}, function (data)
	     * {
	     *     // ...
	     * });
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: manual
	     */

	    /* dependencies
	     * isFn noop defaults isObj query 
	     */

	    function exports(options) {
	        defaults(options, exports.setting);

	        var type = options.type,
	            url = options.url,
	            data = options.data,
	            dataType = options.dataType,
	            success = options.success,
	            error = options.error,
	            timeout = options.timeout,
	            complete = options.complete,
	            xhr = options.xhr(),
	            abortTimeout;

	        xhr.onreadystatechange = function () {
	            if (xhr.readyState !== 4) return;

	            clearTimeout(abortTimeout);

	            var result;

	            var status = xhr.status;
	            if (status >= 200 && status < 300 || status === 304) {
	                result = xhr.responseText;
	                if (dataType === 'xml') result = xhr.responseXML;
	                try {
	                    if (dataType === 'json') result = JSON.parse(result);
	                    /* eslint-disable no-empty */
	                } catch (e) {}
	                success(result, xhr);
	            } else {
	                error(xhr);
	            }

	            complete(xhr);
	        };

	        if (type === 'GET') {
	            data = query.stringify(data);
	            url += url.indexOf('?') > -1 ? '&' + data : '?' + data;
	        } else if (options.contentType === 'application/x-www-form-urlencoded') {
	            if (isObj(data)) data = query.stringify(data);
	        } else if (options.contentType === 'application/json') {
	            if (isObj(data)) data = (0, _stringify2.default)(data);
	        }

	        xhr.open(type, url, true);
	        xhr.setRequestHeader('Content-Type', options.contentType);

	        if (timeout > 0) {
	            abortTimeout = setTimeout(function () {
	                xhr.onreadystatechange = noop;
	                xhr.abort();
	                error(xhr, 'timeout');
	                complete(xhr);
	            }, timeout);
	        }
	        xhr.send(type === 'GET' ? null : data);

	        return xhr;
	    }

	    exports.setting = {
	        type: 'GET',
	        success: noop,
	        error: noop,
	        complete: noop,
	        dataType: 'json',
	        contentType: 'application/x-www-form-urlencoded',
	        data: {},
	        xhr: function xhr() {
	            return new XMLHttpRequest();
	        },
	        timeout: 0
	    };

	    exports.get = function () {
	        return exports(parseArgs.apply(null, arguments));
	    };

	    exports.post = function () {
	        var options = parseArgs.apply(null, arguments);
	        options.type = 'POST';

	        return exports(options);
	    };

	    function parseArgs(url, data, success, dataType) {
	        if (isFn(data)) {
	            dataType = success;
	            success = data;
	            data = {};
	        }

	        return {
	            url: url,
	            data: data,
	            success: success,
	            dataType: dataType
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ type ------------------------------ */

	var type = exports.type = _.type = function () {
	    /* Determine the internal JavaScript [[Class]] of an object.
	     *
	     * |Name  |Type  |Desc                      |
	     * |------|------|--------------------------|
	     * |val   |*     |Value to get type         |
	     * |return|string|Type of object, lowercased|
	     *
	     * ```javascript
	     * type(5); // -> 'number'
	     * type({}); // -> 'object'
	     * type(function () {}); // -> 'function'
	     * type([]); // -> 'array'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr isNaN 
	     */

	    function exports(val) {
	        if (val === null) return 'null';
	        if (val === undefined) return 'undefined';
	        if (isNaN(val)) return 'nan';

	        var ret = objToStr(val).match(regObj);

	        if (!ret) return '';

	        return ret[1].toLowerCase();
	    }

	    var regObj = /^\[object\s+(.*?)]$/;

	    return exports;
	}();

	/* ------------------------------ stringify ------------------------------ */

	var stringify = exports.stringify = _.stringify = function () {
	    /* JSON stringify with support for circular object, function etc.
	     *
	     * Undefined is treated as null value.
	     *  
	     * |Name  |Type  |Desc               |
	     * |------|------|-------------------|
	     * |obj   |object|Object to stringify|
	     * |spaces|number|Indent spaces      |
	     * |return|string|Stringified object |
	     * 
	     * ```javascript
	     * stringify({a: function () {}}); // -> '{"a":"[Function function () {}]"}'
	     * var obj = {a: 1};
	     * obj.b = obj;
	     * stringify(obj); // -> '{"a":1,"b":"[Circular ~]"}'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * type upperFirst toStr isUndef isFn isRegExp 
	     */

	    function exports(obj, spaces) {
	        return (0, _stringify2.default)(obj, serializer(), spaces);
	    }

	    function serializer() {
	        var stack = [],
	            keys = [];

	        return function (key, val) {
	            if (stack.length > 0) {
	                var pos = stack.indexOf(this);
	                if (pos > -1) {
	                    stack.splice(pos + 1);
	                    keys.splice(pos, Infinity, key);
	                } else {
	                    stack.push(this);
	                    keys.push(key);
	                }

	                var valPos = stack.indexOf(val);
	                if (valPos > -1) {
	                    if (stack[0] === val) {
	                        val = '[Circular ~]';
	                    } else {
	                        val = '[Circular ~.' + keys.slice(0, valPos).join('.') + ']';
	                    }
	                }
	            } else {
	                stack.push(val);
	            }

	            if (isRegExp(val) || isFn(val)) {
	                val = '[' + upperFirst(type(val)) + ' ' + toStr(val) + ']';
	            } else if (isUndef(val)) {
	                val = null;
	            }

	            return val;
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ LocalStore ------------------------------ */

	var LocalStore = exports.LocalStore = _.LocalStore = function (exports) {
	    /* LocalStorage wrapper.
	     * 
	     * Extend from Store.
	     * 
	     * ### constructor
	     * 
	     * |Name|Type  |Desc                  |
	     * |----|------|----------------------|
	     * |name|string|LocalStorage item name|
	     * |data|object|Default data          |
	     * 
	     * ```javascript
	     * var store = new LocalStore('licia');
	     * store.set('name', 'licia');
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * Store safeStorage isEmpty stringify defaults isObj 
	     */

	    var localStorage = safeStorage('local');

	    exports = Store.extend({
	        initialize: function LocalStore(name, data) {
	            this._name = name;

	            var localData = localStorage.getItem(name);
	            try {
	                localData = JSON.parse(localData);
	            } catch (e) {
	                localData = {};
	            }
	            if (!isObj(localData)) localData = {};
	            data = defaults(localData, data);
	            this.callSuper(Store, 'initialize', [data]);
	        },
	        save: function save(data) {
	            if (isEmpty(data)) return localStorage.removeItem(this._name);
	            localStorage.setItem(this._name, stringify(data));
	        }
	    });

	    return exports;
	}({});

	/* ------------------------------ stripHtmlTag ------------------------------ */

	var stripHtmlTag = exports.stripHtmlTag = _.stripHtmlTag = function () {
	    /* Strip html tags from a string.
	     *
	     * |Name  |Type  |Desc           |
	     * |------|------|---------------|
	     * |str   |string|String to strip|
	     * |return|string|Resulted string|
	     *
	     * ```javascript
	     * stripHtmlTag('<p>Hello</p>'); // -> 'Hello'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var regHtmlTag = /<[^>]*>/g;

	    function exports(str) {
	        return str.replace(regHtmlTag, '');
	    }

	    return exports;
	}();

	/* ------------------------------ tryIt ------------------------------ */

	var tryIt = exports.tryIt = _.tryIt = function () {
	    /* Run function in a try catch.
	     * 
	     * |Name|Type    |Desc                 |
	     * |----|--------|---------------------|
	     * |fn  |function|Function to try catch|
	     * |[cb]|function|Callback             |
	     * 
	     * ```javascript
	     * tryIt(function () 
	     * {
	     *     // Do something that might cause an error.
	     * }, function (err, result) 
	     * {
	     *     if (err) console.log(err);
	     * });
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * noop 
	     */

	    function exports(fn, cb) {
	        cb = cb || noop;

	        try {
	            cb(null, fn());
	        } catch (e) {
	            cb(e);
	            return;
	        }
	    }

	    return exports;
	}();

	/* ------------------------------ uniqId ------------------------------ */

	var uniqId = exports.uniqId = _.uniqId = function () {
	    /* Generate a globally-unique id.
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |prefix|string|Id prefix         |
	     * |return|string|Globally-unique id|
	     *
	     * ```javascript
	     * uniqId('eusita_'); // -> 'eustia_xxx'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var idCounter = 0;

	    function exports(prefix) {
	        var id = ++idCounter + '';

	        return prefix ? prefix + id : id;
	    }

	    return exports;
	}();

	/* ------------------------------ unique ------------------------------ */

	var unique = exports.unique = _.unique = function () {
	    /* Create duplicate-free version of an array.
	     *
	     * |Name     |Type    |Desc                         |
	     * |---------|--------|-----------------------------|
	     * |arr      |array   |Array to inspect             |
	     * |[compare]|function|Function for comparing values|
	     * |return   |array   |New duplicate free array     |
	     *
	     * ```javascript
	     * unique([1, 2, 3, 1]); // -> [1, 2, 3]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * filter 
	     */

	    function exports(arr, compare) {
	        compare = compare || isEqual;

	        return filter(arr, function (item, idx, arr) {
	            var len = arr.length;

	            while (++idx < len) {
	                if (compare(item, arr[idx])) return false;
	            }

	            return true;
	        });
	    }

	    function isEqual(a, b) {
	        return a === b;
	    }

	    return exports;
	}();

	/* ------------------------------ viewportScale ------------------------------ */

	var viewportScale = exports.viewportScale = _.viewportScale = function () {
	    /* Get viewport scale.
	     * 
	     * ```javascript
	     * viewportScale(); // -> 3
	     * ```
	     */

	    /* module
	     * env: browser
	     * test: browser
	     */

	    /* dependencies
	     * meta clamp trim each map isNaN 
	     */

	    function exports() {
	        var viewport = meta('viewport');

	        if (!viewport) return 1;

	        viewport = map(viewport.split(','), function (val) {
	            return trim(val);
	        });

	        var minScale = 0.25,
	            maxScale = 5,
	            initialScale = 1;

	        _each(viewport, function (val) {
	            val = val.split('=');

	            var key = val[0];
	            val = val[1];

	            if (key === 'initial-scale') initialScale = +val;
	            if (key === 'maximum-scale') maxScale = +val;
	            if (key === 'minimum-scale') minScale = +val;
	        });

	        var ret = clamp(initialScale, minScale, maxScale);

	        // Some will use ';' to be the separator, need to avoid the wrong result.
	        if (isNaN(ret)) return 1;

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ wrap ------------------------------ */

	var wrap = exports.wrap = _.wrap = function () {
	    /* Wrap the function inside a wrapper function, passing it as the first argument.
	     *
	     * |Name   |Type    |Desc            |
	     * |-------|--------|----------------|
	     * |fn     |*       |Function to wrap|
	     * |wrapper|function|Wrapper function|
	     * |return |function|New function    |
	     *
	     * ```javascript
	     * var p = wrap(escape, function(fn, text)
	     * {
	     *     return '<p>' + fn(text) + '</p>';
	     * });
	     * p('You & Me'); // -> '<p>You &amp; Me</p>'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * partial 
	     */

	    function exports(fn, wrapper) {
	        return partial(wrapper, fn);
	    }

	    return exports;
	}();

	exports.default = _;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(73), __webpack_require__(121)))

	/***/ }),
	/* 1 */
	/***/ (function(module, exports, __webpack_require__) {

	/**!

	 @license
	 handlebars v4.0.11

	Copyright (C) 2011-2017 by Yehuda Katz

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.

	*/
	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else if(typeof exports === 'object')
			exports["Handlebars"] = factory();
		else
			root["Handlebars"] = factory();
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};

	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {

	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;

	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};

	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;

	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}


	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;

	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;

	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";

	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireWildcard = __webpack_require__(1)['default'];

		var _interopRequireDefault = __webpack_require__(2)['default'];

		exports.__esModule = true;

		var _handlebarsBase = __webpack_require__(3);

		var base = _interopRequireWildcard(_handlebarsBase);

		// Each of these augment the Handlebars object. No need to setup here.
		// (This is done to easily share code between commonjs and browse envs)

		var _handlebarsSafeString = __webpack_require__(20);

		var _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);

		var _handlebarsException = __webpack_require__(5);

		var _handlebarsException2 = _interopRequireDefault(_handlebarsException);

		var _handlebarsUtils = __webpack_require__(4);

		var Utils = _interopRequireWildcard(_handlebarsUtils);

		var _handlebarsRuntime = __webpack_require__(21);

		var runtime = _interopRequireWildcard(_handlebarsRuntime);

		var _handlebarsNoConflict = __webpack_require__(33);

		var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

		// For compatibility and usage outside of module systems, make the Handlebars object a namespace
		function create() {
		  var hb = new base.HandlebarsEnvironment();

		  Utils.extend(hb, base);
		  hb.SafeString = _handlebarsSafeString2['default'];
		  hb.Exception = _handlebarsException2['default'];
		  hb.Utils = Utils;
		  hb.escapeExpression = Utils.escapeExpression;

		  hb.VM = runtime;
		  hb.template = function (spec) {
		    return runtime.template(spec, hb);
		  };

		  return hb;
		}

		var inst = create();
		inst.create = create;

		_handlebarsNoConflict2['default'](inst);

		inst['default'] = inst;

		exports['default'] = inst;
		module.exports = exports['default'];

	/***/ }),
	/* 1 */
	/***/ (function(module, exports) {

		"use strict";

		exports["default"] = function (obj) {
		  if (obj && obj.__esModule) {
		    return obj;
		  } else {
		    var newObj = {};

		    if (obj != null) {
		      for (var key in obj) {
		        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
		      }
		    }

		    newObj["default"] = obj;
		    return newObj;
		  }
		};

		exports.__esModule = true;

	/***/ }),
	/* 2 */
	/***/ (function(module, exports) {

		"use strict";

		exports["default"] = function (obj) {
		  return obj && obj.__esModule ? obj : {
		    "default": obj
		  };
		};

		exports.__esModule = true;

	/***/ }),
	/* 3 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(2)['default'];

		exports.__esModule = true;
		exports.HandlebarsEnvironment = HandlebarsEnvironment;

		var _utils = __webpack_require__(4);

		var _exception = __webpack_require__(5);

		var _exception2 = _interopRequireDefault(_exception);

		var _helpers = __webpack_require__(9);

		var _decorators = __webpack_require__(17);

		var _logger = __webpack_require__(19);

		var _logger2 = _interopRequireDefault(_logger);

		var VERSION = '4.0.11';
		exports.VERSION = VERSION;
		var COMPILER_REVISION = 7;

		exports.COMPILER_REVISION = COMPILER_REVISION;
		var REVISION_CHANGES = {
		  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
		  2: '== 1.0.0-rc.3',
		  3: '== 1.0.0-rc.4',
		  4: '== 1.x.x',
		  5: '== 2.0.0-alpha.x',
		  6: '>= 2.0.0-beta.1',
		  7: '>= 4.0.0'
		};

		exports.REVISION_CHANGES = REVISION_CHANGES;
		var objectType = '[object Object]';

		function HandlebarsEnvironment(helpers, partials, decorators) {
		  this.helpers = helpers || {};
		  this.partials = partials || {};
		  this.decorators = decorators || {};

		  _helpers.registerDefaultHelpers(this);
		  _decorators.registerDefaultDecorators(this);
		}

		HandlebarsEnvironment.prototype = {
		  constructor: HandlebarsEnvironment,

		  logger: _logger2['default'],
		  log: _logger2['default'].log,

		  registerHelper: function registerHelper(name, fn) {
		    if (_utils.toString.call(name) === objectType) {
		      if (fn) {
		        throw new _exception2['default']('Arg not supported with multiple helpers');
		      }
		      _utils.extend(this.helpers, name);
		    } else {
		      this.helpers[name] = fn;
		    }
		  },
		  unregisterHelper: function unregisterHelper(name) {
		    delete this.helpers[name];
		  },

		  registerPartial: function registerPartial(name, partial) {
		    if (_utils.toString.call(name) === objectType) {
		      _utils.extend(this.partials, name);
		    } else {
		      if (typeof partial === 'undefined') {
		        throw new _exception2['default']('Attempting to register a partial called "' + name + '" as undefined');
		      }
		      this.partials[name] = partial;
		    }
		  },
		  unregisterPartial: function unregisterPartial(name) {
		    delete this.partials[name];
		  },

		  registerDecorator: function registerDecorator(name, fn) {
		    if (_utils.toString.call(name) === objectType) {
		      if (fn) {
		        throw new _exception2['default']('Arg not supported with multiple decorators');
		      }
		      _utils.extend(this.decorators, name);
		    } else {
		      this.decorators[name] = fn;
		    }
		  },
		  unregisterDecorator: function unregisterDecorator(name) {
		    delete this.decorators[name];
		  }
		};

		var log = _logger2['default'].log;

		exports.log = log;
		exports.createFrame = _utils.createFrame;
		exports.logger = _logger2['default'];

	/***/ }),
	/* 4 */
	/***/ (function(module, exports) {

		'use strict';

		exports.__esModule = true;
		exports.extend = extend;
		exports.indexOf = indexOf;
		exports.escapeExpression = escapeExpression;
		exports.isEmpty = isEmpty;
		exports.createFrame = createFrame;
		exports.blockParams = blockParams;
		exports.appendContextPath = appendContextPath;
		var escape = {
		  '&': '&amp;',
		  '<': '&lt;',
		  '>': '&gt;',
		  '"': '&quot;',
		  "'": '&#x27;',
		  '`': '&#x60;',
		  '=': '&#x3D;'
		};

		var badChars = /[&<>"'`=]/g,
		    possible = /[&<>"'`=]/;

		function escapeChar(chr) {
		  return escape[chr];
		}

		function extend(obj /* , ...source */) {
		  for (var i = 1; i < arguments.length; i++) {
		    for (var key in arguments[i]) {
		      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
		        obj[key] = arguments[i][key];
		      }
		    }
		  }

		  return obj;
		}

		var toString = Object.prototype.toString;

		exports.toString = toString;
		// Sourced from lodash
		// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
		/* eslint-disable func-style */
		var isFunction = function isFunction(value) {
		  return typeof value === 'function';
		};
		// fallback for older versions of Chrome and Safari
		/* istanbul ignore next */
		if (isFunction(/x/)) {
		  exports.isFunction = isFunction = function (value) {
		    return typeof value === 'function' && toString.call(value) === '[object Function]';
		  };
		}
		exports.isFunction = isFunction;

		/* eslint-enable func-style */

		/* istanbul ignore next */
		var isArray = Array.isArray || function (value) {
		  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
		};

		exports.isArray = isArray;
		// Older IE versions do not directly support indexOf so we must implement our own, sadly.

		function indexOf(array, value) {
		  for (var i = 0, len = array.length; i < len; i++) {
		    if (array[i] === value) {
		      return i;
		    }
		  }
		  return -1;
		}

		function escapeExpression(string) {
		  if (typeof string !== 'string') {
		    // don't escape SafeStrings, since they're already safe
		    if (string && string.toHTML) {
		      return string.toHTML();
		    } else if (string == null) {
		      return '';
		    } else if (!string) {
		      return string + '';
		    }

		    // Force a string conversion as this will be done by the append regardless and
		    // the regex test will do this transparently behind the scenes, causing issues if
		    // an object's to string has escaped characters in it.
		    string = '' + string;
		  }

		  if (!possible.test(string)) {
		    return string;
		  }
		  return string.replace(badChars, escapeChar);
		}

		function isEmpty(value) {
		  if (!value && value !== 0) {
		    return true;
		  } else if (isArray(value) && value.length === 0) {
		    return true;
		  } else {
		    return false;
		  }
		}

		function createFrame(object) {
		  var frame = extend({}, object);
		  frame._parent = object;
		  return frame;
		}

		function blockParams(params, ids) {
		  params.path = ids;
		  return params;
		}

		function appendContextPath(contextPath, id) {
		  return (contextPath ? contextPath + '.' : '') + id;
		}

	/***/ }),
	/* 5 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _Object$defineProperty = __webpack_require__(6)['default'];

		exports.__esModule = true;

		var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

		function Exception(message, node) {
		  var loc = node && node.loc,
		      line = undefined,
		      column = undefined;
		  if (loc) {
		    line = loc.start.line;
		    column = loc.start.column;

		    message += ' - ' + line + ':' + column;
		  }

		  var tmp = Error.prototype.constructor.call(this, message);

		  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
		  for (var idx = 0; idx < errorProps.length; idx++) {
		    this[errorProps[idx]] = tmp[errorProps[idx]];
		  }

		  /* istanbul ignore else */
		  if (Error.captureStackTrace) {
		    Error.captureStackTrace(this, Exception);
		  }

		  try {
		    if (loc) {
		      this.lineNumber = line;

		      // Work around issue under safari where we can't directly set the column value
		      /* istanbul ignore next */
		      if (_Object$defineProperty) {
		        Object.defineProperty(this, 'column', {
		          value: column,
		          enumerable: true
		        });
		      } else {
		        this.column = column;
		      }
		    }
		  } catch (nop) {
		    /* Ignore if the browser is very particular */
		  }
		}

		Exception.prototype = new Error();

		exports['default'] = Exception;
		module.exports = exports['default'];

	/***/ }),
	/* 6 */
	/***/ (function(module, exports, __webpack_require__) {

		module.exports = { "default": __webpack_require__(7), __esModule: true };

	/***/ }),
	/* 7 */
	/***/ (function(module, exports, __webpack_require__) {

		var $ = __webpack_require__(8);
		module.exports = function defineProperty(it, key, desc){
		  return $.setDesc(it, key, desc);
		};

	/***/ }),
	/* 8 */
	/***/ (function(module, exports) {

		var $Object = Object;
		module.exports = {
		  create:     $Object.create,
		  getProto:   $Object.getPrototypeOf,
		  isEnum:     {}.propertyIsEnumerable,
		  getDesc:    $Object.getOwnPropertyDescriptor,
		  setDesc:    $Object.defineProperty,
		  setDescs:   $Object.defineProperties,
		  getKeys:    $Object.keys,
		  getNames:   $Object.getOwnPropertyNames,
		  getSymbols: $Object.getOwnPropertySymbols,
		  each:       [].forEach
		};

	/***/ }),
	/* 9 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(2)['default'];

		exports.__esModule = true;
		exports.registerDefaultHelpers = registerDefaultHelpers;

		var _helpersBlockHelperMissing = __webpack_require__(10);

		var _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);

		var _helpersEach = __webpack_require__(11);

		var _helpersEach2 = _interopRequireDefault(_helpersEach);

		var _helpersHelperMissing = __webpack_require__(12);

		var _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);

		var _helpersIf = __webpack_require__(13);

		var _helpersIf2 = _interopRequireDefault(_helpersIf);

		var _helpersLog = __webpack_require__(14);

		var _helpersLog2 = _interopRequireDefault(_helpersLog);

		var _helpersLookup = __webpack_require__(15);

		var _helpersLookup2 = _interopRequireDefault(_helpersLookup);

		var _helpersWith = __webpack_require__(16);

		var _helpersWith2 = _interopRequireDefault(_helpersWith);

		function registerDefaultHelpers(instance) {
		  _helpersBlockHelperMissing2['default'](instance);
		  _helpersEach2['default'](instance);
		  _helpersHelperMissing2['default'](instance);
		  _helpersIf2['default'](instance);
		  _helpersLog2['default'](instance);
		  _helpersLookup2['default'](instance);
		  _helpersWith2['default'](instance);
		}

	/***/ }),
	/* 10 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;

		var _utils = __webpack_require__(4);

		exports['default'] = function (instance) {
		  instance.registerHelper('blockHelperMissing', function (context, options) {
		    var inverse = options.inverse,
		        fn = options.fn;

		    if (context === true) {
		      return fn(this);
		    } else if (context === false || context == null) {
		      return inverse(this);
		    } else if (_utils.isArray(context)) {
		      if (context.length > 0) {
		        if (options.ids) {
		          options.ids = [options.name];
		        }

		        return instance.helpers.each(context, options);
		      } else {
		        return inverse(this);
		      }
		    } else {
		      if (options.data && options.ids) {
		        var data = _utils.createFrame(options.data);
		        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);
		        options = { data: data };
		      }

		      return fn(context, options);
		    }
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 11 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(2)['default'];

		exports.__esModule = true;

		var _utils = __webpack_require__(4);

		var _exception = __webpack_require__(5);

		var _exception2 = _interopRequireDefault(_exception);

		exports['default'] = function (instance) {
		  instance.registerHelper('each', function (context, options) {
		    if (!options) {
		      throw new _exception2['default']('Must pass iterator to #each');
		    }

		    var fn = options.fn,
		        inverse = options.inverse,
		        i = 0,
		        ret = '',
		        data = undefined,
		        contextPath = undefined;

		    if (options.data && options.ids) {
		      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
		    }

		    if (_utils.isFunction(context)) {
		      context = context.call(this);
		    }

		    if (options.data) {
		      data = _utils.createFrame(options.data);
		    }

		    function execIteration(field, index, last) {
		      if (data) {
		        data.key = field;
		        data.index = index;
		        data.first = index === 0;
		        data.last = !!last;

		        if (contextPath) {
		          data.contextPath = contextPath + field;
		        }
		      }

		      ret = ret + fn(context[field], {
		        data: data,
		        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])
		      });
		    }

		    if (context && typeof context === 'object') {
		      if (_utils.isArray(context)) {
		        for (var j = context.length; i < j; i++) {
		          if (i in context) {
		            execIteration(i, i, i === context.length - 1);
		          }
		        }
		      } else {
		        var priorKey = undefined;

		        for (var key in context) {
		          if (context.hasOwnProperty(key)) {
		            // We're running the iterations one step out of sync so we can detect
		            // the last iteration without have to scan the object twice and create
		            // an itermediate keys array.
		            if (priorKey !== undefined) {
		              execIteration(priorKey, i - 1);
		            }
		            priorKey = key;
		            i++;
		          }
		        }
		        if (priorKey !== undefined) {
		          execIteration(priorKey, i - 1, true);
		        }
		      }
		    }

		    if (i === 0) {
		      ret = inverse(this);
		    }

		    return ret;
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 12 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(2)['default'];

		exports.__esModule = true;

		var _exception = __webpack_require__(5);

		var _exception2 = _interopRequireDefault(_exception);

		exports['default'] = function (instance) {
		  instance.registerHelper('helperMissing', function () /* [args, ]options */{
		    if (arguments.length === 1) {
		      // A missing field in a {{foo}} construct.
		      return undefined;
		    } else {
		      // Someone is actually trying to call something, blow up.
		      throw new _exception2['default']('Missing helper: "' + arguments[arguments.length - 1].name + '"');
		    }
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 13 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;

		var _utils = __webpack_require__(4);

		exports['default'] = function (instance) {
		  instance.registerHelper('if', function (conditional, options) {
		    if (_utils.isFunction(conditional)) {
		      conditional = conditional.call(this);
		    }

		    // Default behavior is to render the positive path if the value is truthy and not empty.
		    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
		    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
		    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {
		      return options.inverse(this);
		    } else {
		      return options.fn(this);
		    }
		  });

		  instance.registerHelper('unless', function (conditional, options) {
		    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 14 */
	/***/ (function(module, exports) {

		'use strict';

		exports.__esModule = true;

		exports['default'] = function (instance) {
		  instance.registerHelper('log', function () /* message, options */{
		    var args = [undefined],
		        options = arguments[arguments.length - 1];
		    for (var i = 0; i < arguments.length - 1; i++) {
		      args.push(arguments[i]);
		    }

		    var level = 1;
		    if (options.hash.level != null) {
		      level = options.hash.level;
		    } else if (options.data && options.data.level != null) {
		      level = options.data.level;
		    }
		    args[0] = level;

		    instance.log.apply(instance, args);
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 15 */
	/***/ (function(module, exports) {

		'use strict';

		exports.__esModule = true;

		exports['default'] = function (instance) {
		  instance.registerHelper('lookup', function (obj, field) {
		    return obj && obj[field];
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 16 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;

		var _utils = __webpack_require__(4);

		exports['default'] = function (instance) {
		  instance.registerHelper('with', function (context, options) {
		    if (_utils.isFunction(context)) {
		      context = context.call(this);
		    }

		    var fn = options.fn;

		    if (!_utils.isEmpty(context)) {
		      var data = options.data;
		      if (options.data && options.ids) {
		        data = _utils.createFrame(options.data);
		        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);
		      }

		      return fn(context, {
		        data: data,
		        blockParams: _utils.blockParams([context], [data && data.contextPath])
		      });
		    } else {
		      return options.inverse(this);
		    }
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 17 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(2)['default'];

		exports.__esModule = true;
		exports.registerDefaultDecorators = registerDefaultDecorators;

		var _decoratorsInline = __webpack_require__(18);

		var _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);

		function registerDefaultDecorators(instance) {
		  _decoratorsInline2['default'](instance);
		}

	/***/ }),
	/* 18 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;

		var _utils = __webpack_require__(4);

		exports['default'] = function (instance) {
		  instance.registerDecorator('inline', function (fn, props, container, options) {
		    var ret = fn;
		    if (!props.partials) {
		      props.partials = {};
		      ret = function (context, options) {
		        // Create a new partials stack frame prior to exec.
		        var original = container.partials;
		        container.partials = _utils.extend({}, original, props.partials);
		        var ret = fn(context, options);
		        container.partials = original;
		        return ret;
		      };
		    }

		    props.partials[options.args[0]] = options.fn;

		    return ret;
		  });
		};

		module.exports = exports['default'];

	/***/ }),
	/* 19 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;

		var _utils = __webpack_require__(4);

		var logger = {
		  methodMap: ['debug', 'info', 'warn', 'error'],
		  level: 'info',

		  // Maps a given level value to the `methodMap` indexes above.
		  lookupLevel: function lookupLevel(level) {
		    if (typeof level === 'string') {
		      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());
		      if (levelMap >= 0) {
		        level = levelMap;
		      } else {
		        level = parseInt(level, 10);
		      }
		    }

		    return level;
		  },

		  // Can be overridden in the host environment
		  log: function log(level) {
		    level = logger.lookupLevel(level);

		    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {
		      var method = logger.methodMap[level];
		      if (!console[method]) {
		        // eslint-disable-line no-console
		        method = 'log';
		      }

		      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		        message[_key - 1] = arguments[_key];
		      }

		      console[method].apply(console, message); // eslint-disable-line no-console
		    }
		  }
		};

		exports['default'] = logger;
		module.exports = exports['default'];

	/***/ }),
	/* 20 */
	/***/ (function(module, exports) {

		// Build out our basic SafeString type
		'use strict';

		exports.__esModule = true;
		function SafeString(string) {
		  this.string = string;
		}

		SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
		  return '' + this.string;
		};

		exports['default'] = SafeString;
		module.exports = exports['default'];

	/***/ }),
	/* 21 */
	/***/ (function(module, exports, __webpack_require__) {

		'use strict';

		var _Object$seal = __webpack_require__(22)['default'];

		var _interopRequireWildcard = __webpack_require__(1)['default'];

		var _interopRequireDefault = __webpack_require__(2)['default'];

		exports.__esModule = true;
		exports.checkRevision = checkRevision;
		exports.template = template;
		exports.wrapProgram = wrapProgram;
		exports.resolvePartial = resolvePartial;
		exports.invokePartial = invokePartial;
		exports.noop = noop;

		var _utils = __webpack_require__(4);

		var Utils = _interopRequireWildcard(_utils);

		var _exception = __webpack_require__(5);

		var _exception2 = _interopRequireDefault(_exception);

		var _base = __webpack_require__(3);

		function checkRevision(compilerInfo) {
		  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
		      currentRevision = _base.COMPILER_REVISION;

		  if (compilerRevision !== currentRevision) {
		    if (compilerRevision < currentRevision) {
		      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],
		          compilerVersions = _base.REVISION_CHANGES[compilerRevision];
		      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
		    } else {
		      // Use the embedded version info since the runtime doesn't know about this revision yet
		      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
		    }
		  }
		}

		function template(templateSpec, env) {
		  /* istanbul ignore next */
		  if (!env) {
		    throw new _exception2['default']('No environment passed to template');
		  }
		  if (!templateSpec || !templateSpec.main) {
		    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);
		  }

		  templateSpec.main.decorator = templateSpec.main_d;

		  // Note: Using env.VM references rather than local var references throughout this section to allow
		  // for external users to override these as psuedo-supported APIs.
		  env.VM.checkRevision(templateSpec.compiler);

		  function invokePartialWrapper(partial, context, options) {
		    if (options.hash) {
		      context = Utils.extend({}, context, options.hash);
		      if (options.ids) {
		        options.ids[0] = true;
		      }
		    }

		    partial = env.VM.resolvePartial.call(this, partial, context, options);
		    var result = env.VM.invokePartial.call(this, partial, context, options);

		    if (result == null && env.compile) {
		      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
		      result = options.partials[options.name](context, options);
		    }
		    if (result != null) {
		      if (options.indent) {
		        var lines = result.split('\n');
		        for (var i = 0, l = lines.length; i < l; i++) {
		          if (!lines[i] && i + 1 === l) {
		            break;
		          }

		          lines[i] = options.indent + lines[i];
		        }
		        result = lines.join('\n');
		      }
		      return result;
		    } else {
		      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');
		    }
		  }

		  // Just add water
		  var container = {
		    strict: function strict(obj, name) {
		      if (!(name in obj)) {
		        throw new _exception2['default']('"' + name + '" not defined in ' + obj);
		      }
		      return obj[name];
		    },
		    lookup: function lookup(depths, name) {
		      var len = depths.length;
		      for (var i = 0; i < len; i++) {
		        if (depths[i] && depths[i][name] != null) {
		          return depths[i][name];
		        }
		      }
		    },
		    lambda: function lambda(current, context) {
		      return typeof current === 'function' ? current.call(context) : current;
		    },

		    escapeExpression: Utils.escapeExpression,
		    invokePartial: invokePartialWrapper,

		    fn: function fn(i) {
		      var ret = templateSpec[i];
		      ret.decorator = templateSpec[i + '_d'];
		      return ret;
		    },

		    programs: [],
		    program: function program(i, data, declaredBlockParams, blockParams, depths) {
		      var programWrapper = this.programs[i],
		          fn = this.fn(i);
		      if (data || depths || blockParams || declaredBlockParams) {
		        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);
		      } else if (!programWrapper) {
		        programWrapper = this.programs[i] = wrapProgram(this, i, fn);
		      }
		      return programWrapper;
		    },

		    data: function data(value, depth) {
		      while (value && depth--) {
		        value = value._parent;
		      }
		      return value;
		    },
		    merge: function merge(param, common) {
		      var obj = param || common;

		      if (param && common && param !== common) {
		        obj = Utils.extend({}, common, param);
		      }

		      return obj;
		    },
		    // An empty object to use as replacement for null-contexts
		    nullContext: _Object$seal({}),

		    noop: env.VM.noop,
		    compilerInfo: templateSpec.compiler
		  };

		  function ret(context) {
		    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

		    var data = options.data;

		    ret._setup(options);
		    if (!options.partial && templateSpec.useData) {
		      data = initData(context, data);
		    }
		    var depths = undefined,
		        blockParams = templateSpec.useBlockParams ? [] : undefined;
		    if (templateSpec.useDepths) {
		      if (options.depths) {
		        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;
		      } else {
		        depths = [context];
		      }
		    }

		    function main(context /*, options*/) {
		      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);
		    }
		    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);
		    return main(context, options);
		  }
		  ret.isTop = true;

		  ret._setup = function (options) {
		    if (!options.partial) {
		      container.helpers = container.merge(options.helpers, env.helpers);

		      if (templateSpec.usePartial) {
		        container.partials = container.merge(options.partials, env.partials);
		      }
		      if (templateSpec.usePartial || templateSpec.useDecorators) {
		        container.decorators = container.merge(options.decorators, env.decorators);
		      }
		    } else {
		      container.helpers = options.helpers;
		      container.partials = options.partials;
		      container.decorators = options.decorators;
		    }
		  };

		  ret._child = function (i, data, blockParams, depths) {
		    if (templateSpec.useBlockParams && !blockParams) {
		      throw new _exception2['default']('must pass block params');
		    }
		    if (templateSpec.useDepths && !depths) {
		      throw new _exception2['default']('must pass parent depths');
		    }

		    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);
		  };
		  return ret;
		}

		function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {
		  function prog(context) {
		    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

		    var currentDepths = depths;
		    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {
		      currentDepths = [context].concat(depths);
		    }

		    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);
		  }

		  prog = executeDecorators(fn, prog, container, depths, data, blockParams);

		  prog.program = i;
		  prog.depth = depths ? depths.length : 0;
		  prog.blockParams = declaredBlockParams || 0;
		  return prog;
		}

		function resolvePartial(partial, context, options) {
		  if (!partial) {
		    if (options.name === '@partial-block') {
		      partial = options.data['partial-block'];
		    } else {
		      partial = options.partials[options.name];
		    }
		  } else if (!partial.call && !options.name) {
		    // This is a dynamic partial that returned a string
		    options.name = partial;
		    partial = options.partials[partial];
		  }
		  return partial;
		}

		function invokePartial(partial, context, options) {
		  // Use the current closure context to save the partial-block if this partial
		  var currentPartialBlock = options.data && options.data['partial-block'];
		  options.partial = true;
		  if (options.ids) {
		    options.data.contextPath = options.ids[0] || options.data.contextPath;
		  }

		  var partialBlock = undefined;
		  if (options.fn && options.fn !== noop) {
		    (function () {
		      options.data = _base.createFrame(options.data);
		      // Wrapper function to get access to currentPartialBlock from the closure
		      var fn = options.fn;
		      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {
		        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

		        // Restore the partial-block from the closure for the execution of the block
		        // i.e. the part inside the block of the partial call.
		        options.data = _base.createFrame(options.data);
		        options.data['partial-block'] = currentPartialBlock;
		        return fn(context, options);
		      };
		      if (fn.partials) {
		        options.partials = Utils.extend({}, options.partials, fn.partials);
		      }
		    })();
		  }

		  if (partial === undefined && partialBlock) {
		    partial = partialBlock;
		  }

		  if (partial === undefined) {
		    throw new _exception2['default']('The partial ' + options.name + ' could not be found');
		  } else if (partial instanceof Function) {
		    return partial(context, options);
		  }
		}

		function noop() {
		  return '';
		}

		function initData(context, data) {
		  if (!data || !('root' in data)) {
		    data = data ? _base.createFrame(data) : {};
		    data.root = context;
		  }
		  return data;
		}

		function executeDecorators(fn, prog, container, depths, data, blockParams) {
		  if (fn.decorator) {
		    var props = {};
		    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);
		    Utils.extend(prog, props);
		  }
		  return prog;
		}

	/***/ }),
	/* 22 */
	/***/ (function(module, exports, __webpack_require__) {

		module.exports = { "default": __webpack_require__(23), __esModule: true };

	/***/ }),
	/* 23 */
	/***/ (function(module, exports, __webpack_require__) {

		__webpack_require__(24);
		module.exports = __webpack_require__(29).Object.seal;

	/***/ }),
	/* 24 */
	/***/ (function(module, exports, __webpack_require__) {

		// 19.1.2.17 Object.seal(O)
		var isObject = __webpack_require__(25);

		__webpack_require__(26)('seal', function($seal){
		  return function seal(it){
		    return $seal && isObject(it) ? $seal(it) : it;
		  };
		});

	/***/ }),
	/* 25 */
	/***/ (function(module, exports) {

		module.exports = function(it){
		  return typeof it === 'object' ? it !== null : typeof it === 'function';
		};

	/***/ }),
	/* 26 */
	/***/ (function(module, exports, __webpack_require__) {

		// most Object methods by ES6 should accept primitives
		var $export = __webpack_require__(27)
		  , core    = __webpack_require__(29)
		  , fails   = __webpack_require__(32);
		module.exports = function(KEY, exec){
		  var fn  = (core.Object || {})[KEY] || Object[KEY]
		    , exp = {};
		  exp[KEY] = exec(fn);
		  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
		};

	/***/ }),
	/* 27 */
	/***/ (function(module, exports, __webpack_require__) {

		var global    = __webpack_require__(28)
		  , core      = __webpack_require__(29)
		  , ctx       = __webpack_require__(30)
		  , PROTOTYPE = 'prototype';

		var $export = function(type, name, source){
		  var IS_FORCED = type & $export.F
		    , IS_GLOBAL = type & $export.G
		    , IS_STATIC = type & $export.S
		    , IS_PROTO  = type & $export.P
		    , IS_BIND   = type & $export.B
		    , IS_WRAP   = type & $export.W
		    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
		    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
		    , key, own, out;
		  if(IS_GLOBAL)source = name;
		  for(key in source){
		    // contains in native
		    own = !IS_FORCED && target && key in target;
		    if(own && key in exports)continue;
		    // export native or passed
		    out = own ? target[key] : source[key];
		    // prevent global pollution for namespaces
		    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
		    // bind timers to global for call from export context
		    : IS_BIND && own ? ctx(out, global)
		    // wrap global constructors for prevent change them in library
		    : IS_WRAP && target[key] == out ? (function(C){
		      var F = function(param){
		        return this instanceof C ? new C(param) : C(param);
		      };
		      F[PROTOTYPE] = C[PROTOTYPE];
		      return F;
		    // make static versions for prototype methods
		    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
		    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
		  }
		};
		// type bitmap
		$export.F = 1;  // forced
		$export.G = 2;  // global
		$export.S = 4;  // static
		$export.P = 8;  // proto
		$export.B = 16; // bind
		$export.W = 32; // wrap
		module.exports = $export;

	/***/ }),
	/* 28 */
	/***/ (function(module, exports) {

		// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
		var global = module.exports = typeof window != 'undefined' && window.Math == Math
		  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
		if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

	/***/ }),
	/* 29 */
	/***/ (function(module, exports) {

		var core = module.exports = {version: '1.2.6'};
		if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

	/***/ }),
	/* 30 */
	/***/ (function(module, exports, __webpack_require__) {

		// optional / simple context binding
		var aFunction = __webpack_require__(31);
		module.exports = function(fn, that, length){
		  aFunction(fn);
		  if(that === undefined)return fn;
		  switch(length){
		    case 1: return function(a){
		      return fn.call(that, a);
		    };
		    case 2: return function(a, b){
		      return fn.call(that, a, b);
		    };
		    case 3: return function(a, b, c){
		      return fn.call(that, a, b, c);
		    };
		  }
		  return function(/* ...args */){
		    return fn.apply(that, arguments);
		  };
		};

	/***/ }),
	/* 31 */
	/***/ (function(module, exports) {

		module.exports = function(it){
		  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
		  return it;
		};

	/***/ }),
	/* 32 */
	/***/ (function(module, exports) {

		module.exports = function(exec){
		  try {
		    return !!exec();
		  } catch(e){
		    return true;
		  }
		};

	/***/ }),
	/* 33 */
	/***/ (function(module, exports) {

		/* WEBPACK VAR INJECTION */(function(global) {/* global window */
		'use strict';

		exports.__esModule = true;

		exports['default'] = function (Handlebars) {
		  /* istanbul ignore next */
		  var root = typeof global !== 'undefined' ? global : window,
		      $Handlebars = root.Handlebars;
		  /* istanbul ignore next */
		  Handlebars.noConflict = function () {
		    if (root.Handlebars === Handlebars) {
		      root.Handlebars = $Handlebars;
		    }
		    return Handlebars;
		  };
		};

		module.exports = exports['default'];
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

	/***/ })
	/******/ ])
	});
	;

	/***/ }),
	/* 2 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	exports.__esModule = true;

	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	/***/ }),
	/* 3 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	exports.__esModule = true;

	var _defineProperty = __webpack_require__(65);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

	/***/ }),
	/* 4 */
	/***/ (function(module, exports) {

	var core = module.exports = { version: '2.5.7' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


	/***/ }),
	/* 5 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(90), __esModule: true };

	/***/ }),
	/* 6 */
	/***/ (function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function(useSourceMap) {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			return this.map(function (item) {
				var content = cssWithMappingToString(item, useSourceMap);
				if(item[2]) {
					return "@media " + item[2] + "{" + content + "}";
				} else {
					return content;
				}
			}).join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};

	function cssWithMappingToString(item, useSourceMap) {
		var content = item[1] || '';
		var cssMapping = item[3];
		if (!cssMapping) {
			return content;
		}

		if (useSourceMap && typeof btoa === 'function') {
			var sourceMapping = toComment(cssMapping);
			var sourceURLs = cssMapping.sources.map(function (source) {
				return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
			});

			return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
		}

		return [content].join('\n');
	}

	// Adapted from convert-source-map (MIT)
	function toComment(sourceMap) {
		// eslint-disable-next-line no-undef
		var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
		var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

		return '/*# ' + data + ' */';
	}


	/***/ }),
	/* 7 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	exports.__esModule = true;

	var _typeof2 = __webpack_require__(25);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

	/***/ }),
	/* 8 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	exports.__esModule = true;

	var _setPrototypeOf = __webpack_require__(110);

	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

	var _create = __webpack_require__(72);

	var _create2 = _interopRequireDefault(_create);

	var _typeof2 = __webpack_require__(25);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }

	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

	/***/ }),
	/* 9 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _util = __webpack_require__(0);

	exports.default = (0, _util.Class)({
	  init: function init($el) {
	    this._$el = $el;
	  },
	  show: function show() {
	    this._$el.show();

	    return this;
	  },
	  hide: function hide() {
	    this._$el.hide();

	    return this;
	  },
	  destroy: function destroy() {
	    this._$el.remove();
	  }
	});

	/***/ }),
	/* 10 */
	/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(11);
	var core = __webpack_require__(4);
	var ctx = __webpack_require__(39);
	var hide = __webpack_require__(20);
	var has = __webpack_require__(18);
	var PROTOTYPE = 'prototype';

	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && has(exports, key)) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


	/***/ }),
	/* 11 */
	/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


	/***/ }),
	/* 12 */
	/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(45)('wks');
	var uid = __webpack_require__(31);
	var Symbol = __webpack_require__(11).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;


	/***/ }),
	/* 13 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Settings = function (_Tool) {
	  (0, _inherits3.default)(Settings, _Tool);

	  function Settings() {
	    (0, _classCallCheck3.default)(this, Settings);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Settings.__proto__ || (0, _getPrototypeOf2.default)(Settings)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(138));

	    _this.name = 'settings';
	    _this._switchTpl = __webpack_require__(139);
	    _this._selectTpl = __webpack_require__(140);
	    _this._rangeTpl = __webpack_require__(141);
	    _this._colorTpl = __webpack_require__(142);
	    _this._settings = [];
	    return _this;
	  }

	  (0, _createClass3.default)(Settings, [{
	    key: 'init',
	    value: function init($el) {
	      (0, _get3.default)(Settings.prototype.__proto__ || (0, _getPrototypeOf2.default)(Settings.prototype), 'init', this).call(this, $el);

	      this._bindEvent();
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _get3.default)(Settings.prototype.__proto__ || (0, _getPrototypeOf2.default)(Settings.prototype), 'destroy', this).call(this);

	      _util.evalCss.remove(this._style);
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      this._settings = [];
	      this._$el.html('');
	    }
	  }, {
	    key: 'switch',
	    value: function _switch(config, key, desc) {
	      this._settings.push({ config: config, key: key });

	      this._$el.append(this._switchTpl({
	        desc: desc,
	        key: key,
	        idx: this._settings.length - 1,
	        val: config.get(key)
	      }));

	      return this;
	    }
	  }, {
	    key: 'color',
	    value: function color(config, key, desc) {
	      var colors = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ['#2196f3', '#707d8b', '#f44336', '#009688', '#ffc107'];

	      this._settings.push({ config: config, key: key });

	      this._$el.append(this._colorTpl({
	        desc: desc,
	        colors: colors,
	        idx: this._settings.length - 1,
	        val: config.get(key)
	      }));

	      return this;
	    }
	  }, {
	    key: 'select',
	    value: function select(config, key, desc, selections) {
	      this._settings.push({ config: config, key: key });

	      this._$el.append(this._selectTpl({
	        desc: desc,
	        selections: selections,
	        idx: this._settings.length - 1,
	        val: config.get(key)
	      }));

	      return this;
	    }
	  }, {
	    key: 'range',
	    value: function range(config, key, desc, _ref) {
	      var _ref$min = _ref.min,
	          min = _ref$min === undefined ? 0 : _ref$min,
	          _ref$max = _ref.max,
	          max = _ref$max === undefined ? 1 : _ref$max,
	          _ref$step = _ref.step,
	          step = _ref$step === undefined ? 0.1 : _ref$step;

	      this._settings.push({ config: config, key: key, min: min, max: max, step: step });

	      var val = config.get(key);

	      this._$el.append(this._rangeTpl({
	        desc: desc,
	        min: min,
	        max: max,
	        step: step,
	        val: val,
	        progress: progress(val, min, max),
	        idx: this._settings.length - 1
	      }));

	      return this;
	    }
	  }, {
	    key: 'separator',
	    value: function separator() {
	      this._$el.append('<div class="eruda-separator"></div>');

	      return this;
	    }
	  }, {
	    key: 'text',
	    value: function text(_text) {
	      this._$el.append('<div class="eruda-text">' + _text + '</div>');

	      return this;
	    }
	  }, {
	    key: '_closeAll',
	    value: function _closeAll() {
	      this._$el.find('.eruda-open').rmClass('eruda-open');
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var self = this;

	      this._$el.on('click', '.eruda-checkbox', function () {
	        var $input = (0, _util.$)(this).find('input'),
	            idx = $input.data('idx'),
	            val = $input.get(0).checked;

	        var setting = self._settings[idx];
	        setting.config.set(setting.key, val);
	      }).on('click', '.eruda-select .eruda-head', function () {
	        var $el = (0, _util.$)(this).parent().find('ul'),
	            isOpen = $el.hasClass('eruda-open');

	        self._closeAll();
	        isOpen ? $el.rmClass('eruda-open') : $el.addClass('eruda-open');
	      }).on('click', '.eruda-select li', function () {
	        var $this = (0, _util.$)(this),
	            $ul = $this.parent(),
	            val = $this.text(),
	            idx = $ul.data('idx'),
	            setting = self._settings[idx];

	        $ul.rmClass('eruda-open');
	        $ul.parent().find('.eruda-head span').text(val);

	        setting.config.set(setting.key, val);
	      }).on('click', '.eruda-range .eruda-head', function () {
	        var $el = (0, _util.$)(this).parent().find('.eruda-input-container'),
	            isOpen = $el.hasClass('eruda-open');

	        self._closeAll();
	        isOpen ? $el.rmClass('eruda-open') : $el.addClass('eruda-open');
	      }).on('change', '.eruda-range input', function () {
	        var $this = (0, _util.$)(this),
	            $container = $this.parent(),
	            idx = $container.data('idx'),
	            val = +$this.val(),
	            setting = self._settings[idx];

	        setting.config.set(setting.key, val);
	      }).on('input', '.eruda-range input', function () {
	        var $this = (0, _util.$)(this),
	            $container = $this.parent(),
	            idx = $container.data('idx'),
	            val = +$this.val(),
	            setting = self._settings[idx],
	            min = setting.min,
	            max = setting.max;


	        $container.parent().find('.eruda-head span').text(val);
	        $container.find('.eruda-range-track-progress').css('width', progress(val, min, max) + '%');
	      }).on('click', '.eruda-color .eruda-head', function () {
	        var $el = (0, _util.$)(this).parent().find('ul'),
	            isOpen = $el.hasClass('eruda-open');

	        self._closeAll();
	        isOpen ? $el.rmClass('eruda-open') : $el.addClass('eruda-open');
	      }).on('click', '.eruda-color li', function () {
	        var $this = (0, _util.$)(this),
	            $ul = $this.parent(),
	            val = $this.css('background-color'),
	            idx = $ul.data('idx'),
	            setting = self._settings[idx];

	        $ul.rmClass('eruda-open');
	        $ul.parent().find('.eruda-head span').css('background-color', val);

	        setting.config.set(setting.key, val);
	      });
	    }
	  }], [{
	    key: 'createCfg',
	    value: function createCfg(name, data) {
	      return new _util.LocalStore('eruda-' + name, data);
	    }
	  }]);
	  return Settings;
	}(_Tool3.default);

	exports.default = Settings;


	var progress = function progress(val, min, max) {
	  return ((val - min) / (max - min) * 100).toFixed(2);
	};

	/***/ }),
	/* 14 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	exports.__esModule = true;

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _getOwnPropertyDescriptor = __webpack_require__(35);

	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function get(object, property, receiver) {
	  if (object === null) object = Function.prototype;
	  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);

	  if (desc === undefined) {
	    var parent = (0, _getPrototypeOf2.default)(object);

	    if (parent === null) {
	      return undefined;
	    } else {
	      return get(parent, property, receiver);
	    }
	  } else if ("value" in desc) {
	    return desc.value;
	  } else {
	    var getter = desc.get;

	    if (getter === undefined) {
	      return undefined;
	    }

	    return getter.call(receiver);
	  }
	};

	/***/ }),
	/* 15 */
	/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(21);
	var IE8_DOM_DEFINE = __webpack_require__(60);
	var toPrimitive = __webpack_require__(41);
	var dP = Object.defineProperty;

	exports.f = __webpack_require__(17) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


	/***/ }),
	/* 16 */
	/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


	/***/ }),
	/* 17 */
	/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(22)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


	/***/ }),
	/* 18 */
	/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


	/***/ }),
	/* 19 */
	/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(62);
	var defined = __webpack_require__(42);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


	/***/ }),
	/* 20 */
	/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(15);
	var createDesc = __webpack_require__(28);
	module.exports = __webpack_require__(17) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


	/***/ }),
	/* 21 */
	/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(16);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


	/***/ }),
	/* 22 */
	/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


	/***/ }),
	/* 23 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(61);
	var enumBugKeys = __webpack_require__(46);

	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


	/***/ }),
	/* 24 */
	/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(10);
	var core = __webpack_require__(4);
	var fails = __webpack_require__(22);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


	/***/ }),
	/* 25 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	exports.__esModule = true;

	var _iterator = __webpack_require__(94);

	var _iterator2 = _interopRequireDefault(_iterator);

	var _symbol = __webpack_require__(102);

	var _symbol2 = _interopRequireDefault(_symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

	/***/ }),
	/* 26 */
	/***/ (function(module, exports) {

	module.exports = {};


	/***/ }),
	/* 27 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var _util = __webpack_require__(0);

	var emitter = new _util.Emitter();
	emitter.ADD = 'ADD';
	emitter.SHOW = 'SHOW';
	emitter.SCALE = 'SCALE';

	module.exports = emitter;

	/***/ }),
	/* 28 */
	/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


	/***/ }),
	/* 29 */
	/***/ (function(module, exports) {

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


	/***/ }),
	/* 30 */
	/***/ (function(module, exports) {

	module.exports = true;


	/***/ }),
	/* 31 */
	/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


	/***/ }),
	/* 32 */
	/***/ (function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


	/***/ }),
	/* 33 */
	/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(42);
	module.exports = function (it) {
	  return Object(defined(it));
	};


	/***/ }),
	/* 34 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(122), __esModule: true };

	/***/ }),
	/* 35 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(128), __esModule: true };

	/***/ }),
	/* 36 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(133), __esModule: true };

	/***/ }),
	/* 37 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _util = __webpack_require__(0);

	var logger = void 0;

	exports.default = logger = new _util.Logger('[Eruda]',  false ? 'warn' : 'debug');


	logger.formatter = function (type, argList) {
	  argList.unshift(this.name);

	  return argList;
	};

	/***/ }),
	/* 38 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(83), __esModule: true };

	/***/ }),
	/* 39 */
	/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(85);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


	/***/ }),
	/* 40 */
	/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(16);
	var document = __webpack_require__(11).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


	/***/ }),
	/* 41 */
	/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(16);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


	/***/ }),
	/* 42 */
	/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


	/***/ }),
	/* 43 */
	/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


	/***/ }),
	/* 44 */
	/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(45)('keys');
	var uid = __webpack_require__(31);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


	/***/ }),
	/* 45 */
	/***/ (function(module, exports, __webpack_require__) {

	var core = __webpack_require__(4);
	var global = __webpack_require__(11);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});

	(module.exports = function (key, value) {
	  return store[key] || (store[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: core.version,
	  mode: __webpack_require__(30) ? 'pure' : 'global',
	  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
	});


	/***/ }),
	/* 46 */
	/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


	/***/ }),
	/* 47 */
	/***/ (function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


	/***/ }),
	/* 48 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var $at = __webpack_require__(96)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(66)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


	/***/ }),
	/* 49 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(21);
	var dPs = __webpack_require__(98);
	var enumBugKeys = __webpack_require__(46);
	var IE_PROTO = __webpack_require__(44)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(40)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(68).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


	/***/ }),
	/* 50 */
	/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(15).f;
	var has = __webpack_require__(18);
	var TAG = __webpack_require__(12)('toStringTag');

	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


	/***/ }),
	/* 51 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(99);
	var global = __webpack_require__(11);
	var hide = __webpack_require__(20);
	var Iterators = __webpack_require__(26);
	var TO_STRING_TAG = __webpack_require__(12)('toStringTag');

	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');

	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


	/***/ }),
	/* 52 */
	/***/ (function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(12);


	/***/ }),
	/* 53 */
	/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(11);
	var core = __webpack_require__(4);
	var LIBRARY = __webpack_require__(30);
	var wksExt = __webpack_require__(52);
	var defineProperty = __webpack_require__(15).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};


	/***/ }),
	/* 54 */
	/***/ (function(module, exports, __webpack_require__) {

	var pIE = __webpack_require__(32);
	var createDesc = __webpack_require__(28);
	var toIObject = __webpack_require__(19);
	var toPrimitive = __webpack_require__(41);
	var has = __webpack_require__(18);
	var IE8_DOM_DEFINE = __webpack_require__(60);
	var gOPD = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(17) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) { /* empty */ }
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};


	/***/ }),
	/* 55 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(153), __esModule: true };

	/***/ }),
	/* 56 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = highlight;

	var _util = __webpack_require__(0);

	// https://github.com/trentrichardson/jQuery-Litelighter
	function highlight(str, lang) {
	  lang = lang || 'js';

	  str = str.replace(/</g, '&lt;').replace(/>/g, '&gt;');

	  lang = language[lang];

	  var subLangSi = 0,
	      subLangs = [];

	  (0, _util.each)(lang, function (val) {
	    if (!val.language) return;

	    str = str.replace(val.re, function ($1, $2) {
	      subLangs[subLangSi++] = highlight($2, val.language);
	      return $1.replace($2, '___subtmpl' + (subLangSi - 1) + '___');
	    });
	  });

	  (0, _util.each)(lang, function (val, key) {
	    if (language[val.language]) return;

	    str = str.replace(val.re, '___' + key + '___$1___end' + key + '___');
	  });

	  var levels = [];

	  str = str.replace(/___(?!subtmpl)\w+?___/g, function ($0) {
	    var end = $0.substr(3, 3) === 'end',
	        tag = (!end ? $0.substr(3) : $0.substr(6)).replace(/_/g, ''),
	        lastTag = levels.length > 0 ? levels[levels.length - 1] : null;

	    if (!end && (lastTag == null || tag == lastTag || lastTag != null && lang[lastTag] && lang[lastTag].embed != undefined && lang[lastTag].embed.indexOf(tag) > -1)) {
	      levels.push(tag);

	      return $0;
	    } else if (end && tag == lastTag) {
	      levels.pop();

	      return $0;
	    }

	    return '';
	  });

	  (0, _util.each)(lang, function (val, key) {
	    str = str.replace(new RegExp('___end' + key + '___', 'g'), '</span>').replace(new RegExp('___' + key + '___', 'g'), '<span style="' + style[val.style] + '">');
	  });

	  (0, _util.each)(lang, function (val) {
	    if (!val.language) return;

	    str = str.replace(/___subtmpl\d+___/g, function ($tmpl) {
	      var i = parseInt($tmpl.replace(/___subtmpl(\d+)___/, '$1'), 10);

	      return subLangs[i];
	    });
	  });

	  return str;
	}

	var style = {
	  comment: 'color:#63a35c;',
	  string: 'color:#183691;',
	  number: 'color:#0086b3;',
	  keyword: 'color:#a71d5d;',
	  operators: 'color:#a71d5d;'
	};

	var language = {};

	language.js = {
	  comment: { re: /(\/\/.*|\/\*([\s\S]*?)\*\/)/g, style: 'comment' },
	  string: { re: /(('.*?')|(".*?"))/g, style: 'string' },
	  numbers: { re: /(-?(\d+|\d+\.\d+|\.\d+))/g, style: 'number' },
	  keywords: {
	    re: /(?:\b)(function|for|foreach|while|if|else|elseif|switch|break|as|return|this|class|self|default|var|false|true|null|undefined)(?:\b)/gi,
	    style: 'keyword'
	  },
	  operators: {
	    re: /(\+|-|\/|\*|%|=|&lt;|&gt;|\||\?|\.)/g,
	    style: 'operators'
	  }
	};

	language.html = {
	  comment: { re: /(&lt;!--([\s\S]*?)--&gt;)/g, style: 'comment' },
	  tag: {
	    re: /(&lt;\/?\w(.|\n)*?\/?&gt;)/g,
	    style: 'keyword',
	    embed: ['string']
	  },
	  string: language.js.string,
	  css: {
	    re: /(?:&lt;style.*?&gt;)([\s\S]*)?(?:&lt;\/style&gt;)/gi,
	    language: 'css'
	  },
	  script: {
	    re: /(?:&lt;script.*?&gt;)([\s\S]*?)(?:&lt;\/script&gt;)/gi,
	    language: 'js'
	  }
	};

	language.css = {
	  comment: language.js.comment,
	  string: language.js.string,
	  numbers: {
	    re: /((-?(\d+|\d+\.\d+|\.\d+)(%|px|em|pt|in)?)|#[0-9a-fA-F]{3}[0-9a-fA-F]{3})/g,
	    style: 'number'
	  },
	  keywords: { re: /(@\w+|:?:\w+|[a-z-]+:)/g, style: 'keyword' }
	};

	/***/ }),
	/* 57 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.

	*/

	/**
	The following batches are equivalent:

	var beautify_js = require('js-beautify');
	var beautify_js = require('js-beautify').js;
	var beautify_js = require('js-beautify').js_beautify;

	var beautify_css = require('js-beautify').css;
	var beautify_css = require('js-beautify').css_beautify;

	var beautify_html = require('js-beautify').html;
	var beautify_html = require('js-beautify').html_beautify;

	All methods returned accept two arguments, the source string and an options object.
	**/

	function get_beautify(js_beautify, css_beautify, html_beautify) {
	    // the default is js
	    var beautify = function(src, config) {
	        return js_beautify.js_beautify(src, config);
	    };

	    // short aliases
	    beautify.js = js_beautify.js_beautify;
	    beautify.css = css_beautify.css_beautify;
	    beautify.html = html_beautify.html_beautify;

	    // legacy aliases
	    beautify.js_beautify = js_beautify.js_beautify;
	    beautify.css_beautify = css_beautify.css_beautify;
	    beautify.html_beautify = html_beautify.html_beautify;

	    return beautify;
	}

	if (true) {
	    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(58),
	        __webpack_require__(59),
	        __webpack_require__(165)
	    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function(js_beautify, css_beautify, html_beautify) {
	        return get_beautify(js_beautify, css_beautify, html_beautify);
	    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
	    (function(mod) {
	        var js_beautify = require('./lib/beautify');
	        var css_beautify = require('./lib/beautify-css');
	        var html_beautify = require('./lib/beautify-html');

	        mod.exports = get_beautify(js_beautify, css_beautify, html_beautify);

	    })(module);
	}

	/***/ }),
	/* 58 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:false, eqeqeq:true, laxbreak:true, noempty:false */
	/* AUTO-GENERATED. DO NOT MODIFY. */
	/* see js/src/javascript/index.js */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.

	 JS Beautifier
	---------------


	  Written by Einar Lielmanis, <einar@jsbeautifier.org>
	      http://jsbeautifier.org/

	  Originally converted to javascript by Vital, <vital76@gmail.com>
	  "End braces on own line" added by Chris J. Shull, <chrisjshull@gmail.com>
	  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@gmail.com>


	  Usage:
	    js_beautify(js_source_text);
	    js_beautify(js_source_text, options);

	  The options are:
	    indent_size (default 4)          - indentation size,
	    indent_char (default space)      - character to indent with,
	    preserve_newlines (default true) - whether existing line breaks should be preserved,
	    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,

	    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.

	            jslint_happy        !jslint_happy
	            ---------------------------------
	            function ()         function()

	            switch () {         switch() {
	            case 1:               case 1:
	              break;                break;
	            }                   }

	    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, "function()" vs "function ()",
	          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)

	    brace_style (default "collapse") - "collapse" | "expand" | "end-expand" | "none" | any of the former + ",preserve-inline"
	            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.
	            preserve-inline will try to preserve inline blocks of curly braces

	    space_before_conditional (default true) - should the space before conditional statement be added, "if(true)" vs "if (true)",

	    unescape_strings (default false) - should printable characters in strings encoded in \xNN notation be unescaped, "example" vs "\x65\x78\x61\x6d\x70\x6c\x65"

	    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.
	          NOTE: This is not a hard limit. Lines will continue until a point where a newline would
	                be preserved if it were present.

	    end_with_newline (default false)  - end output with a newline


	    e.g

	    js_beautify(js_source_text, {
	      'indent_size': 1,
	      'indent_char': '\t'
	    });

	*/

	(function() {
	var legacy_beautify_js =
	/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// identity function for calling harmony imports with the correct context
	/******/ 	__webpack_require__.i = function(value) { return value; };
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, {
	/******/ 				configurable: false,
	/******/ 				enumerable: true,
	/******/ 				get: getter
	/******/ 			});
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 6);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports) {

	/* jshint curly: false */
	// This section of code is taken from acorn.
	//
	// Acorn was written by Marijn Haverbeke and released under an MIT
	// license. The Unicode regexps (for identifiers and whitespace) were
	// taken from [Esprima](http://esprima.org) by Ariya Hidayat.
	//
	// Git repositories for Acorn are available at
	//
	//     http://marijnhaverbeke.nl/git/acorn
	//     https://github.com/marijnh/acorn.git

	// ## Character categories

	// Big ugly regular expressions that match characters in the
	// whitespace, identifier, and identifier-start categories. These
	// are only applied when a character is found to actually have a
	// code point above 128.

	var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/; // jshint ignore:line
	var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
	var nonASCIIidentifierChars = "\u0300-\u036f\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u0620-\u0649\u0672-\u06d3\u06e7-\u06e8\u06fb-\u06fc\u0730-\u074a\u0800-\u0814\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0840-\u0857\u08e4-\u08fe\u0900-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962-\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09d7\u09df-\u09e0\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5f-\u0b60\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62-\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2-\u0ce3\u0ce6-\u0cef\u0d02\u0d03\u0d46-\u0d48\u0d57\u0d62-\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e34-\u0e3a\u0e40-\u0e45\u0e50-\u0e59\u0eb4-\u0eb9\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f41-\u0f47\u0f71-\u0f84\u0f86-\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1029\u1040-\u1049\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u170e-\u1710\u1720-\u1730\u1740-\u1750\u1772\u1773\u1780-\u17b2\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1920-\u192b\u1930-\u193b\u1951-\u196d\u19b0-\u19c0\u19c8-\u19c9\u19d0-\u19d9\u1a00-\u1a15\u1a20-\u1a53\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1b46-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1bb0-\u1bb9\u1be6-\u1bf3\u1c00-\u1c22\u1c40-\u1c49\u1c5b-\u1c7d\u1cd0-\u1cd2\u1d00-\u1dbe\u1e01-\u1f15\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2d81-\u2d96\u2de0-\u2dff\u3021-\u3028\u3099\u309a\ua640-\ua66d\ua674-\ua67d\ua69f\ua6f0-\ua6f1\ua7f8-\ua800\ua806\ua80b\ua823-\ua827\ua880-\ua881\ua8b4-\ua8c4\ua8d0-\ua8d9\ua8f3-\ua8f7\ua900-\ua909\ua926-\ua92d\ua930-\ua945\ua980-\ua983\ua9b3-\ua9c0\uaa00-\uaa27\uaa40-\uaa41\uaa4c-\uaa4d\uaa50-\uaa59\uaa7b\uaae0-\uaae9\uaaf2-\uaaf3\uabc0-\uabe1\uabec\uabed\uabf0-\uabf9\ufb20-\ufb28\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";
	var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
	var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

	// Whether a single character denotes a newline.

	exports.newline = /[\n\r\u2028\u2029]/;

	// Matches a whole line break (where CRLF is considered a single
	// line break). Used to count lines.

	// in javascript, these two differ
	// in python they are the same, different methods are called on them
	exports.lineBreak = new RegExp('\r\n|' + exports.newline.source);
	exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');


	// Test whether a given character code starts an identifier.

	exports.isIdentifierStart = function(code) {
	    // permit $ (36) and @ (64). @ is used in ES7 decorators.
	    if (code < 65) return code === 36 || code === 64;
	    // 65 through 91 are uppercase letters.
	    if (code < 91) return true;
	    // permit _ (95).
	    if (code < 97) return code === 95;
	    // 97 through 123 are lowercase letters.
	    if (code < 123) return true;
	    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
	};

	// Test whether a given character is part of an identifier.

	exports.isIdentifierChar = function(code) {
	    if (code < 48) return code === 36;
	    if (code < 58) return true;
	    if (code < 65) return false;
	    if (code < 91) return true;
	    if (code < 97) return code === 95;
	    if (code < 123) return true;
	    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
	};


	/***/ }),
	/* 1 */
	/***/ (function(module, exports, __webpack_require__) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	var mergeOpts = __webpack_require__(3).mergeOpts;
	var acorn = __webpack_require__(0);
	var Output = __webpack_require__(4).Output;
	var Tokenizer = __webpack_require__(7).Tokenizer;

	function remove_redundant_indentation(output, frame) {
	    // This implementation is effective but has some issues:
	    //     - can cause line wrap to happen too soon due to indent removal
	    //           after wrap points are calculated
	    // These issues are minor compared to ugly indentation.

	    if (frame.multiline_frame ||
	        frame.mode === MODE.ForInitializer ||
	        frame.mode === MODE.Conditional) {
	        return;
	    }

	    // remove one indent from each line inside this section
	    var start_index = frame.start_line_index;

	    output.remove_indent(start_index);
	}

	function in_array(what, arr) {
	    for (var i = 0; i < arr.length; i += 1) {
	        if (arr[i] === what) {
	            return true;
	        }
	    }
	    return false;
	}

	function trim(s) {
	    return s.replace(/^\s+|\s+$/g, '');
	}

	function ltrim(s) {
	    return s.replace(/^\s+/g, '');
	}

	// function rtrim(s) {
	//     return s.replace(/\s+$/g, '');
	// }


	function generateMapFromStrings(list) {
	    var result = {};
	    for (var x = 0; x < list.length; x++) {
	        // make the mapped names underscored instead of dash
	        result[list[x].replace(/-/g, '_')] = list[x];
	    }
	    return result;
	}

	function sanitizeOperatorPosition(opPosition) {
	    opPosition = opPosition || OPERATOR_POSITION.before_newline;

	    if (!in_array(opPosition, validPositionValues)) {
	        throw new Error("Invalid Option Value: The option 'operator_position' must be one of the following values\n" +
	            validPositionValues +
	            "\nYou passed in: '" + opPosition + "'");
	    }

	    return opPosition;
	}

	var validPositionValues = ['before-newline', 'after-newline', 'preserve-newline'];

	// Generate map from array
	var OPERATOR_POSITION = generateMapFromStrings(validPositionValues);

	var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];

	var MODE = {
	    BlockStatement: 'BlockStatement', // 'BLOCK'
	    Statement: 'Statement', // 'STATEMENT'
	    ObjectLiteral: 'ObjectLiteral', // 'OBJECT',
	    ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',
	    ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',
	    Conditional: 'Conditional', //'(COND-EXPRESSION)',
	    Expression: 'Expression' //'(EXPRESSION)'
	};

	function Beautifier(js_source_text, options) {
	    "use strict";
	    var output;
	    var tokens = [],
	        token_pos;
	    var tokenizer;
	    var current_token;
	    var last_type, last_last_text, indent_string;
	    var flags, previous_flags, flag_store;
	    var prefix;

	    var handlers, opt;
	    var baseIndentString = '';

	    handlers = {
	        'TK_START_EXPR': handle_start_expr,
	        'TK_END_EXPR': handle_end_expr,
	        'TK_START_BLOCK': handle_start_block,
	        'TK_END_BLOCK': handle_end_block,
	        'TK_WORD': handle_word,
	        'TK_RESERVED': handle_word,
	        'TK_SEMICOLON': handle_semicolon,
	        'TK_STRING': handle_string,
	        'TK_EQUALS': handle_equals,
	        'TK_OPERATOR': handle_operator,
	        'TK_COMMA': handle_comma,
	        'TK_BLOCK_COMMENT': handle_block_comment,
	        'TK_COMMENT': handle_comment,
	        'TK_DOT': handle_dot,
	        'TK_UNKNOWN': handle_unknown,
	        'TK_EOF': handle_eof
	    };

	    function create_flags(flags_base, mode) {
	        var next_indent_level = 0;
	        if (flags_base) {
	            next_indent_level = flags_base.indentation_level;
	            if (!output.just_added_newline() &&
	                flags_base.line_indent_level > next_indent_level) {
	                next_indent_level = flags_base.line_indent_level;
	            }
	        }

	        var next_flags = {
	            mode: mode,
	            parent: flags_base,
	            last_text: flags_base ? flags_base.last_text : '', // last token text
	            last_word: flags_base ? flags_base.last_word : '', // last 'TK_WORD' passed
	            declaration_statement: false,
	            declaration_assignment: false,
	            multiline_frame: false,
	            inline_frame: false,
	            if_block: false,
	            else_block: false,
	            do_block: false,
	            do_while: false,
	            import_block: false,
	            in_case_statement: false, // switch(..){ INSIDE HERE }
	            in_case: false, // we're on the exact line with "case 0:"
	            case_body: false, // the indented case-action block
	            indentation_level: next_indent_level,
	            line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,
	            start_line_index: output.get_line_number(),
	            ternary_depth: 0
	        };
	        return next_flags;
	    }

	    // Some interpreters have unexpected results with foo = baz || bar;
	    options = options ? options : {};

	    // Allow the setting of language/file-type specific options
	    // with inheritance of overall settings
	    options = mergeOpts(options, 'js');

	    opt = {};

	    // compatibility, re
	    if (options.brace_style === "expand-strict") { //graceful handling of deprecated option
	        options.brace_style = "expand";
	    } else if (options.brace_style === "collapse-preserve-inline") { //graceful handling of deprecated option
	        options.brace_style = "collapse,preserve-inline";
	    } else if (options.braces_on_own_line !== undefined) { //graceful handling of deprecated option
	        options.brace_style = options.braces_on_own_line ? "expand" : "collapse";
	    } else if (!options.brace_style) { //Nothing exists to set it
	        options.brace_style = "collapse";
	    }

	    //preserve-inline in delimited string will trigger brace_preserve_inline, everything
	    //else is considered a brace_style and the last one only will have an effect
	    var brace_style_split = options.brace_style.split(/[^a-zA-Z0-9_\-]+/);
	    opt.brace_preserve_inline = false; //Defaults in case one or other was not specified in meta-option
	    opt.brace_style = "collapse";
	    for (var bs = 0; bs < brace_style_split.length; bs++) {
	        if (brace_style_split[bs] === "preserve-inline") {
	            opt.brace_preserve_inline = true;
	        } else {
	            opt.brace_style = brace_style_split[bs];
	        }
	    }

	    opt.indent_size = options.indent_size ? parseInt(options.indent_size, 10) : 4;
	    opt.indent_char = options.indent_char ? options.indent_char : ' ';
	    opt.eol = options.eol ? options.eol : 'auto';
	    opt.preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;
	    opt.unindent_chained_methods = (options.unindent_chained_methods === undefined) ? false : options.unindent_chained_methods;
	    opt.break_chained_methods = (options.break_chained_methods === undefined) ? false : options.break_chained_methods;
	    opt.max_preserve_newlines = (options.max_preserve_newlines === undefined) ? 0 : parseInt(options.max_preserve_newlines, 10);
	    opt.space_in_paren = (options.space_in_paren === undefined) ? false : options.space_in_paren;
	    opt.space_in_empty_paren = (options.space_in_empty_paren === undefined) ? false : options.space_in_empty_paren;
	    opt.jslint_happy = (options.jslint_happy === undefined) ? false : options.jslint_happy;
	    opt.space_after_anon_function = (options.space_after_anon_function === undefined) ? false : options.space_after_anon_function;
	    opt.keep_array_indentation = (options.keep_array_indentation === undefined) ? false : options.keep_array_indentation;
	    opt.space_before_conditional = (options.space_before_conditional === undefined) ? true : options.space_before_conditional;
	    opt.unescape_strings = (options.unescape_strings === undefined) ? false : options.unescape_strings;
	    opt.wrap_line_length = (options.wrap_line_length === undefined) ? 0 : parseInt(options.wrap_line_length, 10);
	    opt.e4x = (options.e4x === undefined) ? false : options.e4x;
	    opt.end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;
	    opt.comma_first = (options.comma_first === undefined) ? false : options.comma_first;
	    opt.operator_position = sanitizeOperatorPosition(options.operator_position);

	    // For testing of beautify ignore:start directive
	    opt.test_output_raw = (options.test_output_raw === undefined) ? false : options.test_output_raw;

	    // force opt.space_after_anon_function to true if opt.jslint_happy
	    if (opt.jslint_happy) {
	        opt.space_after_anon_function = true;
	    }

	    if (options.indent_with_tabs) {
	        opt.indent_char = '\t';
	        opt.indent_size = 1;
	    }

	    if (opt.eol === 'auto') {
	        opt.eol = '\n';
	        if (js_source_text && acorn.lineBreak.test(js_source_text || '')) {
	            opt.eol = js_source_text.match(acorn.lineBreak)[0];
	        }
	    }

	    opt.eol = opt.eol.replace(/\\r/, '\r').replace(/\\n/, '\n');

	    //----------------------------------
	    indent_string = '';
	    while (opt.indent_size > 0) {
	        indent_string += opt.indent_char;
	        opt.indent_size -= 1;
	    }

	    var preindent_index = 0;
	    if (js_source_text && js_source_text.length) {
	        while ((js_source_text.charAt(preindent_index) === ' ' ||
	                js_source_text.charAt(preindent_index) === '\t')) {
	            preindent_index += 1;
	        }
	        baseIndentString = js_source_text.substring(0, preindent_index);
	        js_source_text = js_source_text.substring(preindent_index);
	    }

	    last_type = 'TK_START_BLOCK'; // last token type
	    last_last_text = ''; // pre-last token text
	    output = new Output(indent_string, baseIndentString);

	    // If testing the ignore directive, start with output disable set to true
	    output.raw = opt.test_output_raw;


	    // Stack of parsing/formatting states, including MODE.
	    // We tokenize, parse, and output in an almost purely a forward-only stream of token input
	    // and formatted output.  This makes the beautifier less accurate than full parsers
	    // but also far more tolerant of syntax errors.
	    //
	    // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type
	    // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later
	    // encounter a ":", we'll switch to to MODE.ObjectLiteral.  If we then see a ";",
	    // most full parsers would die, but the beautifier gracefully falls back to
	    // MODE.BlockStatement and continues on.
	    flag_store = [];
	    set_mode(MODE.BlockStatement);

	    this.beautify = function() {

	        /*jshint onevar:true */
	        var sweet_code;
	        tokenizer = new Tokenizer(js_source_text, opt, indent_string);
	        tokens = tokenizer.tokenize();
	        token_pos = 0;

	        current_token = get_token();
	        while (current_token) {
	            handlers[current_token.type]();

	            last_last_text = flags.last_text;
	            last_type = current_token.type;
	            flags.last_text = current_token.text;

	            token_pos += 1;
	            current_token = get_token();
	        }

	        sweet_code = output.get_code(opt.end_with_newline, opt.eol);

	        return sweet_code;
	    };

	    function handle_whitespace_and_comments(local_token, preserve_statement_flags) {
	        var newlines = local_token.newlines;
	        var keep_whitespace = opt.keep_array_indentation && is_array(flags.mode);
	        var temp_token = current_token;

	        for (var h = 0; h < local_token.comments_before.length; h++) {
	            // The cleanest handling of inline comments is to treat them as though they aren't there.
	            // Just continue formatting and the behavior should be logical.
	            // Also ignore unknown tokens.  Again, this should result in better behavior.
	            current_token = local_token.comments_before[h];
	            handle_whitespace_and_comments(current_token, preserve_statement_flags);
	            handlers[current_token.type](preserve_statement_flags);
	        }
	        current_token = temp_token;

	        if (keep_whitespace) {
	            for (var i = 0; i < newlines; i += 1) {
	                print_newline(i > 0, preserve_statement_flags);
	            }
	        } else {
	            if (opt.max_preserve_newlines && newlines > opt.max_preserve_newlines) {
	                newlines = opt.max_preserve_newlines;
	            }

	            if (opt.preserve_newlines) {
	                if (local_token.newlines > 1) {
	                    print_newline(false, preserve_statement_flags);
	                    for (var j = 1; j < newlines; j += 1) {
	                        print_newline(true, preserve_statement_flags);
	                    }
	                }
	            }
	        }

	    }

	    // we could use just string.split, but
	    // IE doesn't like returning empty strings
	    function split_linebreaks(s) {
	        //return s.split(/\x0d\x0a|\x0a/);

	        s = s.replace(acorn.allLineBreaks, '\n');
	        var out = [],
	            idx = s.indexOf("\n");
	        while (idx !== -1) {
	            out.push(s.substring(0, idx));
	            s = s.substring(idx + 1);
	            idx = s.indexOf("\n");
	        }
	        if (s.length) {
	            out.push(s);
	        }
	        return out;
	    }

	    var newline_restricted_tokens = ['break', 'continue', 'return', 'throw', 'yield'];

	    function allow_wrap_or_preserved_newline(force_linewrap) {
	        force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;

	        // Never wrap the first token on a line
	        if (output.just_added_newline()) {
	            return;
	        }

	        var shouldPreserveOrForce = (opt.preserve_newlines && current_token.wanted_newline) || force_linewrap;
	        var operatorLogicApplies = in_array(flags.last_text, tokenizer.positionable_operators) || in_array(current_token.text, tokenizer.positionable_operators);

	        if (operatorLogicApplies) {
	            var shouldPrintOperatorNewline = (
	                    in_array(flags.last_text, tokenizer.positionable_operators) &&
	                    in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)
	                ) ||
	                in_array(current_token.text, tokenizer.positionable_operators);
	            shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;
	        }

	        if (shouldPreserveOrForce) {
	            print_newline(false, true);
	        } else if (opt.wrap_line_length) {
	            if (last_type === 'TK_RESERVED' && in_array(flags.last_text, newline_restricted_tokens)) {
	                // These tokens should never have a newline inserted
	                // between them and the following expression.
	                return;
	            }
	            var proposed_line_length = output.current_line.get_character_count() + current_token.text.length +
	                (output.space_before_token ? 1 : 0);
	            if (proposed_line_length >= opt.wrap_line_length) {
	                print_newline(false, true);
	            }
	        }
	    }

	    function print_newline(force_newline, preserve_statement_flags) {
	        if (!preserve_statement_flags) {
	            if (flags.last_text !== ';' && flags.last_text !== ',' && flags.last_text !== '=' && last_type !== 'TK_OPERATOR') {
	                var next_token = get_token(1);
	                while (flags.mode === MODE.Statement &&
	                    !(flags.if_block && next_token && next_token.type === 'TK_RESERVED' && next_token.text === 'else') &&
	                    !flags.do_block) {
	                    restore_mode();
	                }
	            }
	        }

	        if (output.add_new_line(force_newline)) {
	            flags.multiline_frame = true;
	        }
	    }

	    function print_token_line_indentation() {
	        if (output.just_added_newline()) {
	            if (opt.keep_array_indentation && is_array(flags.mode) && current_token.wanted_newline) {
	                output.current_line.push(current_token.whitespace_before);
	                output.space_before_token = false;
	            } else if (output.set_indent(flags.indentation_level)) {
	                flags.line_indent_level = flags.indentation_level;
	            }
	        }
	    }

	    function print_token(printable_token) {
	        if (output.raw) {
	            output.add_raw_token(current_token);
	            return;
	        }

	        if (opt.comma_first && last_type === 'TK_COMMA' &&
	            output.just_added_newline()) {
	            if (output.previous_line.last() === ',') {
	                var popped = output.previous_line.pop();
	                // if the comma was already at the start of the line,
	                // pull back onto that line and reprint the indentation
	                if (output.previous_line.is_empty()) {
	                    output.previous_line.push(popped);
	                    output.trim(true);
	                    output.current_line.pop();
	                    output.trim();
	                }

	                // add the comma in front of the next token
	                print_token_line_indentation();
	                output.add_token(',');
	                output.space_before_token = true;
	            }
	        }

	        printable_token = printable_token || current_token.text;
	        print_token_line_indentation();
	        output.add_token(printable_token);
	    }

	    function indent() {
	        flags.indentation_level += 1;
	    }

	    function deindent() {
	        if (flags.indentation_level > 0 &&
	            ((!flags.parent) || flags.indentation_level > flags.parent.indentation_level)) {
	            flags.indentation_level -= 1;

	        }
	    }

	    function set_mode(mode) {
	        if (flags) {
	            flag_store.push(flags);
	            previous_flags = flags;
	        } else {
	            previous_flags = create_flags(null, mode);
	        }

	        flags = create_flags(previous_flags, mode);
	    }

	    function is_array(mode) {
	        return mode === MODE.ArrayLiteral;
	    }

	    function is_expression(mode) {
	        return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);
	    }

	    function restore_mode() {
	        if (flag_store.length > 0) {
	            previous_flags = flags;
	            flags = flag_store.pop();
	            if (previous_flags.mode === MODE.Statement && !opt.unindent_chained_methods) {
	                remove_redundant_indentation(output, previous_flags);
	            }
	        }
	    }

	    function start_of_object_property() {
	        return flags.parent.mode === MODE.ObjectLiteral && flags.mode === MODE.Statement && (
	            (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set'])));
	    }

	    function start_of_statement() {
	        if (
	            (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') ||
	            (last_type === 'TK_RESERVED' && flags.last_text === 'do') ||
	            (last_type === 'TK_RESERVED' && in_array(flags.last_text, newline_restricted_tokens) && !current_token.wanted_newline) ||
	            (last_type === 'TK_RESERVED' && flags.last_text === 'else' &&
	                !(current_token.type === 'TK_RESERVED' && current_token.text === 'if' && !current_token.comments_before.length)) ||
	            (last_type === 'TK_END_EXPR' && (previous_flags.mode === MODE.ForInitializer || previous_flags.mode === MODE.Conditional)) ||
	            (last_type === 'TK_WORD' && flags.mode === MODE.BlockStatement &&
	                !flags.in_case &&
	                !(current_token.text === '--' || current_token.text === '++') &&
	                last_last_text !== 'function' &&
	                current_token.type !== 'TK_WORD' && current_token.type !== 'TK_RESERVED') ||
	            (flags.mode === MODE.ObjectLiteral && (
	                (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['get', 'set']))))
	        ) {

	            set_mode(MODE.Statement);
	            if (!opt.unindent_chained_methods) {
	                indent();
	            }

	            handle_whitespace_and_comments(current_token, true);

	            // Issue #276:
	            // If starting a new statement with [if, for, while, do], push to a new line.
	            // if (a) if (b) if(c) d(); else e(); else f();
	            if (!start_of_object_property()) {
	                allow_wrap_or_preserved_newline(
	                    current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['do', 'for', 'if', 'while']));
	            }

	            return true;
	        }
	        return false;
	    }

	    function all_lines_start_with(lines, c) {
	        for (var i = 0; i < lines.length; i++) {
	            var line = trim(lines[i]);
	            if (line.charAt(0) !== c) {
	                return false;
	            }
	        }
	        return true;
	    }

	    function each_line_matches_indent(lines, indent) {
	        var i = 0,
	            len = lines.length,
	            line;
	        for (; i < len; i++) {
	            line = lines[i];
	            // allow empty lines to pass through
	            if (line && line.indexOf(indent) !== 0) {
	                return false;
	            }
	        }
	        return true;
	    }

	    function is_special_word(word) {
	        return in_array(word, ['case', 'return', 'do', 'if', 'throw', 'else']);
	    }

	    function get_token(offset) {
	        var index = token_pos + (offset || 0);
	        return (index < 0 || index >= tokens.length) ? null : tokens[index];
	    }

	    function handle_start_expr() {
	        // The conditional starts the statement if appropriate.
	        if (!start_of_statement()) {
	            handle_whitespace_and_comments(current_token);
	        }

	        var next_mode = MODE.Expression;
	        if (current_token.text === '[') {

	            if (last_type === 'TK_WORD' || flags.last_text === ')') {
	                // this is array index specifier, break immediately
	                // a[x], fn()[x]
	                if (last_type === 'TK_RESERVED' && in_array(flags.last_text, tokenizer.line_starters)) {
	                    output.space_before_token = true;
	                }
	                set_mode(next_mode);
	                print_token();
	                indent();
	                if (opt.space_in_paren) {
	                    output.space_before_token = true;
	                }
	                return;
	            }

	            next_mode = MODE.ArrayLiteral;
	            if (is_array(flags.mode)) {
	                if (flags.last_text === '[' ||
	                    (flags.last_text === ',' && (last_last_text === ']' || last_last_text === '}'))) {
	                    // ], [ goes to new line
	                    // }, [ goes to new line
	                    if (!opt.keep_array_indentation) {
	                        print_newline();
	                    }
	                }
	            }

	        } else {
	            if (last_type === 'TK_RESERVED' && flags.last_text === 'for') {
	                next_mode = MODE.ForInitializer;
	            } else if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['if', 'while'])) {
	                next_mode = MODE.Conditional;
	            } else {
	                // next_mode = MODE.Expression;
	            }
	        }

	        if (flags.last_text === ';' || last_type === 'TK_START_BLOCK') {
	            print_newline();
	        } else if (last_type === 'TK_END_EXPR' || last_type === 'TK_START_EXPR' || last_type === 'TK_END_BLOCK' || flags.last_text === '.') {
	            // TODO: Consider whether forcing this is required.  Review failing tests when removed.
	            allow_wrap_or_preserved_newline(current_token.wanted_newline);
	            // do nothing on (( and )( and ][ and ]( and .(
	        } else if (!(last_type === 'TK_RESERVED' && current_token.text === '(') && last_type !== 'TK_WORD' && last_type !== 'TK_OPERATOR') {
	            output.space_before_token = true;
	        } else if ((last_type === 'TK_RESERVED' && (flags.last_word === 'function' || flags.last_word === 'typeof')) ||
	            (flags.last_text === '*' &&
	                (in_array(last_last_text, ['function', 'yield']) ||
	                    (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {
	            // function() vs function ()
	            // yield*() vs yield* ()
	            // function*() vs function* ()
	            if (opt.space_after_anon_function) {
	                output.space_before_token = true;
	            }
	        } else if (last_type === 'TK_RESERVED' && (in_array(flags.last_text, tokenizer.line_starters) || flags.last_text === 'catch')) {
	            if (opt.space_before_conditional) {
	                output.space_before_token = true;
	            }
	        }

	        // Should be a space between await and an IIFE, or async and an arrow function
	        if (current_token.text === '(' && last_type === 'TK_RESERVED' && in_array(flags.last_word, ['await', 'async'])) {
	            output.space_before_token = true;
	        }

	        // Support of this kind of newline preservation.
	        // a = (b &&
	        //     (c || d));
	        if (current_token.text === '(') {
	            if (last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {
	                if (!start_of_object_property()) {
	                    allow_wrap_or_preserved_newline();
	                }
	            }
	        }

	        // Support preserving wrapped arrow function expressions
	        // a.b('c',
	        //     () => d.e
	        // )
	        if (current_token.text === '(' && last_type !== 'TK_WORD' && last_type !== 'TK_RESERVED') {
	            allow_wrap_or_preserved_newline();
	        }

	        set_mode(next_mode);
	        print_token();
	        if (opt.space_in_paren) {
	            output.space_before_token = true;
	        }

	        // In all cases, if we newline while inside an expression it should be indented.
	        indent();
	    }

	    function handle_end_expr() {
	        // statements inside expressions are not valid syntax, but...
	        // statements must all be closed when their container closes
	        while (flags.mode === MODE.Statement) {
	            restore_mode();
	        }

	        handle_whitespace_and_comments(current_token);

	        if (flags.multiline_frame) {
	            allow_wrap_or_preserved_newline(current_token.text === ']' && is_array(flags.mode) && !opt.keep_array_indentation);
	        }

	        if (opt.space_in_paren) {
	            if (last_type === 'TK_START_EXPR' && !opt.space_in_empty_paren) {
	                // () [] no inner space in empty parens like these, ever, ref #320
	                output.trim();
	                output.space_before_token = false;
	            } else {
	                output.space_before_token = true;
	            }
	        }
	        if (current_token.text === ']' && opt.keep_array_indentation) {
	            print_token();
	            restore_mode();
	        } else {
	            restore_mode();
	            print_token();
	        }
	        remove_redundant_indentation(output, previous_flags);

	        // do {} while () // no statement required after
	        if (flags.do_while && previous_flags.mode === MODE.Conditional) {
	            previous_flags.mode = MODE.Expression;
	            flags.do_block = false;
	            flags.do_while = false;

	        }
	    }

	    function handle_start_block() {
	        handle_whitespace_and_comments(current_token);

	        // Check if this is should be treated as a ObjectLiteral
	        var next_token = get_token(1);
	        var second_token = get_token(2);
	        if (second_token && (
	                (in_array(second_token.text, [':', ',']) && in_array(next_token.type, ['TK_STRING', 'TK_WORD', 'TK_RESERVED'])) ||
	                (in_array(next_token.text, ['get', 'set', '...']) && in_array(second_token.type, ['TK_WORD', 'TK_RESERVED']))
	            )) {
	            // We don't support TypeScript,but we didn't break it for a very long time.
	            // We'll try to keep not breaking it.
	            if (!in_array(last_last_text, ['class', 'interface'])) {
	                set_mode(MODE.ObjectLiteral);
	            } else {
	                set_mode(MODE.BlockStatement);
	            }
	        } else if (last_type === 'TK_OPERATOR' && flags.last_text === '=>') {
	            // arrow function: (param1, paramN) => { statements }
	            set_mode(MODE.BlockStatement);
	        } else if (in_array(last_type, ['TK_EQUALS', 'TK_START_EXPR', 'TK_COMMA', 'TK_OPERATOR']) ||
	            (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['return', 'throw', 'import', 'default']))
	        ) {
	            // Detecting shorthand function syntax is difficult by scanning forward,
	            //     so check the surrounding context.
	            // If the block is being returned, imported, export default, passed as arg,
	            //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.
	            set_mode(MODE.ObjectLiteral);
	        } else {
	            set_mode(MODE.BlockStatement);
	        }

	        var empty_braces = !next_token.comments_before.length && next_token.text === '}';
	        var empty_anonymous_function = empty_braces && flags.last_word === 'function' &&
	            last_type === 'TK_END_EXPR';

	        if (opt.brace_preserve_inline) // check for inline, set inline_frame if so
	        {
	            // search forward for a newline wanted inside this block
	            var index = 0;
	            var check_token = null;
	            flags.inline_frame = true;
	            do {
	                index += 1;
	                check_token = get_token(index);
	                if (check_token.wanted_newline) {
	                    flags.inline_frame = false;
	                    break;
	                }
	            } while (check_token.type !== 'TK_EOF' &&
	                !(check_token.type === 'TK_END_BLOCK' && check_token.opened === current_token));
	        }

	        if ((opt.brace_style === "expand" ||
	                (opt.brace_style === "none" && current_token.wanted_newline)) &&
	            !flags.inline_frame) {
	            if (last_type !== 'TK_OPERATOR' &&
	                (empty_anonymous_function ||
	                    last_type === 'TK_EQUALS' ||
	                    (last_type === 'TK_RESERVED' && is_special_word(flags.last_text) && flags.last_text !== 'else'))) {
	                output.space_before_token = true;
	            } else {
	                print_newline(false, true);
	            }
	        } else { // collapse || inline_frame
	            if (is_array(previous_flags.mode) && (last_type === 'TK_START_EXPR' || last_type === 'TK_COMMA')) {
	                if (last_type === 'TK_COMMA' || opt.space_in_paren) {
	                    output.space_before_token = true;
	                }

	                if (last_type === 'TK_COMMA' || (last_type === 'TK_START_EXPR' && flags.inline_frame)) {
	                    allow_wrap_or_preserved_newline();
	                    previous_flags.multiline_frame = previous_flags.multiline_frame || flags.multiline_frame;
	                    flags.multiline_frame = false;
	                }
	            }
	            if (last_type !== 'TK_OPERATOR' && last_type !== 'TK_START_EXPR') {
	                if (last_type === 'TK_START_BLOCK' && !flags.inline_frame) {
	                    print_newline();
	                } else {
	                    output.space_before_token = true;
	                }
	            }
	        }
	        print_token();
	        indent();
	    }

	    function handle_end_block() {
	        // statements must all be closed when their container closes
	        handle_whitespace_and_comments(current_token);

	        while (flags.mode === MODE.Statement) {
	            restore_mode();
	        }

	        var empty_braces = last_type === 'TK_START_BLOCK';

	        if (flags.inline_frame && !empty_braces) { // try inline_frame (only set if opt.braces-preserve-inline) first
	            output.space_before_token = true;
	        } else if (opt.brace_style === "expand") {
	            if (!empty_braces) {
	                print_newline();
	            }
	        } else {
	            // skip {}
	            if (!empty_braces) {
	                if (is_array(flags.mode) && opt.keep_array_indentation) {
	                    // we REALLY need a newline here, but newliner would skip that
	                    opt.keep_array_indentation = false;
	                    print_newline();
	                    opt.keep_array_indentation = true;

	                } else {
	                    print_newline();
	                }
	            }
	        }
	        restore_mode();
	        print_token();
	    }

	    function handle_word() {
	        if (current_token.type === 'TK_RESERVED') {
	            if (in_array(current_token.text, ['set', 'get']) && flags.mode !== MODE.ObjectLiteral) {
	                current_token.type = 'TK_WORD';
	            } else if (in_array(current_token.text, ['as', 'from']) && !flags.import_block) {
	                current_token.type = 'TK_WORD';
	            } else if (flags.mode === MODE.ObjectLiteral) {
	                var next_token = get_token(1);
	                if (next_token.text === ':') {
	                    current_token.type = 'TK_WORD';
	                }
	            }
	        }

	        if (start_of_statement()) {
	            // The conditional starts the statement if appropriate.
	            if (last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === 'TK_WORD') {
	                flags.declaration_statement = true;
	            }
	        } else if (current_token.wanted_newline && !is_expression(flags.mode) &&
	            (last_type !== 'TK_OPERATOR' || (flags.last_text === '--' || flags.last_text === '++')) &&
	            last_type !== 'TK_EQUALS' &&
	            (opt.preserve_newlines || !(last_type === 'TK_RESERVED' && in_array(flags.last_text, ['var', 'let', 'const', 'set', 'get'])))) {
	            handle_whitespace_and_comments(current_token);
	            print_newline();
	        } else {
	            handle_whitespace_and_comments(current_token);
	        }

	        if (flags.do_block && !flags.do_while) {
	            if (current_token.type === 'TK_RESERVED' && current_token.text === 'while') {
	                // do {} ## while ()
	                output.space_before_token = true;
	                print_token();
	                output.space_before_token = true;
	                flags.do_while = true;
	                return;
	            } else {
	                // do {} should always have while as the next word.
	                // if we don't see the expected while, recover
	                print_newline();
	                flags.do_block = false;
	            }
	        }

	        // if may be followed by else, or not
	        // Bare/inline ifs are tricky
	        // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();
	        if (flags.if_block) {
	            if (!flags.else_block && (current_token.type === 'TK_RESERVED' && current_token.text === 'else')) {
	                flags.else_block = true;
	            } else {
	                while (flags.mode === MODE.Statement) {
	                    restore_mode();
	                }
	                flags.if_block = false;
	                flags.else_block = false;
	            }
	        }

	        if (current_token.type === 'TK_RESERVED' && (current_token.text === 'case' || (current_token.text === 'default' && flags.in_case_statement))) {
	            print_newline();
	            if (flags.case_body || opt.jslint_happy) {
	                // switch cases following one another
	                deindent();
	                flags.case_body = false;
	            }
	            print_token();
	            flags.in_case = true;
	            flags.in_case_statement = true;
	            return;
	        }

	        if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {
	            if (!start_of_object_property()) {
	                allow_wrap_or_preserved_newline();
	            }
	        }

	        if (current_token.type === 'TK_RESERVED' && current_token.text === 'function') {
	            if (in_array(flags.last_text, ['}', ';']) ||
	                (output.just_added_newline() && !(in_array(flags.last_text, ['(', '[', '{', ':', '=', ',']) || last_type === 'TK_OPERATOR'))) {
	                // make sure there is a nice clean space of at least one blank line
	                // before a new function definition
	                if (!output.just_added_blankline() && !current_token.comments_before.length) {
	                    print_newline();
	                    print_newline(true);
	                }
	            }
	            if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD') {
	                if (last_type === 'TK_RESERVED' && (
	                        in_array(flags.last_text, ['get', 'set', 'new', 'export', 'async']) ||
	                        in_array(flags.last_text, newline_restricted_tokens))) {
	                    output.space_before_token = true;
	                } else if (last_type === 'TK_RESERVED' && flags.last_text === 'default' && last_last_text === 'export') {
	                    output.space_before_token = true;
	                } else {
	                    print_newline();
	                }
	            } else if (last_type === 'TK_OPERATOR' || flags.last_text === '=') {
	                // foo = function
	                output.space_before_token = true;
	            } else if (!flags.multiline_frame && (is_expression(flags.mode) || is_array(flags.mode))) {
	                // (function
	            } else {
	                print_newline();
	            }

	            print_token();
	            flags.last_word = current_token.text;
	            return;
	        }

	        prefix = 'NONE';

	        if (last_type === 'TK_END_BLOCK') {

	            if (previous_flags.inline_frame) {
	                prefix = 'SPACE';
	            } else if (!(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally', 'from']))) {
	                prefix = 'NEWLINE';
	            } else {
	                if (opt.brace_style === "expand" ||
	                    opt.brace_style === "end-expand" ||
	                    (opt.brace_style === "none" && current_token.wanted_newline)) {
	                    prefix = 'NEWLINE';
	                } else {
	                    prefix = 'SPACE';
	                    output.space_before_token = true;
	                }
	            }
	        } else if (last_type === 'TK_SEMICOLON' && flags.mode === MODE.BlockStatement) {
	            // TODO: Should this be for STATEMENT as well?
	            prefix = 'NEWLINE';
	        } else if (last_type === 'TK_SEMICOLON' && is_expression(flags.mode)) {
	            prefix = 'SPACE';
	        } else if (last_type === 'TK_STRING') {
	            prefix = 'NEWLINE';
	        } else if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' ||
	            (flags.last_text === '*' &&
	                (in_array(last_last_text, ['function', 'yield']) ||
	                    (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {
	            prefix = 'SPACE';
	        } else if (last_type === 'TK_START_BLOCK') {
	            if (flags.inline_frame) {
	                prefix = 'SPACE';
	            } else {
	                prefix = 'NEWLINE';
	            }
	        } else if (last_type === 'TK_END_EXPR') {
	            output.space_before_token = true;
	            prefix = 'NEWLINE';
	        }

	        if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, tokenizer.line_starters) && flags.last_text !== ')') {
	            if (flags.inline_frame || flags.last_text === 'else' || flags.last_text === 'export') {
	                prefix = 'SPACE';
	            } else {
	                prefix = 'NEWLINE';
	            }

	        }

	        if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['else', 'catch', 'finally'])) {
	            if ((!(last_type === 'TK_END_BLOCK' && previous_flags.mode === MODE.BlockStatement) ||
	                    opt.brace_style === "expand" ||
	                    opt.brace_style === "end-expand" ||
	                    (opt.brace_style === "none" && current_token.wanted_newline)) &&
	                !flags.inline_frame) {
	                print_newline();
	            } else {
	                output.trim(true);
	                var line = output.current_line;
	                // If we trimmed and there's something other than a close block before us
	                // put a newline back in.  Handles '} // comment' scenario.
	                if (line.last() !== '}') {
	                    print_newline();
	                }
	                output.space_before_token = true;
	            }
	        } else if (prefix === 'NEWLINE') {
	            if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {
	                // no newline between 'return nnn'
	                output.space_before_token = true;
	            } else if (last_type !== 'TK_END_EXPR') {
	                if ((last_type !== 'TK_START_EXPR' || !(current_token.type === 'TK_RESERVED' && in_array(current_token.text, ['var', 'let', 'const']))) && flags.last_text !== ':') {
	                    // no need to force newline on 'var': for (var x = 0...)
	                    if (current_token.type === 'TK_RESERVED' && current_token.text === 'if' && flags.last_text === 'else') {
	                        // no newline for } else if {
	                        output.space_before_token = true;
	                    } else {
	                        print_newline();
	                    }
	                }
	            } else if (current_token.type === 'TK_RESERVED' && in_array(current_token.text, tokenizer.line_starters) && flags.last_text !== ')') {
	                print_newline();
	            }
	        } else if (flags.multiline_frame && is_array(flags.mode) && flags.last_text === ',' && last_last_text === '}') {
	            print_newline(); // }, in lists get a newline treatment
	        } else if (prefix === 'SPACE') {
	            output.space_before_token = true;
	        }
	        print_token();
	        flags.last_word = current_token.text;

	        if (current_token.type === 'TK_RESERVED') {
	            if (current_token.text === 'do') {
	                flags.do_block = true;
	            } else if (current_token.text === 'if') {
	                flags.if_block = true;
	            } else if (current_token.text === 'import') {
	                flags.import_block = true;
	            } else if (flags.import_block && current_token.type === 'TK_RESERVED' && current_token.text === 'from') {
	                flags.import_block = false;
	            }
	        }
	    }

	    function handle_semicolon() {
	        if (start_of_statement()) {
	            // The conditional starts the statement if appropriate.
	            // Semicolon can be the start (and end) of a statement
	            output.space_before_token = false;
	        } else {
	            handle_whitespace_and_comments(current_token);
	        }

	        var next_token = get_token(1);
	        while (flags.mode === MODE.Statement &&
	            !(flags.if_block && next_token && next_token.type === 'TK_RESERVED' && next_token.text === 'else') &&
	            !flags.do_block) {
	            restore_mode();
	        }

	        // hacky but effective for the moment
	        if (flags.import_block) {
	            flags.import_block = false;
	        }
	        print_token();
	    }

	    function handle_string() {
	        if (start_of_statement()) {
	            // The conditional starts the statement if appropriate.
	            // One difference - strings want at least a space before
	            output.space_before_token = true;
	        } else {
	            handle_whitespace_and_comments(current_token);
	            if (last_type === 'TK_RESERVED' || last_type === 'TK_WORD' || flags.inline_frame) {
	                output.space_before_token = true;
	            } else if (last_type === 'TK_COMMA' || last_type === 'TK_START_EXPR' || last_type === 'TK_EQUALS' || last_type === 'TK_OPERATOR') {
	                if (!start_of_object_property()) {
	                    allow_wrap_or_preserved_newline();
	                }
	            } else {
	                print_newline();
	            }
	        }
	        print_token();
	    }

	    function handle_equals() {
	        if (start_of_statement()) {
	            // The conditional starts the statement if appropriate.
	        } else {
	            handle_whitespace_and_comments(current_token);
	        }

	        if (flags.declaration_statement) {
	            // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done
	            flags.declaration_assignment = true;
	        }
	        output.space_before_token = true;
	        print_token();
	        output.space_before_token = true;
	    }

	    function handle_comma() {
	        handle_whitespace_and_comments(current_token, true);

	        print_token();
	        output.space_before_token = true;
	        if (flags.declaration_statement) {
	            if (is_expression(flags.parent.mode)) {
	                // do not break on comma, for(var a = 1, b = 2)
	                flags.declaration_assignment = false;
	            }

	            if (flags.declaration_assignment) {
	                flags.declaration_assignment = false;
	                print_newline(false, true);
	            } else if (opt.comma_first) {
	                // for comma-first, we want to allow a newline before the comma
	                // to turn into a newline after the comma, which we will fixup later
	                allow_wrap_or_preserved_newline();
	            }
	        } else if (flags.mode === MODE.ObjectLiteral ||
	            (flags.mode === MODE.Statement && flags.parent.mode === MODE.ObjectLiteral)) {
	            if (flags.mode === MODE.Statement) {
	                restore_mode();
	            }

	            if (!flags.inline_frame) {
	                print_newline();
	            }
	        } else if (opt.comma_first) {
	            // EXPR or DO_BLOCK
	            // for comma-first, we want to allow a newline before the comma
	            // to turn into a newline after the comma, which we will fixup later
	            allow_wrap_or_preserved_newline();
	        }
	    }

	    function handle_operator() {
	        var isGeneratorAsterisk = current_token.text === '*' &&
	            ((last_type === 'TK_RESERVED' && in_array(flags.last_text, ['function', 'yield'])) ||
	                (in_array(last_type, ['TK_START_BLOCK', 'TK_COMMA', 'TK_END_BLOCK', 'TK_SEMICOLON']))
	            );
	        var isUnary = in_array(current_token.text, ['-', '+']) && (
	            in_array(last_type, ['TK_START_BLOCK', 'TK_START_EXPR', 'TK_EQUALS', 'TK_OPERATOR']) ||
	            in_array(flags.last_text, tokenizer.line_starters) ||
	            flags.last_text === ','
	        );

	        if (start_of_statement()) {
	            // The conditional starts the statement if appropriate.
	        } else {
	            var preserve_statement_flags = !isGeneratorAsterisk;
	            handle_whitespace_and_comments(current_token, preserve_statement_flags);
	        }

	        if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {
	            // "return" had a special handling in TK_WORD. Now we need to return the favor
	            output.space_before_token = true;
	            print_token();
	            return;
	        }

	        // hack for actionscript's import .*;
	        if (current_token.text === '*' && last_type === 'TK_DOT') {
	            print_token();
	            return;
	        }

	        if (current_token.text === '::') {
	            // no spaces around exotic namespacing syntax operator
	            print_token();
	            return;
	        }

	        // Allow line wrapping between operators when operator_position is
	        //   set to before or preserve
	        if (last_type === 'TK_OPERATOR' && in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {
	            allow_wrap_or_preserved_newline();
	        }

	        if (current_token.text === ':' && flags.in_case) {
	            flags.case_body = true;
	            indent();
	            print_token();
	            print_newline();
	            flags.in_case = false;
	            return;
	        }

	        var space_before = true;
	        var space_after = true;
	        var in_ternary = false;
	        if (current_token.text === ':') {
	            if (flags.ternary_depth === 0) {
	                // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.
	                space_before = false;
	            } else {
	                flags.ternary_depth -= 1;
	                in_ternary = true;
	            }
	        } else if (current_token.text === '?') {
	            flags.ternary_depth += 1;
	        }

	        // let's handle the operator_position option prior to any conflicting logic
	        if (!isUnary && !isGeneratorAsterisk && opt.preserve_newlines && in_array(current_token.text, tokenizer.positionable_operators)) {
	            var isColon = current_token.text === ':';
	            var isTernaryColon = (isColon && in_ternary);
	            var isOtherColon = (isColon && !in_ternary);

	            switch (opt.operator_position) {
	                case OPERATOR_POSITION.before_newline:
	                    // if the current token is : and it's not a ternary statement then we set space_before to false
	                    output.space_before_token = !isOtherColon;

	                    print_token();

	                    if (!isColon || isTernaryColon) {
	                        allow_wrap_or_preserved_newline();
	                    }

	                    output.space_before_token = true;
	                    return;

	                case OPERATOR_POSITION.after_newline:
	                    // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,
	                    //   then print a newline.

	                    output.space_before_token = true;

	                    if (!isColon || isTernaryColon) {
	                        if (get_token(1).wanted_newline) {
	                            print_newline(false, true);
	                        } else {
	                            allow_wrap_or_preserved_newline();
	                        }
	                    } else {
	                        output.space_before_token = false;
	                    }

	                    print_token();

	                    output.space_before_token = true;
	                    return;

	                case OPERATOR_POSITION.preserve_newline:
	                    if (!isOtherColon) {
	                        allow_wrap_or_preserved_newline();
	                    }

	                    // if we just added a newline, or the current token is : and it's not a ternary statement,
	                    //   then we set space_before to false
	                    space_before = !(output.just_added_newline() || isOtherColon);

	                    output.space_before_token = space_before;
	                    print_token();
	                    output.space_before_token = true;
	                    return;
	            }
	        }

	        if (isGeneratorAsterisk) {
	            allow_wrap_or_preserved_newline();
	            space_before = false;
	            var next_token = get_token(1);
	            space_after = next_token && in_array(next_token.type, ['TK_WORD', 'TK_RESERVED']);
	        } else if (current_token.text === '...') {
	            allow_wrap_or_preserved_newline();
	            space_before = last_type === 'TK_START_BLOCK';
	            space_after = false;
	        } else if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {
	            // unary operators (and binary +/- pretending to be unary) special cases

	            space_before = false;
	            space_after = false;

	            // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1
	            // if there is a newline between -- or ++ and anything else we should preserve it.
	            if (current_token.wanted_newline && (current_token.text === '--' || current_token.text === '++')) {
	                print_newline(false, true);
	            }

	            if (flags.last_text === ';' && is_expression(flags.mode)) {
	                // for (;; ++i)
	                //        ^^^
	                space_before = true;
	            }

	            if (last_type === 'TK_RESERVED') {
	                space_before = true;
	            } else if (last_type === 'TK_END_EXPR') {
	                space_before = !(flags.last_text === ']' && (current_token.text === '--' || current_token.text === '++'));
	            } else if (last_type === 'TK_OPERATOR') {
	                // a++ + ++b;
	                // a - -b
	                space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(flags.last_text, ['--', '-', '++', '+']);
	                // + and - are not unary when preceeded by -- or ++ operator
	                // a-- + b
	                // a * +b
	                // a - -b
	                if (in_array(current_token.text, ['+', '-']) && in_array(flags.last_text, ['--', '++'])) {
	                    space_after = true;
	                }
	            }


	            if (((flags.mode === MODE.BlockStatement && !flags.inline_frame) || flags.mode === MODE.Statement) &&
	                (flags.last_text === '{' || flags.last_text === ';')) {
	                // { foo; --i }
	                // foo(); --bar;
	                print_newline();
	            }
	        }

	        output.space_before_token = output.space_before_token || space_before;
	        print_token();
	        output.space_before_token = space_after;
	    }

	    function handle_block_comment(preserve_statement_flags) {
	        if (output.raw) {
	            output.add_raw_token(current_token);
	            if (current_token.directives && current_token.directives.preserve === 'end') {
	                // If we're testing the raw output behavior, do not allow a directive to turn it off.
	                output.raw = opt.test_output_raw;
	            }
	            return;
	        }

	        if (current_token.directives) {
	            print_newline(false, preserve_statement_flags);
	            print_token();
	            if (current_token.directives.preserve === 'start') {
	                output.raw = true;
	            }
	            print_newline(false, true);
	            return;
	        }

	        // inline block
	        if (!acorn.newline.test(current_token.text) && !current_token.wanted_newline) {
	            output.space_before_token = true;
	            print_token();
	            output.space_before_token = true;
	            return;
	        }

	        var lines = split_linebreaks(current_token.text);
	        var j; // iterator for this case
	        var javadoc = false;
	        var starless = false;
	        var lastIndent = current_token.whitespace_before;
	        var lastIndentLength = lastIndent.length;

	        // block comment starts with a new line
	        print_newline(false, preserve_statement_flags);
	        if (lines.length > 1) {
	            javadoc = all_lines_start_with(lines.slice(1), '*');
	            starless = each_line_matches_indent(lines.slice(1), lastIndent);
	        }

	        // first line always indented
	        print_token(lines[0]);
	        for (j = 1; j < lines.length; j++) {
	            print_newline(false, true);
	            if (javadoc) {
	                // javadoc: reformat and re-indent
	                print_token(' ' + ltrim(lines[j]));
	            } else if (starless && lines[j].length > lastIndentLength) {
	                // starless: re-indent non-empty content, avoiding trim
	                print_token(lines[j].substring(lastIndentLength));
	            } else {
	                // normal comments output raw
	                output.add_token(lines[j]);
	            }
	        }

	        // for comments of more than one line, make sure there's a new line after
	        print_newline(false, preserve_statement_flags);
	    }

	    function handle_comment(preserve_statement_flags) {
	        if (current_token.wanted_newline) {
	            print_newline(false, preserve_statement_flags);
	        } else {
	            output.trim(true);
	        }

	        output.space_before_token = true;
	        print_token();
	        print_newline(false, preserve_statement_flags);
	    }

	    function handle_dot() {
	        if (start_of_statement()) {
	            // The conditional starts the statement if appropriate.
	        } else {
	            handle_whitespace_and_comments(current_token, true);
	        }

	        if (last_type === 'TK_RESERVED' && is_special_word(flags.last_text)) {
	            output.space_before_token = true;
	        } else {
	            // allow preserved newlines before dots in general
	            // force newlines on dots after close paren when break_chained - for bar().baz()
	            allow_wrap_or_preserved_newline(flags.last_text === ')' && opt.break_chained_methods);
	        }

	        print_token();
	    }

	    function handle_unknown(preserve_statement_flags) {
	        print_token();

	        if (current_token.text[current_token.text.length - 1] === '\n') {
	            print_newline(false, preserve_statement_flags);
	        }
	    }

	    function handle_eof() {
	        // Unwind any open statements
	        while (flags.mode === MODE.Statement) {
	            restore_mode();
	        }
	        handle_whitespace_and_comments(current_token);
	    }
	}

	module.exports.Beautifier = Beautifier;

	/***/ }),
	/* 2 */
	/***/ (function(module, exports) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.
	*/

	function InputScanner(input) {
	    var _input = input;
	    var _input_length = _input.length;
	    var _position = 0;

	    this.back = function() {
	        _position -= 1;
	    };

	    this.hasNext = function() {
	        return _position < _input_length;
	    };

	    this.next = function() {
	        var val = null;
	        if (this.hasNext()) {
	            val = _input.charAt(_position);
	            _position += 1;
	        }
	        return val;
	    };

	    this.peek = function(index) {
	        var val = null;
	        index = index || 0;
	        index += _position;
	        if (index >= 0 && index < _input_length) {
	            val = _input.charAt(index);
	        }
	        return val;
	    };

	    this.peekCharCode = function(index) {
	        var val = 0;
	        index = index || 0;
	        index += _position;
	        if (index >= 0 && index < _input_length) {
	            val = _input.charCodeAt(index);
	        }
	        return val;
	    };

	    this.test = function(pattern, index) {
	        index = index || 0;
	        pattern.lastIndex = _position + index;
	        return pattern.test(_input);
	    };

	    this.testChar = function(pattern, index) {
	        var val = this.peek(index);
	        return val !== null && pattern.test(val);
	    };

	    this.match = function(pattern) {
	        pattern.lastIndex = _position;
	        var pattern_match = pattern.exec(_input);
	        if (pattern_match && pattern_match.index === _position) {
	            _position += pattern_match[0].length;
	        } else {
	            pattern_match = null;
	        }
	        return pattern_match;
	    };
	}


	module.exports.InputScanner = InputScanner;


	/***/ }),
	/* 3 */
	/***/ (function(module, exports) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	function mergeOpts(allOptions, targetType) {
	    var finalOpts = {};
	    var name;

	    for (name in allOptions) {
	        if (name !== targetType) {
	            finalOpts[name] = allOptions[name];
	        }
	    }

	    //merge in the per type settings for the targetType
	    if (targetType in allOptions) {
	        for (name in allOptions[targetType]) {
	            finalOpts[name] = allOptions[targetType][name];
	        }
	    }
	    return finalOpts;
	}

	module.exports.mergeOpts = mergeOpts;


	/***/ }),
	/* 4 */
	/***/ (function(module, exports) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.
	*/

	function OutputLine(parent) {
	    var _character_count = 0;
	    // use indent_count as a marker for lines that have preserved indentation
	    var _indent_count = -1;

	    var _items = [];
	    var _empty = true;

	    this.set_indent = function(level) {
	        _character_count = parent.baseIndentLength + level * parent.indent_length;
	        _indent_count = level;
	    };

	    this.get_character_count = function() {
	        return _character_count;
	    };

	    this.is_empty = function() {
	        return _empty;
	    };

	    this.last = function() {
	        if (!this._empty) {
	            return _items[_items.length - 1];
	        } else {
	            return null;
	        }
	    };

	    this.push = function(input) {
	        _items.push(input);
	        _character_count += input.length;
	        _empty = false;
	    };

	    this.pop = function() {
	        var item = null;
	        if (!_empty) {
	            item = _items.pop();
	            _character_count -= item.length;
	            _empty = _items.length === 0;
	        }
	        return item;
	    };

	    this.remove_indent = function() {
	        if (_indent_count > 0) {
	            _indent_count -= 1;
	            _character_count -= parent.indent_length;
	        }
	    };

	    this.trim = function() {
	        while (this.last() === ' ') {
	            _items.pop();
	            _character_count -= 1;
	        }
	        _empty = _items.length === 0;
	    };

	    this.toString = function() {
	        var result = '';
	        if (!this._empty) {
	            if (_indent_count >= 0) {
	                result = parent.indent_cache[_indent_count];
	            }
	            result += _items.join('');
	        }
	        return result;
	    };
	}

	function Output(indent_string, baseIndentString) {
	    baseIndentString = baseIndentString || '';
	    this.indent_cache = [baseIndentString];
	    this.baseIndentLength = baseIndentString.length;
	    this.indent_length = indent_string.length;
	    this.raw = false;

	    var lines = [];
	    this.baseIndentString = baseIndentString;
	    this.indent_string = indent_string;
	    this.previous_line = null;
	    this.current_line = null;
	    this.space_before_token = false;

	    this.add_outputline = function() {
	        this.previous_line = this.current_line;
	        this.current_line = new OutputLine(this);
	        lines.push(this.current_line);
	    };

	    // initialize
	    this.add_outputline();


	    this.get_line_number = function() {
	        return lines.length;
	    };

	    // Using object instead of string to allow for later expansion of info about each line
	    this.add_new_line = function(force_newline) {
	        if (this.get_line_number() === 1 && this.just_added_newline()) {
	            return false; // no newline on start of file
	        }

	        if (force_newline || !this.just_added_newline()) {
	            if (!this.raw) {
	                this.add_outputline();
	            }
	            return true;
	        }

	        return false;
	    };

	    this.get_code = function(end_with_newline, eol) {
	        var sweet_code = lines.join('\n').replace(/[\r\n\t ]+$/, '');

	        if (end_with_newline) {
	            sweet_code += '\n';
	        }

	        if (eol !== '\n') {
	            sweet_code = sweet_code.replace(/[\n]/g, eol);
	        }

	        return sweet_code;
	    };

	    this.set_indent = function(level) {
	        // Never indent your first output indent at the start of the file
	        if (lines.length > 1) {
	            while (level >= this.indent_cache.length) {
	                this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);
	            }

	            this.current_line.set_indent(level);
	            return true;
	        }
	        this.current_line.set_indent(0);
	        return false;
	    };

	    this.add_raw_token = function(token) {
	        for (var x = 0; x < token.newlines; x++) {
	            this.add_outputline();
	        }
	        this.current_line.push(token.whitespace_before);
	        this.current_line.push(token.text);
	        this.space_before_token = false;
	    };

	    this.add_token = function(printable_token) {
	        this.add_space_before_token();
	        this.current_line.push(printable_token);
	    };

	    this.add_space_before_token = function() {
	        if (this.space_before_token && !this.just_added_newline()) {
	            this.current_line.push(' ');
	        }
	        this.space_before_token = false;
	    };

	    this.remove_indent = function(index) {
	        var output_length = lines.length;
	        while (index < output_length) {
	            lines[index].remove_indent();
	            index++;
	        }
	    };

	    this.trim = function(eat_newlines) {
	        eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;

	        this.current_line.trim(indent_string, baseIndentString);

	        while (eat_newlines && lines.length > 1 &&
	            this.current_line.is_empty()) {
	            lines.pop();
	            this.current_line = lines[lines.length - 1];
	            this.current_line.trim();
	        }

	        this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;
	    };

	    this.just_added_newline = function() {
	        return this.current_line.is_empty();
	    };

	    this.just_added_blankline = function() {
	        if (this.just_added_newline()) {
	            if (lines.length === 1) {
	                return true; // start of the file and newline = blank
	            }

	            var line = lines[lines.length - 2];
	            return line.is_empty();
	        }
	        return false;
	    };
	}

	module.exports.Output = Output;


	/***/ }),
	/* 5 */
	/***/ (function(module, exports) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.
	*/

	function Token(type, text, newlines, whitespace_before, parent) {
	    this.type = type;
	    this.text = text;

	    // comments_before are
	    // comments that have a new line before them
	    // and may or may not have a newline after
	    // this is a set of comments before
	    this.comments_before = /* inline comment*/ [];


	    this.comments_after = []; // no new line before and newline after
	    this.newlines = newlines || 0;
	    this.wanted_newline = newlines > 0;
	    this.whitespace_before = whitespace_before || '';
	    this.parent = parent || null;
	    this.opened = null;
	    this.directives = null;
	}

	module.exports.Token = Token;


	/***/ }),
	/* 6 */
	/***/ (function(module, exports, __webpack_require__) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	var Beautifier = __webpack_require__(1).Beautifier;

	function js_beautify(js_source_text, options) {
	    var beautifier = new Beautifier(js_source_text, options);
	    return beautifier.beautify();
	}

	module.exports = js_beautify;

	/***/ }),
	/* 7 */
	/***/ (function(module, exports, __webpack_require__) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	var InputScanner = __webpack_require__(2).InputScanner;
	var Token = __webpack_require__(5).Token;
	var acorn = __webpack_require__(0);

	function trim(s) {
	    return s.replace(/^\s+|\s+$/g, '');
	}

	function in_array(what, arr) {
	    for (var i = 0; i < arr.length; i += 1) {
	        if (arr[i] === what) {
	            return true;
	        }
	    }
	    return false;
	}

	function Tokenizer(input_string, opts) {

	    var whitespace = "\n\r\t ".split('');
	    var digit = /[0-9]/;
	    var digit_bin = /[01]/;
	    var digit_oct = /[01234567]/;
	    var digit_hex = /[0123456789abcdefABCDEF]/;

	    this.positionable_operators = '!= !== % & && * ** + - / : < << <= == === > >= >> >>> ? ^ | ||'.split(' ');
	    var punct = this.positionable_operators.concat(
	        // non-positionable operators - these do not follow operator position settings
	        '! %= &= *= **= ++ += , -- -= /= :: <<= = => >>= >>>= ^= |= ~ ...'.split(' '));

	    // words which should always start on new line.
	    this.line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');
	    var reserved_words = this.line_starters.concat(['do', 'in', 'of', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);

	    //  /* ... */ comment ends with nearest */ or end of file
	    var block_comment_pattern = /([\s\S]*?)((?:\*\/)|$)/g;

	    // comment ends just before nearest linefeed or end of file
	    var comment_pattern = /([^\n\r\u2028\u2029]*)/g;

	    var directives_block_pattern = /\/\* beautify( \w+[:]\w+)+ \*\//g;
	    var directive_pattern = / (\w+)[:](\w+)/g;
	    var directives_end_ignore_pattern = /([\s\S]*?)((?:\/\*\sbeautify\signore:end\s\*\/)|$)/g;

	    var template_pattern = /((<\?php|<\?=)[\s\S]*?\?>)|(<%[\s\S]*?%>)/g;

	    var n_newlines, whitespace_before_token, in_html_comment, tokens;
	    var input;

	    this.tokenize = function() {
	        input = new InputScanner(input_string);
	        in_html_comment = false;
	        tokens = [];

	        var next, last;
	        var token_values;
	        var open = null;
	        var open_stack = [];
	        var comments = [];

	        while (!(last && last.type === 'TK_EOF')) {
	            token_values = tokenize_next();
	            next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);
	            while (next.type === 'TK_COMMENT' || next.type === 'TK_BLOCK_COMMENT' || next.type === 'TK_UNKNOWN') {
	                if (next.type === 'TK_BLOCK_COMMENT') {
	                    next.directives = token_values[2];
	                }
	                comments.push(next);
	                token_values = tokenize_next();
	                next = new Token(token_values[1], token_values[0], n_newlines, whitespace_before_token);
	            }

	            if (comments.length) {
	                next.comments_before = comments;
	                comments = [];
	            }

	            if (next.type === 'TK_START_BLOCK' || next.type === 'TK_START_EXPR') {
	                next.parent = last;
	                open_stack.push(open);
	                open = next;
	            } else if ((next.type === 'TK_END_BLOCK' || next.type === 'TK_END_EXPR') &&
	                (open && (
	                    (next.text === ']' && open.text === '[') ||
	                    (next.text === ')' && open.text === '(') ||
	                    (next.text === '}' && open.text === '{')))) {
	                next.parent = open.parent;
	                next.opened = open;

	                open = open_stack.pop();
	            }

	            tokens.push(next);
	            last = next;
	        }

	        return tokens;
	    };

	    function get_directives(text) {
	        if (!text.match(directives_block_pattern)) {
	            return null;
	        }

	        var directives = {};
	        directive_pattern.lastIndex = 0;
	        var directive_match = directive_pattern.exec(text);

	        while (directive_match) {
	            directives[directive_match[1]] = directive_match[2];
	            directive_match = directive_pattern.exec(text);
	        }

	        return directives;
	    }

	    function tokenize_next() {
	        var resulting_string;
	        var whitespace_on_this_line = [];

	        n_newlines = 0;
	        whitespace_before_token = '';

	        var c = input.next();

	        if (c === null) {
	            return ['', 'TK_EOF'];
	        }

	        var last_token;
	        if (tokens.length) {
	            last_token = tokens[tokens.length - 1];
	        } else {
	            // For the sake of tokenizing we can pretend that there was on open brace to start
	            last_token = new Token('TK_START_BLOCK', '{');
	        }

	        while (in_array(c, whitespace)) {

	            if (acorn.newline.test(c)) {
	                if (!(c === '\n' && input.peek(-2) === '\r')) {
	                    n_newlines += 1;
	                    whitespace_on_this_line = [];
	                }
	            } else {
	                whitespace_on_this_line.push(c);
	            }

	            c = input.next();

	            if (c === null) {
	                return ['', 'TK_EOF'];
	            }
	        }

	        if (whitespace_on_this_line.length) {
	            whitespace_before_token = whitespace_on_this_line.join('');
	        }

	        if (digit.test(c) || (c === '.' && input.testChar(digit))) {
	            var allow_decimal = true;
	            var allow_e = true;
	            var local_digit = digit;

	            if (c === '0' && input.testChar(/[XxOoBb]/)) {
	                // switch to hex/oct/bin number, no decimal or e, just hex/oct/bin digits
	                allow_decimal = false;
	                allow_e = false;
	                if (input.testChar(/[Bb]/)) {
	                    local_digit = digit_bin;
	                } else if (input.testChar(/[Oo]/)) {
	                    local_digit = digit_oct;
	                } else {
	                    local_digit = digit_hex;
	                }
	                c += input.next();
	            } else if (c === '.') {
	                // Already have a decimal for this literal, don't allow another
	                allow_decimal = false;
	            } else {
	                // we know this first loop will run.  It keeps the logic simpler.
	                c = '';
	                input.back();
	            }

	            // Add the digits
	            while (input.testChar(local_digit)) {
	                c += input.next();

	                if (allow_decimal && input.peek() === '.') {
	                    c += input.next();
	                    allow_decimal = false;
	                }

	                // a = 1.e-7 is valid, so we test for . then e in one loop
	                if (allow_e && input.testChar(/[Ee]/)) {
	                    c += input.next();

	                    if (input.testChar(/[+-]/)) {
	                        c += input.next();
	                    }

	                    allow_e = false;
	                    allow_decimal = false;
	                }
	            }

	            return [c, 'TK_WORD'];
	        }

	        if (acorn.isIdentifierStart(input.peekCharCode(-1))) {
	            if (input.hasNext()) {
	                while (acorn.isIdentifierChar(input.peekCharCode())) {
	                    c += input.next();
	                    if (!input.hasNext()) {
	                        break;
	                    }
	                }
	            }

	            if (!(last_token.type === 'TK_DOT' ||
	                    (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['set', 'get']))) &&
	                in_array(c, reserved_words)) {
	                if (c === 'in' || c === 'of') { // hack for 'in' and 'of' operators
	                    return [c, 'TK_OPERATOR'];
	                }
	                return [c, 'TK_RESERVED'];
	            }

	            return [c, 'TK_WORD'];
	        }

	        if (c === '(' || c === '[') {
	            return [c, 'TK_START_EXPR'];
	        }

	        if (c === ')' || c === ']') {
	            return [c, 'TK_END_EXPR'];
	        }

	        if (c === '{') {
	            return [c, 'TK_START_BLOCK'];
	        }

	        if (c === '}') {
	            return [c, 'TK_END_BLOCK'];
	        }

	        if (c === ';') {
	            return [c, 'TK_SEMICOLON'];
	        }

	        if (c === '/') {
	            var comment = '';
	            var comment_match;
	            // peek for comment /* ... */
	            if (input.peek() === '*') {
	                input.next();
	                comment_match = input.match(block_comment_pattern);
	                comment = '/*' + comment_match[0];
	                var directives = get_directives(comment);
	                if (directives && directives.ignore === 'start') {
	                    comment_match = input.match(directives_end_ignore_pattern);
	                    comment += comment_match[0];
	                }
	                comment = comment.replace(acorn.allLineBreaks, '\n');
	                return [comment, 'TK_BLOCK_COMMENT', directives];
	            }
	            // peek for comment // ...
	            if (input.peek() === '/') {
	                input.next();
	                comment_match = input.match(comment_pattern);
	                comment = '//' + comment_match[0];
	                return [comment, 'TK_COMMENT'];
	            }

	        }

	        var startXmlRegExp = /<()([-a-zA-Z:0-9_.]+|{[\s\S]+?}|!\[CDATA\[[\s\S]*?\]\])(\s+{[\s\S]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{[\s\S]+?}))*\s*(\/?)\s*>/g;

	        if (c === '`' || c === "'" || c === '"' || // string
	            (
	                (c === '/') || // regexp
	                (opts.e4x && c === "<" && input.test(startXmlRegExp, -1)) // xml
	            ) && ( // regex and xml can only appear in specific locations during parsing
	                (last_token.type === 'TK_RESERVED' && in_array(last_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||
	                (last_token.type === 'TK_END_EXPR' && last_token.text === ')' &&
	                    last_token.parent && last_token.parent.type === 'TK_RESERVED' && in_array(last_token.parent.text, ['if', 'while', 'for'])) ||
	                (in_array(last_token.type, ['TK_COMMENT', 'TK_START_EXPR', 'TK_START_BLOCK',
	                    'TK_END_BLOCK', 'TK_OPERATOR', 'TK_EQUALS', 'TK_EOF', 'TK_SEMICOLON', 'TK_COMMA'
	                ]))
	            )) {

	            var sep = c,
	                esc = false,
	                has_char_escapes = false;

	            resulting_string = c;

	            if (sep === '/') {
	                //
	                // handle regexp
	                //
	                var in_char_class = false;
	                while (input.hasNext() &&
	                    ((esc || in_char_class || input.peek() !== sep) &&
	                        !input.testChar(acorn.newline))) {
	                    resulting_string += input.peek();
	                    if (!esc) {
	                        esc = input.peek() === '\\';
	                        if (input.peek() === '[') {
	                            in_char_class = true;
	                        } else if (input.peek() === ']') {
	                            in_char_class = false;
	                        }
	                    } else {
	                        esc = false;
	                    }
	                    input.next();
	                }
	            } else if (opts.e4x && sep === '<') {
	                //
	                // handle e4x xml literals
	                //

	                var xmlRegExp = /[\s\S]*?<(\/?)([-a-zA-Z:0-9_.]+|{[\s\S]+?}|!\[CDATA\[[\s\S]*?\]\])(\s+{[\s\S]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{[\s\S]+?}))*\s*(\/?)\s*>/g;
	                input.back();
	                var xmlStr = '';
	                var match = input.match(startXmlRegExp);
	                if (match) {
	                    // Trim root tag to attempt to
	                    var rootTag = match[2].replace(/^{\s+/, '{').replace(/\s+}$/, '}');
	                    var isCurlyRoot = rootTag.indexOf('{') === 0;
	                    var depth = 0;
	                    while (match) {
	                        var isEndTag = !!match[1];
	                        var tagName = match[2];
	                        var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === "![CDATA[");
	                        if (!isSingletonTag &&
	                            (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\s+/, '{').replace(/\s+}$/, '}')))) {
	                            if (isEndTag) {
	                                --depth;
	                            } else {
	                                ++depth;
	                            }
	                        }
	                        xmlStr += match[0];
	                        if (depth <= 0) {
	                            break;
	                        }
	                        match = input.match(xmlRegExp);
	                    }
	                    // if we didn't close correctly, keep unformatted.
	                    if (!match) {
	                        xmlStr += input.match(/[\s\S]*/g)[0];
	                    }
	                    xmlStr = xmlStr.replace(acorn.allLineBreaks, '\n');
	                    return [xmlStr, "TK_STRING"];
	                }
	            } else {
	                //
	                // handle string
	                //
	                var parse_string = function(delimiter, allow_unescaped_newlines, start_sub) {
	                    // Template strings can travers lines without escape characters.
	                    // Other strings cannot
	                    var current_char;
	                    while (input.hasNext()) {
	                        current_char = input.peek();
	                        if (!(esc || (current_char !== delimiter &&
	                                (allow_unescaped_newlines || !acorn.newline.test(current_char))))) {
	                            break;
	                        }

	                        // Handle \r\n linebreaks after escapes or in template strings
	                        if ((esc || allow_unescaped_newlines) && acorn.newline.test(current_char)) {
	                            if (current_char === '\r' && input.peek(1) === '\n') {
	                                input.next();
	                                current_char = input.peek();
	                            }
	                            resulting_string += '\n';
	                        } else {
	                            resulting_string += current_char;
	                        }

	                        if (esc) {
	                            if (current_char === 'x' || current_char === 'u') {
	                                has_char_escapes = true;
	                            }
	                            esc = false;
	                        } else {
	                            esc = current_char === '\\';
	                        }

	                        input.next();

	                        if (start_sub && resulting_string.indexOf(start_sub, resulting_string.length - start_sub.length) !== -1) {
	                            if (delimiter === '`') {
	                                parse_string('}', allow_unescaped_newlines, '`');
	                            } else {
	                                parse_string('`', allow_unescaped_newlines, '${');
	                            }

	                            if (input.hasNext()) {
	                                resulting_string += input.next();
	                            }
	                        }
	                    }
	                };

	                if (sep === '`') {
	                    parse_string('`', true, '${');
	                } else {
	                    parse_string(sep);
	                }
	            }

	            if (has_char_escapes && opts.unescape_strings) {
	                resulting_string = unescape_string(resulting_string);
	            }

	            if (input.peek() === sep) {
	                resulting_string += sep;
	                input.next();

	                if (sep === '/') {
	                    // regexps may have modifiers /regexp/MOD , so fetch those, too
	                    // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.
	                    while (input.hasNext() && acorn.isIdentifierStart(input.peekCharCode())) {
	                        resulting_string += input.next();
	                    }
	                }
	            }
	            return [resulting_string, 'TK_STRING'];
	        }

	        if (c === '#') {

	            if (tokens.length === 0 && input.peek() === '!') {
	                // shebang
	                resulting_string = c;
	                while (input.hasNext() && c !== '\n') {
	                    c = input.next();
	                    resulting_string += c;
	                }
	                return [trim(resulting_string) + '\n', 'TK_UNKNOWN'];
	            }



	            // Spidermonkey-specific sharp variables for circular references
	            // https://developer.mozilla.org/En/Sharp_variables_in_JavaScript
	            // http://mxr.mozilla.org/mozilla-central/source/js/src/jsscan.cpp around line 1935
	            var sharp = '#';
	            if (input.hasNext() && input.testChar(digit)) {
	                do {
	                    c = input.next();
	                    sharp += c;
	                } while (input.hasNext() && c !== '#' && c !== '=');
	                if (c === '#') {
	                    //
	                } else if (input.peek() === '[' && input.peek(1) === ']') {
	                    sharp += '[]';
	                    input.next();
	                    input.next();
	                } else if (input.peek() === '{' && input.peek(1) === '}') {
	                    sharp += '{}';
	                    input.next();
	                    input.next();
	                }
	                return [sharp, 'TK_WORD'];
	            }
	        }

	        if (c === '<' && (input.peek() === '?' || input.peek() === '%')) {
	            input.back();
	            var template_match = input.match(template_pattern);
	            if (template_match) {
	                c = template_match[0];
	                c = c.replace(acorn.allLineBreaks, '\n');
	                return [c, 'TK_STRING'];
	            }
	        }

	        if (c === '<' && input.match(/\!--/g)) {
	            c = '<!--';
	            while (input.hasNext() && !input.testChar(acorn.newline)) {
	                c += input.next();
	            }
	            in_html_comment = true;
	            return [c, 'TK_COMMENT'];
	        }

	        if (c === '-' && in_html_comment && input.match(/->/g)) {
	            in_html_comment = false;
	            return ['-->', 'TK_COMMENT'];
	        }

	        if (c === '.') {
	            if (input.peek() === '.' && input.peek(1) === '.') {
	                c += input.next() + input.next();
	                return [c, 'TK_OPERATOR'];
	            }
	            return [c, 'TK_DOT'];
	        }

	        if (in_array(c, punct)) {
	            while (input.hasNext() && in_array(c + input.peek(), punct)) {
	                c += input.next();
	                if (!input.hasNext()) {
	                    break;
	                }
	            }

	            if (c === ',') {
	                return [c, 'TK_COMMA'];
	            } else if (c === '=') {
	                return [c, 'TK_EQUALS'];
	            } else {
	                return [c, 'TK_OPERATOR'];
	            }
	        }

	        return [c, 'TK_UNKNOWN'];
	    }


	    function unescape_string(s) {
	        // You think that a regex would work for this
	        // return s.replace(/\\x([0-9a-f]{2})/gi, function(match, val) {
	        //         return String.fromCharCode(parseInt(val, 16));
	        //     })
	        // However, dealing with '\xff', '\\xff', '\\\xff' makes this more fun.
	        var out = '',
	            escaped = 0;

	        var input_scan = new InputScanner(s);
	        var matched = null;

	        while (input_scan.hasNext()) {
	            // Keep any whitespace, non-slash characters
	            // also keep slash pairs.
	            matched = input_scan.match(/([\s]|[^\\]|\\\\)+/g);

	            if (matched) {
	                out += matched[0];
	            }

	            if (input_scan.peek() === '\\') {
	                input_scan.next();
	                if (input_scan.peek() === 'x') {
	                    matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);
	                } else if (input_scan.peek() === 'u') {
	                    matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);
	                } else {
	                    out += '\\';
	                    if (input_scan.hasNext()) {
	                        out += input_scan.next();
	                    }
	                    continue;
	                }

	                // If there's some error decoding, return the original string
	                if (!matched) {
	                    return s;
	                }

	                escaped = parseInt(matched[1], 16);

	                if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {
	                    // we bail out on \x7f..\xff,
	                    // leaving whole string escaped,
	                    // as it's probably completely binary
	                    return s;
	                } else if (escaped >= 0x00 && escaped < 0x20) {
	                    // leave 0x00...0x1f escaped
	                    out += '\\' + matched[0];
	                    continue;
	                } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {
	                    // single-quote, apostrophe, backslash - escape these
	                    out += '\\' + String.fromCharCode(escaped);
	                } else {
	                    out += String.fromCharCode(escaped);
	                }
	            }
	        }

	        return out;
	    }
	}

	module.exports.Tokenizer = Tokenizer;

	/***/ })
	/******/ ]);
	var js_beautify = legacy_beautify_js;
	/* Footer */
	if (true) {
	    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
	        return { js_beautify: js_beautify };
	    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof exports !== "undefined") {
	    // Add support for CommonJS. Just put this file somewhere on your require.paths
	    // and you will be able to `var js_beautify = require("beautify").js_beautify`.
	    exports.js_beautify = js_beautify;
	} else if (typeof window !== "undefined") {
	    // If we're running a web page and don't have either of the above, add our one global
	    window.js_beautify = js_beautify;
	} else if (typeof global !== "undefined") {
	    // If we don't even have window, try global.
	    global.js_beautify = js_beautify;
	}

	}());


	/***/ }),
	/* 59 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:false, eqeqeq:true, laxbreak:true, noempty:false */
	/* AUTO-GENERATED. DO NOT MODIFY. */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.


	 CSS Beautifier
	---------------

	    Written by Harutyun Amirjanyan, (amirjanyan@gmail.com)

	    Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>
	        http://jsbeautifier.org/

	    Usage:
	        css_beautify(source_text);
	        css_beautify(source_text, options);

	    The options are (default in brackets):
	        indent_size (4)                         — indentation size,
	        indent_char (space)                     — character to indent with,
	        selector_separator_newline (true)       - separate selectors with newline or
	                                                  not (e.g. "a,\nbr" or "a, br")
	        end_with_newline (false)                - end with a newline
	        newline_between_rules (true)            - add a new line after every css rule
	        space_around_selector_separator (false) - ensure space around selector separators:
	                                                  '>', '+', '~' (e.g. "a>b" -> "a > b")
	    e.g

	    css_beautify(css_source_text, {
	      'indent_size': 1,
	      'indent_char': '\t',
	      'selector_separator': ' ',
	      'end_with_newline': false,
	      'newline_between_rules': true,
	      'space_around_selector_separator': true
	    });
	*/

	// http://www.w3.org/TR/CSS21/syndata.html#tokenization
	// http://www.w3.org/TR/css3-syntax/

	(function() {
	var legacy_beautify_css =
	/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// identity function for calling harmony imports with the correct context
	/******/ 	__webpack_require__.i = function(value) { return value; };
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, {
	/******/ 				configurable: false,
	/******/ 				enumerable: true,
	/******/ 				get: getter
	/******/ 			});
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 4);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports, __webpack_require__) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.
	*/

	var mergeOpts = __webpack_require__(2).mergeOpts;
	var acorn = __webpack_require__(1);
	var Output = __webpack_require__(3).Output;


	var lineBreak = acorn.lineBreak;
	var allLineBreaks = acorn.allLineBreaks;

	function Beautifier(source_text, options) {
	    options = options || {};

	    // Allow the setting of language/file-type specific options
	    // with inheritance of overall settings
	    options = mergeOpts(options, 'css');

	    source_text = source_text || '';

	    var newlinesFromLastWSEat = 0;
	    var indentSize = options.indent_size ? parseInt(options.indent_size, 10) : 4;
	    var indentCharacter = options.indent_char || ' ';
	    var preserve_newlines = (options.preserve_newlines === undefined) ? false : options.preserve_newlines;
	    var selectorSeparatorNewline = (options.selector_separator_newline === undefined) ? true : options.selector_separator_newline;
	    var end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;
	    var newline_between_rules = (options.newline_between_rules === undefined) ? true : options.newline_between_rules;
	    var space_around_combinator = (options.space_around_combinator === undefined) ? false : options.space_around_combinator;
	    space_around_combinator = space_around_combinator || ((options.space_around_selector_separator === undefined) ? false : options.space_around_selector_separator);
	    var eol = options.eol ? options.eol : 'auto';

	    if (options.indent_with_tabs) {
	        indentCharacter = '\t';
	        indentSize = 1;
	    }

	    if (eol === 'auto') {
	        eol = '\n';
	        if (source_text && lineBreak.test(source_text || '')) {
	            eol = source_text.match(lineBreak)[0];
	        }
	    }

	    eol = eol.replace(/\\r/, '\r').replace(/\\n/, '\n');

	    // HACK: newline parsing inconsistent. This brute force normalizes the input.
	    source_text = source_text.replace(allLineBreaks, '\n');

	    // tokenizer
	    var whiteRe = /^\s+$/;

	    var pos = -1,
	        ch;
	    var parenLevel = 0;

	    function next() {
	        ch = source_text.charAt(++pos);
	        return ch || '';
	    }

	    function peek(skipWhitespace) {
	        var result = '';
	        var prev_pos = pos;
	        if (skipWhitespace) {
	            eatWhitespace();
	        }
	        result = source_text.charAt(pos + 1) || '';
	        pos = prev_pos - 1;
	        next();
	        return result;
	    }

	    function eatString(endChars) {
	        var start = pos;
	        while (next()) {
	            if (ch === "\\") {
	                next();
	            } else if (endChars.indexOf(ch) !== -1) {
	                break;
	            } else if (ch === "\n") {
	                break;
	            }
	        }
	        return source_text.substring(start, pos + 1);
	    }

	    function peekString(endChar) {
	        var prev_pos = pos;
	        var str = eatString(endChar);
	        pos = prev_pos - 1;
	        next();
	        return str;
	    }

	    function eatWhitespace(preserve_newlines_local) {
	        var result = 0;
	        while (whiteRe.test(peek())) {
	            next();
	            if (ch === '\n' && preserve_newlines_local && preserve_newlines) {
	                output.add_new_line(true);
	                result++;
	            }
	        }
	        newlinesFromLastWSEat = result;
	        return result;
	    }

	    function skipWhitespace() {
	        var result = '';
	        if (ch && whiteRe.test(ch)) {
	            result = ch;
	        }
	        while (whiteRe.test(next())) {
	            result += ch;
	        }
	        return result;
	    }

	    function eatComment() {
	        var start = pos;
	        var singleLine = peek() === "/";
	        next();
	        while (next()) {
	            if (!singleLine && ch === "*" && peek() === "/") {
	                next();
	                break;
	            } else if (singleLine && ch === "\n") {
	                return source_text.substring(start, pos);
	            }
	        }

	        return source_text.substring(start, pos) + ch;
	    }


	    function lookBack(str) {
	        return source_text.substring(pos - str.length, pos).toLowerCase() ===
	            str;
	    }

	    // Nested pseudo-class if we are insideRule
	    // and the next special character found opens
	    // a new block
	    function foundNestedPseudoClass() {
	        var openParen = 0;
	        for (var i = pos + 1; i < source_text.length; i++) {
	            var ch = source_text.charAt(i);
	            if (ch === "{") {
	                return true;
	            } else if (ch === '(') {
	                // pseudoclasses can contain ()
	                openParen += 1;
	            } else if (ch === ')') {
	                if (openParen === 0) {
	                    return false;
	                }
	                openParen -= 1;
	            } else if (ch === ";" || ch === "}") {
	                return false;
	            }
	        }
	        return false;
	    }

	    // printer
	    var baseIndentString = '';
	    var preindent_index = 0;
	    if (source_text && source_text.length) {
	        while ((source_text.charAt(preindent_index) === ' ' ||
	                source_text.charAt(preindent_index) === '\t')) {
	            preindent_index += 1;
	        }
	        baseIndentString = source_text.substring(0, preindent_index);
	        source_text = source_text.substring(preindent_index);
	    }


	    var singleIndent = new Array(indentSize + 1).join(indentCharacter);
	    var indentLevel;
	    var nestedLevel;
	    var output;

	    function print_string(output_string) {
	        if (output.just_added_newline()) {
	            output.set_indent(indentLevel);
	        }
	        output.add_token(output_string);
	    }

	    function preserveSingleSpace(isAfterSpace) {
	        if (isAfterSpace) {
	            output.space_before_token = true;
	        }
	    }

	    function indent() {
	        indentLevel++;
	    }

	    function outdent() {
	        if (indentLevel > 0) {
	            indentLevel--;
	        }
	    }

	    /*_____________________--------------------_____________________*/

	    this.beautify = function() {
	        // reset
	        output = new Output(singleIndent, baseIndentString);
	        indentLevel = 0;
	        nestedLevel = 0;

	        pos = -1;
	        ch = null;
	        parenLevel = 0;

	        var insideRule = false;
	        var insidePropertyValue = false;
	        var enteringConditionalGroup = false;
	        var top_ch = '';
	        var last_top_ch = '';

	        while (true) {
	            var whitespace = skipWhitespace();
	            var isAfterSpace = whitespace !== '';
	            var isAfterNewline = whitespace.indexOf('\n') !== -1;
	            last_top_ch = top_ch;
	            top_ch = ch;

	            if (!ch) {
	                break;
	            } else if (ch === '/' && peek() === '*') { /* css comment */
	                var header = indentLevel === 0;

	                if (isAfterNewline || header) {
	                    output.add_new_line();
	                }

	                print_string(eatComment());
	                output.add_new_line();
	                if (header) {
	                    output.add_new_line(true);
	                }
	            } else if (ch === '/' && peek() === '/') { // single line comment
	                if (!isAfterNewline && last_top_ch !== '{') {
	                    output.trim(true);
	                }
	                output.space_before_token = true;
	                print_string(eatComment());
	                output.add_new_line();
	            } else if (ch === '@') {
	                preserveSingleSpace(isAfterSpace);

	                // deal with less propery mixins @{...}
	                if (peek() === '{') {
	                    print_string(eatString('}'));
	                } else {
	                    print_string(ch);

	                    // strip trailing space, if present, for hash property checks
	                    var variableOrRule = peekString(": ,;{}()[]/='\"");

	                    if (variableOrRule.match(/[ :]$/)) {
	                        // we have a variable or pseudo-class, add it and insert one space before continuing
	                        next();
	                        variableOrRule = eatString(": ").replace(/\s$/, '');
	                        print_string(variableOrRule);
	                        output.space_before_token = true;
	                    }

	                    variableOrRule = variableOrRule.replace(/\s$/, '');

	                    // might be a nesting at-rule
	                    if (variableOrRule in this.NESTED_AT_RULE) {
	                        nestedLevel += 1;
	                        if (variableOrRule in this.CONDITIONAL_GROUP_RULE) {
	                            enteringConditionalGroup = true;
	                        }
	                    }
	                }
	            } else if (ch === '#' && peek() === '{') {
	                preserveSingleSpace(isAfterSpace);
	                print_string(eatString('}'));
	            } else if (ch === '{') {
	                if (peek(true) === '}') {
	                    eatWhitespace();
	                    next();
	                    output.space_before_token = true;
	                    print_string("{}");
	                    if (!eatWhitespace(true)) {
	                        output.add_new_line();
	                    }

	                    if (newlinesFromLastWSEat < 2 && newline_between_rules && indentLevel === 0) {
	                        output.add_new_line(true);
	                    }
	                } else {
	                    indent();
	                    output.space_before_token = true;
	                    print_string(ch);
	                    if (!eatWhitespace(true)) {
	                        output.add_new_line();
	                    }

	                    // when entering conditional groups, only rulesets are allowed
	                    if (enteringConditionalGroup) {
	                        enteringConditionalGroup = false;
	                        insideRule = (indentLevel > nestedLevel);
	                    } else {
	                        // otherwise, declarations are also allowed
	                        insideRule = (indentLevel >= nestedLevel);
	                    }
	                }
	            } else if (ch === '}') {
	                outdent();
	                output.add_new_line();
	                print_string(ch);
	                insideRule = false;
	                insidePropertyValue = false;
	                if (nestedLevel) {
	                    nestedLevel--;
	                }

	                if (!eatWhitespace(true)) {
	                    output.add_new_line();
	                }

	                if (newlinesFromLastWSEat < 2 && newline_between_rules && indentLevel === 0) {
	                    output.add_new_line(true);
	                }
	            } else if (ch === ":") {
	                eatWhitespace();
	                if ((insideRule || enteringConditionalGroup) &&
	                    !(lookBack("&") || foundNestedPseudoClass()) &&
	                    !lookBack("(")) {
	                    // 'property: value' delimiter
	                    // which could be in a conditional group query
	                    print_string(':');
	                    if (!insidePropertyValue) {
	                        insidePropertyValue = true;
	                        output.space_before_token = true;
	                    }
	                } else {
	                    // sass/less parent reference don't use a space
	                    // sass nested pseudo-class don't use a space

	                    // preserve space before pseudoclasses/pseudoelements, as it means "in any child"
	                    if (lookBack(" ")) {
	                        output.space_before_token = true;
	                    }
	                    if (peek() === ":") {
	                        // pseudo-element
	                        next();
	                        print_string("::");
	                    } else {
	                        // pseudo-class
	                        print_string(':');
	                    }
	                }
	            } else if (ch === '"' || ch === '\'') {
	                preserveSingleSpace(isAfterSpace);
	                print_string(eatString(ch));
	            } else if (ch === ';') {
	                insidePropertyValue = false;
	                print_string(ch);
	                if (!eatWhitespace(true)) {
	                    output.add_new_line();
	                }
	            } else if (ch === '(') { // may be a url
	                if (lookBack("url")) {
	                    print_string(ch);
	                    eatWhitespace();
	                    if (next()) {
	                        if (ch !== ')' && ch !== '"' && ch !== '\'') {
	                            print_string(eatString(')'));
	                        } else {
	                            pos--;
	                        }
	                    }
	                } else {
	                    parenLevel++;
	                    preserveSingleSpace(isAfterSpace);
	                    print_string(ch);
	                    eatWhitespace();
	                }
	            } else if (ch === ')') {
	                print_string(ch);
	                parenLevel--;
	            } else if (ch === ',') {
	                print_string(ch);
	                if (!eatWhitespace(true) && selectorSeparatorNewline && !insidePropertyValue && parenLevel < 1) {
	                    output.add_new_line();
	                } else {
	                    output.space_before_token = true;
	                }
	            } else if ((ch === '>' || ch === '+' || ch === '~') &&
	                !insidePropertyValue && parenLevel < 1) {
	                //handle combinator spacing
	                if (space_around_combinator) {
	                    output.space_before_token = true;
	                    print_string(ch);
	                    output.space_before_token = true;
	                } else {
	                    print_string(ch);
	                    eatWhitespace();
	                    // squash extra whitespace
	                    if (ch && whiteRe.test(ch)) {
	                        ch = '';
	                    }
	                }
	            } else if (ch === ']') {
	                print_string(ch);
	            } else if (ch === '[') {
	                preserveSingleSpace(isAfterSpace);
	                print_string(ch);
	            } else if (ch === '=') { // no whitespace before or after
	                eatWhitespace();
	                print_string('=');
	                if (whiteRe.test(ch)) {
	                    ch = '';
	                }
	            } else if (ch === '!') { // !important
	                print_string(' ');
	                print_string(ch);
	            } else {
	                preserveSingleSpace(isAfterSpace);
	                print_string(ch);
	            }
	        }

	        var sweetCode = output.get_code(end_with_newline, eol);

	        return sweetCode;
	    };

	    // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule
	    this.NESTED_AT_RULE = {
	        "@page": true,
	        "@font-face": true,
	        "@keyframes": true,
	        // also in CONDITIONAL_GROUP_RULE below
	        "@media": true,
	        "@supports": true,
	        "@document": true
	    };
	    this.CONDITIONAL_GROUP_RULE = {
	        "@media": true,
	        "@supports": true,
	        "@document": true
	    };
	}

	module.exports.Beautifier = Beautifier;


	/***/ }),
	/* 1 */
	/***/ (function(module, exports) {

	/* jshint curly: false */
	// This section of code is taken from acorn.
	//
	// Acorn was written by Marijn Haverbeke and released under an MIT
	// license. The Unicode regexps (for identifiers and whitespace) were
	// taken from [Esprima](http://esprima.org) by Ariya Hidayat.
	//
	// Git repositories for Acorn are available at
	//
	//     http://marijnhaverbeke.nl/git/acorn
	//     https://github.com/marijnh/acorn.git

	// ## Character categories

	// Big ugly regular expressions that match characters in the
	// whitespace, identifier, and identifier-start categories. These
	// are only applied when a character is found to actually have a
	// code point above 128.

	var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/; // jshint ignore:line
	var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
	var nonASCIIidentifierChars = "\u0300-\u036f\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u0620-\u0649\u0672-\u06d3\u06e7-\u06e8\u06fb-\u06fc\u0730-\u074a\u0800-\u0814\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0840-\u0857\u08e4-\u08fe\u0900-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962-\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09d7\u09df-\u09e0\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5f-\u0b60\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62-\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2-\u0ce3\u0ce6-\u0cef\u0d02\u0d03\u0d46-\u0d48\u0d57\u0d62-\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e34-\u0e3a\u0e40-\u0e45\u0e50-\u0e59\u0eb4-\u0eb9\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f41-\u0f47\u0f71-\u0f84\u0f86-\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1029\u1040-\u1049\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u170e-\u1710\u1720-\u1730\u1740-\u1750\u1772\u1773\u1780-\u17b2\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1920-\u192b\u1930-\u193b\u1951-\u196d\u19b0-\u19c0\u19c8-\u19c9\u19d0-\u19d9\u1a00-\u1a15\u1a20-\u1a53\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1b46-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1bb0-\u1bb9\u1be6-\u1bf3\u1c00-\u1c22\u1c40-\u1c49\u1c5b-\u1c7d\u1cd0-\u1cd2\u1d00-\u1dbe\u1e01-\u1f15\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2d81-\u2d96\u2de0-\u2dff\u3021-\u3028\u3099\u309a\ua640-\ua66d\ua674-\ua67d\ua69f\ua6f0-\ua6f1\ua7f8-\ua800\ua806\ua80b\ua823-\ua827\ua880-\ua881\ua8b4-\ua8c4\ua8d0-\ua8d9\ua8f3-\ua8f7\ua900-\ua909\ua926-\ua92d\ua930-\ua945\ua980-\ua983\ua9b3-\ua9c0\uaa00-\uaa27\uaa40-\uaa41\uaa4c-\uaa4d\uaa50-\uaa59\uaa7b\uaae0-\uaae9\uaaf2-\uaaf3\uabc0-\uabe1\uabec\uabed\uabf0-\uabf9\ufb20-\ufb28\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";
	var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
	var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

	// Whether a single character denotes a newline.

	exports.newline = /[\n\r\u2028\u2029]/;

	// Matches a whole line break (where CRLF is considered a single
	// line break). Used to count lines.

	// in javascript, these two differ
	// in python they are the same, different methods are called on them
	exports.lineBreak = new RegExp('\r\n|' + exports.newline.source);
	exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');


	// Test whether a given character code starts an identifier.

	exports.isIdentifierStart = function(code) {
	    // permit $ (36) and @ (64). @ is used in ES7 decorators.
	    if (code < 65) return code === 36 || code === 64;
	    // 65 through 91 are uppercase letters.
	    if (code < 91) return true;
	    // permit _ (95).
	    if (code < 97) return code === 95;
	    // 97 through 123 are lowercase letters.
	    if (code < 123) return true;
	    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
	};

	// Test whether a given character is part of an identifier.

	exports.isIdentifierChar = function(code) {
	    if (code < 48) return code === 36;
	    if (code < 58) return true;
	    if (code < 65) return false;
	    if (code < 91) return true;
	    if (code < 97) return code === 95;
	    if (code < 123) return true;
	    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
	};


	/***/ }),
	/* 2 */
	/***/ (function(module, exports) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	function mergeOpts(allOptions, targetType) {
	    var finalOpts = {};
	    var name;

	    for (name in allOptions) {
	        if (name !== targetType) {
	            finalOpts[name] = allOptions[name];
	        }
	    }

	    //merge in the per type settings for the targetType
	    if (targetType in allOptions) {
	        for (name in allOptions[targetType]) {
	            finalOpts[name] = allOptions[targetType][name];
	        }
	    }
	    return finalOpts;
	}

	module.exports.mergeOpts = mergeOpts;


	/***/ }),
	/* 3 */
	/***/ (function(module, exports) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.
	*/

	function OutputLine(parent) {
	    var _character_count = 0;
	    // use indent_count as a marker for lines that have preserved indentation
	    var _indent_count = -1;

	    var _items = [];
	    var _empty = true;

	    this.set_indent = function(level) {
	        _character_count = parent.baseIndentLength + level * parent.indent_length;
	        _indent_count = level;
	    };

	    this.get_character_count = function() {
	        return _character_count;
	    };

	    this.is_empty = function() {
	        return _empty;
	    };

	    this.last = function() {
	        if (!this._empty) {
	            return _items[_items.length - 1];
	        } else {
	            return null;
	        }
	    };

	    this.push = function(input) {
	        _items.push(input);
	        _character_count += input.length;
	        _empty = false;
	    };

	    this.pop = function() {
	        var item = null;
	        if (!_empty) {
	            item = _items.pop();
	            _character_count -= item.length;
	            _empty = _items.length === 0;
	        }
	        return item;
	    };

	    this.remove_indent = function() {
	        if (_indent_count > 0) {
	            _indent_count -= 1;
	            _character_count -= parent.indent_length;
	        }
	    };

	    this.trim = function() {
	        while (this.last() === ' ') {
	            _items.pop();
	            _character_count -= 1;
	        }
	        _empty = _items.length === 0;
	    };

	    this.toString = function() {
	        var result = '';
	        if (!this._empty) {
	            if (_indent_count >= 0) {
	                result = parent.indent_cache[_indent_count];
	            }
	            result += _items.join('');
	        }
	        return result;
	    };
	}

	function Output(indent_string, baseIndentString) {
	    baseIndentString = baseIndentString || '';
	    this.indent_cache = [baseIndentString];
	    this.baseIndentLength = baseIndentString.length;
	    this.indent_length = indent_string.length;
	    this.raw = false;

	    var lines = [];
	    this.baseIndentString = baseIndentString;
	    this.indent_string = indent_string;
	    this.previous_line = null;
	    this.current_line = null;
	    this.space_before_token = false;

	    this.add_outputline = function() {
	        this.previous_line = this.current_line;
	        this.current_line = new OutputLine(this);
	        lines.push(this.current_line);
	    };

	    // initialize
	    this.add_outputline();


	    this.get_line_number = function() {
	        return lines.length;
	    };

	    // Using object instead of string to allow for later expansion of info about each line
	    this.add_new_line = function(force_newline) {
	        if (this.get_line_number() === 1 && this.just_added_newline()) {
	            return false; // no newline on start of file
	        }

	        if (force_newline || !this.just_added_newline()) {
	            if (!this.raw) {
	                this.add_outputline();
	            }
	            return true;
	        }

	        return false;
	    };

	    this.get_code = function(end_with_newline, eol) {
	        var sweet_code = lines.join('\n').replace(/[\r\n\t ]+$/, '');

	        if (end_with_newline) {
	            sweet_code += '\n';
	        }

	        if (eol !== '\n') {
	            sweet_code = sweet_code.replace(/[\n]/g, eol);
	        }

	        return sweet_code;
	    };

	    this.set_indent = function(level) {
	        // Never indent your first output indent at the start of the file
	        if (lines.length > 1) {
	            while (level >= this.indent_cache.length) {
	                this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);
	            }

	            this.current_line.set_indent(level);
	            return true;
	        }
	        this.current_line.set_indent(0);
	        return false;
	    };

	    this.add_raw_token = function(token) {
	        for (var x = 0; x < token.newlines; x++) {
	            this.add_outputline();
	        }
	        this.current_line.push(token.whitespace_before);
	        this.current_line.push(token.text);
	        this.space_before_token = false;
	    };

	    this.add_token = function(printable_token) {
	        this.add_space_before_token();
	        this.current_line.push(printable_token);
	    };

	    this.add_space_before_token = function() {
	        if (this.space_before_token && !this.just_added_newline()) {
	            this.current_line.push(' ');
	        }
	        this.space_before_token = false;
	    };

	    this.remove_indent = function(index) {
	        var output_length = lines.length;
	        while (index < output_length) {
	            lines[index].remove_indent();
	            index++;
	        }
	    };

	    this.trim = function(eat_newlines) {
	        eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;

	        this.current_line.trim(indent_string, baseIndentString);

	        while (eat_newlines && lines.length > 1 &&
	            this.current_line.is_empty()) {
	            lines.pop();
	            this.current_line = lines[lines.length - 1];
	            this.current_line.trim();
	        }

	        this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;
	    };

	    this.just_added_newline = function() {
	        return this.current_line.is_empty();
	    };

	    this.just_added_blankline = function() {
	        if (this.just_added_newline()) {
	            if (lines.length === 1) {
	                return true; // start of the file and newline = blank
	            }

	            var line = lines[lines.length - 2];
	            return line.is_empty();
	        }
	        return false;
	    };
	}

	module.exports.Output = Output;


	/***/ }),
	/* 4 */
	/***/ (function(module, exports, __webpack_require__) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	var Beautifier = __webpack_require__(0).Beautifier;

	function css_beautify(source_text, options) {
	    var beautifier = new Beautifier(source_text, options);
	    return beautifier.beautify();
	}

	module.exports = css_beautify;

	/***/ })
	/******/ ]);
	var css_beautify = legacy_beautify_css;
	/* Footer */
	if (true) {
	    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
	        return {
	            css_beautify: css_beautify
	        };
	    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof exports !== "undefined") {
	    // Add support for CommonJS. Just put this file somewhere on your require.paths
	    // and you will be able to `var html_beautify = require("beautify").html_beautify`.
	    exports.css_beautify = css_beautify;
	} else if (typeof window !== "undefined") {
	    // If we're running a web page and don't have either of the above, add our one global
	    window.css_beautify = css_beautify;
	} else if (typeof global !== "undefined") {
	    // If we don't even have window, try global.
	    global.css_beautify = css_beautify;
	}

	}());


	/***/ }),
	/* 60 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(17) && !__webpack_require__(22)(function () {
	  return Object.defineProperty(__webpack_require__(40)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


	/***/ }),
	/* 61 */
	/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(18);
	var toIObject = __webpack_require__(19);
	var arrayIndexOf = __webpack_require__(87)(false);
	var IE_PROTO = __webpack_require__(44)('IE_PROTO');

	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


	/***/ }),
	/* 62 */
	/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(29);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


	/***/ }),
	/* 63 */
	/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(43);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


	/***/ }),
	/* 64 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(18);
	var toObject = __webpack_require__(33);
	var IE_PROTO = __webpack_require__(44)('IE_PROTO');
	var ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


	/***/ }),
	/* 65 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(92), __esModule: true };

	/***/ }),
	/* 66 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var LIBRARY = __webpack_require__(30);
	var $export = __webpack_require__(10);
	var redefine = __webpack_require__(67);
	var hide = __webpack_require__(20);
	var Iterators = __webpack_require__(26);
	var $iterCreate = __webpack_require__(97);
	var setToStringTag = __webpack_require__(50);
	var getPrototypeOf = __webpack_require__(64);
	var ITERATOR = __webpack_require__(12)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';

	var returnThis = function () { return this; };

	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = $native || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


	/***/ }),
	/* 67 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(20);


	/***/ }),
	/* 68 */
	/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(11).document;
	module.exports = document && document.documentElement;


	/***/ }),
	/* 69 */
	/***/ (function(module, exports, __webpack_require__) {

	var META = __webpack_require__(31)('meta');
	var isObject = __webpack_require__(16);
	var has = __webpack_require__(18);
	var setDesc = __webpack_require__(15).f;
	var id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(22)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function (it) {
	  setDesc(it, META, { value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  } });
	};
	var fastKey = function (it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function (it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};


	/***/ }),
	/* 70 */
	/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(19);
	var gOPN = __webpack_require__(71).f;
	var toString = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function (it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


	/***/ }),
	/* 71 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(61);
	var hiddenKeys = __webpack_require__(46).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};


	/***/ }),
	/* 72 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(114), __esModule: true };

	/***/ }),
	/* 73 */
	/***/ (function(module, exports) {

	var g;

	// This works in non-strict mode
	g = (function() {
		return this;
	})();

	try {
		// This works if eval is allowed (see CSP)
		g = g || Function("return this")() || (1,eval)("this");
	} catch(e) {
		// This works if the window reference is available
		if(typeof window === "object")
			g = window;
	}

	// g can still be undefined, but nothing to do about it...
	// We return undefined, instead of nothing here, so it's
	// easier to handle this case. if(!global) { ...}

	module.exports = g;


	/***/ }),
	/* 74 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray2 = __webpack_require__(75);

	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

	var _stringify = __webpack_require__(78);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _stringifyWorker = __webpack_require__(162);

	var _stringifyWorker2 = _interopRequireDefault(_stringifyWorker);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var isWorkerSupported = !!window.Worker;

	var callbacks = {},
	    worker = void 0;

	if (isWorkerSupported) {
	  (0, _util.tryIt)(function () {
	    /* Some browsers like uc mobile doesn't destroy worker properly after refreshing.
	         * After a few times of visiting, it reaches the maximum number of workers per site. 
	         */
	    worker = new _stringifyWorker2.default();
	    worker.onmessage = function (e) {
	      var _e$data = (0, _slicedToArray3.default)(e.data, 2),
	          id = _e$data[0],
	          result = _e$data[1];

	      if (callbacks[id]) {
	        callbacks[id](result);
	        delete callbacks[id];
	      }
	    };
	  });
	}

	function _exports(obj, options, cb) {
	  var useWorker = _exports.useWorker && isWorkerSupported && worker;

	  if (useWorker) {
	    var id = (0, _util.uniqId)('stringifyWorker');
	    callbacks[id] = cb;
	    // Some native object can't be cloned, such as window.location.
	    try {
	      worker.postMessage([id, obj, options]);
	      return;
	    } catch (e) {
	      delete callbacks[id];
	    }
	  }

	  var result = (0, _stringify2.default)(obj, options);
	  (0, _util.nextTick)(function () {
	    return cb(result);
	  });
	}

	_exports.useWorker = false;

	exports.default = _exports;

	/***/ }),
	/* 75 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	exports.__esModule = true;

	var _isIterable2 = __webpack_require__(155);

	var _isIterable3 = _interopRequireDefault(_isIterable2);

	var _getIterator2 = __webpack_require__(77);

	var _getIterator3 = _interopRequireDefault(_getIterator2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];
	    var _n = true;
	    var _d = false;
	    var _e = undefined;

	    try {
	      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);

	        if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;
	      _e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }

	    return _arr;
	  }

	  return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if ((0, _isIterable3.default)(Object(arr))) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

	/***/ }),
	/* 76 */
	/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(29);
	var TAG = __webpack_require__(12)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};

	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


	/***/ }),
	/* 77 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(158), __esModule: true };

	/***/ }),
	/* 78 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _keys = __webpack_require__(36);

	var _keys2 = _interopRequireDefault(_keys);

	var _getOwnPropertyNames = __webpack_require__(55);

	var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

	var _getOwnPropertyDescriptor = __webpack_require__(35);

	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	exports.default = stringify;

	var _stringifyUtil = __webpack_require__(161);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Modified from: https://jsconsole.com/
	function stringify(obj) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$visitor = _ref.visitor,
	      visitor = _ref$visitor === undefined ? new Visitor() : _ref$visitor,
	      topObj = _ref.topObj,
	      _ref$level = _ref.level,
	      level = _ref$level === undefined ? 0 : _ref$level,
	      _ref$circularMarker = _ref.circularMarker,
	      circularMarker = _ref$circularMarker === undefined ? false : _ref$circularMarker,
	      _ref$getterVal = _ref.getterVal,
	      getterVal = _ref$getterVal === undefined ? false : _ref$getterVal,
	      _ref$unenumerable = _ref.unenumerable,
	      unenumerable = _ref$unenumerable === undefined ? true : _ref$unenumerable;

	  var json = '',
	      type = void 0,
	      parts = [],
	      names = [],
	      proto = void 0,
	      objAbstract = void 0,
	      circularObj = void 0,
	      allKeys = void 0,
	      keys = void 0,
	      id = '';

	  topObj = topObj || obj;

	  var passOpts = { visitor: visitor, getterVal: getterVal, unenumerable: unenumerable, level: level + 1 },
	      passProtoOpts = {
	    visitor: visitor,
	    getterVal: getterVal,
	    topObj: topObj,
	    unenumerable: unenumerable,
	    level: level + 1
	  };

	  var wrapKey = function wrapKey(key) {
	    return '"' + (0, _stringifyUtil.escapeJsonStr)(key) + '"';
	  },
	      wrapStr = function wrapStr(str) {
	    return '"' + (0, _stringifyUtil.escapeJsonStr)((0, _stringifyUtil.toStr)(str)) + '"';
	  };

	  type = getType(obj);

	  var isFn = type == '[object Function]',
	      isStr = type == '[object String]',
	      isArr = type == '[object Array]',
	      isObj = type == '[object Object]',
	      isNum = type == '[object Number]',
	      isSymbol = type == '[object Symbol]',
	      isBool = type == '[object Boolean]';

	  circularObj = visitor.check(obj);

	  if (circularObj) {
	    json = stringify(circularObj.abstract, { circularMarker: true });
	  } else if (isStr) {
	    json = wrapStr(obj);
	  } else if (isArr || isObj || isFn) {
	    id = visitor.visit(obj);

	    if (canBeProto(obj)) {
	      obj = (0, _getPrototypeOf2.default)(obj);
	      id = visitor.visit(obj);
	    }

	    names = getKeys(obj);
	    keys = names.keys;
	    allKeys = names.allKeys;
	    names = unenumerable ? allKeys : keys;

	    proto = (0, _getPrototypeOf2.default)(obj);
	    if (circularMarker && proto === Object.prototype) proto = null;
	    if (proto) {
	      proto = wrapKey('erudaProto') + ': ' + stringify(proto, passProtoOpts);
	    }
	    if (isFn) {
	      // We don't need these properties to display for functions.
	      names = names.filter(function (val) {
	        return ['arguments', 'caller'].indexOf(val) < 0;
	      });
	    }
	    json = '{ ';
	    objAbstract = getObjAbstract(obj);
	    visitor.updateAbstract(id, {
	      erudaObjAbstract: objAbstract,
	      erudaCircular: id
	    });
	    parts.push(wrapKey('erudaObjAbstract') + ': ' + wrapStr(objAbstract));
	    if (!circularMarker) parts.push('"erudaId": "' + id + '"');
	    (0, _stringifyUtil.each)(names, objIteratee);
	    if (proto) parts.push(proto);
	    json += parts.join(', ') + ' }';
	  } else if (isNum) {
	    json = obj + '';
	    if ((0, _stringifyUtil.endWith)(json, 'Infinity') || json === 'NaN') json = '"' + json + '"';
	  } else if (isBool) {
	    json = obj ? 'true' : 'false';
	  } else if (obj === null) {
	    json = 'null';
	  } else if (isSymbol) {
	    json = wrapStr('Symbol');
	  } else if (obj === undefined) {
	    json = wrapStr('undefined');
	  } else if (type === '[object HTMLAllCollection]') {
	    // https://docs.webplatform.org/wiki/dom/HTMLAllCollection
	    // Might cause a performance issue when stringify a dom element.
	    json = wrapStr('[object HTMLAllCollection]');
	  } else if (type === '[object HTMLDocument]' && level > 1) {
	    // Same as reason above.
	    json = wrapStr('[object HTMLDocument]');
	  } else {
	    try {
	      id = visitor.visit(obj);
	      if (canBeProto(obj)) {
	        obj = (0, _getPrototypeOf2.default)(obj);
	        id = visitor.visit(obj);
	      }

	      json = '{ ';
	      objAbstract = getObjAbstract(obj);
	      visitor.updateAbstract(id, {
	        erudaObjAbstract: objAbstract,
	        erudaCircular: id
	      });
	      parts.push(wrapKey('erudaObjAbstract') + ': ' + wrapStr(objAbstract));
	      if (!circularMarker) parts.push('"erudaId": "' + id + '"');

	      names = getKeys(obj);
	      keys = names.keys;
	      allKeys = names.allKeys;
	      names = unenumerable ? allKeys : keys;

	      proto = (0, _getPrototypeOf2.default)(obj);
	      if (circularMarker && proto === Object.prototype) proto = null;
	      if (proto) {
	        try {
	          proto = wrapKey('erudaProto') + ': ' + stringify(proto, passProtoOpts);
	        } catch (e) {
	          proto = wrapKey('erudaProto') + ': ' + wrapStr(e.message);
	        }
	      }
	      (0, _stringifyUtil.each)(names, objIteratee);
	      if (proto) parts.push(proto);
	      json += parts.join(', ') + ' }';
	    } catch (e) {
	      json = wrapStr(obj);
	    }
	  }

	  function objIteratee(name) {
	    var unenumerable = !(0, _stringifyUtil.contain)(keys, name) ? 'erudaUnenumerable ' : '',
	        key = wrapKey(unenumerable + name),
	        getKey = wrapKey(unenumerable + 'get ' + name),
	        setKey = wrapKey(unenumerable + 'set ' + name);

	    var descriptor = (0, _getOwnPropertyDescriptor2.default)(obj, name),
	        hasGetter = descriptor && descriptor.get,
	        hasSetter = descriptor && descriptor.set;

	    if (!getterVal && hasGetter) {
	      parts.push(key + ': "(...)"');
	      parts.push(getKey + ': ' + stringify(descriptor.get, passOpts));
	    } else {
	      var val = void 0;
	      try {
	        val = topObj[name];
	      } catch (e) {
	        val = e.message;
	      }
	      parts.push(key + ': ' + stringify(val, passOpts));
	    }
	    if (hasSetter) {
	      parts.push(setKey + ': ' + stringify(descriptor.set, passOpts));
	    }
	  }

	  return json;
	}

	function getKeys(obj) {
	  var allKeys = (0, _getOwnPropertyNames2.default)(obj),
	      keys = (0, _keys2.default)(obj).sort(sortObjName);

	  allKeys = keys.concat((0, _stringifyUtil.filter)(allKeys, function (val) {
	    return !(0, _stringifyUtil.contain)(keys, val);
	  }).sort(sortObjName));

	  return { keys: keys, allKeys: allKeys };
	}

	// $, upperCase, lowerCase, _
	function sortObjName(a, b) {
	  var lenA = a.length,
	      lenB = b.length,
	      len = lenA > lenB ? lenB : lenA;

	  for (var i = 0; i < len; i++) {
	    var codeA = a.charCodeAt(i),
	        codeB = b.charCodeAt(i),
	        cmpResult = cmpCode(codeA, codeB);

	    if (cmpResult !== 0) return cmpResult;
	  }

	  if (lenA > lenB) return 1;
	  if (lenA < lenB) return -1;

	  return 0;
	}

	function cmpCode(a, b) {
	  a = transCode(a);
	  b = transCode(b);

	  if (a > b) return 1;
	  if (a < b) return -1;
	  return 0;
	}

	function transCode(code) {
	  // _ should be placed after lowercase chars.
	  if (code === 95) return 123;
	  return code;
	}

	var regFnHead = /function(.*?)\((.*?)\)/;

	function extractFnHead(fn) {
	  var str = fn.toString(),
	      fnHead = str.match(regFnHead);

	  if (fnHead) return fnHead[0];

	  return str;
	}

	function getFnAbstract(fn) {
	  var fnStr = fn.toString();
	  if (fnStr.length > 500) fnStr = fnStr.slice(0, 500) + '...';

	  return extractFnHead(fnStr).replace('function', '');
	}

	function canBeProto(obj) {
	  var emptyObj = (0, _stringifyUtil.isEmpty)((0, _getOwnPropertyNames2.default)(obj)),
	      proto = (0, _getPrototypeOf2.default)(obj);

	  return emptyObj && proto && proto !== Object.prototype;
	}

	function getObjAbstract(obj) {
	  if ((0, _stringifyUtil.isArr)(obj)) return 'Array(' + obj.length + ')';
	  if ((0, _stringifyUtil.isFn)(obj)) return getFnAbstract(obj);
	  if ((0, _stringifyUtil.isRegExp)(obj)) return obj.toString();

	  var type = getType(obj);

	  return type.replace(/(\[object )|]/g, '');
	}

	function getType(obj) {
	  var type = void 0;

	  try {
	    type = {}.toString.call(obj);
	  } catch (e) {
	    type = '[object Object]';
	  }

	  return type;
	}

	var Visitor = function () {
	  function Visitor() {
	    (0, _classCallCheck3.default)(this, Visitor);

	    this._visited = [];
	    this._map = {};
	  }

	  (0, _createClass3.default)(Visitor, [{
	    key: 'visit',
	    value: function visit(val) {
	      /* Add 0 to distinguish stringify generated id from JsonViewer id.
	           * When used in web worker, they are not calling the same uniqId method, thus result may be repeated.
	           */
	      var id = (0, _stringifyUtil.uniqId)('erudaJson0');

	      this._visited.push({ id: id, val: val, abstract: {} });
	      this._map[id] = (0, _stringifyUtil.last)(this._visited);

	      return id;
	    }
	  }, {
	    key: 'check',
	    value: function check(val) {
	      var visited = this._visited;

	      for (var i = 0, len = visited.length; i < len; i++) {
	        if (val === visited[i].val) return visited[i];
	      }

	      return false;
	    }
	  }, {
	    key: 'update',
	    value: function update(id, data) {
	      (0, _stringifyUtil.extend)(this._map[id], data);
	    }
	  }, {
	    key: 'updateAbstract',
	    value: function updateAbstract(id, abstract) {
	      this.update(id, { abstract: abstract });
	    }
	  }]);
	  return Visitor;
	}();

	/***/ }),
	/* 79 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof2 = __webpack_require__(25);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var JsonViewer = function () {
	  function JsonViewer(data, $el) {
	    (0, _classCallCheck3.default)(this, JsonViewer);

	    (0, _util.evalCss)(__webpack_require__(166));

	    this._data = [data];
	    this._data.erudaId = (0, _util.uniqId)('erudaJson');
	    this._$el = $el;
	    this._map = {};
	    createMap(this._map, this._data);

	    this._appendTpl();
	    this._bindEvent();
	  }

	  (0, _createClass3.default)(JsonViewer, [{
	    key: 'jsonToHtml',
	    value: function jsonToHtml(data, firstLevel) {
	      var ret = '';

	      for (var key in data) {
	        var val = data[key];

	        if (key === 'erudaObjAbstract' || key === 'erudaCircular' || key === 'erudaId' || key === 'erudaSplitArr' || (0, _util.isStr)(val) && (0, _util.startWith)(val, 'erudaJson')) continue;

	        if (Object.hasOwnProperty.call(data, key)) ret += this.createEl(key, val, firstLevel);
	      }

	      return ret;
	    }
	  }, {
	    key: 'createEl',
	    value: function createEl(key, val) {
	      var firstLevel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	      var type = 'object',
	          isUnenumerable = false,
	          id = void 0;

	      if (key === 'erudaProto') key = '__proto__';
	      if ((0, _util.startWith)(key, 'erudaUnenumerable')) {
	        key = (0, _util.trim)(key.replace('erudaUnenumerable', ''));
	        isUnenumerable = true;
	      }

	      if ((0, _util.isArr)(val)) type = 'array';

	      function wrapKey(key) {
	        if (firstLevel) return '';
	        if ((0, _util.isObj)(val) && val.erudaSplitArr) return '';

	        var keyClass = 'eruda-key';
	        if (isUnenumerable || (0, _util.contain)(LIGHTER_KEY, key)) keyClass = 'eruda-key-lighter';

	        return '<span class="' + keyClass + '">' + encode(key) + '</span>: ';
	      }

	      if (val === null) {
	        return '<li>\n                        ' + wrapKey(key) + '\n                        <span class="eruda-null">null</span>\n                    </li>';
	      }

	      if ((0, _util.isObj)(val)) {
	        id = val.erudaId;
	        var circularId = val.erudaCircular;
	        var objAbstract = val['erudaObjAbstract'] || (0, _util.upperFirst)(type);

	        var obj = '<li ' + (firstLevel ? 'data-first-level="true"' : '') + ' ' + ('data-object-id="' + (circularId ? circularId : id) + '"') + '>\n                            <span class="' + (firstLevel ? '' : 'eruda-expanded eruda-collapsed') + '"></span>\n                            ' + wrapKey(key) + '\n                            <span class="eruda-open">' + (firstLevel ? '' : objAbstract) + '</span>\n                            <ul class="eruda-' + type + '" ' + (firstLevel ? '' : 'style="display:none"') + '>';

	        if (firstLevel) obj += this.jsonToHtml(this._map[id]);

	        return obj + '</ul><span class="eruda-close"></span></li>';
	      }
	      if ((0, _util.isNum)(val) || (0, _util.isBool)(val)) {
	        return '<li>\n                    ' + wrapKey(key) + '\n                    <span class="eruda-' + (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) + '">' + encode(val) + '</span>\n                    </li>';
	      }
	      if ((0, _util.isStr)(val) && (0, _util.startWith)(val, 'function')) {
	        return '<li>\n                    ' + wrapKey(key) + '\n                    <span class="eruda-function">' + encode(val).replace('function', '') + '</span>\n                    </li>';
	      }
	      if (val === 'undefined' || val === 'Symbol' || val === '(...)') {
	        return '<li>\n                    ' + wrapKey(key) + '\n                    <span class="eruda-special">' + val + '</span>\n                    </li>';
	      }

	      return '<li>\n                    ' + wrapKey(key) + '\n                    <span class="eruda-' + (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) + '">"' + encode(val) + '"</span>\n                </li>';
	    }
	  }, {
	    key: '_appendTpl',
	    value: function _appendTpl() {
	      var data = this._map[this._data.erudaId];

	      this._$el.html(this.jsonToHtml(data, true));
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var map = this._map;

	      var self = this;

	      this._$el.on('click', 'li', function (e) {
	        var $this = (0, _util.$)(this),
	            circularId = $this.data('object-id'),
	            $firstSpan = (0, _util.$)(this).find('span').eq(0);

	        if ($this.data('first-level')) return;
	        if (circularId) {
	          $this.find('ul').html(self.jsonToHtml(map[circularId], false));
	          $this.rmAttr('data-object-id');
	        }

	        e.stopImmediatePropagation();

	        if (!$firstSpan.hasClass('eruda-expanded')) return;

	        var $ul = $this.find('ul').eq(0);
	        if ($firstSpan.hasClass('eruda-collapsed')) {
	          $firstSpan.rmClass('eruda-collapsed');
	          $ul.show();
	        } else {
	          $firstSpan.addClass('eruda-collapsed');
	          $ul.hide();
	        }
	      });
	    }
	  }]);
	  return JsonViewer;
	}();

	exports.default = JsonViewer;


	function createMap(map, data) {
	  var id = void 0;

	  if (data.erudaId) {
	    id = data.erudaId;
	  } else {
	    id = (0, _util.uniqId)('erudaJson');
	    data.erudaId = id;
	  }

	  if (id) {
	    var objAbstract = data.erudaObjAbstract;

	    var _isArr = objAbstract && (0, _util.startWith)(objAbstract, 'Array');
	    if (_isArr) {
	      var arr = objToArr(data);
	      if (arr.length > 100) data = splitBigArr(objToArr(data), id);
	    }
	    map[id] = data;
	  }

	  for (var key in data) {
	    var val = data[key];
	    if ((0, _util.isObj)(val)) createMap(map, val);
	  }
	}

	function splitBigArr(val, id) {
	  var ret = (0, _util.chunk)(val, 100);
	  var idx = 0;
	  ret = (0, _util.map)(ret, function (val) {
	    var obj = {};
	    var startIdx = idx;
	    obj.erudaObjAbstract = '[' + startIdx;
	    (0, _util.each)(val, function (val) {
	      obj[idx] = val;
	      idx += 1;
	    });
	    var endIdx = idx - 1;
	    obj.erudaObjAbstract += (endIdx - startIdx > 0 ? ' … ' + endIdx : '') + ']';
	    obj.erudaId = (0, _util.uniqId)('erudaJson');
	    obj.erudaSplitArr = true;
	    return obj;
	  });
	  (0, _util.each)(val.erudaStrKeys, function (val, key) {
	    return ret[key] = val;
	  });
	  ret.erudaId = id;

	  return ret;
	}

	function objToArr(val) {
	  var ret = [];

	  var strKeys = {};

	  (0, _util.each)(val, function (val, key) {
	    var idx = (0, _util.toNum)(key);
	    if (!(0, _util.isNaN)(idx)) {
	      ret[idx] = val;
	    } else {
	      strKeys[key] = val;
	    }
	  });

	  ret['erudaStrKeys'] = strKeys;

	  return ret;
	}

	var LIGHTER_KEY = ['__proto__'];

	var encode = function encode(str) {
	  return (0, _util.escape)((0, _util.toStr)(str)).replace(/\n/g, '↵').replace(/\f|\r|\t/g, '');
	};

	/***/ }),
	/* 80 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getType = getType;
	exports.lenToUtf8Bytes = lenToUtf8Bytes;

	var _util = __webpack_require__(0);

	function getType(contentType) {
	  if (!contentType) return 'unknown';

	  var type = contentType.split(';')[0].split('/');

	  return {
	    type: type[0],
	    subType: (0, _util.last)(type)
	  };
	}

	function lenToUtf8Bytes(str) {
	  var m = encodeURIComponent(str).match(/%[89ABab]/g);

	  return str.length + (m ? m.length : 0);
	}

	/***/ }),
	/* 81 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, "@font-face {\n  font-family: 'eruda-icon';\n  src: url('data:application/x-font-woff;charset=utf-8;base64,d09GRgABAAAAABEAAAsAAAAAELQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABCAAAAGAAAABgDxIFi2NtYXAAAAFoAAAAVAAAAFQXVtKVZ2FzcAAAAbwAAAAIAAAACAAAABBnbHlmAAABxAAADKQAAAykjK19FmhlYWQAAA5oAAAANgAAADYPCS8LaGhlYQAADqAAAAAkAAAAJAfCA9RobXR4AAAOxAAAAEwAAABMOSwAm2xvY2EAAA8QAAAAKAAAACgZ4h0QbWF4cAAADzgAAAAgAAAAIAAZAIVuYW1lAAAPWAAAAYYAAAGGmUoJ+3Bvc3QAABDgAAAAIAAAACAAAwAAAAMDUwGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAA6Q4DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADgAAAAKAAgAAgACAAEAIOkO//3//wAAAAAAIOkA//3//wAB/+MXBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAgAHAAcDZgNmACIARQAAAREUBiMiJi8BBw4BIyImLwEuATU0Nj8BJy4BNTQ2MyEyFhUBFAYPARceARUUBiMhIiY1ETQ2MzIWHwE3PgEzMhYfAR4BFQG3Fg8HDQVTvQMHBAMHA0ECBAQCvlIGBRUPAQAPFgGvAwK+UgUGFg//AA8VFQ8IDQVSvgMHAwQHAkICAwGS/wAPFQUGUr4CBAQCQQMHAwQHA71TBQ0HDxYWDwGAAwcDvlIFDQgPFRUPAQAPFgYFUr4CAwMCQgIHBAAAAAIAAAAAA24DbgAiAEUAAAEUBg8BFx4BFRQGIyEiJjURNDYzMhYfATc+ATMyFh8BHgEVAREUBiMiJi8BBw4BIyImLwEuATU0Nj8BJy4BNTQ2MyEyFhUBrwMCvlIFBhUP/wAPFhYPBw0FU70DBwMEBwNBAgMBvxYPBw0GUr4CBwQDBwNBAwMDA75TBQUVDwEADxYBWwMHA71TBQ0HDxYWDwEADxUGBVK+AgMDAkEDBwQB7v8ADxUFBVO+AwMDA0EDBwMEBwK+UgYNBw8WFg8AAAADAAAAAANuA24AJgA7AFQAACU1NCcmKwERNCcmKwEiBwYdARQXFjsBFSMiBwYdARQXFjMhMjc2NQM1NCcmKwEiBwYdARQXFjsBMjc2NQUUBwYHBiMiJyYnJjU0NzY3NjMyFxYXFhUCSQUFCDcFBQi3CAUFBQUINzcIBQUFBQgBAAgFBUkFBQhuCAUFBQUIbggFBQFuOztlZXd4ZGU7Ozs7ZWR4d2VlOzulWwgFBQElCAUFBQUIXAgFBbcFBQhbCAYFBQYIAgBbCAUFBQUIWwgGBQUGCO54ZGU7Ozs7ZWR4d2VlOzs7O2VldwAAAAMAAAAAA24DcQANABkAOQAAATQnARYzMjc2NzY3NjUFASYjIgcGBwYVFBclFAcGBwYHBiMiJyYnJicmNTQ3Njc2NzYzMhcWFxYXFgLuMv5RTlw/OjkqKhgZ/cUBr01eVUdIKSozArsjIzs6UlFZWVJROzojIyMjOjtRUllZUVI6OyMjAblcTP5SMxkZKSo6OkCrAa80KipISFRdTqtaUlI6OyMjIyM7OlJSWllSUTs7IyMjIzs7UVIAAAAAAgAAAAADbgNuAA8AggAAATQnJiMiBwYVFBcWMzI3NiUVFAcGDwEGBxYXFhUUBwYHBiMiLwEGBwYHBisBIicmNScmJwcGIyInJicmNTQ3Njc2NyYvASYnJj0BNDc2PwE2NyYnJjU0NzY3NjMyHwE2NzY3NjsBMhcWHwEWFzc2MzIXFhcWFRQHBgcGBxYfARYXFhUCSSsrPD0rKiorPTwrKwElBQQHagsLFCkGBg8pKQ0HCE8ZGwkHBBF/CAYGEBwYUAYICAdIFgQFCBUUCxAIaAgEBQUEBmsIDhcmBgUPKikNBwdPGRsJCAQQfwgGBgEQHBdRBggIBkoVBAUIFRUKDwloCAQFAbc8KysrKzw9KyoqK3t/BwYGARAfFR0yBwcIBhUoKQU+DQlNHRAFBQdpCQw9BQZCHgYIBgcMGhoOHRwPAQYGCH4HBwYBEBobIC4HBwYHFSkpBj0NCE4dEAUFB2oJDD0GBkQdBQgHBgwaGg4dGxABBgYIAAUAAAAAAyUDbgAUACkAPgBGAHMAACURNCcmKwEiBwYVERQXFjsBMjc2NTMRNCcmKwEiBwYVERQXFjsBMjc2NTMRNCcmKwEiBwYVERQXFjsBMjc2NQEhJyYnIwYHBRUUBwYrAREUBwYjISInJjURIyInJj0BNDc2OwE3Njc2OwEyFxYfATMyFxYVASUGBQgkCAUGBgUIJAgFBpIFBQglCAUFBQUIJQgFBZIFBQglCAUFBQUIJQgFBf7JAQAbBAa1BgQB9wYFCDcaGyb+JSYbGzcIBQUFBQixKAgXFhe3FxYWCSiwCAUGpQGSCAUFBQUI/m4IBgUFBggBkggFBQUFCP5uCAYFBQYIAZIIBQUFBQj+bggGBQUGCAI2QwUCAgVVJAgGBf3jMCIjISIvAiAFBggkCAUFYBUPDw8PFWAFBQgAAQAAAAADbgNuAEcAAAERFAcGIyEiJyY/ASYjIgcGBwYHBhUUFxYXFhcWMzI3Njc2NzIfARYVFAcGBwYjIicmJyYnJjU0NzY3Njc2MzIXFhc3NhcWFQNuCwsP/wAYCgkRT1RzPDY2JycYFxcYJyc2NjxEPD0qBAkIBk4GBD9YWWJZUVI6OyMjIyM7OlJRWVROTz1KERcXAyX/AA8LCxcWEU9OFxcnKDY2Ozw2NicnGBceHjYGAQVPBQcHBksqKSMjOzpSUVlZUVE7OyMjICA5SRIKCRgAAAAAAQAzAA8CgwOoABoAAAkBBiMiLwEmNTQ3CQEmNTQ/ATYzMhcBFhUUBwJ5/lgLDw8LXwsLATD+0AsLXwsPDwsBqAoKAcL+WAsLXwoPDwsBLwEwCw8OC18LC/5YCw8OCwAAAQBYAA8CqAOoABoAAAkCFhUUDwEGIyInASY1NDcBNjMyHwEWFRQHAp3+0QEvCwtfCw4PC/5YCwsBqAsPDgtfCwsDC/7Q/tELDw8KXwsLAagLDg8LAagLC18LDg8LAAAABQAA/7cDtwO3AD4AbQBxAHUAegAAASIHBhURJyYjIgcGFRQXExYzITI3Nj8BNj0BNCcmIyIHBhUjNTQnJiMiBwYdASM1NCcmIyIHBh0BIxE0JyYjNTIXFh0BNjMyFzYzMhc2MzIXFh0BFA8BBgcGIyEiJyYnAyY1NDc2MzIXETQ3NjMTNSMVMzUjFTM1IxUzAW4fFRVXFyYeFRUP2xYlAZoNCgoCNQ4QEBcXEBASExIbGxITExUVHx4VFhIVFR89KisNBTkqGx5AKQ8RNiUlEDUJHh0m/mYjHx8U3B0rKjwpISsrPUkSpBKkEhIDbhYVHv4Acx8WFh0ZE/7bHQgHDNM3OHwXEREQEBcjHBMTExMaJTQfFxYVFR83AUYgFhdJLC09fgIoDDIEJic1fEM+0iUXFxAPGwElJzE8KysUATk8Kyv829zc3Nzc3AADAAAASQQAAtsAGAAxAEoAAAEmJxYVFAcGIyInJjU0NwYHFhcWMzI3NjclNCcmIyIHBhUUFxYzMjc2NTQ3NjMyNzY1BRQHBgcGIyInJicmNTQ3Njc2MzIXFhcWFQO3V4MjS0tqaktLI4NXTHNyhoZyc0z+ZAgIC0c0MwgIDAsICCMjMQsICAHlC1CIh5aWh4hQCwtQiIeWloeIUAsBkodDO0ZpS0xMS2lGO0OHdUVGRkV13AsICDMzSAsICAgICzIiIwgIDNwTFIRPT1BPgxQTFBSDT09PT4MUFAAAAQAAAAADbgNuAEkAAAEUBwYHBgcGIyInJicmNTY/ATYzFhcWFxYzMjc2NzY3NjU0JyYnJicmIyIHBgcXFgcGIyEiJyY1ETQ3Nh8BNjc2MzIXFhcWFxYVA24jIzs7UVFZYllZPgQBBE8FCQkEKjw9RDs2NignFxcXFycoNjY7ODQzKE4SCgkY/wAPCwsXFhFLPU5PVFlRUTs7IyMBt1lRUjo7IyMpKksGBwcFTwUBBjYeHhcYJyc2Njw7NjYoJxcXFBQmTxEWFwsLDwEAGAkKEkk5ICAjIzs7UVFZAAMACQAAA/cDtwAUACkAQQAAJTU0JyYrASIHBh0BFBcWOwEyNzY1JxM0JyYrASIHBhUTFBcWOwEyNzY3AwEWBwYHBiMhIicmJyY3ATY3NjMyFxYXAkkFBgduBwYFBQYHbgcGBQEKBQgGfgYIBQkGBghqCAUFAQgBtxQVChERE/ySExERChUUAbcKEREUFBERCqVtCAUGBgUIbQgFBgYFCNYBBgcEBgYECP77BgQDAwQGAhb82yQkEQkKCgkRJCQDJRELCgoLEQAAAgAAAAADbgNuACsARAAAATQvATc2NTQvASYjIg8BJyYjIg8BBhUUHwEHBhUUHwEWMzI/ARcWMzI/ATY3FAcGBwYjIicmJyY1NDc2NzYzMhcWFxYVApELaGgLCzQLDw8LZ2gKDxALMwsLZ2cLCzMLEA8KaGcLDw8LNAvdOztlZXd4ZGU7Ozs7ZWR4d2VlOzsBNg8KaGcLDw8LNAsLaGgLCzQLDw8LZ2gKDxALMwsLZ2cLCzMLkXhkZTs7OztlZHh3ZWU7Ozs7ZWV3AAAAAQAA//8DFwNuAAsAAAkBBiY1ETQ2FwEWFAMX/QkNExMNAvcNAaX+WgcLDwNJDwwI/lsIFQAAAAABAAAAAAAA0YpcH18PPPUACwQAAAAAANX1dVAAAAAA1fV1UAAA/7cEAAO3AAAACAACAAAAAAAAAAEAAAPA/8AAAAQAAAAAAAQAAAEAAAAAAAAAAAAAAAAAAAATBAAAAAAAAAAAAAAAAgAAAANuAAcDbgAAA24AAANuAAADbgAAAyUAAANuAAACtwAzAwAAWAO3AAAEAAAAA24AAAQAAAkDbgAAAykAAAAAAAAACgAUAB4AhgDuAWQBwgJ+Ax4DigO6A+oEkAT+BWwF0AY2BlIAAQAAABMAgwAFAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA4ArgABAAAAAAABAAcAAAABAAAAAAACAAcAYAABAAAAAAADAAcANgABAAAAAAAEAAcAdQABAAAAAAAFAAsAFQABAAAAAAAGAAcASwABAAAAAAAKABoAigADAAEECQABAA4ABwADAAEECQACAA4AZwADAAEECQADAA4APQADAAEECQAEAA4AfAADAAEECQAFABYAIAADAAEECQAGAA4AUgADAAEECQAKADQApGljb21vb24AaQBjAG8AbQBvAG8AblZlcnNpb24gMS4wAFYAZQByAHMAaQBvAG4AIAAxAC4AMGljb21vb24AaQBjAG8AbQBvAG8Abmljb21vb24AaQBjAG8AbQBvAG8AblJlZ3VsYXIAUgBlAGcAdQBsAGEAcmljb21vb24AaQBjAG8AbQBvAG8AbkZvbnQgZ2VuZXJhdGVkIGJ5IEljb01vb24uAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAGIAeQAgAEkAYwBvAE0AbwBvAG4ALgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=')\n    format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n\n[class^='eruda-icon-'],\n[class*=' eruda-icon-'] {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: 'eruda-icon' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.eruda-icon-play:before {\n  content: '\\E90E';\n}\n.eruda-icon-compress:before {\n  content: '\\E900';\n}\n.eruda-icon-expand:before {\n  content: '\\E901';\n}\n.eruda-icon-rotate-left:before {\n  content: '\\E90B';\n}\n.eruda-icon-hand-pointer-o:before {\n  content: '\\E909';\n}\n.eruda-icon-eye:before {\n  content: '\\E90A';\n}\n.eruda-icon-info-circle:before {\n  content: '\\E902';\n}\n.eruda-icon-ban:before {\n  content: '\\E903';\n}\n.eruda-icon-cog:before {\n  content: '\\E904';\n}\n.eruda-icon-trash:before {\n  content: '\\E905';\n}\n.eruda-icon-repeat:before {\n  content: '\\E906';\n}\n.eruda-icon-chevron-right:before {\n  content: '\\E907';\n}\n.eruda-icon-chevron-left:before {\n  content: '\\E908';\n}\n.eruda-icon-exclamation-triangle:before {\n  content: '\\E90C';\n}\n.eruda-icon-times-circle:before {\n  content: '\\E90D';\n}\n", ""]);

	// exports


	/***/ }),
	/* 82 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var _assign = __webpack_require__(38);

	var _assign2 = _interopRequireDefault(_assign);

	var _EntryBtn = __webpack_require__(89);

	var _EntryBtn2 = _interopRequireDefault(_EntryBtn);

	var _DevTools = __webpack_require__(145);

	var _DevTools2 = _interopRequireDefault(_DevTools);

	var _Tool = __webpack_require__(9);

	var _Tool2 = _interopRequireDefault(_Tool);

	var _Console = __webpack_require__(150);

	var _Console2 = _interopRequireDefault(_Console);

	var _Network = __webpack_require__(174);

	var _Network2 = _interopRequireDefault(_Network);

	var _Elements = __webpack_require__(179);

	var _Elements2 = _interopRequireDefault(_Elements);

	var _Snippets = __webpack_require__(189);

	var _Snippets2 = _interopRequireDefault(_Snippets);

	var _Resources = __webpack_require__(194);

	var _Resources2 = _interopRequireDefault(_Resources);

	var _Info = __webpack_require__(197);

	var _Info2 = _interopRequireDefault(_Info);

	var _Sources = __webpack_require__(201);

	var _Sources2 = _interopRequireDefault(_Sources);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _emitter = __webpack_require__(27);

	var _emitter2 = _interopRequireDefault(_emitter);

	var _config = __webpack_require__(209);

	var _config2 = _interopRequireDefault(_config);

	var _logger = __webpack_require__(37);

	var _logger2 = _interopRequireDefault(_logger);

	var _extraUtil = __webpack_require__(211);

	var _extraUtil2 = _interopRequireDefault(_extraUtil);

	var _util = __webpack_require__(0);

	var _util2 = _interopRequireDefault(_util);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = {
	  init: function init() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        container = _ref.container,
	        tool = _ref.tool,
	        _ref$autoScale = _ref.autoScale,
	        autoScale = _ref$autoScale === undefined ? true : _ref$autoScale,
	        _ref$useShadowDom = _ref.useShadowDom,
	        useShadowDom = _ref$useShadowDom === undefined ? true : _ref$useShadowDom;

	    this._isInit = true;
	    this._scale = 1;

	    this._initContainer(container, useShadowDom);
	    this._initStyle();
	    this._initDevTools();
	    this._initEntryBtn();
	    this._initSettings();
	    this._initTools(tool);
	    this._registerListener();

	    if (autoScale) this._autoScale();
	  },

	  _isInit: false,
	  version: "1.5.0",
	  config: _config2.default,
	  util: _util2.default,
	  Tool: _Tool2.default,
	  Console: _Console2.default,
	  Elements: _Elements2.default,
	  Network: _Network2.default,
	  Sources: _Sources2.default,
	  Resources: _Resources2.default,
	  Info: _Info2.default,
	  Snippets: _Snippets2.default,
	  get: function get(name) {
	    if (!this._checkInit()) return;

	    var devTools = this._devTools;

	    return name ? devTools.get(name) : devTools;
	  },
	  add: function add(tool) {
	    if (!this._checkInit()) return;

	    if ((0, _util.isFn)(tool)) tool = tool(this);

	    this._devTools.add(tool);

	    return this;
	  },
	  remove: function remove(name) {
	    this._devTools.remove(name);

	    return this;
	  },
	  show: function show(name) {
	    if (!this._checkInit()) return;

	    var devTools = this._devTools;

	    name ? devTools.showTool(name) : devTools.show();

	    return this;
	  },
	  hide: function hide() {
	    if (!this._checkInit()) return;

	    this._devTools.hide();

	    return this;
	  },
	  destroy: function destroy() {
	    this._devTools.destroy();
	    delete this._devTools;
	    this._entryBtn.destroy();
	    delete this._entryBtn;
	    this._unregisterListener();
	    this._$el.remove();
	    _util.evalCss.clear();
	  },
	  scale: function scale(s) {
	    if ((0, _util.isNum)(s)) {
	      this._scale = s;
	      _emitter2.default.emit(_emitter2.default.SCALE, s);
	      return this;
	    }

	    return this._scale;
	  },
	  position: function position(p) {
	    var entryBtn = this._entryBtn;

	    if ((0, _util.isObj)(p)) {
	      entryBtn.setPos(p);
	      return this;
	    }

	    return entryBtn.getPos();
	  },
	  _autoScale: function _autoScale() {
	    if (!(0, _util.isMobile)()) return;

	    this.scale(1 / (0, _util.viewportScale)());
	  },
	  _registerListener: function _registerListener() {
	    var _this = this;

	    this._addListener = function () {
	      return _this.add.apply(_this, arguments);
	    };
	    this._showListener = function () {
	      return _this.show.apply(_this, arguments);
	    };

	    _emitter2.default.on(_emitter2.default.ADD, this._addListener);
	    _emitter2.default.on(_emitter2.default.SHOW, this._showListener);
	    _emitter2.default.on(_emitter2.default.SCALE, _util.evalCss.setScale);
	  },
	  _unregisterListener: function _unregisterListener() {
	    _emitter2.default.off(_emitter2.default.ADD, this._addListener);
	    _emitter2.default.off(_emitter2.default.SHOW, this._showListener);
	    _emitter2.default.off(_emitter2.default.SCALE, _util.evalCss.setScale);
	  },
	  _checkInit: function _checkInit() {
	    if (!this._isInit) _logger2.default.error('Please call "eruda.init()" first');
	    return this._isInit;
	  },
	  _initContainer: function _initContainer(el, useShadowDom) {
	    if (!el) {
	      el = document.createElement('div');
	      document.documentElement.appendChild(el);
	    }

	    var shadowRoot = void 0;
	    if (useShadowDom) {
	      if (el.attachShadow) {
	        shadowRoot = el.attachShadow({ mode: 'open' });
	      } else if (el.createShadowRoot) {
	        shadowRoot = el.createShadowRoot();
	      }
	      if (shadowRoot) {
	        // font-face doesn't work inside shadow dom.
	        _util.evalCss.container = document.head;
	        (0, _util.evalCss)(__webpack_require__(81));

	        el = document.createElement('div');
	        shadowRoot.appendChild(el);
	        this._shadowRoot = shadowRoot;
	      }
	    }

	    (0, _assign2.default)(el, {
	      id: 'eruda',
	      className: 'eruda-container',
	      contentEditable: false
	    });

	    // http://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari
	    if ((0, _util.detectBrowser)().name === 'ios') el.setAttribute('ontouchstart', '');

	    this._$el = (0, _util.$)(el);
	  },
	  _initDevTools: function _initDevTools() {
	    this._devTools = new _DevTools2.default(this._$el);
	  },
	  _initStyle: function _initStyle() {
	    var className = 'eruda-style-container',
	        $el = this._$el;

	    if (this._shadowRoot) {
	      _util.evalCss.container = this._shadowRoot;
	      (0, _util.evalCss)(':host { all: initial }');
	    } else {
	      $el.append('<div class="' + className + '"></div>');
	      _util.evalCss.container = $el.find('.' + className).get(0);
	    }

	    (0, _util.evalCss)(__webpack_require__(212) + __webpack_require__(213) + __webpack_require__(81));
	  },
	  _initEntryBtn: function _initEntryBtn() {
	    var _this2 = this;

	    this._entryBtn = new _EntryBtn2.default(this._$el);
	    this._entryBtn.on('click', function () {
	      return _this2._devTools.toggle();
	    });
	  },
	  _initSettings: function _initSettings() {
	    var devTools = this._devTools,
	        settings = new _Settings2.default();

	    devTools.add(settings);

	    this._entryBtn.initCfg(settings);
	    devTools.initCfg(settings);
	  },
	  _initTools: function _initTools() {
	    var _this3 = this;

	    var tool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['console', 'elements', 'network', 'resources', 'sources', 'info', 'snippets'];

	    tool = (0, _util.toArr)(tool).reverse();

	    var devTools = this._devTools;

	    tool.forEach(function (name) {
	      var Tool = _this3[(0, _util.upperFirst)(name)];
	      try {
	        if (Tool) devTools.add(new Tool());
	      } catch (e) {
	        // Use nextTick to make sure it is possible to be caught by console panel.
	        (0, _util.nextTick)(function () {
	          _logger2.default.error('Something wrong when initializing tool ' + name + ':', e.message);
	        });
	      }
	    });

	    devTools.showTool((0, _util.last)(tool) || 'settings');
	  }
	};

	(0, _extraUtil2.default)(_util2.default);

	//# sourceMappingURL=index.js.map

	/***/ }),
	/* 83 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(84);
	module.exports = __webpack_require__(4).Object.assign;


	/***/ }),
	/* 84 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(10);

	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(86) });


	/***/ }),
	/* 85 */
	/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


	/***/ }),
	/* 86 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(23);
	var gOPS = __webpack_require__(47);
	var pIE = __webpack_require__(32);
	var toObject = __webpack_require__(33);
	var IObject = __webpack_require__(62);
	var $assign = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(22)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


	/***/ }),
	/* 87 */
	/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(19);
	var toLength = __webpack_require__(88);
	var toAbsoluteIndex = __webpack_require__(63);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


	/***/ }),
	/* 88 */
	/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(43);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


	/***/ }),
	/* 89 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _draggabilly = __webpack_require__(116);

	var _draggabilly2 = _interopRequireDefault(_draggabilly);

	var _emitter = __webpack_require__(27);

	var _emitter2 = _interopRequireDefault(_emitter);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var EntryBtn = function (_Emitter) {
	  (0, _inherits3.default)(EntryBtn, _Emitter);

	  function EntryBtn($container) {
	    (0, _classCallCheck3.default)(this, EntryBtn);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (EntryBtn.__proto__ || (0, _getPrototypeOf2.default)(EntryBtn)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(143));

	    _this._$container = $container;
	    _this._appendTpl();
	    _this._makeDraggable();
	    _this._bindEvent();
	    _this._registerListener();
	    return _this;
	  }

	  (0, _createClass3.default)(EntryBtn, [{
	    key: 'hide',
	    value: function hide() {
	      this._$el.hide();
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this._$el.show();
	    }
	  }, {
	    key: 'setPos',
	    value: function setPos(pos) {
	      if (this._isOutOfRange(pos)) {
	        pos = this._getDefPos();
	      }

	      this._$el.css({
	        left: pos.x,
	        top: pos.y
	      });

	      this.config.set('pos', pos);
	    }
	  }, {
	    key: 'getPos',
	    value: function getPos() {
	      return this.config.get('pos');
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      _util.evalCss.remove(this._style);
	      this._unregisterListener();
	      this._$el.remove();
	    }
	  }, {
	    key: '_isOutOfRange',
	    value: function _isOutOfRange(pos) {
	      pos = pos || this.config.get('pos');
	      var defPos = this._getDefPos();

	      return pos.x > defPos.x + 10 || pos.x < 0 || pos.y < 0 || pos.y > defPos.y + 10;
	    }
	  }, {
	    key: '_registerListener',
	    value: function _registerListener() {
	      var _this2 = this;

	      this._scaleListener = function () {
	        return (0, _util.nextTick)(function () {
	          if (_this2._isOutOfRange()) _this2._resetPos();
	        });
	      };
	      _emitter2.default.on(_emitter2.default.SCALE, this._scaleListener);
	    }
	  }, {
	    key: '_unregisterListener',
	    value: function _unregisterListener() {
	      _emitter2.default.off(_emitter2.default.SCALE, this._scaleListener);
	    }
	  }, {
	    key: '_appendTpl',
	    value: function _appendTpl() {
	      var $container = this._$container;

	      $container.append(__webpack_require__(144)());
	      this._$el = $container.find('.eruda-entry-btn');
	    }
	  }, {
	    key: '_resetPos',
	    value: function _resetPos(orientationChanged) {
	      var cfg = this.config,
	          pos = cfg.get('pos'),
	          defPos = this._getDefPos();

	      if (!cfg.get('rememberPos') || orientationChanged) {
	        pos = defPos;
	      }

	      this.setPos(pos);
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var _this3 = this;

	      var draggabilly = this._draggabilly,
	          $el = this._$el;

	      draggabilly.on('staticClick', function () {
	        return _this3.emit('click');
	      }).on('dragStart', function () {
	        return $el.addClass('eruda-active');
	      });

	      draggabilly.on('dragEnd', function () {
	        var cfg = _this3.config;

	        if (cfg.get('rememberPos')) {
	          cfg.set('pos', {
	            x: (0, _util.pxToNum)(_this3._$el.css('left')),
	            y: (0, _util.pxToNum)(_this3._$el.css('top'))
	          });
	        }

	        $el.rmClass('eruda-active');
	      });

	      _util.orientation.on('change', function () {
	        return _this3._resetPos(true);
	      });
	      window.addEventListener('resize', function () {
	        return _this3._resetPos();
	      });
	    }
	  }, {
	    key: '_makeDraggable',
	    value: function _makeDraggable() {
	      this._draggabilly = new _draggabilly2.default(this._$el.get(0), {
	        containment: true
	      });
	    }
	  }, {
	    key: 'initCfg',
	    value: function initCfg(settings) {
	      var cfg = this.config = _Settings2.default.createCfg('home-button', {
	        rememberPos: true,
	        pos: this._getDefPos()
	      });

	      settings.separator().switch(cfg, 'rememberPos', 'Remember Entry Button Position');

	      this._resetPos();
	    }
	  }, {
	    key: '_getDefPos',
	    value: function _getDefPos() {
	      var minWidth = this._$el.get(0).offsetWidth + 10;

	      return {
	        x: window.innerWidth - minWidth,
	        y: window.innerHeight - minWidth
	      };
	    }
	  }]);
	  return EntryBtn;
	}(_util.Emitter);

	exports.default = EntryBtn;

	/***/ }),
	/* 90 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(91);
	module.exports = __webpack_require__(4).Object.getPrototypeOf;


	/***/ }),
	/* 91 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(33);
	var $getPrototypeOf = __webpack_require__(64);

	__webpack_require__(24)('getPrototypeOf', function () {
	  return function getPrototypeOf(it) {
	    return $getPrototypeOf(toObject(it));
	  };
	});


	/***/ }),
	/* 92 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(93);
	var $Object = __webpack_require__(4).Object;
	module.exports = function defineProperty(it, key, desc) {
	  return $Object.defineProperty(it, key, desc);
	};


	/***/ }),
	/* 93 */
	/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(17), 'Object', { defineProperty: __webpack_require__(15).f });


	/***/ }),
	/* 94 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(95), __esModule: true };

	/***/ }),
	/* 95 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(48);
	__webpack_require__(51);
	module.exports = __webpack_require__(52).f('iterator');


	/***/ }),
	/* 96 */
	/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(43);
	var defined = __webpack_require__(42);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


	/***/ }),
	/* 97 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var create = __webpack_require__(49);
	var descriptor = __webpack_require__(28);
	var setToStringTag = __webpack_require__(50);
	var IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(20)(IteratorPrototype, __webpack_require__(12)('iterator'), function () { return this; });

	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


	/***/ }),
	/* 98 */
	/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(15);
	var anObject = __webpack_require__(21);
	var getKeys = __webpack_require__(23);

	module.exports = __webpack_require__(17) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


	/***/ }),
	/* 99 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var addToUnscopables = __webpack_require__(100);
	var step = __webpack_require__(101);
	var Iterators = __webpack_require__(26);
	var toIObject = __webpack_require__(19);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(66)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


	/***/ }),
	/* 100 */
	/***/ (function(module, exports) {

	module.exports = function () { /* empty */ };


	/***/ }),
	/* 101 */
	/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


	/***/ }),
	/* 102 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(103), __esModule: true };

	/***/ }),
	/* 103 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(104);
	__webpack_require__(107);
	__webpack_require__(108);
	__webpack_require__(109);
	module.exports = __webpack_require__(4).Symbol;


	/***/ }),
	/* 104 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	// ECMAScript 6 symbols shim
	var global = __webpack_require__(11);
	var has = __webpack_require__(18);
	var DESCRIPTORS = __webpack_require__(17);
	var $export = __webpack_require__(10);
	var redefine = __webpack_require__(67);
	var META = __webpack_require__(69).KEY;
	var $fails = __webpack_require__(22);
	var shared = __webpack_require__(45);
	var setToStringTag = __webpack_require__(50);
	var uid = __webpack_require__(31);
	var wks = __webpack_require__(12);
	var wksExt = __webpack_require__(52);
	var wksDefine = __webpack_require__(53);
	var enumKeys = __webpack_require__(105);
	var isArray = __webpack_require__(106);
	var anObject = __webpack_require__(21);
	var isObject = __webpack_require__(16);
	var toIObject = __webpack_require__(19);
	var toPrimitive = __webpack_require__(41);
	var createDesc = __webpack_require__(28);
	var _create = __webpack_require__(49);
	var gOPNExt = __webpack_require__(70);
	var $GOPD = __webpack_require__(54);
	var $DP = __webpack_require__(15);
	var $keys = __webpack_require__(23);
	var gOPD = $GOPD.f;
	var dP = $DP.f;
	var gOPN = gOPNExt.f;
	var $Symbol = global.Symbol;
	var $JSON = global.JSON;
	var _stringify = $JSON && $JSON.stringify;
	var PROTOTYPE = 'prototype';
	var HIDDEN = wks('_hidden');
	var TO_PRIMITIVE = wks('toPrimitive');
	var isEnum = {}.propertyIsEnumerable;
	var SymbolRegistry = shared('symbol-registry');
	var AllSymbols = shared('symbols');
	var OPSymbols = shared('op-symbols');
	var ObjectProto = Object[PROTOTYPE];
	var USE_NATIVE = typeof $Symbol == 'function';
	var QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function () { return dP(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function (tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P));
	  var i = 0;
	  var l = keys.length;
	  var key;
	  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto;
	  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function (value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(71).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(32).f = $propertyIsEnumerable;
	  __webpack_require__(47).f = $getOwnPropertySymbols;

	  if (DESCRIPTORS && !__webpack_require__(30)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

	for (var es6Symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

	for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function (key) {
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
	    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
	  },
	  useSetter: function () { setter = true; },
	  useSimple: function () { setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    var args = [it];
	    var i = 1;
	    var replacer, $replacer;
	    while (arguments.length > i) args.push(arguments[i++]);
	    $replacer = replacer = args[1];
	    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    if (!isArray(replacer)) replacer = function (key, value) {
	      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(20)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);


	/***/ }),
	/* 105 */
	/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(23);
	var gOPS = __webpack_require__(47);
	var pIE = __webpack_require__(32);
	module.exports = function (it) {
	  var result = getKeys(it);
	  var getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it);
	    var isEnum = pIE.f;
	    var i = 0;
	    var key;
	    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
	  } return result;
	};


	/***/ }),
	/* 106 */
	/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(29);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


	/***/ }),
	/* 107 */
	/***/ (function(module, exports) {



	/***/ }),
	/* 108 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(53)('asyncIterator');


	/***/ }),
	/* 109 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(53)('observable');


	/***/ }),
	/* 110 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(111), __esModule: true };

	/***/ }),
	/* 111 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(112);
	module.exports = __webpack_require__(4).Object.setPrototypeOf;


	/***/ }),
	/* 112 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(10);
	$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(113).set });


	/***/ }),
	/* 113 */
	/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(16);
	var anObject = __webpack_require__(21);
	var check = function (O, proto) {
	  anObject(O);
	  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function (test, buggy, set) {
	      try {
	        set = __webpack_require__(39)(Function.call, __webpack_require__(54).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch (e) { buggy = true; }
	      return function setPrototypeOf(O, proto) {
	        check(O, proto);
	        if (buggy) O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};


	/***/ }),
	/* 114 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(115);
	var $Object = __webpack_require__(4).Object;
	module.exports = function create(P, D) {
	  return $Object.create(P, D);
	};


	/***/ }),
	/* 115 */
	/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(49) });


	/***/ }),
	/* 116 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * Draggabilly v2.2.0
	 * Make that shiz draggable
	 * https://draggabilly.desandro.com
	 * MIT license
	 */

	/*jshint browser: true, strict: true, undef: true, unused: true */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*globals define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	        __webpack_require__(117),
	        __webpack_require__(118)
	      ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( getSize, Unidragger ) {
	        return factory( window, getSize, Unidragger );
	      }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      window,
	      require('get-size'),
	      require('unidragger')
	    );
	  } else {
	    // browser global
	    window.Draggabilly = factory(
	      window,
	      window.getSize,
	      window.Unidragger
	    );
	  }

	}( window, function factory( window, getSize, Unidragger ) {

	'use strict';

	// -------------------------- helpers & variables -------------------------- //

	// extend objects
	function extend( a, b ) {
	  for ( var prop in b ) {
	    a[ prop ] = b[ prop ];
	  }
	  return a;
	}

	function noop() {}

	var jQuery = window.jQuery;

	// --------------------------  -------------------------- //

	function Draggabilly( element, options ) {
	  // querySelector if string
	  this.element = typeof element == 'string' ?
	    document.querySelector( element ) : element;

	  if ( jQuery ) {
	    this.$element = jQuery( this.element );
	  }

	  // options
	  this.options = extend( {}, this.constructor.defaults );
	  this.option( options );

	  this._create();
	}

	// inherit Unidragger methods
	var proto = Draggabilly.prototype = Object.create( Unidragger.prototype );

	Draggabilly.defaults = {
	};

	/**
	 * set options
	 * @param {Object} opts
	 */
	proto.option = function( opts ) {
	  extend( this.options, opts );
	};

	// css position values that don't need to be set
	var positionValues = {
	  relative: true,
	  absolute: true,
	  fixed: true
	};

	proto._create = function() {
	  // properties
	  this.position = {};
	  this._getPosition();

	  this.startPoint = { x: 0, y: 0 };
	  this.dragPoint = { x: 0, y: 0 };

	  this.startPosition = extend( {}, this.position );

	  // set relative positioning
	  var style = getComputedStyle( this.element );
	  if ( !positionValues[ style.position ] ) {
	    this.element.style.position = 'relative';
	  }

	  // events, bridge jQuery events from vanilla
	  this.on( 'pointerDown', this.onPointerDown );
	  this.on( 'pointerMove', this.onPointerMove );
	  this.on( 'pointerUp', this.onPointerUp );

	  this.enable();
	  this.setHandles();
	};

	/**
	 * set this.handles and bind start events to 'em
	 */
	proto.setHandles = function() {
	  this.handles = this.options.handle ?
	    this.element.querySelectorAll( this.options.handle ) : [ this.element ];

	  this.bindHandles();
	};

	/**
	 * emits events via EvEmitter and jQuery events
	 * @param {String} type - name of event
	 * @param {Event} event - original event
	 * @param {Array} args - extra arguments
	 */
	proto.dispatchEvent = function( type, event, args ) {
	  var emitArgs = [ event ].concat( args );
	  this.emitEvent( type, emitArgs );
	  this.dispatchJQueryEvent( type, event, args );
	};

	proto.dispatchJQueryEvent = function( type, event, args ) {
	  var jQuery = window.jQuery;
	  // trigger jQuery event
	  if ( !jQuery || !this.$element ) {
	    return;
	  }
	  // create jQuery event
	  var $event = jQuery.Event( event );
	  $event.type = type;
	  this.$element.trigger( $event, args );
	};

	// -------------------------- position -------------------------- //

	// get x/y position from style
	proto._getPosition = function() {
	  var style = getComputedStyle( this.element );
	  var x = this._getPositionCoord( style.left, 'width' );
	  var y = this._getPositionCoord( style.top, 'height' );
	  // clean up 'auto' or other non-integer values
	  this.position.x = isNaN( x ) ? 0 : x;
	  this.position.y = isNaN( y ) ? 0 : y;

	  this._addTransformPosition( style );
	};

	proto._getPositionCoord = function( styleSide, measure ) {
	  if ( styleSide.indexOf('%') != -1 ) {
	    // convert percent into pixel for Safari, #75
	    var parentSize = getSize( this.element.parentNode );
	    // prevent not-in-DOM element throwing bug, #131
	    return !parentSize ? 0 :
	      ( parseFloat( styleSide ) / 100 ) * parentSize[ measure ];
	  }
	  return parseInt( styleSide, 10 );
	};

	// add transform: translate( x, y ) to position
	proto._addTransformPosition = function( style ) {
	  var transform = style.transform;
	  // bail out if value is 'none'
	  if ( transform.indexOf('matrix') !== 0 ) {
	    return;
	  }
	  // split matrix(1, 0, 0, 1, x, y)
	  var matrixValues = transform.split(',');
	  // translate X value is in 12th or 4th position
	  var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;
	  var translateX = parseInt( matrixValues[ xIndex ], 10 );
	  // translate Y value is in 13th or 5th position
	  var translateY = parseInt( matrixValues[ xIndex + 1 ], 10 );
	  this.position.x += translateX;
	  this.position.y += translateY;
	};

	// -------------------------- events -------------------------- //

	proto.onPointerDown = function( event, pointer ) {
	  this.element.classList.add('is-pointer-down');
	  this.dispatchJQueryEvent( 'pointerDown', event, [ pointer ] );
	};

	/**
	 * drag start
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto.dragStart = function( event, pointer ) {
	  if ( !this.isEnabled ) {
	    return;
	  }
	  this._getPosition();
	  this.measureContainment();
	  // position _when_ drag began
	  this.startPosition.x = this.position.x;
	  this.startPosition.y = this.position.y;
	  // reset left/top style
	  this.setLeftTop();

	  this.dragPoint.x = 0;
	  this.dragPoint.y = 0;

	  this.element.classList.add('is-dragging');
	  this.dispatchEvent( 'dragStart', event, [ pointer ] );
	  // start animation
	  this.animate();
	};

	proto.measureContainment = function() {
	  var container = this.getContainer();
	  if ( !container ) {
	    return;
	  }

	  var elemSize = getSize( this.element );
	  var containerSize = getSize( container );
	  var elemRect = this.element.getBoundingClientRect();
	  var containerRect = container.getBoundingClientRect();

	  var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;
	  var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;

	  var position = this.relativeStartPosition = {
	    x: elemRect.left - ( containerRect.left + containerSize.borderLeftWidth ),
	    y: elemRect.top - ( containerRect.top + containerSize.borderTopWidth )
	  };

	  this.containSize = {
	    width: ( containerSize.width - borderSizeX ) - position.x - elemSize.width,
	    height: ( containerSize.height - borderSizeY ) - position.y - elemSize.height
	  };
	};

	proto.getContainer = function() {
	  var containment = this.options.containment;
	  if ( !containment ) {
	    return;
	  }
	  var isElement = containment instanceof HTMLElement;
	  // use as element
	  if ( isElement ) {
	    return containment;
	  }
	  // querySelector if string
	  if ( typeof containment == 'string' ) {
	    return document.querySelector( containment );
	  }
	  // fallback to parent element
	  return this.element.parentNode;
	};

	// ----- move event ----- //

	proto.onPointerMove = function( event, pointer, moveVector ) {
	  this.dispatchJQueryEvent( 'pointerMove', event, [ pointer, moveVector ] );
	};

	/**
	 * drag move
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto.dragMove = function( event, pointer, moveVector ) {
	  if ( !this.isEnabled ) {
	    return;
	  }
	  var dragX = moveVector.x;
	  var dragY = moveVector.y;

	  var grid = this.options.grid;
	  var gridX = grid && grid[0];
	  var gridY = grid && grid[1];

	  dragX = applyGrid( dragX, gridX );
	  dragY = applyGrid( dragY, gridY );

	  dragX = this.containDrag( 'x', dragX, gridX );
	  dragY = this.containDrag( 'y', dragY, gridY );

	  // constrain to axis
	  dragX = this.options.axis == 'y' ? 0 : dragX;
	  dragY = this.options.axis == 'x' ? 0 : dragY;

	  this.position.x = this.startPosition.x + dragX;
	  this.position.y = this.startPosition.y + dragY;
	  // set dragPoint properties
	  this.dragPoint.x = dragX;
	  this.dragPoint.y = dragY;

	  this.dispatchEvent( 'dragMove', event, [ pointer, moveVector ] );
	};

	function applyGrid( value, grid, method ) {
	  method = method || 'round';
	  return grid ? Math[ method ]( value / grid ) * grid : value;
	}

	proto.containDrag = function( axis, drag, grid ) {
	  if ( !this.options.containment ) {
	    return drag;
	  }
	  var measure = axis == 'x' ? 'width' : 'height';

	  var rel = this.relativeStartPosition[ axis ];
	  var min = applyGrid( -rel, grid, 'ceil' );
	  var max = this.containSize[ measure ];
	  max = applyGrid( max, grid, 'floor' );
	  return  Math.max( min, Math.min( max, drag ) );
	};

	// ----- end event ----- //

	/**
	 * pointer up
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto.onPointerUp = function( event, pointer ) {
	  this.element.classList.remove('is-pointer-down');
	  this.dispatchJQueryEvent( 'pointerUp', event, [ pointer ] );
	};

	/**
	 * drag end
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto.dragEnd = function( event, pointer ) {
	  if ( !this.isEnabled ) {
	    return;
	  }
	  // use top left position when complete
	  this.element.style.transform = '';
	  this.setLeftTop();
	  this.element.classList.remove('is-dragging');
	  this.dispatchEvent( 'dragEnd', event, [ pointer ] );
	};

	// -------------------------- animation -------------------------- //

	proto.animate = function() {
	  // only render and animate if dragging
	  if ( !this.isDragging ) {
	    return;
	  }

	  this.positionDrag();

	  var _this = this;
	  requestAnimationFrame( function animateFrame() {
	    _this.animate();
	  });

	};

	// left/top positioning
	proto.setLeftTop = function() {
	  this.element.style.left = this.position.x + 'px';
	  this.element.style.top  = this.position.y + 'px';
	};

	proto.positionDrag = function() {
	  this.element.style.transform = 'translate3d( ' + this.dragPoint.x +
	    'px, ' + this.dragPoint.y + 'px, 0)';
	};

	// ----- staticClick ----- //

	proto.staticClick = function( event, pointer ) {
	  this.dispatchEvent( 'staticClick', event, [ pointer ] );
	};

	// ----- methods ----- //

	/**
	 * @param {Number} x
	 * @param {Number} y
	 */
	proto.setPosition = function( x, y ) {
	  this.position.x = x;
	  this.position.y = y;
	  this.setLeftTop();
	};

	proto.enable = function() {
	  this.isEnabled = true;
	};

	proto.disable = function() {
	  this.isEnabled = false;
	  if ( this.isDragging ) {
	    this.dragEnd();
	  }
	};

	proto.destroy = function() {
	  this.disable();
	  // reset styles
	  this.element.style.transform = '';
	  this.element.style.left = '';
	  this.element.style.top = '';
	  this.element.style.position = '';
	  // unbind handles
	  this.unbindHandles();
	  // remove jQuery data
	  if ( this.$element ) {
	    this.$element.removeData('draggabilly');
	  }
	};

	// ----- jQuery bridget ----- //

	// required for jQuery bridget
	proto._init = noop;

	if ( jQuery && jQuery.bridget ) {
	  jQuery.bridget( 'draggabilly', Draggabilly );
	}

	// -----  ----- //

	return Draggabilly;

	}));


	/***/ }),
	/* 117 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * getSize v2.0.3
	 * measure size of elements
	 * MIT license
	 */

	/* jshint browser: true, strict: true, undef: true, unused: true */
	/* globals console: false */

	( function( window, factory ) {
	  /* jshint strict: false */ /* globals define, module */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
					__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
					(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
					__WEBPACK_AMD_DEFINE_FACTORY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory();
	  } else {
	    // browser global
	    window.getSize = factory();
	  }

	})( window, function factory() {
	'use strict';

	// -------------------------- helpers -------------------------- //

	// get a number from a string, not a percentage
	function getStyleSize( value ) {
	  var num = parseFloat( value );
	  // not a percent like '100%', and a number
	  var isValid = value.indexOf('%') == -1 && !isNaN( num );
	  return isValid && num;
	}

	function noop() {}

	var logError = typeof console == 'undefined' ? noop :
	  function( message ) {
	    console.error( message );
	  };

	// -------------------------- measurements -------------------------- //

	var measurements = [
	  'paddingLeft',
	  'paddingRight',
	  'paddingTop',
	  'paddingBottom',
	  'marginLeft',
	  'marginRight',
	  'marginTop',
	  'marginBottom',
	  'borderLeftWidth',
	  'borderRightWidth',
	  'borderTopWidth',
	  'borderBottomWidth'
	];

	var measurementsLength = measurements.length;

	function getZeroSize() {
	  var size = {
	    width: 0,
	    height: 0,
	    innerWidth: 0,
	    innerHeight: 0,
	    outerWidth: 0,
	    outerHeight: 0
	  };
	  for ( var i=0; i < measurementsLength; i++ ) {
	    var measurement = measurements[i];
	    size[ measurement ] = 0;
	  }
	  return size;
	}

	// -------------------------- getStyle -------------------------- //

	/**
	 * getStyle, get style of element, check for Firefox bug
	 * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
	 */
	function getStyle( elem ) {
	  var style = getComputedStyle( elem );
	  if ( !style ) {
	    logError( 'Style returned ' + style +
	      '. Are you running this code in a hidden iframe on Firefox? ' +
	      'See https://bit.ly/getsizebug1' );
	  }
	  return style;
	}

	// -------------------------- setup -------------------------- //

	var isSetup = false;

	var isBoxSizeOuter;

	/**
	 * setup
	 * check isBoxSizerOuter
	 * do on first getSize() rather than on page load for Firefox bug
	 */
	function setup() {
	  // setup once
	  if ( isSetup ) {
	    return;
	  }
	  isSetup = true;

	  // -------------------------- box sizing -------------------------- //

	  /**
	   * Chrome & Safari measure the outer-width on style.width on border-box elems
	   * IE11 & Firefox<29 measures the inner-width
	   */
	  var div = document.createElement('div');
	  div.style.width = '200px';
	  div.style.padding = '1px 2px 3px 4px';
	  div.style.borderStyle = 'solid';
	  div.style.borderWidth = '1px 2px 3px 4px';
	  div.style.boxSizing = 'border-box';

	  var body = document.body || document.documentElement;
	  body.appendChild( div );
	  var style = getStyle( div );
	  // round value for browser zoom. desandro/masonry#928
	  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;
	  getSize.isBoxSizeOuter = isBoxSizeOuter;

	  body.removeChild( div );
	}

	// -------------------------- getSize -------------------------- //

	function getSize( elem ) {
	  setup();

	  // use querySeletor if elem is string
	  if ( typeof elem == 'string' ) {
	    elem = document.querySelector( elem );
	  }

	  // do not proceed on non-objects
	  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {
	    return;
	  }

	  var style = getStyle( elem );

	  // if hidden, everything is 0
	  if ( style.display == 'none' ) {
	    return getZeroSize();
	  }

	  var size = {};
	  size.width = elem.offsetWidth;
	  size.height = elem.offsetHeight;

	  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

	  // get all measurements
	  for ( var i=0; i < measurementsLength; i++ ) {
	    var measurement = measurements[i];
	    var value = style[ measurement ];
	    var num = parseFloat( value );
	    // any 'auto', 'medium' value will be 0
	    size[ measurement ] = !isNaN( num ) ? num : 0;
	  }

	  var paddingWidth = size.paddingLeft + size.paddingRight;
	  var paddingHeight = size.paddingTop + size.paddingBottom;
	  var marginWidth = size.marginLeft + size.marginRight;
	  var marginHeight = size.marginTop + size.marginBottom;
	  var borderWidth = size.borderLeftWidth + size.borderRightWidth;
	  var borderHeight = size.borderTopWidth + size.borderBottomWidth;

	  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

	  // overwrite width and height if we can get it from style
	  var styleWidth = getStyleSize( style.width );
	  if ( styleWidth !== false ) {
	    size.width = styleWidth +
	      // add padding and border unless it's already including it
	      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );
	  }

	  var styleHeight = getStyleSize( style.height );
	  if ( styleHeight !== false ) {
	    size.height = styleHeight +
	      // add padding and border unless it's already including it
	      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );
	  }

	  size.innerWidth = size.width - ( paddingWidth + borderWidth );
	  size.innerHeight = size.height - ( paddingHeight + borderHeight );

	  size.outerWidth = size.width + marginWidth;
	  size.outerHeight = size.height + marginHeight;

	  return size;
	}

	return getSize;

	});


	/***/ }),
	/* 118 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * Unidragger v2.3.0
	 * Draggable base class
	 * MIT license
	 */

	/*jshint browser: true, unused: true, undef: true, strict: true */

	( function( window, factory ) {
	  // universal module definition
	  /*jshint strict: false */ /*globals define, module, require */

	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	      __webpack_require__(119)
	    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Unipointer ) {
	      return factory( window, Unipointer );
	    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      window,
	      require('unipointer')
	    );
	  } else {
	    // browser global
	    window.Unidragger = factory(
	      window,
	      window.Unipointer
	    );
	  }

	}( window, function factory( window, Unipointer ) {

	'use strict';

	// -------------------------- Unidragger -------------------------- //

	function Unidragger() {}

	// inherit Unipointer & EvEmitter
	var proto = Unidragger.prototype = Object.create( Unipointer.prototype );

	// ----- bind start ----- //

	proto.bindHandles = function() {
	  this._bindHandles( true );
	};

	proto.unbindHandles = function() {
	  this._bindHandles( false );
	};

	/**
	 * Add or remove start event
	 * @param {Boolean} isAdd
	 */
	proto._bindHandles = function( isAdd ) {
	  // munge isAdd, default to true
	  isAdd = isAdd === undefined ? true : isAdd;
	  // bind each handle
	  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';
	  var touchAction = isAdd ? this._touchActionValue : '';
	  for ( var i=0; i < this.handles.length; i++ ) {
	    var handle = this.handles[i];
	    this._bindStartEvent( handle, isAdd );
	    handle[ bindMethod ]( 'click', this );
	    // touch-action: none to override browser touch gestures. metafizzy/flickity#540
	    if ( window.PointerEvent ) {
	      handle.style.touchAction = touchAction;
	    }
	  }
	};

	// prototype so it can be overwriteable by Flickity
	proto._touchActionValue = 'none';

	// ----- start event ----- //

	/**
	 * pointer start
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto.pointerDown = function( event, pointer ) {
	  var isOkay = this.okayPointerDown( event );
	  if ( !isOkay ) {
	    return;
	  }
	  // track start event position
	  this.pointerDownPointer = pointer;

	  event.preventDefault();
	  this.pointerDownBlur();
	  // bind move and end events
	  this._bindPostStartEvents( event );
	  this.emitEvent( 'pointerDown', [ event, pointer ] );
	};

	// nodes that have text fields
	var cursorNodes = {
	  TEXTAREA: true,
	  INPUT: true,
	  SELECT: true,
	  OPTION: true,
	};

	// input types that do not have text fields
	var clickTypes = {
	  radio: true,
	  checkbox: true,
	  button: true,
	  submit: true,
	  image: true,
	  file: true,
	};

	// dismiss inputs with text fields. flickity#403, flickity#404
	proto.okayPointerDown = function( event ) {
	  var isCursorNode = cursorNodes[ event.target.nodeName ];
	  var isClickType = clickTypes[ event.target.type ];
	  var isOkay = !isCursorNode || isClickType;
	  if ( !isOkay ) {
	    this._pointerReset();
	  }
	  return isOkay;
	};

	// kludge to blur previously focused input
	proto.pointerDownBlur = function() {
	  var focused = document.activeElement;
	  // do not blur body for IE10, metafizzy/flickity#117
	  var canBlur = focused && focused.blur && focused != document.body;
	  if ( canBlur ) {
	    focused.blur();
	  }
	};

	// ----- move event ----- //

	/**
	 * drag move
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto.pointerMove = function( event, pointer ) {
	  var moveVector = this._dragPointerMove( event, pointer );
	  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );
	  this._dragMove( event, pointer, moveVector );
	};

	// base pointer move logic
	proto._dragPointerMove = function( event, pointer ) {
	  var moveVector = {
	    x: pointer.pageX - this.pointerDownPointer.pageX,
	    y: pointer.pageY - this.pointerDownPointer.pageY
	  };
	  // start drag if pointer has moved far enough to start drag
	  if ( !this.isDragging && this.hasDragStarted( moveVector ) ) {
	    this._dragStart( event, pointer );
	  }
	  return moveVector;
	};

	// condition if pointer has moved far enough to start drag
	proto.hasDragStarted = function( moveVector ) {
	  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;
	};

	// ----- end event ----- //

	/**
	 * pointer up
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto.pointerUp = function( event, pointer ) {
	  this.emitEvent( 'pointerUp', [ event, pointer ] );
	  this._dragPointerUp( event, pointer );
	};

	proto._dragPointerUp = function( event, pointer ) {
	  if ( this.isDragging ) {
	    this._dragEnd( event, pointer );
	  } else {
	    // pointer didn't move enough for drag to start
	    this._staticClick( event, pointer );
	  }
	};

	// -------------------------- drag -------------------------- //

	// dragStart
	proto._dragStart = function( event, pointer ) {
	  this.isDragging = true;
	  // prevent clicks
	  this.isPreventingClicks = true;
	  this.dragStart( event, pointer );
	};

	proto.dragStart = function( event, pointer ) {
	  this.emitEvent( 'dragStart', [ event, pointer ] );
	};

	// dragMove
	proto._dragMove = function( event, pointer, moveVector ) {
	  // do not drag if not dragging yet
	  if ( !this.isDragging ) {
	    return;
	  }

	  this.dragMove( event, pointer, moveVector );
	};

	proto.dragMove = function( event, pointer, moveVector ) {
	  event.preventDefault();
	  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );
	};

	// dragEnd
	proto._dragEnd = function( event, pointer ) {
	  // set flags
	  this.isDragging = false;
	  // re-enable clicking async
	  setTimeout( function() {
	    delete this.isPreventingClicks;
	  }.bind( this ) );

	  this.dragEnd( event, pointer );
	};

	proto.dragEnd = function( event, pointer ) {
	  this.emitEvent( 'dragEnd', [ event, pointer ] );
	};

	// ----- onclick ----- //

	// handle all clicks and prevent clicks when dragging
	proto.onclick = function( event ) {
	  if ( this.isPreventingClicks ) {
	    event.preventDefault();
	  }
	};

	// ----- staticClick ----- //

	// triggered after pointer down & up with no/tiny movement
	proto._staticClick = function( event, pointer ) {
	  // ignore emulated mouse up clicks
	  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {
	    return;
	  }

	  this.staticClick( event, pointer );

	  // set flag for emulated clicks 300ms after touchend
	  if ( event.type != 'mouseup' ) {
	    this.isIgnoringMouseUp = true;
	    // reset flag after 300ms
	    setTimeout( function() {
	      delete this.isIgnoringMouseUp;
	    }.bind( this ), 400 );
	  }
	};

	proto.staticClick = function( event, pointer ) {
	  this.emitEvent( 'staticClick', [ event, pointer ] );
	};

	// ----- utils ----- //

	Unidragger.getPointerPoint = Unipointer.getPointerPoint;

	// -----  ----- //

	return Unidragger;

	}));


	/***/ }),
	/* 119 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * Unipointer v2.3.0
	 * base class for doing one thing with pointer event
	 * MIT license
	 */

	/*jshint browser: true, undef: true, unused: true, strict: true */

	( function( window, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /*global define, module, require */
	  if ( true ) {
	    // AMD
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
	      __webpack_require__(120)
	    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter ) {
	      return factory( window, EvEmitter );
	    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS
	    module.exports = factory(
	      window,
	      require('ev-emitter')
	    );
	  } else {
	    // browser global
	    window.Unipointer = factory(
	      window,
	      window.EvEmitter
	    );
	  }

	}( window, function factory( window, EvEmitter ) {

	'use strict';

	function noop() {}

	function Unipointer() {}

	// inherit EvEmitter
	var proto = Unipointer.prototype = Object.create( EvEmitter.prototype );

	proto.bindStartEvent = function( elem ) {
	  this._bindStartEvent( elem, true );
	};

	proto.unbindStartEvent = function( elem ) {
	  this._bindStartEvent( elem, false );
	};

	/**
	 * Add or remove start event
	 * @param {Boolean} isAdd - remove if falsey
	 */
	proto._bindStartEvent = function( elem, isAdd ) {
	  // munge isAdd, default to true
	  isAdd = isAdd === undefined ? true : isAdd;
	  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';

	  // default to mouse events
	  var startEvent = 'mousedown';
	  if ( window.PointerEvent ) {
	    // Pointer Events
	    startEvent = 'pointerdown';
	  } else if ( 'ontouchstart' in window ) {
	    // Touch Events. iOS Safari
	    startEvent = 'touchstart';
	  }
	  elem[ bindMethod ]( startEvent, this );
	};

	// trigger handler methods for events
	proto.handleEvent = function( event ) {
	  var method = 'on' + event.type;
	  if ( this[ method ] ) {
	    this[ method ]( event );
	  }
	};

	// returns the touch that we're keeping track of
	proto.getTouch = function( touches ) {
	  for ( var i=0; i < touches.length; i++ ) {
	    var touch = touches[i];
	    if ( touch.identifier == this.pointerIdentifier ) {
	      return touch;
	    }
	  }
	};

	// ----- start event ----- //

	proto.onmousedown = function( event ) {
	  // dismiss clicks from right or middle buttons
	  var button = event.button;
	  if ( button && ( button !== 0 && button !== 1 ) ) {
	    return;
	  }
	  this._pointerDown( event, event );
	};

	proto.ontouchstart = function( event ) {
	  this._pointerDown( event, event.changedTouches[0] );
	};

	proto.onpointerdown = function( event ) {
	  this._pointerDown( event, event );
	};

	/**
	 * pointer start
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 */
	proto._pointerDown = function( event, pointer ) {
	  // dismiss right click and other pointers
	  // button = 0 is okay, 1-4 not
	  if ( event.button || this.isPointerDown ) {
	    return;
	  }

	  this.isPointerDown = true;
	  // save pointer identifier to match up touch events
	  this.pointerIdentifier = pointer.pointerId !== undefined ?
	    // pointerId for pointer events, touch.indentifier for touch events
	    pointer.pointerId : pointer.identifier;

	  this.pointerDown( event, pointer );
	};

	proto.pointerDown = function( event, pointer ) {
	  this._bindPostStartEvents( event );
	  this.emitEvent( 'pointerDown', [ event, pointer ] );
	};

	// hash of events to be bound after start event
	var postStartEvents = {
	  mousedown: [ 'mousemove', 'mouseup' ],
	  touchstart: [ 'touchmove', 'touchend', 'touchcancel' ],
	  pointerdown: [ 'pointermove', 'pointerup', 'pointercancel' ],
	};

	proto._bindPostStartEvents = function( event ) {
	  if ( !event ) {
	    return;
	  }
	  // get proper events to match start event
	  var events = postStartEvents[ event.type ];
	  // bind events to node
	  events.forEach( function( eventName ) {
	    window.addEventListener( eventName, this );
	  }, this );
	  // save these arguments
	  this._boundPointerEvents = events;
	};

	proto._unbindPostStartEvents = function() {
	  // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)
	  if ( !this._boundPointerEvents ) {
	    return;
	  }
	  this._boundPointerEvents.forEach( function( eventName ) {
	    window.removeEventListener( eventName, this );
	  }, this );

	  delete this._boundPointerEvents;
	};

	// ----- move event ----- //

	proto.onmousemove = function( event ) {
	  this._pointerMove( event, event );
	};

	proto.onpointermove = function( event ) {
	  if ( event.pointerId == this.pointerIdentifier ) {
	    this._pointerMove( event, event );
	  }
	};

	proto.ontouchmove = function( event ) {
	  var touch = this.getTouch( event.changedTouches );
	  if ( touch ) {
	    this._pointerMove( event, touch );
	  }
	};

	/**
	 * pointer move
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 * @private
	 */
	proto._pointerMove = function( event, pointer ) {
	  this.pointerMove( event, pointer );
	};

	// public
	proto.pointerMove = function( event, pointer ) {
	  this.emitEvent( 'pointerMove', [ event, pointer ] );
	};

	// ----- end event ----- //


	proto.onmouseup = function( event ) {
	  this._pointerUp( event, event );
	};

	proto.onpointerup = function( event ) {
	  if ( event.pointerId == this.pointerIdentifier ) {
	    this._pointerUp( event, event );
	  }
	};

	proto.ontouchend = function( event ) {
	  var touch = this.getTouch( event.changedTouches );
	  if ( touch ) {
	    this._pointerUp( event, touch );
	  }
	};

	/**
	 * pointer up
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 * @private
	 */
	proto._pointerUp = function( event, pointer ) {
	  this._pointerDone();
	  this.pointerUp( event, pointer );
	};

	// public
	proto.pointerUp = function( event, pointer ) {
	  this.emitEvent( 'pointerUp', [ event, pointer ] );
	};

	// ----- pointer done ----- //

	// triggered on pointer up & pointer cancel
	proto._pointerDone = function() {
	  this._pointerReset();
	  this._unbindPostStartEvents();
	  this.pointerDone();
	};

	proto._pointerReset = function() {
	  // reset properties
	  this.isPointerDown = false;
	  delete this.pointerIdentifier;
	};

	proto.pointerDone = noop;

	// ----- pointer cancel ----- //

	proto.onpointercancel = function( event ) {
	  if ( event.pointerId == this.pointerIdentifier ) {
	    this._pointerCancel( event, event );
	  }
	};

	proto.ontouchcancel = function( event ) {
	  var touch = this.getTouch( event.changedTouches );
	  if ( touch ) {
	    this._pointerCancel( event, touch );
	  }
	};

	/**
	 * pointer cancel
	 * @param {Event} event
	 * @param {Event or Touch} pointer
	 * @private
	 */
	proto._pointerCancel = function( event, pointer ) {
	  this._pointerDone();
	  this.pointerCancel( event, pointer );
	};

	// public
	proto.pointerCancel = function( event, pointer ) {
	  this.emitEvent( 'pointerCancel', [ event, pointer ] );
	};

	// -----  ----- //

	// utility function for getting x/y coords from event
	Unipointer.getPointerPoint = function( pointer ) {
	  return {
	    x: pointer.pageX,
	    y: pointer.pageY
	  };
	};

	// -----  ----- //

	return Unipointer;

	}));


	/***/ }),
	/* 120 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * EvEmitter v1.1.0
	 * Lil' event emitter
	 * MIT License
	 */

	/* jshint unused: true, undef: true, strict: true */

	( function( global, factory ) {
	  // universal module definition
	  /* jshint strict: false */ /* globals define, module, window */
	  if ( true ) {
	    // AMD - RequireJS
	    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
					__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
					(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
					__WEBPACK_AMD_DEFINE_FACTORY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ( typeof module == 'object' && module.exports ) {
	    // CommonJS - Browserify, Webpack
	    module.exports = factory();
	  } else {
	    // Browser globals
	    global.EvEmitter = factory();
	  }

	}( typeof window != 'undefined' ? window : this, function() {

	"use strict";

	function EvEmitter() {}

	var proto = EvEmitter.prototype;

	proto.on = function( eventName, listener ) {
	  if ( !eventName || !listener ) {
	    return;
	  }
	  // set events hash
	  var events = this._events = this._events || {};
	  // set listeners array
	  var listeners = events[ eventName ] = events[ eventName ] || [];
	  // only add once
	  if ( listeners.indexOf( listener ) == -1 ) {
	    listeners.push( listener );
	  }

	  return this;
	};

	proto.once = function( eventName, listener ) {
	  if ( !eventName || !listener ) {
	    return;
	  }
	  // add event
	  this.on( eventName, listener );
	  // set once flag
	  // set onceEvents hash
	  var onceEvents = this._onceEvents = this._onceEvents || {};
	  // set onceListeners object
	  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
	  // set flag
	  onceListeners[ listener ] = true;

	  return this;
	};

	proto.off = function( eventName, listener ) {
	  var listeners = this._events && this._events[ eventName ];
	  if ( !listeners || !listeners.length ) {
	    return;
	  }
	  var index = listeners.indexOf( listener );
	  if ( index != -1 ) {
	    listeners.splice( index, 1 );
	  }

	  return this;
	};

	proto.emitEvent = function( eventName, args ) {
	  var listeners = this._events && this._events[ eventName ];
	  if ( !listeners || !listeners.length ) {
	    return;
	  }
	  // copy over to avoid interference if .off() in listener
	  listeners = listeners.slice(0);
	  args = args || [];
	  // once stuff
	  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

	  for ( var i=0; i < listeners.length; i++ ) {
	    var listener = listeners[i]
	    var isOnce = onceListeners && onceListeners[ listener ];
	    if ( isOnce ) {
	      // remove listener
	      // remove before trigger to prevent recursion
	      this.off( eventName, listener );
	      // unset once flag
	      delete onceListeners[ listener ];
	    }
	    // trigger listener
	    listener.apply( this, args );
	  }

	  return this;
	};

	proto.allOff = function() {
	  delete this._events;
	  delete this._onceEvents;
	};

	return EvEmitter;

	}));


	/***/ }),
	/* 121 */
	/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


	/***/ }),
	/* 122 */
	/***/ (function(module, exports, __webpack_require__) {

	var core = __webpack_require__(4);
	var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
	module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
	  return $JSON.stringify.apply($JSON, arguments);
	};


	/***/ }),
	/* 123 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(124), __esModule: true };

	/***/ }),
	/* 124 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(125);
	module.exports = __webpack_require__(4).setImmediate;


	/***/ }),
	/* 125 */
	/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);
	var $task = __webpack_require__(126);
	$export($export.G + $export.B, {
	  setImmediate: $task.set,
	  clearImmediate: $task.clear
	});


	/***/ }),
	/* 126 */
	/***/ (function(module, exports, __webpack_require__) {

	var ctx = __webpack_require__(39);
	var invoke = __webpack_require__(127);
	var html = __webpack_require__(68);
	var cel = __webpack_require__(40);
	var global = __webpack_require__(11);
	var process = global.process;
	var setTask = global.setImmediate;
	var clearTask = global.clearImmediate;
	var MessageChannel = global.MessageChannel;
	var Dispatch = global.Dispatch;
	var counter = 0;
	var queue = {};
	var ONREADYSTATECHANGE = 'onreadystatechange';
	var defer, channel, port;
	var run = function () {
	  var id = +this;
	  // eslint-disable-next-line no-prototype-builtins
	  if (queue.hasOwnProperty(id)) {
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function (event) {
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if (!setTask || !clearTask) {
	  setTask = function setImmediate(fn) {
	    var args = [];
	    var i = 1;
	    while (arguments.length > i) args.push(arguments[i++]);
	    queue[++counter] = function () {
	      // eslint-disable-next-line no-new-func
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id) {
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if (__webpack_require__(29)(process) == 'process') {
	    defer = function (id) {
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Sphere (JS game engine) Dispatch API
	  } else if (Dispatch && Dispatch.now) {
	    defer = function (id) {
	      Dispatch.now(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if (MessageChannel) {
	    channel = new MessageChannel();
	    port = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
	    defer = function (id) {
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if (ONREADYSTATECHANGE in cel('script')) {
	    defer = function (id) {
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function (id) {
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set: setTask,
	  clear: clearTask
	};


	/***/ }),
	/* 127 */
	/***/ (function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function (fn, args, that) {
	  var un = that === undefined;
	  switch (args.length) {
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return fn.apply(that, args);
	};


	/***/ }),
	/* 128 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(129);
	var $Object = __webpack_require__(4).Object;
	module.exports = function getOwnPropertyDescriptor(it, key) {
	  return $Object.getOwnPropertyDescriptor(it, key);
	};


	/***/ }),
	/* 129 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject = __webpack_require__(19);
	var $getOwnPropertyDescriptor = __webpack_require__(54).f;

	__webpack_require__(24)('getOwnPropertyDescriptor', function () {
	  return function getOwnPropertyDescriptor(it, key) {
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});


	/***/ }),
	/* 130 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(131), __esModule: true };

	/***/ }),
	/* 131 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(132);
	module.exports = __webpack_require__(4).Object.freeze;


	/***/ }),
	/* 132 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(16);
	var meta = __webpack_require__(69).onFreeze;

	__webpack_require__(24)('freeze', function ($freeze) {
	  return function freeze(it) {
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});


	/***/ }),
	/* 133 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(134);
	module.exports = __webpack_require__(4).Object.keys;


	/***/ }),
	/* 134 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(33);
	var $keys = __webpack_require__(23);

	__webpack_require__(24)('keys', function () {
	  return function keys(it) {
	    return $keys(toObject(it));
	  };
	});


	/***/ }),
	/* 135 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(136), __esModule: true };

	/***/ }),
	/* 136 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(137);
	module.exports = __webpack_require__(4).String.fromCodePoint;


	/***/ }),
	/* 137 */
	/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(10);
	var toAbsoluteIndex = __webpack_require__(63);
	var fromCharCode = String.fromCharCode;
	var $fromCodePoint = String.fromCodePoint;

	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
	    var res = [];
	    var aLen = arguments.length;
	    var i = 0;
	    var code;
	    while (aLen > i) {
	      code = +arguments[i++];
	      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});


	/***/ }),
	/* 138 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-settings {\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-separator {\n    height: 10px; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-text {\n    padding: 10px;\n    color: #263238;\n    font-size: 12px; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select,\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range,\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color {\n    cursor: pointer; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select .eruda-head,\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch,\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-head,\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color .eruda-head {\n    padding: 10px;\n    background: #fff;\n    font-size: 14px;\n    border-bottom: 1px solid #eceffe;\n    border-top: 1px solid #eceffe;\n    margin-top: -1px; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select .eruda-head,\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-head,\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color .eruda-head {\n    -webkit-transition: background 0.3s, color 0.3s;\n    transition: background 0.3s, color 0.3s; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select .eruda-head span,\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-head span,\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color .eruda-head span {\n      float: right; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select .eruda-head:active,\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-head:active,\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color .eruda-head:active {\n      background: #2196f3;\n      color: #fff; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color .eruda-head span {\n    display: inline-block;\n    border: 1px solid #263238;\n    width: 15px;\n    height: 15px; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select ul {\n    display: none; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select ul.eruda-open {\n      display: block; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select ul li {\n      padding: 10px;\n      background: #eceffe;\n      -webkit-transition: background 0.3s, color 0.3s;\n      transition: background 0.3s, color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-settings .eruda-select ul li:active {\n        background: #2196f3;\n        color: #fff; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color ul {\n    display: none;\n    padding: 10px;\n    font-size: 0;\n    background: #eceffe; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color ul.eruda-open {\n      display: block; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-color ul li {\n      display: inline-block;\n      width: 20px;\n      border: 1px solid #263238;\n      height: 20px;\n      margin-right: 10px; }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-input-container {\n    display: none;\n    padding: 10px;\n    background: #eceffe;\n    position: relative; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-input-container.eruda-open {\n      display: block; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-input-container .eruda-range-track {\n      height: 4px;\n      width: 100%;\n      padding: 0 10px;\n      position: absolute;\n      left: 0;\n      top: 16px; }\n      .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-input-container .eruda-range-track .eruda-range-track-bar {\n        background: #707d8b;\n        border-radius: 2px;\n        overflow: hidden;\n        width: 100%;\n        height: 4px; }\n        .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-input-container .eruda-range-track .eruda-range-track-bar .eruda-range-track-progress {\n          height: 100%;\n          background: #263238;\n          width: 50%; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-input-container input {\n      -webkit-appearance: none;\n      background: transparent;\n      height: 4px;\n      width: 100%;\n      position: relative;\n      top: -3px;\n      margin: 0 auto;\n      outline: none;\n      border-radius: 2px; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-range .eruda-input-container input::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      position: relative;\n      top: 0px;\n      z-index: 1;\n      width: 16px;\n      border: none;\n      height: 16px;\n      border-radius: 10px;\n      background: radial-gradient(circle at center, #707d8b 0, #707d8b 15%, #fff 22%, #fff 100%);\n      -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n              box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2); }\n  .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox {\n    float: right;\n    position: relative;\n    vertical-align: top;\n    width: 46px;\n    height: 20px;\n    padding: 3px;\n    border-radius: 18px;\n    -webkit-box-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05);\n            box-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05);\n    cursor: pointer;\n    background-image: linear-gradient(to bottom, #eeeeee, white 25px); }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-input {\n      position: absolute;\n      top: 0;\n      left: 0;\n      opacity: 0; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-label {\n      pointer-events: none;\n      position: relative;\n      display: block;\n      height: 14px;\n      font-size: 10px;\n      text-transform: uppercase;\n      background: #eceeef;\n      border-radius: inherit;\n      -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);\n              box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);\n      -webkit-transition: 0.15s ease-out;\n      transition: 0.15s ease-out;\n      -webkit-transition-property: opacity background;\n      transition-property: opacity background; }\n      .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-label:before, .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-label:after {\n        position: absolute;\n        top: 50%;\n        margin-top: -0.5em;\n        line-height: 1;\n        -webkit-transition: inherit;\n        transition: inherit; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-input:checked ~ .eruda-label {\n      background: #2196f3;\n      -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2);\n              box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2); }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-input:checked ~ .eruda-label:before {\n      opacity: 0; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-input:checked ~ .eruda-label:after {\n      opacity: 1; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-handle {\n      position: absolute;\n      pointer-events: none;\n      top: 0;\n      left: 0;\n      width: 18px;\n      height: 18px;\n      border-radius: 10px;\n      -webkit-box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);\n              box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);\n      background-image: -webkit-gradient(linear, left top, left bottom, color-stop(40%, white), to(#f0f0f0));\n      background-image: linear-gradient(to bottom, white 40%, #f0f0f0);\n      -webkit-transition: left 0.15s ease-out;\n      transition: left 0.15s ease-out; }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-handle:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      margin: -6px 0 0 -6px;\n      width: 12px;\n      height: 12px;\n      border-radius: 6px;\n      -webkit-box-shadow: inset 0 1px rgba(0, 0, 0, 0.02);\n              box-shadow: inset 0 1px rgba(0, 0, 0, 0.02);\n      background-image: -webkit-gradient(linear, left top, left bottom, from(#eeeeee), to(white));\n      background-image: linear-gradient(to bottom, #eeeeee, white); }\n    .eruda-dev-tools .eruda-tools .eruda-settings .eruda-switch .eruda-checkbox .eruda-input:checked ~ .eruda-handle {\n      left: 30px;\n      -webkit-box-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2);\n              box-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2); }\n", ""]);

	// exports


	/***/ }),
	/* 139 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    return "checked";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "<div class=\"eruda-switch\">\n    "
	    + alias4(((helper = (helper = helpers.desc || (depth0 != null ? depth0.desc : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"desc","hash":{},"data":data}) : helper)))
	    + "\n    <label class=\"eruda-checkbox\">\n        <input type=\"checkbox\" class=\"eruda-input\" data-idx=\""
	    + alias4(((helper = (helper = helpers.idx || (depth0 != null ? depth0.idx : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"idx","hash":{},"data":data}) : helper)))
	    + "\" "
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.val : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + ">\n        <span class=\"eruda-label\"></span>\n        <span class=\"eruda-handle\"></span>\n    </label>\n</div>";
	},"useData":true});

	/***/ }),
	/* 140 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    return "           <li>"
	    + container.escapeExpression(container.lambda(depth0, depth0))
	    + "</li>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "<div class=\"eruda-select\">\n    <div class=\"eruda-head\">\n        "
	    + alias4(((helper = (helper = helpers.desc || (depth0 != null ? depth0.desc : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"desc","hash":{},"data":data}) : helper)))
	    + "\n        <span class=\"eruda-val\">"
	    + alias4(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper)))
	    + "</span>\n    </div>\n    <ul data-idx=\""
	    + alias4(((helper = (helper = helpers.idx || (depth0 != null ? depth0.idx : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"idx","hash":{},"data":data}) : helper)))
	    + "\">\n"
	    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.selections : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "    </ul>\n</div>";
	},"useData":true});

	/***/ }),
	/* 141 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "<div class=\"eruda-range\">\n    <div class=\"eruda-head\">\n        "
	    + alias4(((helper = (helper = helpers.desc || (depth0 != null ? depth0.desc : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"desc","hash":{},"data":data}) : helper)))
	    + "\n        <span class=\"eruda-val\">"
	    + alias4(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper)))
	    + "</span>\n    </div>\n    <div class=\"eruda-input-container\" data-idx=\""
	    + alias4(((helper = (helper = helpers.idx || (depth0 != null ? depth0.idx : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"idx","hash":{},"data":data}) : helper)))
	    + "\">\n        <div class=\"eruda-range-track\">\n            <div class=\"eruda-range-track-bar\">\n                <div class=\"eruda-range-track-progress\" style=\"width: "
	    + alias4(((helper = (helper = helpers.progress || (depth0 != null ? depth0.progress : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"progress","hash":{},"data":data}) : helper)))
	    + "%\"></div>\n            </div>\n        </div>\n        <input type=\"range\" min=\""
	    + alias4(((helper = (helper = helpers.min || (depth0 != null ? depth0.min : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"min","hash":{},"data":data}) : helper)))
	    + "\" max=\""
	    + alias4(((helper = (helper = helpers.max || (depth0 != null ? depth0.max : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"max","hash":{},"data":data}) : helper)))
	    + "\" step=\""
	    + alias4(((helper = (helper = helpers.step || (depth0 != null ? depth0.step : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"step","hash":{},"data":data}) : helper)))
	    + "\" value=\""
	    + alias4(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper)))
	    + "\"/>\n    </div>\n</div>";
	},"useData":true});

	/***/ }),
	/* 142 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    return "           <li style=\"background: "
	    + container.escapeExpression(container.lambda(depth0, depth0))
	    + "\"></li>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "<div class=\"eruda-color\">\n    <div class=\"eruda-head\">\n        "
	    + alias4(((helper = (helper = helpers.desc || (depth0 != null ? depth0.desc : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"desc","hash":{},"data":data}) : helper)))
	    + "\n        <span class=\"eruda-val\" style=\"background-color: "
	    + alias4(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper)))
	    + "\"></span>\n    </div>\n    <ul data-idx=\""
	    + alias4(((helper = (helper = helpers.idx || (depth0 != null ? depth0.idx : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"idx","hash":{},"data":data}) : helper)))
	    + "\">\n"
	    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.colors : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "    </ul>\n</div>";
	},"useData":true});

	/***/ }),
	/* 143 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-container .eruda-entry-btn {\n  width: 40px;\n  height: 40px;\n  background: #000;\n  opacity: 0.3;\n  border-radius: 10px;\n  position: relative;\n  z-index: 1000;\n  -webkit-transition: opacity 0.3s;\n  transition: opacity 0.3s;\n  color: #fff;\n  font-size: 25px;\n  text-align: center;\n  line-height: 40px; }\n  .eruda-container .eruda-entry-btn.eruda-active, .eruda-container .eruda-entry-btn:active {\n    opacity: 0.8; }\n", ""]);

	// exports


	/***/ }),
	/* 144 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    return "<div class=\"eruda-entry-btn\">\n    <span class=\"eruda-icon-cog\"></span>\n</div>";
	},"useData":true});

	/***/ }),
	/* 145 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _NavBar = __webpack_require__(146);

	var _NavBar2 = _interopRequireDefault(_NavBar);

	var _logger = __webpack_require__(37);

	var _logger2 = _interopRequireDefault(_logger);

	var _Tool = __webpack_require__(9);

	var _Tool2 = _interopRequireDefault(_Tool);

	var _emitter = __webpack_require__(27);

	var _emitter2 = _interopRequireDefault(_emitter);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var DevTools = function (_Emitter) {
	  (0, _inherits3.default)(DevTools, _Emitter);

	  function DevTools($container) {
	    (0, _classCallCheck3.default)(this, DevTools);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (DevTools.__proto__ || (0, _getPrototypeOf2.default)(DevTools)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(148));

	    _this.$container = $container;
	    _this._isShow = false;
	    _this._opacity = 1;
	    _this._scale = 1;
	    _this._tools = {};

	    _this._appendTpl();
	    _this._initNavBar();
	    _this._registerListener();
	    return _this;
	  }

	  (0, _createClass3.default)(DevTools, [{
	    key: 'show',
	    value: function show() {
	      var _this2 = this;

	      this._isShow = true;
	      this.emit('show');

	      this._$el.show();
	      this._navBar.resetStyle();

	      // Need a delay after show to enable transition effect.
	      setTimeout(function () {
	        _this2._$el.css('opacity', _this2._opacity);
	      }, 50);

	      return this;
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      var _this3 = this;

	      this._isShow = false;
	      this.emit('hide');

	      this._$el.css({ opacity: 0 });
	      setTimeout(function () {
	        return _this3._$el.hide();
	      }, 300);

	      return this;
	    }
	  }, {
	    key: 'toggle',
	    value: function toggle() {
	      return this._isShow ? this.hide() : this.show();
	    }
	  }, {
	    key: 'add',
	    value: function add(tool) {
	      if (!(tool instanceof _Tool2.default)) {
	        var _ref = new _Tool2.default(),
	            init = _ref.init,
	            show = _ref.show,
	            hide = _ref.hide,
	            destroy = _ref.destroy;

	        (0, _util.defaults)(tool, { init: init, show: show, hide: hide, destroy: destroy });
	      }

	      var name = tool.name;
	      if (!name) return _logger2.default.error('You must specify a name for a tool');
	      name = name.toLowerCase();
	      if (this._tools[name]) return _logger2.default.warn('Tool ' + name + ' already exists');

	      this._$tools.prepend('<div class="eruda-' + name + ' eruda-tool"></div>');
	      tool.init(this._$tools.find('.eruda-' + name + '.eruda-tool'), this);
	      tool.active = false;
	      this._tools[name] = tool;

	      this._navBar.add(name);

	      return this;
	    }
	  }, {
	    key: 'remove',
	    value: function remove(name) {
	      var tools = this._tools;

	      if (!tools[name]) return _logger2.default.warn('Tool ' + name + ' doesn\'t exist');

	      this._navBar.remove(name);

	      var tool = tools[name];
	      delete tools[name];
	      if (tool.active) {
	        var toolKeys = (0, _util.keys)(tools);
	        if (toolKeys.length > 0) this.showTool(tools[(0, _util.last)(toolKeys)].name);
	      }
	      tool.destroy();

	      return this;
	    }
	  }, {
	    key: 'removeAll',
	    value: function removeAll() {
	      var _this4 = this;

	      (0, _util.each)(this._tools, function (tool) {
	        return _this4.remove(tool.name);
	      });

	      return this;
	    }
	  }, {
	    key: 'get',
	    value: function get(name) {
	      var tool = this._tools[name];

	      if (tool) return tool;
	    }
	  }, {
	    key: 'showTool',
	    value: function showTool(name) {
	      if (this._curTool === name) return this;
	      this._curTool = name;

	      var tools = this._tools;

	      var tool = tools[name];
	      if (!tool) return;

	      var lastTool = {};

	      (0, _util.each)(tools, function (tool) {
	        if (tool.active) {
	          lastTool = tool;
	          tool.active = false;
	          tool.hide();
	        }
	      });

	      tool.active = true;
	      tool.show();

	      this._navBar.activateTool(name);

	      this.emit('showTool', name, lastTool);

	      return this;
	    }
	  }, {
	    key: 'initCfg',
	    value: function initCfg(settings) {
	      var _this5 = this;

	      var cfg = this.config = _Settings2.default.createCfg('dev-tools', {
	        transparency: 0.95,
	        displaySize: 80,
	        tinyNavBar: !(0, _util.isMobile)(),
	        activeEruda: false,
	        navBarBgColor: '#2196f3'
	      });

	      this._setTransparency(cfg.get('transparency'));
	      this._setDisplaySize(cfg.get('displaySize'));
	      this.setNavBarHeight(cfg.get('tinyNavBar') ? 30 : 55);
	      this._navBar.setBgColor(cfg.get('navBarBgColor'));

	      cfg.on('change', function (key, val) {
	        switch (key) {
	          case 'transparency':
	            return _this5._setTransparency(val);
	          case 'displaySize':
	            return _this5._setDisplaySize(val);
	          case 'activeEruda':
	            return activeEruda(val);
	          case 'tinyNavBar':
	            return _this5.setNavBarHeight(val ? 30 : 55);
	          case 'navBarBgColor':
	            return _this5._navBar.setBgColor(val);
	        }
	      });

	      settings.separator().switch(cfg, 'activeEruda', 'Always Activated').switch(cfg, 'tinyNavBar', 'Tiny Navigation Bar').color(cfg, 'navBarBgColor', 'Navigation Bar Background Color').range(cfg, 'transparency', 'Transparency', {
	        min: 0.2,
	        max: 1,
	        step: 0.01
	      }).range(cfg, 'displaySize', 'Display Size', {
	        min: 40,
	        max: 100,
	        step: 1
	      }).separator();
	    }
	  }, {
	    key: 'setNavBarHeight',
	    value: function setNavBarHeight(height) {
	      this._navBarHeight = height;
	      this._$el.css('paddingTop', height * this._scale);
	      this._navBar.setHeight(height * this._scale);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      _util.evalCss.remove(this._style);
	      this._unregisterListener();
	      this.removeAll();
	      this._navBar.destroy();
	      this._$el.remove();
	    }
	  }, {
	    key: '_registerListener',
	    value: function _registerListener() {
	      var _this6 = this;

	      this._scaleListener = function (scale) {
	        _this6._scale = scale;
	        _this6.setNavBarHeight(_this6._navBarHeight);
	      };

	      _emitter2.default.on(_emitter2.default.SCALE, this._scaleListener);
	    }
	  }, {
	    key: '_unregisterListener',
	    value: function _unregisterListener() {
	      _emitter2.default.off(_emitter2.default.SCALE, this._scaleListener);
	    }
	  }, {
	    key: '_setTransparency',
	    value: function _setTransparency(opacity) {
	      if (!(0, _util.isNum)(opacity)) return;

	      this._opacity = opacity;
	      if (this._isShow) this._$el.css({ opacity: opacity });
	    }
	  }, {
	    key: '_setDisplaySize',
	    value: function _setDisplaySize(height) {
	      if (!(0, _util.isNum)(height)) return;

	      this._$el.css({ height: height + '%' });
	    }
	  }, {
	    key: '_appendTpl',
	    value: function _appendTpl() {
	      var $container = this.$container;

	      $container.append(__webpack_require__(149)());

	      this._$el = $container.find('.eruda-dev-tools');
	      this._$tools = this._$el.find('.eruda-tools');
	    }
	  }, {
	    key: '_initNavBar',
	    value: function _initNavBar() {
	      var _this7 = this;

	      this._navBar = new _NavBar2.default(this._$el.find('.eruda-nav-bar'));
	      this._navBar.on('showTool', function (name) {
	        return _this7.showTool(name);
	      });
	    }
	  }]);
	  return DevTools;
	}(_util.Emitter);

	exports.default = DevTools;


	var localStore = (0, _util.safeStorage)('local');

	var activeEruda = function activeEruda(flag) {
	  return localStore.setItem('active-eruda', flag);
	};

	/***/ }),
	/* 146 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NavBar = function (_Emitter) {
	  (0, _inherits3.default)(NavBar, _Emitter);

	  function NavBar($el) {
	    (0, _classCallCheck3.default)(this, NavBar);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (NavBar.__proto__ || (0, _getPrototypeOf2.default)(NavBar)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(147));

	    _this._$el = $el;
	    $el.html('<div class="eruda-bottom-bar"></div>');
	    _this._$bottomBar = $el.find('.eruda-bottom-bar');
	    _this._len = 0;
	    _this._height = 55;

	    _this._bindEvent();
	    return _this;
	  }

	  (0, _createClass3.default)(NavBar, [{
	    key: 'add',
	    value: function add(name) {
	      this._len++;
	      this._$el.prepend('<div class="eruda-nav-bar-item">' + name + '</div>');
	      this.resetStyle();
	    }
	  }, {
	    key: 'remove',
	    value: function remove(name) {
	      this._len--;
	      this._$el.find('.eruda-nav-bar-item').each(function () {
	        var $this = (0, _util.$)(this);
	        if ($this.text().toLowerCase() === name.toLowerCase()) $this.remove();
	      });
	      this._resetBottomBar();
	    }
	  }, {
	    key: 'setHeight',
	    value: function setHeight(height) {
	      this._height = height;
	      this.resetStyle();
	    }
	  }, {
	    key: 'setBgColor',
	    value: function setBgColor(color) {
	      this._$el.css('background-color', color);
	    }
	  }, {
	    key: 'activateTool',
	    value: function activateTool(name) {
	      var self = this;

	      this._$el.find('.eruda-nav-bar-item').each(function () {
	        var $this = (0, _util.$)(this);

	        if ($this.text() === name) {
	          $this.addClass('eruda-active');
	          self._resetBottomBar();
	          self._scrollItemToView();
	        } else {
	          $this.rmClass('eruda-active');
	        }
	      });
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      _util.evalCss.remove(this._style);
	      this._$el.remove();
	    }
	  }, {
	    key: '_scrollItemToView',
	    value: function _scrollItemToView() {
	      var $el = this._$el,
	          li = $el.find('.eruda-active').get(0),
	          container = $el.get(0);

	      var itemLeft = li.offsetLeft,
	          itemWidth = li.offsetWidth,
	          containerWidth = container.offsetWidth,
	          scrollLeft = container.scrollLeft,
	          targetScrollLeft = void 0;

	      if (itemLeft < scrollLeft) {
	        targetScrollLeft = itemLeft;
	      } else if (itemLeft + itemWidth > containerWidth + scrollLeft) {
	        targetScrollLeft = itemLeft + itemWidth - containerWidth;
	      }

	      if (!(0, _util.isNum)(targetScrollLeft)) return;

	      container.scrollLeft = targetScrollLeft;
	    }
	  }, {
	    key: '_resetBottomBar',
	    value: function _resetBottomBar() {
	      var $bottomBar = this._$bottomBar;

	      var li = this._$el.find('.eruda-active').get(0);

	      if (!li) return;

	      $bottomBar.css({
	        width: li.offsetWidth,
	        left: li.offsetLeft
	      });
	    }
	  }, {
	    key: 'resetStyle',
	    value: function resetStyle() {
	      var height = this._height;

	      this._$el.css('height', height);

	      var $el = this._$el;

	      $el.css({
	        height: height
	      });
	      $el.find('.eruda-nav-bar-item').css({
	        height: height,
	        lineHeight: height
	      });

	      this._resetBottomBar();
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var self = this;

	      this._$el.on('click', '.eruda-nav-bar-item', function () {
	        self.emit('showTool', (0, _util.$)(this).text());
	      });
	    }
	  }]);
	  return NavBar;
	}(_util.Emitter);

	exports.default = NavBar;

	/***/ }),
	/* 147 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-nav-bar {\n  position: absolute;\n  width: 100%;\n  height: 55px;\n  left: 0;\n  top: 0;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n  -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n  z-index: 100;\n  background: #2196f3;\n  font-size: 0;\n  white-space: nowrap; }\n  .eruda-dev-tools .eruda-nav-bar .eruda-nav-bar-item {\n    cursor: pointer;\n    display: inline-block;\n    height: 55px;\n    line-height: 55px;\n    padding: 0 10px;\n    color: #fff;\n    font-size: 12px;\n    text-align: center;\n    text-transform: capitalize;\n    -webkit-transition: all 0.3s;\n    transition: all 0.3s; }\n    .eruda-dev-tools .eruda-nav-bar .eruda-nav-bar-item:active {\n      background: #263238;\n      opacity: 0.5; }\n    .eruda-dev-tools .eruda-nav-bar .eruda-nav-bar-item.eruda-active {\n      background: #eceffe;\n      color: #263238;\n      opacity: 0.5; }\n  .eruda-dev-tools .eruda-nav-bar .eruda-bottom-bar {\n    -webkit-transition: left 0.3s, width 0.3s;\n    transition: left 0.3s, width 0.3s;\n    height: 3px;\n    background: #fff;\n    position: absolute;\n    bottom: 0;\n    left: 0; }\n", ""]);

	// exports


	/***/ }),
	/* 148 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  bottom: 0;\n  background: #fff;\n  z-index: 500;\n  display: none;\n  opacity: 0;\n  -webkit-transition: opacity 0.3s;\n  transition: opacity 0.3s; }\n  .eruda-dev-tools .eruda-tools {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    height: 100%;\n    width: 100%;\n    position: relative; }\n    .eruda-dev-tools .eruda-tools .eruda-tool {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      left: 0;\n      top: 0;\n      overflow: hidden;\n      display: none;\n      background: #f8f9fa; }\n", ""]);

	// exports


	/***/ }),
	/* 149 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    return "<div class=\"eruda-dev-tools\">\n    <div class=\"eruda-nav-bar\"></div>\n    <div class=\"eruda-tools\"></div>\n</div>";
	},"useData":true});

	/***/ }),
	/* 150 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _assign = __webpack_require__(38);

	var _assign2 = _interopRequireDefault(_assign);

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Logger = __webpack_require__(151);

	var _Logger2 = _interopRequireDefault(_Logger);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _util = __webpack_require__(0);

	var _emitter = __webpack_require__(27);

	var _emitter2 = _interopRequireDefault(_emitter);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _stringify = __webpack_require__(74);

	var _stringify2 = _interopRequireDefault(_stringify);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Console = function (_Tool) {
	  (0, _inherits3.default)(Console, _Tool);

	  function Console() {
	    (0, _classCallCheck3.default)(this, Console);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Console.__proto__ || (0, _getPrototypeOf2.default)(Console)).call(this));

	    _util.Emitter.mixin(_this);

	    _this.name = 'console';
	    _this._scale = 1;

	    _this._registerListener();
	    return _this;
	  }

	  (0, _createClass3.default)(Console, [{
	    key: 'init',
	    value: function init($el, container) {
	      var _this2 = this;

	      (0, _get3.default)(Console.prototype.__proto__ || (0, _getPrototypeOf2.default)(Console.prototype), 'init', this).call(this, $el);

	      this._appendTpl();

	      this._initLogger();
	      this._exposeLogger();
	      this._rejectionHandler = function (e) {
	        return _this2._logger.error(e.reason);
	      };

	      this._initCfg(container);
	      this._bindEvent(container);
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      (0, _get3.default)(Console.prototype.__proto__ || (0, _getPrototypeOf2.default)(Console.prototype), 'show', this).call(this);

	      this._logger.render();
	    }
	  }, {
	    key: 'overrideConsole',
	    value: function overrideConsole() {
	      var _this3 = this;

	      var origConsole = this._origConsole = {},
	          winConsole = window.console;

	      CONSOLE_METHOD.forEach(function (name) {
	        var origin = origConsole[name] = _util.noop;
	        if (winConsole[name]) origin = origConsole[name] = winConsole[name].bind(winConsole);

	        winConsole[name] = function () {
	          _this3[name].apply(_this3, arguments);
	          origin.apply(undefined, arguments);
	        };
	      });

	      return this;
	    }
	  }, {
	    key: 'restoreConsole',
	    value: function restoreConsole() {
	      var _this4 = this;

	      if (!this._origConsole) return this;

	      CONSOLE_METHOD.forEach(function (name) {
	        return window.console[name] = _this4._origConsole[name];
	      });
	      delete this._origConsole;

	      return this;
	    }
	  }, {
	    key: 'catchGlobalErr',
	    value: function catchGlobalErr() {
	      var _this5 = this;

	      this._origOnerror = window.onerror;

	      window.onerror = function (errMsg, url, lineNum, column, errObj) {
	        return _this5._logger.error(errObj ? errObj : errMsg);
	      };
	      window.addEventListener('unhandledrejection', this._rejectionHandler);

	      return this;
	    }
	  }, {
	    key: 'ignoreGlobalErr',
	    value: function ignoreGlobalErr() {
	      if (this._origOnerror) {
	        window.onerror = this._origOnerror;
	        delete this._origOnerror;
	      }
	      window.removeEventListener('unhandledrejection', this._rejectionHandler);

	      return this;
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      this._logger.destroy();
	      (0, _get3.default)(Console.prototype.__proto__ || (0, _getPrototypeOf2.default)(Console.prototype), 'destroy', this).call(this);

	      _util.evalCss.remove(this._style);
	      this.ignoreGlobalErr();
	      this.restoreConsole();
	      this._unregisterListener();
	    }
	  }, {
	    key: '_registerListener',
	    value: function _registerListener() {
	      var _this6 = this;

	      this._scaleListener = function (scale) {
	        return _this6._scale = scale;
	      };

	      _emitter2.default.on(_emitter2.default.SCALE, this._scaleListener);
	    }
	  }, {
	    key: '_unregisterListener',
	    value: function _unregisterListener() {
	      _emitter2.default.off(_emitter2.default.SCALE, this._scaleListener);
	    }
	  }, {
	    key: '_appendTpl',
	    value: function _appendTpl() {
	      var $el = this._$el;

	      this._style = (0, _util.evalCss)(__webpack_require__(172));
	      $el.append(__webpack_require__(173)());

	      var _$inputContainer = $el.find('.eruda-js-input'),
	          _$input = _$inputContainer.find('textarea'),
	          _$inputBtns = _$inputContainer.find('.eruda-buttons');

	      (0, _assign2.default)(this, {
	        _$control: $el.find('.eruda-control'),
	        _$logs: $el.find('.eruda-logs'),
	        _$inputContainer: _$inputContainer,
	        _$input: _$input,
	        _$inputBtns: _$inputBtns
	      });
	    }
	  }, {
	    key: '_initLogger',
	    value: function _initLogger() {
	      var $filter = this._$control.find('.eruda-filter'),
	          logger = this._logger = new _Logger2.default(this._$logs, this);

	      logger.on('filter', function (filter) {
	        return $filter.each(function () {
	          var $this = (0, _util.$)(this),
	              isMatch = $this.data('filter') === filter;

	          $this[isMatch ? 'addClass' : 'rmClass']('eruda-active');
	        });
	      });
	    }
	  }, {
	    key: '_exposeLogger',
	    value: function _exposeLogger() {
	      var _this7 = this;

	      var logger = this._logger,
	          methods = ['filter', 'html'].concat(CONSOLE_METHOD);

	      methods.forEach(function (name) {
	        return _this7[name] = function () {
	          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	          }

	          logger[name].apply(logger, args);
	          _this7.emit.apply(_this7, [name].concat(args));

	          return _this7;
	        };
	      });
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent(container) {
	      var _this8 = this;

	      var $input = this._$input,
	          $inputBtns = this._$inputBtns,
	          $control = this._$control,
	          logger = this._logger,
	          config = this.config;

	      $control.on('click', '.eruda-clear-console', function () {
	        return logger.clear();
	      }).on('click', '.eruda-filter', function () {
	        logger.filter((0, _util.$)(this).data('filter'));
	      }).on('click', '.eruda-help', function () {
	        return logger.help();
	      });

	      $inputBtns.on('click', '.eruda-cancel', function () {
	        return _this8._hideInput();
	      }).on('click', '.eruda-execute', function () {
	        var jsInput = $input.val().trim();
	        if (jsInput === '') return;

	        logger.input(jsInput);
	        $input.val('').get(0).blur();
	        _this8._hideInput();
	      });

	      $input.on('focusin', function () {
	        return _this8._showInput();
	      });

	      logger.on('viewJson', function (data) {
	        var sources = container.get('sources');
	        if (!sources) return;

	        sources.set('json', data);
	        container.showTool('sources');
	      }).on('insert', function (log) {
	        var autoShow = log.type === 'error' && config.get('displayIfErr');

	        if (autoShow) container.showTool('console').show();
	      });
	    }
	  }, {
	    key: '_hideInput',
	    value: function _hideInput() {
	      this._$inputContainer.css({
	        paddingTop: 0,
	        height: 40 * this._scale
	      });

	      this._$inputBtns.hide();
	    }
	  }, {
	    key: '_showInput',
	    value: function _showInput() {
	      this._$inputContainer.css({
	        paddingTop: 40 * this._scale,
	        height: '100%'
	      });

	      this._$inputBtns.show();
	    }
	  }, {
	    key: '_initCfg',
	    value: function _initCfg(container) {
	      var _this9 = this;

	      var sources = container.get('sources'),
	          logger = this._logger;

	      var cfg = this.config = _Settings2.default.createCfg('console', {
	        catchGlobalErr: true,
	        overrideConsole: true,
	        displayExtraInfo: false,
	        displayUnenumerable: true,
	        displayGetterVal: false,
	        viewLogInSources: false,
	        displayIfErr: false,
	        useWorker: true,
	        maxLogNum: 'infinite'
	      });

	      var isWorkerSupported = !!window.Worker;

	      var maxLogNum = cfg.get('maxLogNum');
	      maxLogNum = maxLogNum === 'infinite' ? maxLogNum : +maxLogNum;

	      if (cfg.get('catchGlobalErr')) this.catchGlobalErr();
	      if (cfg.get('overrideConsole')) this.overrideConsole();
	      if (cfg.get('useWorker') && isWorkerSupported) _stringify2.default.useWorker = true;
	      logger.displayHeader(cfg.get('displayExtraInfo'));
	      logger.displayUnenumerable(cfg.get('displayUnenumerable'));
	      logger.displayGetterVal(cfg.get('displayGetterVal'));
	      if (sources) logger.viewLogInSources(cfg.get('viewLogInSources'));
	      logger.maxNum(maxLogNum);

	      cfg.on('change', function (key, val) {
	        switch (key) {
	          case 'catchGlobalErr':
	            return val ? _this9.catchGlobalErr() : _this9.ignoreGlobalErr();
	          case 'overrideConsole':
	            return val ? _this9.overrideConsole() : _this9.restoreConsole();
	          case 'maxLogNum':
	            return logger.maxNum(val === 'infinite' ? val : +val);
	          case 'displayExtraInfo':
	            return logger.displayHeader(val);
	          case 'displayUnenumerable':
	            return logger.displayUnenumerable(val);
	          case 'displayGetterVal':
	            return logger.displayGetterVal(val);
	          case 'viewLogInSources':
	            return logger.viewLogInSources(val);
	          case 'useWorker':
	            _stringify2.default.useWorker = val;
	            return;
	        }
	      });

	      var settings = container.get('settings');

	      settings.text('Console').switch(cfg, 'catchGlobalErr', 'Catch Global Errors').switch(cfg, 'overrideConsole', 'Override Console').switch(cfg, 'displayIfErr', 'Auto Display If Error Occurs').switch(cfg, 'displayExtraInfo', 'Display Extra Information').switch(cfg, 'displayUnenumerable', 'Display Unenumerable Properties').switch(cfg, 'displayGetterVal', 'Access Getter Value');

	      if (isWorkerSupported) settings.switch(cfg, 'useWorker', 'Use Web Worker');
	      if (sources) settings.switch(cfg, 'viewLogInSources', 'View Log In Sources Panel');

	      settings.select(cfg, 'maxLogNum', 'Max Log Number', ['infinite', '250', '125', '100', '50', '10']).separator();
	    }
	  }]);
	  return Console;
	}(_Tool3.default);

	exports.default = Console;


	var CONSOLE_METHOD = ['log', 'error', 'info', 'warn', 'dir', 'time', 'timeEnd', 'clear', 'table', 'assert', 'count', 'debug'];

	/***/ }),
	/* 151 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Log = __webpack_require__(152);

	var _Log2 = _interopRequireDefault(_Log);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Logger = function (_Emitter) {
	  (0, _inherits3.default)(Logger, _Emitter);

	  function Logger($el, container) {
	    (0, _classCallCheck3.default)(this, Logger);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Logger.__proto__ || (0, _getPrototypeOf2.default)(Logger)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(168));

	    _this._$el = $el;
	    _this._container = container;
	    _this._logs = [];
	    _this._timer = {};
	    _this._count = {};
	    _this._lastLog = {};
	    _this._filter = 'all';
	    _this._maxNum = 'infinite';
	    _this._displayHeader = false;

	    _this._bindEvent();
	    return _this;
	  }

	  (0, _createClass3.default)(Logger, [{
	    key: 'displayHeader',
	    value: function displayHeader(flag) {
	      this._displayHeader = flag;
	    }
	  }, {
	    key: 'maxNum',
	    value: function maxNum(val) {
	      var logs = this._logs;

	      this._maxNum = val;
	      if ((0, _util.isNum)(val) && logs.length > val) {
	        this._logs = logs.slice(logs.length - val);
	        this.render();
	      }
	    }
	  }, {
	    key: 'displayUnenumerable',
	    value: function displayUnenumerable(flag) {
	      _Log2.default.showUnenumerable = flag;
	    }
	  }, {
	    key: 'displayGetterVal',
	    value: function displayGetterVal(flag) {
	      _Log2.default.showGetterVal = flag;
	    }
	  }, {
	    key: 'viewLogInSources',
	    value: function viewLogInSources(flag) {
	      _Log2.default.showSrcInSources = flag;
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      _util.evalCss.remove(this._style);
	    }
	  }, {
	    key: 'filter',
	    value: function filter(val) {
	      this._filter = val;
	      this.emit('filter', val);

	      return this.render();
	    }
	  }, {
	    key: 'count',
	    value: function count(label) {
	      var count = this._count;

	      !(0, _util.isUndef)(count[label]) ? count[label]++ : count[label] = 1;

	      return this.html('<div class="eruda-blue">' + label + ': ' + count[label] + '</div>');
	    }
	  }, {
	    key: 'assert',
	    value: function assert() {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      if (args.length === 0) return;

	      var exp = args.shift();

	      if (!exp) {
	        args.unshift('Assertion failed: ');
	        return this.insert('error', args);
	      }
	    }
	  }, {
	    key: 'log',
	    value: function log() {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      this.insert('log', args);

	      return this;
	    }
	  }, {
	    key: 'debug',
	    value: function debug() {
	      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	        args[_key3] = arguments[_key3];
	      }

	      this.insert('debug', args);

	      return this;
	    }
	  }, {
	    key: 'dir',
	    value: function dir() {
	      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	        args[_key4] = arguments[_key4];
	      }

	      this.insert('dir', args);

	      return this;
	    }
	  }, {
	    key: 'table',
	    value: function table() {
	      for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
	        args[_key5] = arguments[_key5];
	      }

	      this.insert('table', args);

	      return this;
	    }
	  }, {
	    key: 'time',
	    value: function time(name) {
	      this._timer[name] = (0, _util.perfNow)();

	      return this;
	    }
	  }, {
	    key: 'timeEnd',
	    value: function timeEnd(name) {
	      var startTime = this._timer[name];

	      if (!startTime) return;
	      delete this._timer[name];

	      return this.html('<div class="eruda-blue">' + name + ': ' + ((0, _util.perfNow)() - startTime) + 'ms</div>');
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      this._logs = [];
	      this._lastLog = {};

	      return this.render();
	    }
	  }, {
	    key: 'info',
	    value: function info() {
	      for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
	        args[_key6] = arguments[_key6];
	      }

	      return this.insert('info', args);
	    }
	  }, {
	    key: 'error',
	    value: function error() {
	      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
	        args[_key7] = arguments[_key7];
	      }

	      return this.insert('error', args);
	    }
	  }, {
	    key: 'warn',
	    value: function warn() {
	      for (var _len8 = arguments.length, args = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
	        args[_key8] = arguments[_key8];
	      }

	      return this.insert('warn', args);
	    }
	  }, {
	    key: 'input',
	    value: function input(jsCode) {
	      if ((0, _util.startWith)(jsCode, ':')) {
	        this._runCmd(jsCode.slice(1));

	        return this;
	      } else if ((0, _util.startWith)(jsCode, '/')) {
	        return this.filter(new RegExp((0, _util.escapeRegExp)(jsCode.slice(1))));
	      }

	      this.insert({
	        type: 'input',
	        args: [jsCode],
	        ignoreFilter: true
	      });

	      try {
	        this.output(evalJs(jsCode));
	      } catch (e) {
	        this.insert({
	          type: 'error',
	          ignoreFilter: true,
	          args: [e]
	        });
	      }

	      return this;
	    }
	  }, {
	    key: 'output',
	    value: function output(val) {
	      return this.insert({
	        type: 'output',
	        args: [val],
	        ignoreFilter: true
	      });
	    }
	  }, {
	    key: 'html',
	    value: function html() {
	      for (var _len9 = arguments.length, args = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
	        args[_key9] = arguments[_key9];
	      }

	      return this.insert('html', args);
	    }
	  }, {
	    key: 'help',
	    value: function help() {
	      return this.insert({
	        type: 'html',
	        args: [helpMsg],
	        ignoreFilter: true
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var html = '',
	          logs = this._logs;

	      logs = this._filterLogs(logs);

	      for (var i = 0, len = logs.length; i < len; i++) {
	        html += logs[i].formattedMsg;
	      }

	      this._$el.html(html);
	      this.scrollToBottom();

	      return this;
	    }
	  }, {
	    key: 'insert',
	    value: function insert(type, args) {
	      var logs = this._logs,
	          $el = this._$el,
	          el = $el.get(0);

	      var isAtBottom = el.scrollTop === el.scrollHeight - el.offsetHeight;

	      var options = (0, _util.isStr)(type) ? { type: type, args: args } : type;
	      (0, _util.extend)(options, {
	        id: (0, _util.uniqId)('log'),
	        displayHeader: this._displayHeader
	      });

	      var log = new _Log2.default(options);

	      var lastLog = this._lastLog;
	      if (log.type !== 'html' && lastLog.type === log.type && lastLog.value === log.value) {
	        lastLog.addCount();
	        if (log.time) lastLog.updateTime(log.time);
	        $el.find('li').last().remove();
	        log = lastLog;
	      } else {
	        logs.push(log);
	        this._lastLog = log;
	      }

	      if (this._maxNum !== 'infinite' && logs.length > this._maxNum) {
	        $el.find('li').first().remove();
	        logs.shift();
	      }

	      if (this._filterLog(log) && this._container.active) $el.append(log.formattedMsg);

	      this.emit('insert', log);

	      if (isAtBottom) this.scrollToBottom();

	      return this;
	    }
	  }, {
	    key: 'scrollToBottom',
	    value: function scrollToBottom() {
	      var el = this._$el.get(0);

	      el.scrollTop = el.scrollHeight - el.offsetHeight;
	    }
	  }, {
	    key: '_filterLogs',
	    value: function _filterLogs(logs) {
	      var filter = this._filter;

	      if (filter === 'all') return logs;

	      var isFilterRegExp = (0, _util.isRegExp)(filter),
	          isFilterFn = (0, _util.isFn)(filter);

	      return logs.filter(function (log) {
	        if (log.ignoreFilter) return true;
	        if (isFilterFn) return filter(log);
	        if (isFilterRegExp) return filter.test((0, _util.stripHtmlTag)(log.formattedMsg));
	        return log.type === filter;
	      });
	    }
	  }, {
	    key: '_filterLog',
	    value: function _filterLog(log) {
	      var filter = this._filter;

	      if (filter === 'all') return true;

	      var isFilterRegExp = (0, _util.isRegExp)(filter),
	          isFilterFn = (0, _util.isFn)(filter);

	      if (log.ignoreFilter) return true;
	      if (isFilterFn) return filter(log);
	      if (isFilterRegExp) return filter.test((0, _util.stripHtmlTag)(log.formattedMsg));

	      return log.type === filter;
	    }
	  }, {
	    key: '_loadJs',
	    value: function _loadJs(name) {
	      var _this2 = this;

	      (0, _util.loadJs)(libraries[name], function (result) {
	        if (result) return _this2.log(name + ' is loaded');

	        _this2.warn('Failed to load ' + name);
	      });
	    }
	  }, {
	    key: '_runCmd',
	    value: function _runCmd(cmd) {
	      switch (cmd.trim()) {
	        case '$':
	          return this._loadJs('jQuery');
	        case '_':
	          return this._loadJs('underscore');
	        default:
	          this.warn('Unknown command').help();
	      }
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var self = this;

	      this._$el.on('click', '.eruda-log-item', function () {
	        var $el = (0, _util.$)(this),
	            id = $el.data('id'),
	            type = $el.data('type'),
	            logs = self._logs,
	            log = void 0;

	        for (var i = 0, len = logs.length; i < len; i++) {
	          log = logs[i];
	          if (log.id === id) break;
	        }
	        if (!log) return;

	        var action = _Log2.default.click(type, log, $el);

	        switch (action) {
	          case 'viewSrc':
	            self.emit('viewJson', log.src);
	            break;
	        }
	      });
	    }
	  }]);
	  return Logger;
	}(_util.Emitter);

	exports.default = Logger;


	var cmdList = __webpack_require__(169),
	    helpMsg = __webpack_require__(170)({ commands: cmdList }),
	    libraries = __webpack_require__(171);

	var evalJs = function evalJs(jsInput) {
	  var ret = void 0;

	  try {
	    ret = eval.call(window, '(' + jsInput + ')');
	  } catch (e) {
	    ret = eval.call(window, jsInput);
	  }

	  return ret;
	};

	/***/ }),
	/* 152 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getOwnPropertyNames = __webpack_require__(55);

	var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _stringify = __webpack_require__(74);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _getAbstract = __webpack_require__(164);

	var _getAbstract2 = _interopRequireDefault(_getAbstract);

	var _highlight = __webpack_require__(56);

	var _highlight2 = _interopRequireDefault(_highlight);

	var _jsBeautify = __webpack_require__(57);

	var _jsBeautify2 = _interopRequireDefault(_jsBeautify);

	var _JsonViewer = __webpack_require__(79);

	var _JsonViewer2 = _interopRequireDefault(_JsonViewer);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Log = function () {
	  function Log(_ref) {
	    var _ref$type = _ref.type,
	        type = _ref$type === undefined ? 'log' : _ref$type,
	        _ref$args = _ref.args,
	        args = _ref$args === undefined ? [] : _ref$args,
	        id = _ref.id,
	        _ref$displayHeader = _ref.displayHeader,
	        displayHeader = _ref$displayHeader === undefined ? false : _ref$displayHeader,
	        _ref$ignoreFilter = _ref.ignoreFilter,
	        ignoreFilter = _ref$ignoreFilter === undefined ? false : _ref$ignoreFilter;
	    (0, _classCallCheck3.default)(this, Log);

	    this.type = type;
	    this.args = args;
	    this.count = 1;
	    this.id = id;
	    this.displayHeader = displayHeader;
	    this.ignoreFilter = ignoreFilter;

	    if (displayHeader) {
	      this.time = getCurTime();
	      this.from = getFrom();
	    }

	    this._formatMsg();
	  }

	  (0, _createClass3.default)(Log, [{
	    key: 'addCount',
	    value: function addCount() {
	      this.count++;
	      var count = this.count,
	          msg = this.formattedMsg;
	      if (count === 2) msg = msg.replace('eruda-count eruda-hidden', 'eruda-count');
	      msg = msg.replace(/data-mark="count">\d*/, 'data-mark="count">' + count);

	      this.formattedMsg = msg;

	      return this;
	    }
	  }, {
	    key: 'updateTime',
	    value: function updateTime(time) {
	      var msg = this.formattedMsg;

	      if (this.time) {
	        msg = msg.replace(/data-mark="time">(.*?)</, 'data-mark="time">' + time + '<');
	        this.time = time;
	        this.formattedMsg = msg;
	      }

	      return this;
	    }
	  }, {
	    key: '_needSrc',
	    value: function _needSrc() {
	      var type = this.type,
	          args = this.args;


	      if (type === 'html') return false;

	      for (var i = 0, len = args.length; i < len; i++) {
	        if ((0, _util.isObj)(args[i])) return true;
	      }

	      return false;
	    }
	  }, {
	    key: '_formatMsg',
	    value: function _formatMsg() {
	      var _this = this;

	      var type = this.type,
	          id = this.id,
	          displayHeader = this.displayHeader,
	          time = this.time,
	          from = this.from,
	          args = this.args;


	      if (this._needSrc()) {
	        var setSrc = function setSrc(result) {
	          return _this.src = result;
	        };
	        if (type === 'table') {
	          extractObj(args[0], {}, setSrc);
	        } else {
	          extractObj(args.length === 1 && (0, _util.isObj)(args[0]) ? args[0] : args, {}, setSrc);
	        }
	      }

	      var msg = '',
	          icon = void 0,
	          err = void 0;

	      switch (type) {
	        case 'log':
	          msg = formatMsg(args);
	          break;
	        case 'debug':
	          msg = formatMsg(args);
	          break;
	        case 'dir':
	          msg = formatDir(args);
	          break;
	        case 'info':
	          icon = 'info-circle';
	          msg = formatMsg(args);
	          break;
	        case 'warn':
	          icon = 'exclamation-triangle';
	          msg = formatMsg(args);
	          break;
	        case 'error':
	          if ((0, _util.isStr)(args[0]) && args.length !== 1) args = substituteStr(args);
	          err = args[0];
	          icon = 'times-circle';
	          err = (0, _util.isErr)(err) ? err : new Error(formatMsg(args));
	          this.src = err;
	          msg = formatErr(err);
	          break;
	        case 'table':
	          msg = formatTable(args);
	          break;
	        case 'html':
	          msg = args[0];
	          break;
	        case 'input':
	          msg = formatJs(args[0]);
	          icon = 'chevron-right';
	          break;
	        case 'output':
	          msg = formatMsg(args);
	          icon = 'chevron-left';
	          break;
	      }

	      if (type !== 'error') msg = recognizeUrl(msg);
	      this.value = msg;
	      msg = render({ msg: msg, type: type, icon: icon, id: id, displayHeader: displayHeader, time: time, from: from });

	      delete this.args;
	      this.formattedMsg = msg;
	    }
	  }], [{
	    key: 'click',
	    value: function click(type, log, $el) {
	      switch (type) {
	        case 'log':
	        case 'warn':
	        case 'info':
	        case 'debug':
	        case 'output':
	        case 'table':
	        case 'dir':
	          if (log.src) {
	            if (Log.showSrcInSources) return 'viewSrc';
	            var $json = $el.find('.eruda-json');
	            if ($json.hasClass('eruda-hidden')) {
	              if ($json.data('init') !== 'true') {
	                new _JsonViewer2.default(log.src, $json);
	                $json.data('init', 'true');
	              }
	              $json.rmClass('eruda-hidden');
	            } else {
	              $json.addClass('eruda-hidden');
	            }
	          }
	          break;
	        case 'error':
	          $el.find('.eruda-stack').toggleClass('eruda-hidden');
	          break;
	      }

	      return 'handled';
	    }
	  }]);
	  return Log;
	}();

	// Looks like es6 doesn't support static properties yet.


	exports.default = Log;
	Log.showGetterVal = false;
	Log.showUnenumerable = true;
	Log.showSrcInSources = false;

	var getAbstract = (0, _util.wrap)(_getAbstract2.default, function (fn, obj) {
	  return fn(obj, {
	    getterVal: Log.showGetterVal,
	    unenumerable: false
	  });
	});

	function formatTable(args) {
	  var table = args[0],
	      ret = '',
	      filter = args[1],
	      columns = [];

	  if ((0, _util.isStr)(filter)) filter = (0, _util.toArr)(filter);
	  if (!(0, _util.isArr)(filter)) filter = null;

	  if (!(0, _util.isArr)(table)) return formatMsg(args);

	  table.forEach(function (val) {
	    if (!(0, _util.isObj)(val)) return;
	    columns = columns.concat((0, _getOwnPropertyNames2.default)(val));
	  });
	  columns = (0, _util.unique)(columns);
	  columns.sort();
	  if (filter) columns = columns.filter(function (val) {
	    return (0, _util.contain)(filter, val);
	  });
	  if ((0, _util.isEmpty)(columns)) return formatMsg(args);

	  ret += '<table><thead><tr><th>(index)</th>';
	  columns.forEach(function (val) {
	    return ret += '<th>' + val + '</th>';
	  });
	  ret += '</tr></thead><tbody>';

	  table.forEach(function (obj, idx) {
	    if (!(0, _util.isObj)(obj)) return;
	    ret += '<tr><td>' + idx + '</td>';
	    columns.forEach(function (column) {
	      var val = obj[column];
	      if ((0, _util.isUndef)(val)) {
	        val = '';
	      } else if ((0, _util.isObj)(val)) {
	        val = (0, _util.getObjType)(val);
	      }

	      ret += '<td>' + val + '</td>';
	    });
	    ret += '</tr>';
	  });

	  ret += '</tbody></table>';
	  ret += '<div class="eruda-json eruda-hidden"></div>';

	  return ret;
	}

	var regJsUrl = /https?:\/\/([0-9.\-A-Za-z]+)(?::(\d+))?\/[A-Z.a-z0-9/]*\.js/g,
	    regErudaJs = /eruda(\.min)?\.js/;

	function formatErr(err) {
	  var lines = err.stack ? err.stack.split('\n') : [],
	      msg = (err.message || lines[0]) + '<br/>';

	  lines = lines.filter(function (val) {
	    return !regErudaJs.test(val);
	  }).map(function (val) {
	    return (0, _util.escape)(val);
	  });

	  var stack = '<div class="eruda-stack eruda-hidden">' + lines.slice(1).join('<br/>') + '</div>';

	  return msg + stack.replace(regJsUrl, function (match) {
	    return '<a href="' + match + '" target="_blank">' + match + '</a>';
	  });
	}

	function formatJs(code) {
	  return (0, _highlight2.default)((0, _jsBeautify2.default)(code), 'js');
	}

	function formatMsg(args) {
	  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref2$htmlForEl = _ref2.htmlForEl,
	      htmlForEl = _ref2$htmlForEl === undefined ? true : _ref2$htmlForEl;

	  var needStrSubstitution = (0, _util.isStr)(args[0]) && args.length !== 1;
	  if (needStrSubstitution) args = substituteStr(args);

	  for (var i = 0, len = args.length; i < len; i++) {
	    var val = args[i];

	    if ((0, _util.isEl)(val) && htmlForEl) {
	      args[i] = formatEl(val);
	    } else if ((0, _util.isFn)(val)) {
	      args[i] = formatFn(val);
	    } else if ((0, _util.isObj)(val)) {
	      args[i] = formatObj(val);
	    } else if ((0, _util.isUndef)(val)) {
	      args[i] = 'undefined';
	    } else if ((0, _util.isNull)(val)) {
	      args[i] = 'null';
	    } else {
	      val = (0, _util.toStr)(val);
	      if (i !== 0 || !needStrSubstitution) val = (0, _util.escape)(val);
	      args[i] = val;
	    }
	  }

	  return args.join(' ') + '<div class="eruda-json eruda-hidden"></div>';
	}

	var formatDir = function formatDir(args) {
	  return formatMsg(args, { htmlForEl: false });
	};

	function substituteStr(args) {
	  var str = (0, _util.escape)(args[0]),
	      isInCss = false,
	      newStr = '';

	  args.shift();

	  for (var i = 0, len = str.length; i < len; i++) {
	    var c = str[i];

	    if (c === '%' && args.length !== 0) {
	      i++;
	      var arg = args.shift();
	      switch (str[i]) {
	        case 'i':
	        case 'd':
	          newStr += (0, _util.toInt)(arg);
	          break;
	        case 'f':
	          newStr += (0, _util.toNum)(arg);
	          break;
	        case 's':
	          newStr += (0, _util.toStr)(arg);
	          break;
	        case 'O':
	          if ((0, _util.isObj)(arg)) {
	            newStr += getAbstract(arg);
	          }
	          break;
	        case 'o':
	          if ((0, _util.isEl)(arg)) {
	            newStr += formatEl(arg);
	          } else if ((0, _util.isObj)(arg)) {
	            newStr += getAbstract(arg);
	          }
	          break;
	        case 'c':
	          if (isInCss) newStr += '</span>';
	          isInCss = true;
	          newStr += '<span style="' + arg + '">';
	          break;
	        default:
	          i--;
	          args.unshift(arg);
	          newStr += c;
	      }
	    } else {
	      newStr += c;
	    }
	  }
	  if (isInCss) newStr += '</span>';

	  args.unshift(newStr);

	  return args;
	}

	function formatObj(val) {
	  var type = (0, _util.getObjType)(val);
	  if (type === 'Array' && val.length > 1) type = '(' + val.length + ')';

	  return type + ' ' + getAbstract(val);
	}

	function formatFn(val) {
	  return '<pre style="display:inline">' + (0, _highlight2.default)(_jsBeautify2.default.js(val.toString()), 'js') + '</pre>';
	}

	function formatEl(val) {
	  return '<pre style="display:inline">' + (0, _highlight2.default)(_jsBeautify2.default.html(val.outerHTML, { unformatted: [] }), 'html') + '</pre>';
	}

	var regUrl = /(^|[\s\n]|<[A-Za-z]*\/?>)((?:https?|ftp):\/\/[-A-Z0-9+\u0026\u2019@#/%?=()~_|!:,.;]*[-A-Z0-9+\u0026@#/%=~()_|])/gi;

	var recognizeUrl = function recognizeUrl(str) {
	  return str.replace(regUrl, '<a href="$2" target="_blank">$2</a>');
	};

	function getFrom() {
	  var e = new Error(),
	      ret = '',
	      lines = e.stack ? e.stack.split('\n') : '';

	  for (var i = 0, len = lines.length; i < len; i++) {
	    ret = lines[i];
	    if (ret.indexOf('winConsole') > -1 && i < len - 1) {
	      ret = lines[i + 1];
	      break;
	    }
	  }

	  return ret;
	}

	var getCurTime = function getCurTime() {
	  return (0, _util.dateFormat)('HH:MM:ss');
	};

	var tpl = __webpack_require__(167);
	var render = function render(data) {
	  return tpl(data);
	};

	function extractObj(obj) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var cb = arguments[2];

	  (0, _util.defaults)(options, {
	    getterVal: Log.showGetterVal,
	    unenumerable: Log.showUnenumerable
	  });

	  (0, _stringify2.default)(obj, options, function (result) {
	    return cb(JSON.parse(result));
	  });
	}

	/***/ }),
	/* 153 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(154);
	var $Object = __webpack_require__(4).Object;
	module.exports = function getOwnPropertyNames(it) {
	  return $Object.getOwnPropertyNames(it);
	};


	/***/ }),
	/* 154 */
	/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(24)('getOwnPropertyNames', function () {
	  return __webpack_require__(70).f;
	});


	/***/ }),
	/* 155 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(156), __esModule: true };

	/***/ }),
	/* 156 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(51);
	__webpack_require__(48);
	module.exports = __webpack_require__(157);


	/***/ }),
	/* 157 */
	/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(76);
	var ITERATOR = __webpack_require__(12)('iterator');
	var Iterators = __webpack_require__(26);
	module.exports = __webpack_require__(4).isIterable = function (it) {
	  var O = Object(it);
	  return O[ITERATOR] !== undefined
	    || '@@iterator' in O
	    // eslint-disable-next-line no-prototype-builtins
	    || Iterators.hasOwnProperty(classof(O));
	};


	/***/ }),
	/* 158 */
	/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(51);
	__webpack_require__(48);
	module.exports = __webpack_require__(159);


	/***/ }),
	/* 159 */
	/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(21);
	var get = __webpack_require__(160);
	module.exports = __webpack_require__(4).getIterator = function (it) {
	  var iterFn = get(it);
	  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
	  return anObject(iterFn.call(it));
	};


	/***/ }),
	/* 160 */
	/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(76);
	var ITERATOR = __webpack_require__(12)('iterator');
	var Iterators = __webpack_require__(26);
	module.exports = __webpack_require__(4).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


	/***/ }),
	/* 161 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	/* WEBPACK VAR INJECTION */(function(global) {// Built by eustia.


	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.uniqId = exports.filter = exports.safeCb = exports.matcher = exports.last = exports.isRegExp = exports.isObj = exports.isMatch = exports.isEmpty = exports.isStr = exports.extendOwn = exports.contain = exports.values = exports.extend = exports.createAssigner = exports.each = exports.keys = exports.detectMocha = exports.root = exports.isBrowser = exports.isArrLike = exports.isFn = exports.isNum = exports.isArr = exports.isArgs = exports.objToStr = exports.identity = exports.has = exports.escapeJsonStr = exports.escapeJsStr = exports.toStr = exports.endWith = exports.optimizeCb = exports.isUndef = exports.idxOf = exports.allKeys = undefined;

	var _keys2 = __webpack_require__(36);

	var _keys3 = _interopRequireDefault(_keys2);

	var _typeof2 = __webpack_require__(25);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _ = {};

	/* ------------------------------ allKeys ------------------------------ */

	var allKeys = exports.allKeys = _.allKeys = function () {
	    /* Retrieve all the names of object's own and inherited properties.
	     *
	     * |Name  |Type  |Desc                       |
	     * |------|------|---------------------------|
	     * |obj   |object|Object to query            |
	     * |return|array |Array of all property names|
	     *
	     * > Members of Object's prototype won't be retrieved.
	     *
	     * ```javascript
	     * var obj = Object.create({zero: 0});
	     * obj.one = 1;
	     * allKeys(obj) // -> ['zero', 'one']
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(obj) {
	        var ret = [],
	            key;

	        for (key in obj) {
	            ret.push(key);
	        }return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ idxOf ------------------------------ */

	var idxOf = exports.idxOf = _.idxOf = function () {
	    /* Get the index at which the first occurrence of value.
	     *
	     * |Name     |Type  |Desc                |
	     * |---------|------|--------------------|
	     * |arr      |array |Array to search     |
	     * |val      |*     |Value to search for |
	     * |fromIdx=0|number|Index to search from|
	     *
	     * ```javascript
	     * idxOf([1, 2, 1, 2], 2, 2); // -> 3
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(arr, val, fromIdx) {
	        return Array.prototype.indexOf.call(arr, val, fromIdx);
	    }

	    return exports;
	}();

	/* ------------------------------ isUndef ------------------------------ */

	var isUndef = exports.isUndef = _.isUndef = function () {
	    /* Check if value is undefined.
	     *
	     * |Name  |Type   |Desc                      |
	     * |------|-------|--------------------------|
	     * |val   |*      |Value to check            |
	     * |return|boolean|True if value is undefined|
	     *
	     * ```javascript
	     * isUndef(void 0); // -> true
	     * isUndef(null); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val === void 0;
	    }

	    return exports;
	}();

	/* ------------------------------ optimizeCb ------------------------------ */

	var optimizeCb = exports.optimizeCb = _.optimizeCb = function () {
	    /* Used for function context binding.
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isUndef 
	     */

	    function exports(fn, ctx, argCount) {
	        if (isUndef(ctx)) return fn;

	        switch (argCount == null ? 3 : argCount) {
	            case 1:
	                return function (val) {
	                    return fn.call(ctx, val);
	                };
	            case 3:
	                return function (val, idx, collection) {
	                    return fn.call(ctx, val, idx, collection);
	                };
	            case 4:
	                return function (accumulator, val, idx, collection) {
	                    return fn.call(ctx, accumulator, val, idx, collection);
	                };
	        }

	        return function () {
	            return fn.apply(ctx, arguments);
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ endWith ------------------------------ */

	var endWith = exports.endWith = _.endWith = function () {
	    /* Check if string ends with the given target string.
	     *
	     * |Name  |Type   |Desc                           |
	     * |------|-------|-------------------------------|
	     * |str   |string |The string to search           |
	     * |suffix|string |String suffix                  |
	     * |return|boolean|True if string ends with target|
	     *
	     * ```javascript
	     * endWith('ab', 'b'); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(str, suffix) {
	        var idx = str.length - suffix.length;

	        return idx >= 0 && str.indexOf(suffix, idx) === idx;
	    }

	    return exports;
	}();

	/* ------------------------------ toStr ------------------------------ */

	var toStr = exports.toStr = _.toStr = function () {
	    /* Convert value to a string.
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |val   |*     |Value to convert|
	     * |return|string|Resulted string |
	     *
	     * ```javascript
	     * toStr(null); // -> ''
	     * toStr(1); // -> '1'
	     * toStr(false); // -> 'false'
	     * toStr([1, 2, 3]); // -> '1,2,3'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val == null ? '' : val.toString();
	    }

	    return exports;
	}();

	/* ------------------------------ escapeJsStr ------------------------------ */

	var escapeJsStr = exports.escapeJsStr = _.escapeJsStr = function () {
	    /* Escape string to be a valid JavaScript string literal between quotes.
	     *
	     * http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4
	     *
	     * |Name  |Type  |Desc            |
	     * |------|------|----------------|
	     * |str   |string|String to escape|
	     * |return|string|Escaped string  |
	     * 
	     * ```javascript
	     * escapeJsStr('\"\n'); // -> '\\"\\\\n'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * toStr 
	     */

	    function exports(str) {
	        return toStr(str).replace(regEscapeChars, function (char) {
	            switch (char) {
	                case '"':
	                case "'":
	                case '\\':
	                    return '\\' + char;
	                case '\n':
	                    return '\\n';
	                case '\r':
	                    return '\\r';
	                // Line separator
	                case '\u2028':
	                    return '\\u2028';
	                // Paragraph separator
	                case '\u2029':
	                    return '\\u2029';
	            }
	        });
	    }

	    var regEscapeChars = /["'\\\n\r\u2028\u2029]/g;

	    return exports;
	}();

	/* ------------------------------ escapeJsonStr ------------------------------ */

	var escapeJsonStr = exports.escapeJsonStr = _.escapeJsonStr = function () {
	    /* Escape json string.
	     */

	    /* dependencies
	     * escapeJsStr 
	     */

	    function exports(str) {
	        return escapeJsStr(str).replace(/\\'/g, "'");
	    }

	    return exports;
	}();

	/* ------------------------------ has ------------------------------ */

	var has = exports.has = _.has = function () {
	    /* Checks if key is a direct property.
	     *
	     * |Name  |Type   |Desc                            |
	     * |------|-------|--------------------------------|
	     * |obj   |object |Object to query                 |
	     * |key   |string |Path to check                   |
	     * |return|boolean|True if key is a direct property|
	     *
	     * ```javascript
	     * has({one: 1}, 'one'); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var hasOwnProp = Object.prototype.hasOwnProperty;

	    function exports(obj, key) {
	        return hasOwnProp.call(obj, key);
	    }

	    return exports;
	}();

	/* ------------------------------ identity ------------------------------ */

	var identity = exports.identity = _.identity = function () {
	    /* Return the first argument given.
	     *
	     * |Name  |Type|Desc       |
	     * |------|----|-----------|
	     * |val   |*   |Any value  |
	     * |return|*   |Given value|
	     *
	     * ```javascript
	     * identity('a'); // -> 'a'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        return val;
	    }

	    return exports;
	}();

	/* ------------------------------ objToStr ------------------------------ */

	var objToStr = exports.objToStr = _.objToStr = function () {
	    /* Alias of Object.prototype.toString.
	     *
	     * |Name  |Type  |Desc                                |
	     * |------|------|------------------------------------|
	     * |value |*     |Source value                        |
	     * |return|string|String representation of given value|
	     * 
	     * ```javascript
	     * objToStr(5); // -> '[object Number]'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var ObjToStr = Object.prototype.toString;

	    function exports(val) {
	        return ObjToStr.call(val);
	    }

	    return exports;
	}();

	/* ------------------------------ isArgs ------------------------------ */

	var isArgs = exports.isArgs = _.isArgs = function () {
	    /* Check if value is classified as an arguments object.
	     *
	     * |Name  |Type   |Desc                                |
	     * |------|-------|------------------------------------|
	     * |val   |*      |Value to check                      |
	     * |return|boolean|True if value is an arguments object|
	     *
	     * ```javascript
	     * (function () {
	     *     isArgs(arguments); // -> true
	     * })();
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object Arguments]';
	    }

	    return exports;
	}();

	/* ------------------------------ isArr ------------------------------ */

	var isArr = exports.isArr = _.isArr = function (exports) {
	    /* Check if value is an `Array` object.
	     *
	     * |Name  |Type   |Desc                              |
	     * |------|-------|----------------------------------|
	     * |val   |*      |Value to check                    |
	     * |return|boolean|True if value is an `Array` object|
	     *
	     * ```javascript
	     * isArr([]); // -> true
	     * isArr({}); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    exports = Array.isArray || function (val) {
	        return objToStr(val) === '[object Array]';
	    };

	    return exports;
	}({});

	/* ------------------------------ isNum ------------------------------ */

	var isNum = exports.isNum = _.isNum = function () {
	    /* Check if value is classified as a Number primitive or object.
	     *
	     * |Name  |Type   |Desc                                 |
	     * |------|-------|-------------------------------------|
	     * |val   |*      |Value to check                       |
	     * |return|boolean|True if value is correctly classified|
	     * 
	     * ```javascript
	     * isNum(5); // -> true
	     * isNum(5.1); // -> true
	     * isNum({}); // -> false
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object Number]';
	    }

	    return exports;
	}();

	/* ------------------------------ isFn ------------------------------ */

	var isFn = exports.isFn = _.isFn = function () {
	    /* Check if value is a function.
	     *
	     * |Name  |Type   |Desc                       |
	     * |------|-------|---------------------------|
	     * |val   |*      |Value to check             |
	     * |return|boolean|True if value is a function|
	     *
	     * Generator function is also classified as true.
	     *
	     * ```javascript
	     * isFn(function() {}); // -> true
	     * isFn(function*() {}); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        var objStr = objToStr(val);

	        return objStr === '[object Function]' || objStr === '[object GeneratorFunction]';
	    }

	    return exports;
	}();

	/* ------------------------------ isArrLike ------------------------------ */

	var isArrLike = exports.isArrLike = _.isArrLike = function () {
	    /* Check if value is array-like.
	     *
	     * |Name  |Type   |Desc                       |
	     * |------|-------|---------------------------|
	     * |val   |*      |Value to check             |
	     * |return|boolean|True if value is array like|
	     *
	     * > Function returns false.
	     *
	     * ```javascript
	     * isArrLike('test'); // -> true
	     * isArrLike(document.body.children); // -> true;
	     * isArrLike([1, 2, 3]); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isNum isFn 
	     */

	    var MAX_ARR_IDX = Math.pow(2, 53) - 1;

	    function exports(val) {
	        if (!val) return false;

	        var len = val.length;

	        return isNum(len) && len >= 0 && len <= MAX_ARR_IDX && !isFn(val);
	    }

	    return exports;
	}();

	/* ------------------------------ isBrowser ------------------------------ */

	var isBrowser = exports.isBrowser = _.isBrowser = function (exports) {
	    /* Check if running in a browser.
	     *
	     * ```javascript
	     * console.log(isBrowser); // -> true if running in a browser
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    exports = (typeof window === 'undefined' ? 'undefined' : (0, _typeof3.default)(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : (0, _typeof3.default)(document)) === 'object' && document.nodeType === 9;

	    return exports;
	}({});

	/* ------------------------------ root ------------------------------ */

	var root = exports.root = _.root = function (exports) {
	    /* Root object reference, `global` in nodeJs, `window` in browser. */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isBrowser 
	     */

	    exports = isBrowser ? window : global;

	    return exports;
	}({});

	/* ------------------------------ detectMocha ------------------------------ */

	var detectMocha = exports.detectMocha = _.detectMocha = function () {
	    /* Detect if mocha is running.
	     *
	     * ```javascript
	     * detectMocha(); // -> True if mocha is running.
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * root 
	     */

	    function exports() {
	        for (var i = 0, len = methods.length; i < len; i++) {
	            var method = methods[i];

	            if (typeof root[method] !== 'function') return false;
	        }

	        return true;
	    }

	    var methods = ['afterEach', 'after', 'beforeEach', 'before', 'describe', 'it'];

	    return exports;
	}();

	/* ------------------------------ keys ------------------------------ */

	var keys = exports.keys = _.keys = function (exports) {
	    /* Create an array of the own enumerable property names of object.
	     *
	     * |Name  |Type  |Desc                   |
	     * |------|------|-----------------------|
	     * |obj   |object|Object to query        |
	     * |return|array |Array of property names|
	     * 
	     * ```javascript
	     * keys({a: 1}); // -> ['a']
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * has detectMocha 
	     */

	    if (_keys3.default && !detectMocha()) {
	        exports = _keys3.default;
	    } else {
	        exports = function exports(obj) {
	            var ret = [],
	                key;

	            for (key in obj) {
	                if (has(obj, key)) ret.push(key);
	            }

	            return ret;
	        };
	    }

	    return exports;
	}({});

	/* ------------------------------ each ------------------------------ */

	var each = exports.each = _.each = function () {
	    /* Iterate over elements of collection and invokes iteratee for each element.
	     *
	     * |Name    |Type        |Desc                          |
	     * |--------|------------|------------------------------|
	     * |obj     |object array|Collection to iterate over    |
	     * |iteratee|function    |Function invoked per iteration|
	     * |[ctx]   |*           |Function context              |
	     *
	     * ```javascript
	     * each({'a': 1, 'b': 2}, function (val, key) {});
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isArrLike keys optimizeCb 
	     */

	    function exports(obj, iteratee, ctx) {
	        iteratee = optimizeCb(iteratee, ctx);

	        var i, len;

	        if (isArrLike(obj)) {
	            for (i = 0, len = obj.length; i < len; i++) {
	                iteratee(obj[i], i, obj);
	            }
	        } else {
	            var _keys = keys(obj);
	            for (i = 0, len = _keys.length; i < len; i++) {
	                iteratee(obj[_keys[i]], _keys[i], obj);
	            }
	        }

	        return obj;
	    }

	    return exports;
	}();

	/* ------------------------------ createAssigner ------------------------------ */

	var createAssigner = exports.createAssigner = _.createAssigner = function () {
	    /* Used to create extend, extendOwn and defaults.
	     *
	     * |Name    |Type    |Desc                          |
	     * |--------|--------|------------------------------|
	     * |keysFn  |function|Function to get object keys   |
	     * |defaults|boolean |No override when set to true  |
	     * |return  |function|Result function, extend...    |
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isUndef each 
	     */

	    function exports(keysFn, defaults) {
	        return function (obj) {
	            each(arguments, function (src, idx) {
	                if (idx === 0) return;

	                var keys = keysFn(src);

	                each(keys, function (key) {
	                    if (!defaults || isUndef(obj[key])) obj[key] = src[key];
	                });
	            });

	            return obj;
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ extend ------------------------------ */

	var extend = exports.extend = _.extend = function (exports) {
	    /* Copy all of the properties in the source objects over to the destination object.
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |obj   |object|Destination object|
	     * |...src|object|Sources objects   |
	     * |return|object|Destination object|
	     *
	     * ```javascript
	     * extend({name: 'RedHood'}, {age: 24}); // -> {name: 'RedHood', age: 24}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * createAssigner allKeys 
	     */

	    exports = createAssigner(allKeys);

	    return exports;
	}({});

	/* ------------------------------ values ------------------------------ */

	var values = exports.values = _.values = function () {
	    /* Create an array of the own enumerable property values of object.
	     *
	     * |Name  |Type  |Desc                    |
	     * |------|------|------------------------|
	     * |obj   |object|Object to query         |
	     * |return|array |Array of property values|
	     *
	     * ```javascript
	     * values({one: 1, two: 2}); // -> [1, 2]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * each 
	     */

	    function exports(obj) {
	        var ret = [];

	        each(obj, function (val) {
	            ret.push(val);
	        });

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ contain ------------------------------ */

	var contain = exports.contain = _.contain = function () {
	    /* Check if the value is present in the list.
	     *
	     * |Name  |Type        |Desc                                |
	     * |------|------------|------------------------------------|
	     * |array |array object|Target list                         |
	     * |value |*           |Value to check                      |
	     * |return|boolean     |True if value is present in the list|
	     *
	     * ```javascript
	     * contain([1, 2, 3], 1); // -> true
	     * contain({a: 1, b: 2}, 1); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * idxOf isArrLike values 
	     */

	    function exports(arr, val) {
	        if (!isArrLike(arr)) arr = values(arr);

	        return idxOf(arr, val) >= 0;
	    }

	    return exports;
	}();

	/* ------------------------------ extendOwn ------------------------------ */

	var extendOwn = exports.extendOwn = _.extendOwn = function (exports) {
	    /* Like extend, but only copies own properties over to the destination object.
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |obj   |object|Destination object|
	     * |*src  |object|Sources objects   |
	     * |return|object|Destination object|
	     *
	     * ```javascript
	     * extendOwn({name: 'RedHood'}, {age: 24}); // -> {name: 'RedHood', age: 24}
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * keys createAssigner 
	     */

	    exports = createAssigner(keys);

	    return exports;
	}({});

	/* ------------------------------ isStr ------------------------------ */

	var isStr = exports.isStr = _.isStr = function () {
	    /* Check if value is a string primitive.
	     *
	     * |Name  |Type   |Desc                               |
	     * |------|-------|-----------------------------------|
	     * |val   |*      |Value to check                     |
	     * |return|boolean|True if value is a string primitive|
	     *
	     * ```javascript
	     * isStr('licia'); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object String]';
	    }

	    return exports;
	}();

	/* ------------------------------ isEmpty ------------------------------ */

	var isEmpty = exports.isEmpty = _.isEmpty = function () {
	    /* Check if value is an empty object or array.
	     *
	     * |Name  |Type   |Desc                  |
	     * |------|-------|----------------------|
	     * |val   |*      |Value to check        |
	     * |return|boolean|True if value is empty|
	     *
	     * ```javascript
	     * isEmpty([]); // -> true
	     * isEmpty({}); // -> true
	     * isEmpty(''); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isArrLike isArr isStr isArgs keys 
	     */

	    function exports(val) {
	        if (val == null) return true;

	        if (isArrLike(val) && (isArr(val) || isStr(val) || isArgs(val))) {
	            return val.length === 0;
	        }

	        return keys(val).length === 0;
	    }

	    return exports;
	}();

	/* ------------------------------ isMatch ------------------------------ */

	var isMatch = exports.isMatch = _.isMatch = function () {
	    /* Check if keys and values in src are contained in obj.
	     *
	     * |Name  |Type   |Desc                              |
	     * |------|-------|----------------------------------|
	     * |obj   |object |Object to inspect                 |
	     * |src   |object |Object of property values to match|
	     * |return|boolean|True if object is match           |
	     *
	     * ```javascript
	     * isMatch({a: 1, b: 2}, {a: 1}); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * keys 
	     */

	    function exports(obj, src) {
	        var _keys = keys(src),
	            len = _keys.length;

	        if (obj == null) return !len;

	        obj = Object(obj);

	        for (var i = 0; i < len; i++) {
	            var key = _keys[i];
	            if (src[key] !== obj[key] || !(key in obj)) return false;
	        }

	        return true;
	    }

	    return exports;
	}();

	/* ------------------------------ isObj ------------------------------ */

	var isObj = exports.isObj = _.isObj = function () {
	    /* Check if value is the language type of Object.
	     *
	     * |Name  |Type   |Desc                      |
	     * |------|-------|--------------------------|
	     * |val   |*      |Value to check            |
	     * |return|boolean|True if value is an object|
	     *
	     * [Language Spec](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	     *
	     * ```javascript
	     * isObj({}); // -> true
	     * isObj([]); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(val) {
	        var type = typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val);

	        return !!val && (type === 'function' || type === 'object');
	    }

	    return exports;
	}();

	/* ------------------------------ isRegExp ------------------------------ */

	var isRegExp = exports.isRegExp = _.isRegExp = function () {
	    /* Check if value is a regular expression.
	     *
	     * |Name  |Type   |Desc                                 |
	     * |------|-------|-------------------------------------|
	     * |val   |*      |Value to check                       |
	     * |return|boolean|True if value is a regular expression|
	     *
	     * ```javascript
	     * isRegExp(/a/); // -> true
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * objToStr 
	     */

	    function exports(val) {
	        return objToStr(val) === '[object RegExp]';
	    }

	    return exports;
	}();

	/* ------------------------------ last ------------------------------ */

	var last = exports.last = _.last = function () {
	    /* Get the last element of array.
	     *
	     * |Name  |Type |Desc                     |
	     * |------|-----|-------------------------|
	     * |arr   |array|The array to query       |
	     * |return|*    |The last element of array|
	     *
	     * ```javascript
	     * last([1, 2]); // -> 2
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    function exports(arr) {
	        var len = arr ? arr.length : 0;

	        if (len) return arr[len - 1];
	    }

	    return exports;
	}();

	/* ------------------------------ matcher ------------------------------ */

	var matcher = exports.matcher = _.matcher = function () {
	    /* Return a predicate function that checks if attrs are contained in an object.
	     *
	     * |Name  |Type    |Desc                              |
	     * |------|--------|----------------------------------|
	     * |attrs |object  |Object of property values to match|
	     * |return|function|New predicate function            |
	     *
	     * ```javascript
	     * var objects = [
	     *     {a: 1, b: 2, c: 3 },
	     *     {a: 4, b: 5, c: 6 }
	     * ];
	     * filter(objects, matcher({a: 4, c: 6 })); // -> [{a: 4, b: 5, c: 6 }]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * extendOwn isMatch 
	     */

	    function exports(attrs) {
	        attrs = extendOwn({}, attrs);

	        return function (obj) {
	            return isMatch(obj, attrs);
	        };
	    }

	    return exports;
	}();

	/* ------------------------------ safeCb ------------------------------ */

	var safeCb = exports.safeCb = _.safeCb = function (exports) {
	    /* Create callback based on input value.
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * isFn isObj optimizeCb matcher identity 
	     */

	    exports = function exports(val, ctx, argCount) {
	        if (val == null) return identity;

	        if (isFn(val)) return optimizeCb(val, ctx, argCount);

	        if (isObj(val)) return matcher(val);

	        return function (key) {
	            return function (obj) {
	                return obj == null ? undefined : obj[key];
	            };
	        };
	    };

	    return exports;
	}({});

	/* ------------------------------ filter ------------------------------ */

	var filter = exports.filter = _.filter = function () {
	    /* Iterates over elements of collection, returning an array of all the values that pass a truth test.
	     *
	     * |Name     |Type    |Desc                                   |
	     * |---------|--------|---------------------------------------|
	     * |obj      |array   |Collection to iterate over             |
	     * |predicate|function|Function invoked per iteration         |
	     * |[ctx]    |*       |Predicate context                      |
	     * |return   |array   |Array of all values that pass predicate|
	     *
	     * ```javascript
	     * filter([1, 2, 3, 4, 5], function (val)
	     * {
	     *     return val % 2 === 0;
	     * }); // -> [2, 4]
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    /* dependencies
	     * safeCb each 
	     */

	    function exports(obj, predicate, ctx) {
	        var ret = [];

	        predicate = safeCb(predicate, ctx);

	        each(obj, function (val, idx, list) {
	            if (predicate(val, idx, list)) ret.push(val);
	        });

	        return ret;
	    }

	    return exports;
	}();

	/* ------------------------------ uniqId ------------------------------ */

	var uniqId = exports.uniqId = _.uniqId = function () {
	    /* Generate a globally-unique id.
	     *
	     * |Name  |Type  |Desc              |
	     * |------|------|------------------|
	     * |prefix|string|Id prefix         |
	     * |return|string|Globally-unique id|
	     *
	     * ```javascript
	     * uniqId('eusita_'); // -> 'eustia_xxx'
	     * ```
	     */

	    /* module
	     * env: all
	     * test: all
	     */

	    var idCounter = 0;

	    function exports(prefix) {
	        var id = ++idCounter + '';

	        return prefix ? prefix + id : id;
	    }

	    return exports;
	}();

	exports.default = _;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(73)))

	/***/ }),
	/* 162 */
	/***/ (function(module, exports, __webpack_require__) {

	module.exports = function() {
	  return __webpack_require__(163)("/*! eruda v1.5.0 https://eruda.liriliri.io/ */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 45);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store = __webpack_require__(24)('wks');\nvar uid = __webpack_require__(16);\nvar Symbol = __webpack_require__(2).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(52);\nvar defined = __webpack_require__(20);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(9);\nvar IE8_DOM_DEFINE = __webpack_require__(33);\nvar toPrimitive = __webpack_require__(21);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(5) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(11)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(4);\nvar createDesc = __webpack_require__(14);\nmodule.exports = __webpack_require__(5) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(10);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = true;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(2);\nvar core = __webpack_require__(0);\nvar ctx = __webpack_require__(53);\nvar hide = __webpack_require__(7);\nvar has = __webpack_require__(6);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(37);\nvar enumBugKeys = __webpack_require__(25);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(13);\nvar core = __webpack_require__(0);\nvar fails = __webpack_require__(11);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(49);\nvar global = __webpack_require__(2);\nvar hide = __webpack_require__(7);\nvar Iterators = __webpack_require__(8);\nvar TO_STRING_TAG = __webpack_require__(1)('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(10);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(24)('keys');\nvar uid = __webpack_require__(16);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = __webpack_require__(0);\nvar global = __webpack_require__(2);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(12) ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(4).f;\nvar has = __webpack_require__(6);\nvar TAG = __webpack_require__(1)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(20);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at = __webpack_require__(61)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(32)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.f = __webpack_require__(1);\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(2);\nvar core = __webpack_require__(0);\nvar LIBRARY = __webpack_require__(12);\nvar wksExt = __webpack_require__(30);\nvar defineProperty = __webpack_require__(4).f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY = __webpack_require__(12);\nvar $export = __webpack_require__(13);\nvar redefine = __webpack_require__(35);\nvar hide = __webpack_require__(7);\nvar Iterators = __webpack_require__(8);\nvar $iterCreate = __webpack_require__(55);\nvar setToStringTag = __webpack_require__(26);\nvar getPrototypeOf = __webpack_require__(38);\nvar ITERATOR = __webpack_require__(1)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(5) && !__webpack_require__(11)(function () {\n  return Object.defineProperty(__webpack_require__(34)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(10);\nvar document = __webpack_require__(2).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(7);\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(9);\nvar dPs = __webpack_require__(56);\nvar enumBugKeys = __webpack_require__(25);\nvar IE_PROTO = __webpack_require__(23)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(34)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(60).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(6);\nvar toIObject = __webpack_require__(3);\nvar arrayIndexOf = __webpack_require__(57)(false);\nvar IE_PROTO = __webpack_require__(23)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(6);\nvar toObject = __webpack_require__(27);\nvar IE_PROTO = __webpack_require__(23)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(19);\nvar TAG = __webpack_require__(1)('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(73), __esModule: true };\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(3);\nvar gOPN = __webpack_require__(42).f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(37);\nvar hiddenKeys = __webpack_require__(25).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pIE = __webpack_require__(29);\nvar createDesc = __webpack_require__(14);\nvar toIObject = __webpack_require__(3);\nvar toPrimitive = __webpack_require__(21);\nvar has = __webpack_require__(6);\nvar IE8_DOM_DEFINE = __webpack_require__(33);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(5) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _slicedToArray2 = __webpack_require__(46);\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _stringify = __webpack_require__(67);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nonmessage = function onmessage(e) {\n  var _e$data = (0, _slicedToArray3.default)(e.data, 3),\n      id = _e$data[0],\n      obj = _e$data[1],\n      options = _e$data[2];\n\n  var result = (0, _stringify2.default)(obj, options);\n  postMessage([id, result]);\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _isIterable2 = __webpack_require__(47);\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = __webpack_require__(63);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(48), __esModule: true };\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(18);\n__webpack_require__(28);\nmodule.exports = __webpack_require__(62);\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(50);\nvar step = __webpack_require__(51);\nvar Iterators = __webpack_require__(8);\nvar toIObject = __webpack_require__(3);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(32)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nmodule.exports = function () { /* empty */ };\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(19);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(54);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create = __webpack_require__(36);\nvar descriptor = __webpack_require__(14);\nvar setToStringTag = __webpack_require__(26);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(7)(IteratorPrototype, __webpack_require__(1)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(4);\nvar anObject = __webpack_require__(9);\nvar getKeys = __webpack_require__(15);\n\nmodule.exports = __webpack_require__(5) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(3);\nvar toLength = __webpack_require__(58);\nvar toAbsoluteIndex = __webpack_require__(59);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(22);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(22);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar document = __webpack_require__(2).document;\nmodule.exports = document && document.documentElement;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(22);\nvar defined = __webpack_require__(20);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(39);\nvar ITERATOR = __webpack_require__(1)('iterator');\nvar Iterators = __webpack_require__(8);\nmodule.exports = __webpack_require__(0).isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(64), __esModule: true };\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(18);\n__webpack_require__(28);\nmodule.exports = __webpack_require__(65);\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(9);\nvar get = __webpack_require__(66);\nmodule.exports = __webpack_require__(0).getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(39);\nvar ITERATOR = __webpack_require__(1)('iterator');\nvar Iterators = __webpack_require__(8);\nmodule.exports = __webpack_require__(0).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = __webpack_require__(68);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(69);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _keys = __webpack_require__(40);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getOwnPropertyNames = __webpack_require__(75);\n\nvar _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);\n\nvar _getOwnPropertyDescriptor = __webpack_require__(78);\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nvar _getPrototypeOf = __webpack_require__(81);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nexports.default = stringify;\n\nvar _stringifyUtil = __webpack_require__(84);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Modified from: https://jsconsole.com/\nfunction stringify(obj) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$visitor = _ref.visitor,\n      visitor = _ref$visitor === undefined ? new Visitor() : _ref$visitor,\n      topObj = _ref.topObj,\n      _ref$level = _ref.level,\n      level = _ref$level === undefined ? 0 : _ref$level,\n      _ref$circularMarker = _ref.circularMarker,\n      circularMarker = _ref$circularMarker === undefined ? false : _ref$circularMarker,\n      _ref$getterVal = _ref.getterVal,\n      getterVal = _ref$getterVal === undefined ? false : _ref$getterVal,\n      _ref$unenumerable = _ref.unenumerable,\n      unenumerable = _ref$unenumerable === undefined ? true : _ref$unenumerable;\n\n  var json = '',\n      type = void 0,\n      parts = [],\n      names = [],\n      proto = void 0,\n      objAbstract = void 0,\n      circularObj = void 0,\n      allKeys = void 0,\n      keys = void 0,\n      id = '';\n\n  topObj = topObj || obj;\n\n  var passOpts = { visitor: visitor, getterVal: getterVal, unenumerable: unenumerable, level: level + 1 },\n      passProtoOpts = {\n    visitor: visitor,\n    getterVal: getterVal,\n    topObj: topObj,\n    unenumerable: unenumerable,\n    level: level + 1\n  };\n\n  var wrapKey = function wrapKey(key) {\n    return '\"' + (0, _stringifyUtil.escapeJsonStr)(key) + '\"';\n  },\n      wrapStr = function wrapStr(str) {\n    return '\"' + (0, _stringifyUtil.escapeJsonStr)((0, _stringifyUtil.toStr)(str)) + '\"';\n  };\n\n  type = getType(obj);\n\n  var isFn = type == '[object Function]',\n      isStr = type == '[object String]',\n      isArr = type == '[object Array]',\n      isObj = type == '[object Object]',\n      isNum = type == '[object Number]',\n      isSymbol = type == '[object Symbol]',\n      isBool = type == '[object Boolean]';\n\n  circularObj = visitor.check(obj);\n\n  if (circularObj) {\n    json = stringify(circularObj.abstract, { circularMarker: true });\n  } else if (isStr) {\n    json = wrapStr(obj);\n  } else if (isArr || isObj || isFn) {\n    id = visitor.visit(obj);\n\n    if (canBeProto(obj)) {\n      obj = (0, _getPrototypeOf2.default)(obj);\n      id = visitor.visit(obj);\n    }\n\n    names = getKeys(obj);\n    keys = names.keys;\n    allKeys = names.allKeys;\n    names = unenumerable ? allKeys : keys;\n\n    proto = (0, _getPrototypeOf2.default)(obj);\n    if (circularMarker && proto === Object.prototype) proto = null;\n    if (proto) {\n      proto = wrapKey('erudaProto') + ': ' + stringify(proto, passProtoOpts);\n    }\n    if (isFn) {\n      // We don't need these properties to display for functions.\n      names = names.filter(function (val) {\n        return ['arguments', 'caller'].indexOf(val) < 0;\n      });\n    }\n    json = '{ ';\n    objAbstract = getObjAbstract(obj);\n    visitor.updateAbstract(id, {\n      erudaObjAbstract: objAbstract,\n      erudaCircular: id\n    });\n    parts.push(wrapKey('erudaObjAbstract') + ': ' + wrapStr(objAbstract));\n    if (!circularMarker) parts.push('\"erudaId\": \"' + id + '\"');\n    (0, _stringifyUtil.each)(names, objIteratee);\n    if (proto) parts.push(proto);\n    json += parts.join(', ') + ' }';\n  } else if (isNum) {\n    json = obj + '';\n    if ((0, _stringifyUtil.endWith)(json, 'Infinity') || json === 'NaN') json = '\"' + json + '\"';\n  } else if (isBool) {\n    json = obj ? 'true' : 'false';\n  } else if (obj === null) {\n    json = 'null';\n  } else if (isSymbol) {\n    json = wrapStr('Symbol');\n  } else if (obj === undefined) {\n    json = wrapStr('undefined');\n  } else if (type === '[object HTMLAllCollection]') {\n    // https://docs.webplatform.org/wiki/dom/HTMLAllCollection\n    // Might cause a performance issue when stringify a dom element.\n    json = wrapStr('[object HTMLAllCollection]');\n  } else if (type === '[object HTMLDocument]' && level > 1) {\n    // Same as reason above.\n    json = wrapStr('[object HTMLDocument]');\n  } else {\n    try {\n      id = visitor.visit(obj);\n      if (canBeProto(obj)) {\n        obj = (0, _getPrototypeOf2.default)(obj);\n        id = visitor.visit(obj);\n      }\n\n      json = '{ ';\n      objAbstract = getObjAbstract(obj);\n      visitor.updateAbstract(id, {\n        erudaObjAbstract: objAbstract,\n        erudaCircular: id\n      });\n      parts.push(wrapKey('erudaObjAbstract') + ': ' + wrapStr(objAbstract));\n      if (!circularMarker) parts.push('\"erudaId\": \"' + id + '\"');\n\n      names = getKeys(obj);\n      keys = names.keys;\n      allKeys = names.allKeys;\n      names = unenumerable ? allKeys : keys;\n\n      proto = (0, _getPrototypeOf2.default)(obj);\n      if (circularMarker && proto === Object.prototype) proto = null;\n      if (proto) {\n        try {\n          proto = wrapKey('erudaProto') + ': ' + stringify(proto, passProtoOpts);\n        } catch (e) {\n          proto = wrapKey('erudaProto') + ': ' + wrapStr(e.message);\n        }\n      }\n      (0, _stringifyUtil.each)(names, objIteratee);\n      if (proto) parts.push(proto);\n      json += parts.join(', ') + ' }';\n    } catch (e) {\n      json = wrapStr(obj);\n    }\n  }\n\n  function objIteratee(name) {\n    var unenumerable = !(0, _stringifyUtil.contain)(keys, name) ? 'erudaUnenumerable ' : '',\n        key = wrapKey(unenumerable + name),\n        getKey = wrapKey(unenumerable + 'get ' + name),\n        setKey = wrapKey(unenumerable + 'set ' + name);\n\n    var descriptor = (0, _getOwnPropertyDescriptor2.default)(obj, name),\n        hasGetter = descriptor && descriptor.get,\n        hasSetter = descriptor && descriptor.set;\n\n    if (!getterVal && hasGetter) {\n      parts.push(key + ': \"(...)\"');\n      parts.push(getKey + ': ' + stringify(descriptor.get, passOpts));\n    } else {\n      var val = void 0;\n      try {\n        val = topObj[name];\n      } catch (e) {\n        val = e.message;\n      }\n      parts.push(key + ': ' + stringify(val, passOpts));\n    }\n    if (hasSetter) {\n      parts.push(setKey + ': ' + stringify(descriptor.set, passOpts));\n    }\n  }\n\n  return json;\n}\n\nfunction getKeys(obj) {\n  var allKeys = (0, _getOwnPropertyNames2.default)(obj),\n      keys = (0, _keys2.default)(obj).sort(sortObjName);\n\n  allKeys = keys.concat((0, _stringifyUtil.filter)(allKeys, function (val) {\n    return !(0, _stringifyUtil.contain)(keys, val);\n  }).sort(sortObjName));\n\n  return { keys: keys, allKeys: allKeys };\n}\n\n// $, upperCase, lowerCase, _\nfunction sortObjName(a, b) {\n  var lenA = a.length,\n      lenB = b.length,\n      len = lenA > lenB ? lenB : lenA;\n\n  for (var i = 0; i < len; i++) {\n    var codeA = a.charCodeAt(i),\n        codeB = b.charCodeAt(i),\n        cmpResult = cmpCode(codeA, codeB);\n\n    if (cmpResult !== 0) return cmpResult;\n  }\n\n  if (lenA > lenB) return 1;\n  if (lenA < lenB) return -1;\n\n  return 0;\n}\n\nfunction cmpCode(a, b) {\n  a = transCode(a);\n  b = transCode(b);\n\n  if (a > b) return 1;\n  if (a < b) return -1;\n  return 0;\n}\n\nfunction transCode(code) {\n  // _ should be placed after lowercase chars.\n  if (code === 95) return 123;\n  return code;\n}\n\nvar regFnHead = /function(.*?)\\((.*?)\\)/;\n\nfunction extractFnHead(fn) {\n  var str = fn.toString(),\n      fnHead = str.match(regFnHead);\n\n  if (fnHead) return fnHead[0];\n\n  return str;\n}\n\nfunction getFnAbstract(fn) {\n  var fnStr = fn.toString();\n  if (fnStr.length > 500) fnStr = fnStr.slice(0, 500) + '...';\n\n  return extractFnHead(fnStr).replace('function', '');\n}\n\nfunction canBeProto(obj) {\n  var emptyObj = (0, _stringifyUtil.isEmpty)((0, _getOwnPropertyNames2.default)(obj)),\n      proto = (0, _getPrototypeOf2.default)(obj);\n\n  return emptyObj && proto && proto !== Object.prototype;\n}\n\nfunction getObjAbstract(obj) {\n  if ((0, _stringifyUtil.isArr)(obj)) return 'Array(' + obj.length + ')';\n  if ((0, _stringifyUtil.isFn)(obj)) return getFnAbstract(obj);\n  if ((0, _stringifyUtil.isRegExp)(obj)) return obj.toString();\n\n  var type = getType(obj);\n\n  return type.replace(/(\\[object )|]/g, '');\n}\n\nfunction getType(obj) {\n  var type = void 0;\n\n  try {\n    type = {}.toString.call(obj);\n  } catch (e) {\n    type = '[object Object]';\n  }\n\n  return type;\n}\n\nvar Visitor = function () {\n  function Visitor() {\n    (0, _classCallCheck3.default)(this, Visitor);\n\n    this._visited = [];\n    this._map = {};\n  }\n\n  (0, _createClass3.default)(Visitor, [{\n    key: 'visit',\n    value: function visit(val) {\n      /* Add 0 to distinguish stringify generated id from JsonViewer id.\n           * When used in web worker, they are not calling the same uniqId method, thus result may be repeated.\n           */\n      var id = (0, _stringifyUtil.uniqId)('erudaJson0');\n\n      this._visited.push({ id: id, val: val, abstract: {} });\n      this._map[id] = (0, _stringifyUtil.last)(this._visited);\n\n      return id;\n    }\n  }, {\n    key: 'check',\n    value: function check(val) {\n      var visited = this._visited;\n\n      for (var i = 0, len = visited.length; i < len; i++) {\n        if (val === visited[i].val) return visited[i];\n      }\n\n      return false;\n    }\n  }, {\n    key: 'update',\n    value: function update(id, data) {\n      (0, _stringifyUtil.extend)(this._map[id], data);\n    }\n  }, {\n    key: 'updateAbstract',\n    value: function updateAbstract(id, abstract) {\n      this.update(id, { abstract: abstract });\n    }\n  }]);\n  return Visitor;\n}();\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(70);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(71), __esModule: true };\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(72);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(13);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(5), 'Object', { defineProperty: __webpack_require__(4).f });\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(74);\nmodule.exports = __webpack_require__(0).Object.keys;\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__(27);\nvar $keys = __webpack_require__(15);\n\n__webpack_require__(17)('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(76), __esModule: true };\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(77);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(17)('getOwnPropertyNames', function () {\n  return __webpack_require__(41).f;\n});\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(79), __esModule: true };\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(80);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = __webpack_require__(3);\nvar $getOwnPropertyDescriptor = __webpack_require__(43).f;\n\n__webpack_require__(17)('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(82), __esModule: true };\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(83);\nmodule.exports = __webpack_require__(0).Object.getPrototypeOf;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = __webpack_require__(27);\nvar $getPrototypeOf = __webpack_require__(38);\n\n__webpack_require__(17)('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {// Built by eustia.\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.uniqId = exports.filter = exports.safeCb = exports.matcher = exports.last = exports.isRegExp = exports.isObj = exports.isMatch = exports.isEmpty = exports.isStr = exports.extendOwn = exports.contain = exports.values = exports.extend = exports.createAssigner = exports.each = exports.keys = exports.detectMocha = exports.root = exports.isBrowser = exports.isArrLike = exports.isFn = exports.isNum = exports.isArr = exports.isArgs = exports.objToStr = exports.identity = exports.has = exports.escapeJsonStr = exports.escapeJsStr = exports.toStr = exports.endWith = exports.optimizeCb = exports.isUndef = exports.idxOf = exports.allKeys = undefined;\n\nvar _keys2 = __webpack_require__(40);\n\nvar _keys3 = _interopRequireDefault(_keys2);\n\nvar _typeof2 = __webpack_require__(86);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ = {};\n\n/* ------------------------------ allKeys ------------------------------ */\n\nvar allKeys = exports.allKeys = _.allKeys = function () {\n    /* Retrieve all the names of object's own and inherited properties.\n     *\n     * |Name  |Type  |Desc                       |\n     * |------|------|---------------------------|\n     * |obj   |object|Object to query            |\n     * |return|array |Array of all property names|\n     *\n     * > Members of Object's prototype won't be retrieved.\n     *\n     * ```javascript\n     * var obj = Object.create({zero: 0});\n     * obj.one = 1;\n     * allKeys(obj) // -> ['zero', 'one']\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(obj) {\n        var ret = [],\n            key;\n\n        for (key in obj) {\n            ret.push(key);\n        }return ret;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ idxOf ------------------------------ */\n\nvar idxOf = exports.idxOf = _.idxOf = function () {\n    /* Get the index at which the first occurrence of value.\n     *\n     * |Name     |Type  |Desc                |\n     * |---------|------|--------------------|\n     * |arr      |array |Array to search     |\n     * |val      |*     |Value to search for |\n     * |fromIdx=0|number|Index to search from|\n     *\n     * ```javascript\n     * idxOf([1, 2, 1, 2], 2, 2); // -> 3\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(arr, val, fromIdx) {\n        return Array.prototype.indexOf.call(arr, val, fromIdx);\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isUndef ------------------------------ */\n\nvar isUndef = exports.isUndef = _.isUndef = function () {\n    /* Check if value is undefined.\n     *\n     * |Name  |Type   |Desc                      |\n     * |------|-------|--------------------------|\n     * |val   |*      |Value to check            |\n     * |return|boolean|True if value is undefined|\n     *\n     * ```javascript\n     * isUndef(void 0); // -> true\n     * isUndef(null); // -> false\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(val) {\n        return val === void 0;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ optimizeCb ------------------------------ */\n\nvar optimizeCb = exports.optimizeCb = _.optimizeCb = function () {\n    /* Used for function context binding.\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * isUndef \n     */\n\n    function exports(fn, ctx, argCount) {\n        if (isUndef(ctx)) return fn;\n\n        switch (argCount == null ? 3 : argCount) {\n            case 1:\n                return function (val) {\n                    return fn.call(ctx, val);\n                };\n            case 3:\n                return function (val, idx, collection) {\n                    return fn.call(ctx, val, idx, collection);\n                };\n            case 4:\n                return function (accumulator, val, idx, collection) {\n                    return fn.call(ctx, accumulator, val, idx, collection);\n                };\n        }\n\n        return function () {\n            return fn.apply(ctx, arguments);\n        };\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ endWith ------------------------------ */\n\nvar endWith = exports.endWith = _.endWith = function () {\n    /* Check if string ends with the given target string.\n     *\n     * |Name  |Type   |Desc                           |\n     * |------|-------|-------------------------------|\n     * |str   |string |The string to search           |\n     * |suffix|string |String suffix                  |\n     * |return|boolean|True if string ends with target|\n     *\n     * ```javascript\n     * endWith('ab', 'b'); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(str, suffix) {\n        var idx = str.length - suffix.length;\n\n        return idx >= 0 && str.indexOf(suffix, idx) === idx;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ toStr ------------------------------ */\n\nvar toStr = exports.toStr = _.toStr = function () {\n    /* Convert value to a string.\n     *\n     * |Name  |Type  |Desc            |\n     * |------|------|----------------|\n     * |val   |*     |Value to convert|\n     * |return|string|Resulted string |\n     *\n     * ```javascript\n     * toStr(null); // -> ''\n     * toStr(1); // -> '1'\n     * toStr(false); // -> 'false'\n     * toStr([1, 2, 3]); // -> '1,2,3'\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(val) {\n        return val == null ? '' : val.toString();\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ escapeJsStr ------------------------------ */\n\nvar escapeJsStr = exports.escapeJsStr = _.escapeJsStr = function () {\n    /* Escape string to be a valid JavaScript string literal between quotes.\n     *\n     * http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4\n     *\n     * |Name  |Type  |Desc            |\n     * |------|------|----------------|\n     * |str   |string|String to escape|\n     * |return|string|Escaped string  |\n     * \n     * ```javascript\n     * escapeJsStr('\\\"\\n'); // -> '\\\\\"\\\\\\\\n'\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * toStr \n     */\n\n    function exports(str) {\n        return toStr(str).replace(regEscapeChars, function (char) {\n            switch (char) {\n                case '\"':\n                case \"'\":\n                case '\\\\':\n                    return '\\\\' + char;\n                case '\\n':\n                    return '\\\\n';\n                case '\\r':\n                    return '\\\\r';\n                // Line separator\n                case '\\u2028':\n                    return '\\\\u2028';\n                // Paragraph separator\n                case '\\u2029':\n                    return '\\\\u2029';\n            }\n        });\n    }\n\n    var regEscapeChars = /[\"'\\\\\\n\\r\\u2028\\u2029]/g;\n\n    return exports;\n}();\n\n/* ------------------------------ escapeJsonStr ------------------------------ */\n\nvar escapeJsonStr = exports.escapeJsonStr = _.escapeJsonStr = function () {\n    /* Escape json string.\n     */\n\n    /* dependencies\n     * escapeJsStr \n     */\n\n    function exports(str) {\n        return escapeJsStr(str).replace(/\\\\'/g, \"'\");\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ has ------------------------------ */\n\nvar has = exports.has = _.has = function () {\n    /* Checks if key is a direct property.\n     *\n     * |Name  |Type   |Desc                            |\n     * |------|-------|--------------------------------|\n     * |obj   |object |Object to query                 |\n     * |key   |string |Path to check                   |\n     * |return|boolean|True if key is a direct property|\n     *\n     * ```javascript\n     * has({one: 1}, 'one'); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    var hasOwnProp = Object.prototype.hasOwnProperty;\n\n    function exports(obj, key) {\n        return hasOwnProp.call(obj, key);\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ identity ------------------------------ */\n\nvar identity = exports.identity = _.identity = function () {\n    /* Return the first argument given.\n     *\n     * |Name  |Type|Desc       |\n     * |------|----|-----------|\n     * |val   |*   |Any value  |\n     * |return|*   |Given value|\n     *\n     * ```javascript\n     * identity('a'); // -> 'a'\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(val) {\n        return val;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ objToStr ------------------------------ */\n\nvar objToStr = exports.objToStr = _.objToStr = function () {\n    /* Alias of Object.prototype.toString.\n     *\n     * |Name  |Type  |Desc                                |\n     * |------|------|------------------------------------|\n     * |value |*     |Source value                        |\n     * |return|string|String representation of given value|\n     * \n     * ```javascript\n     * objToStr(5); // -> '[object Number]'\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    var ObjToStr = Object.prototype.toString;\n\n    function exports(val) {\n        return ObjToStr.call(val);\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isArgs ------------------------------ */\n\nvar isArgs = exports.isArgs = _.isArgs = function () {\n    /* Check if value is classified as an arguments object.\n     *\n     * |Name  |Type   |Desc                                |\n     * |------|-------|------------------------------------|\n     * |val   |*      |Value to check                      |\n     * |return|boolean|True if value is an arguments object|\n     *\n     * ```javascript\n     * (function () {\n     *     isArgs(arguments); // -> true\n     * })();\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * objToStr \n     */\n\n    function exports(val) {\n        return objToStr(val) === '[object Arguments]';\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isArr ------------------------------ */\n\nvar isArr = exports.isArr = _.isArr = function (exports) {\n    /* Check if value is an `Array` object.\n     *\n     * |Name  |Type   |Desc                              |\n     * |------|-------|----------------------------------|\n     * |val   |*      |Value to check                    |\n     * |return|boolean|True if value is an `Array` object|\n     *\n     * ```javascript\n     * isArr([]); // -> true\n     * isArr({}); // -> false\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * objToStr \n     */\n\n    exports = Array.isArray || function (val) {\n        return objToStr(val) === '[object Array]';\n    };\n\n    return exports;\n}({});\n\n/* ------------------------------ isNum ------------------------------ */\n\nvar isNum = exports.isNum = _.isNum = function () {\n    /* Check if value is classified as a Number primitive or object.\n     *\n     * |Name  |Type   |Desc                                 |\n     * |------|-------|-------------------------------------|\n     * |val   |*      |Value to check                       |\n     * |return|boolean|True if value is correctly classified|\n     * \n     * ```javascript\n     * isNum(5); // -> true\n     * isNum(5.1); // -> true\n     * isNum({}); // -> false\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * objToStr \n     */\n\n    function exports(val) {\n        return objToStr(val) === '[object Number]';\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isFn ------------------------------ */\n\nvar isFn = exports.isFn = _.isFn = function () {\n    /* Check if value is a function.\n     *\n     * |Name  |Type   |Desc                       |\n     * |------|-------|---------------------------|\n     * |val   |*      |Value to check             |\n     * |return|boolean|True if value is a function|\n     *\n     * Generator function is also classified as true.\n     *\n     * ```javascript\n     * isFn(function() {}); // -> true\n     * isFn(function*() {}); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * objToStr \n     */\n\n    function exports(val) {\n        var objStr = objToStr(val);\n\n        return objStr === '[object Function]' || objStr === '[object GeneratorFunction]';\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isArrLike ------------------------------ */\n\nvar isArrLike = exports.isArrLike = _.isArrLike = function () {\n    /* Check if value is array-like.\n     *\n     * |Name  |Type   |Desc                       |\n     * |------|-------|---------------------------|\n     * |val   |*      |Value to check             |\n     * |return|boolean|True if value is array like|\n     *\n     * > Function returns false.\n     *\n     * ```javascript\n     * isArrLike('test'); // -> true\n     * isArrLike(document.body.children); // -> true;\n     * isArrLike([1, 2, 3]); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * isNum isFn \n     */\n\n    var MAX_ARR_IDX = Math.pow(2, 53) - 1;\n\n    function exports(val) {\n        if (!val) return false;\n\n        var len = val.length;\n\n        return isNum(len) && len >= 0 && len <= MAX_ARR_IDX && !isFn(val);\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isBrowser ------------------------------ */\n\nvar isBrowser = exports.isBrowser = _.isBrowser = function (exports) {\n    /* Check if running in a browser.\n     *\n     * ```javascript\n     * console.log(isBrowser); // -> true if running in a browser\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    exports = (typeof window === 'undefined' ? 'undefined' : (0, _typeof3.default)(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : (0, _typeof3.default)(document)) === 'object' && document.nodeType === 9;\n\n    return exports;\n}({});\n\n/* ------------------------------ root ------------------------------ */\n\nvar root = exports.root = _.root = function (exports) {\n    /* Root object reference, `global` in nodeJs, `window` in browser. */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * isBrowser \n     */\n\n    exports = isBrowser ? window : global;\n\n    return exports;\n}({});\n\n/* ------------------------------ detectMocha ------------------------------ */\n\nvar detectMocha = exports.detectMocha = _.detectMocha = function () {\n    /* Detect if mocha is running.\r\n     *\r\n     * ```javascript\r\n     * detectMocha(); // -> True if mocha is running.\r\n     * ```\r\n     */\n\n    /* module\r\n     * env: all\r\n     * test: all\r\n     */\n\n    /* dependencies\n     * root \n     */\n\n    function exports() {\n        for (var i = 0, len = methods.length; i < len; i++) {\n            var method = methods[i];\n\n            if (typeof root[method] !== 'function') return false;\n        }\n\n        return true;\n    }\n\n    var methods = ['afterEach', 'after', 'beforeEach', 'before', 'describe', 'it'];\n\n    return exports;\n}();\n\n/* ------------------------------ keys ------------------------------ */\n\nvar keys = exports.keys = _.keys = function (exports) {\n    /* Create an array of the own enumerable property names of object.\n     *\n     * |Name  |Type  |Desc                   |\n     * |------|------|-----------------------|\n     * |obj   |object|Object to query        |\n     * |return|array |Array of property names|\n     * \n     * ```javascript\n     * keys({a: 1}); // -> ['a']\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * has detectMocha \n     */\n\n    if (_keys3.default && !detectMocha()) {\n        exports = _keys3.default;\n    } else {\n        exports = function exports(obj) {\n            var ret = [],\n                key;\n\n            for (key in obj) {\n                if (has(obj, key)) ret.push(key);\n            }\n\n            return ret;\n        };\n    }\n\n    return exports;\n}({});\n\n/* ------------------------------ each ------------------------------ */\n\nvar each = exports.each = _.each = function () {\n    /* Iterate over elements of collection and invokes iteratee for each element.\n     *\n     * |Name    |Type        |Desc                          |\n     * |--------|------------|------------------------------|\n     * |obj     |object array|Collection to iterate over    |\n     * |iteratee|function    |Function invoked per iteration|\n     * |[ctx]   |*           |Function context              |\n     *\n     * ```javascript\n     * each({'a': 1, 'b': 2}, function (val, key) {});\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * isArrLike keys optimizeCb \n     */\n\n    function exports(obj, iteratee, ctx) {\n        iteratee = optimizeCb(iteratee, ctx);\n\n        var i, len;\n\n        if (isArrLike(obj)) {\n            for (i = 0, len = obj.length; i < len; i++) {\n                iteratee(obj[i], i, obj);\n            }\n        } else {\n            var _keys = keys(obj);\n            for (i = 0, len = _keys.length; i < len; i++) {\n                iteratee(obj[_keys[i]], _keys[i], obj);\n            }\n        }\n\n        return obj;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ createAssigner ------------------------------ */\n\nvar createAssigner = exports.createAssigner = _.createAssigner = function () {\n    /* Used to create extend, extendOwn and defaults.\n     *\n     * |Name    |Type    |Desc                          |\n     * |--------|--------|------------------------------|\n     * |keysFn  |function|Function to get object keys   |\n     * |defaults|boolean |No override when set to true  |\n     * |return  |function|Result function, extend...    |\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * isUndef each \n     */\n\n    function exports(keysFn, defaults) {\n        return function (obj) {\n            each(arguments, function (src, idx) {\n                if (idx === 0) return;\n\n                var keys = keysFn(src);\n\n                each(keys, function (key) {\n                    if (!defaults || isUndef(obj[key])) obj[key] = src[key];\n                });\n            });\n\n            return obj;\n        };\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ extend ------------------------------ */\n\nvar extend = exports.extend = _.extend = function (exports) {\n    /* Copy all of the properties in the source objects over to the destination object.\n     *\n     * |Name  |Type  |Desc              |\n     * |------|------|------------------|\n     * |obj   |object|Destination object|\n     * |...src|object|Sources objects   |\n     * |return|object|Destination object|\n     *\n     * ```javascript\n     * extend({name: 'RedHood'}, {age: 24}); // -> {name: 'RedHood', age: 24}\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * createAssigner allKeys \n     */\n\n    exports = createAssigner(allKeys);\n\n    return exports;\n}({});\n\n/* ------------------------------ values ------------------------------ */\n\nvar values = exports.values = _.values = function () {\n    /* Create an array of the own enumerable property values of object.\n     *\n     * |Name  |Type  |Desc                    |\n     * |------|------|------------------------|\n     * |obj   |object|Object to query         |\n     * |return|array |Array of property values|\n     *\n     * ```javascript\n     * values({one: 1, two: 2}); // -> [1, 2]\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * each \n     */\n\n    function exports(obj) {\n        var ret = [];\n\n        each(obj, function (val) {\n            ret.push(val);\n        });\n\n        return ret;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ contain ------------------------------ */\n\nvar contain = exports.contain = _.contain = function () {\n    /* Check if the value is present in the list.\n     *\n     * |Name  |Type        |Desc                                |\n     * |------|------------|------------------------------------|\n     * |array |array object|Target list                         |\n     * |value |*           |Value to check                      |\n     * |return|boolean     |True if value is present in the list|\n     *\n     * ```javascript\n     * contain([1, 2, 3], 1); // -> true\n     * contain({a: 1, b: 2}, 1); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * idxOf isArrLike values \n     */\n\n    function exports(arr, val) {\n        if (!isArrLike(arr)) arr = values(arr);\n\n        return idxOf(arr, val) >= 0;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ extendOwn ------------------------------ */\n\nvar extendOwn = exports.extendOwn = _.extendOwn = function (exports) {\n    /* Like extend, but only copies own properties over to the destination object.\n     *\n     * |Name  |Type  |Desc              |\n     * |------|------|------------------|\n     * |obj   |object|Destination object|\n     * |*src  |object|Sources objects   |\n     * |return|object|Destination object|\n     *\n     * ```javascript\n     * extendOwn({name: 'RedHood'}, {age: 24}); // -> {name: 'RedHood', age: 24}\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * keys createAssigner \n     */\n\n    exports = createAssigner(keys);\n\n    return exports;\n}({});\n\n/* ------------------------------ isStr ------------------------------ */\n\nvar isStr = exports.isStr = _.isStr = function () {\n    /* Check if value is a string primitive.\n     *\n     * |Name  |Type   |Desc                               |\n     * |------|-------|-----------------------------------|\n     * |val   |*      |Value to check                     |\n     * |return|boolean|True if value is a string primitive|\n     *\n     * ```javascript\n     * isStr('licia'); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * objToStr \n     */\n\n    function exports(val) {\n        return objToStr(val) === '[object String]';\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isEmpty ------------------------------ */\n\nvar isEmpty = exports.isEmpty = _.isEmpty = function () {\n    /* Check if value is an empty object or array.\n     *\n     * |Name  |Type   |Desc                  |\n     * |------|-------|----------------------|\n     * |val   |*      |Value to check        |\n     * |return|boolean|True if value is empty|\n     *\n     * ```javascript\n     * isEmpty([]); // -> true\n     * isEmpty({}); // -> true\n     * isEmpty(''); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * isArrLike isArr isStr isArgs keys \n     */\n\n    function exports(val) {\n        if (val == null) return true;\n\n        if (isArrLike(val) && (isArr(val) || isStr(val) || isArgs(val))) {\n            return val.length === 0;\n        }\n\n        return keys(val).length === 0;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isMatch ------------------------------ */\n\nvar isMatch = exports.isMatch = _.isMatch = function () {\n    /* Check if keys and values in src are contained in obj.\n     *\n     * |Name  |Type   |Desc                              |\n     * |------|-------|----------------------------------|\n     * |obj   |object |Object to inspect                 |\n     * |src   |object |Object of property values to match|\n     * |return|boolean|True if object is match           |\n     *\n     * ```javascript\n     * isMatch({a: 1, b: 2}, {a: 1}); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * keys \n     */\n\n    function exports(obj, src) {\n        var _keys = keys(src),\n            len = _keys.length;\n\n        if (obj == null) return !len;\n\n        obj = Object(obj);\n\n        for (var i = 0; i < len; i++) {\n            var key = _keys[i];\n            if (src[key] !== obj[key] || !(key in obj)) return false;\n        }\n\n        return true;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isObj ------------------------------ */\n\nvar isObj = exports.isObj = _.isObj = function () {\n    /* Check if value is the language type of Object.\n     *\n     * |Name  |Type   |Desc                      |\n     * |------|-------|--------------------------|\n     * |val   |*      |Value to check            |\n     * |return|boolean|True if value is an object|\n     *\n     * [Language Spec](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     *\n     * ```javascript\n     * isObj({}); // -> true\n     * isObj([]); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(val) {\n        var type = typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val);\n\n        return !!val && (type === 'function' || type === 'object');\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ isRegExp ------------------------------ */\n\nvar isRegExp = exports.isRegExp = _.isRegExp = function () {\n    /* Check if value is a regular expression.\n     *\n     * |Name  |Type   |Desc                                 |\n     * |------|-------|-------------------------------------|\n     * |val   |*      |Value to check                       |\n     * |return|boolean|True if value is a regular expression|\n     *\n     * ```javascript\n     * isRegExp(/a/); // -> true\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * objToStr \n     */\n\n    function exports(val) {\n        return objToStr(val) === '[object RegExp]';\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ last ------------------------------ */\n\nvar last = exports.last = _.last = function () {\n    /* Get the last element of array.\n     *\n     * |Name  |Type |Desc                     |\n     * |------|-----|-------------------------|\n     * |arr   |array|The array to query       |\n     * |return|*    |The last element of array|\n     *\n     * ```javascript\n     * last([1, 2]); // -> 2\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    function exports(arr) {\n        var len = arr ? arr.length : 0;\n\n        if (len) return arr[len - 1];\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ matcher ------------------------------ */\n\nvar matcher = exports.matcher = _.matcher = function () {\n    /* Return a predicate function that checks if attrs are contained in an object.\n     *\n     * |Name  |Type    |Desc                              |\n     * |------|--------|----------------------------------|\n     * |attrs |object  |Object of property values to match|\n     * |return|function|New predicate function            |\n     *\n     * ```javascript\n     * var objects = [\n     *     {a: 1, b: 2, c: 3 },\n     *     {a: 4, b: 5, c: 6 }\n     * ];\n     * filter(objects, matcher({a: 4, c: 6 })); // -> [{a: 4, b: 5, c: 6 }]\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * extendOwn isMatch \n     */\n\n    function exports(attrs) {\n        attrs = extendOwn({}, attrs);\n\n        return function (obj) {\n            return isMatch(obj, attrs);\n        };\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ safeCb ------------------------------ */\n\nvar safeCb = exports.safeCb = _.safeCb = function (exports) {\n    /* Create callback based on input value.\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * isFn isObj optimizeCb matcher identity \n     */\n\n    exports = function exports(val, ctx, argCount) {\n        if (val == null) return identity;\n\n        if (isFn(val)) return optimizeCb(val, ctx, argCount);\n\n        if (isObj(val)) return matcher(val);\n\n        return function (key) {\n            return function (obj) {\n                return obj == null ? undefined : obj[key];\n            };\n        };\n    };\n\n    return exports;\n}({});\n\n/* ------------------------------ filter ------------------------------ */\n\nvar filter = exports.filter = _.filter = function () {\n    /* Iterates over elements of collection, returning an array of all the values that pass a truth test.\n     *\n     * |Name     |Type    |Desc                                   |\n     * |---------|--------|---------------------------------------|\n     * |obj      |array   |Collection to iterate over             |\n     * |predicate|function|Function invoked per iteration         |\n     * |[ctx]    |*       |Predicate context                      |\n     * |return   |array   |Array of all values that pass predicate|\n     *\n     * ```javascript\n     * filter([1, 2, 3, 4, 5], function (val)\n     * {\n     *     return val % 2 === 0;\n     * }); // -> [2, 4]\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    /* dependencies\n     * safeCb each \n     */\n\n    function exports(obj, predicate, ctx) {\n        var ret = [];\n\n        predicate = safeCb(predicate, ctx);\n\n        each(obj, function (val, idx, list) {\n            if (predicate(val, idx, list)) ret.push(val);\n        });\n\n        return ret;\n    }\n\n    return exports;\n}();\n\n/* ------------------------------ uniqId ------------------------------ */\n\nvar uniqId = exports.uniqId = _.uniqId = function () {\n    /* Generate a globally-unique id.\n     *\n     * |Name  |Type  |Desc              |\n     * |------|------|------------------|\n     * |prefix|string|Id prefix         |\n     * |return|string|Globally-unique id|\n     *\n     * ```javascript\n     * uniqId('eusita_'); // -> 'eustia_xxx'\n     * ```\n     */\n\n    /* module\n     * env: all\n     * test: all\n     */\n\n    var idCounter = 0;\n\n    function exports(prefix) {\n        var id = ++idCounter + '';\n\n        return prefix ? prefix + id : id;\n    }\n\n    return exports;\n}();\n\nexports.default = _;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(85)))\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _iterator = __webpack_require__(87);\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = __webpack_require__(89);\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(88), __esModule: true };\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(28);\n__webpack_require__(18);\nmodule.exports = __webpack_require__(30).f('iterator');\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(90), __esModule: true };\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(91);\n__webpack_require__(95);\n__webpack_require__(96);\n__webpack_require__(97);\nmodule.exports = __webpack_require__(0).Symbol;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__(2);\nvar has = __webpack_require__(6);\nvar DESCRIPTORS = __webpack_require__(5);\nvar $export = __webpack_require__(13);\nvar redefine = __webpack_require__(35);\nvar META = __webpack_require__(92).KEY;\nvar $fails = __webpack_require__(11);\nvar shared = __webpack_require__(24);\nvar setToStringTag = __webpack_require__(26);\nvar uid = __webpack_require__(16);\nvar wks = __webpack_require__(1);\nvar wksExt = __webpack_require__(30);\nvar wksDefine = __webpack_require__(31);\nvar enumKeys = __webpack_require__(93);\nvar isArray = __webpack_require__(94);\nvar anObject = __webpack_require__(9);\nvar isObject = __webpack_require__(10);\nvar toIObject = __webpack_require__(3);\nvar toPrimitive = __webpack_require__(21);\nvar createDesc = __webpack_require__(14);\nvar _create = __webpack_require__(36);\nvar gOPNExt = __webpack_require__(41);\nvar $GOPD = __webpack_require__(43);\nvar $DP = __webpack_require__(4);\nvar $keys = __webpack_require__(15);\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__(42).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(29).f = $propertyIsEnumerable;\n  __webpack_require__(44).f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__(12)) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(7)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar META = __webpack_require__(16)('meta');\nvar isObject = __webpack_require__(10);\nvar has = __webpack_require__(6);\nvar setDesc = __webpack_require__(4).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(11)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(15);\nvar gOPS = __webpack_require__(44);\nvar pIE = __webpack_require__(29);\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(19);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(31)('asyncIterator');\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(31)('observable');\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=stringifyWorker.js.map", __webpack_require__.p + "stringifyWorker.js");
	};

	/***/ }),
	/* 163 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string

	var URL = window.URL || window.webkitURL;

	module.exports = function (content, url) {
	  try {
	    try {
	      var blob;

	      try {
	        // BlobBuilder = Deprecated, but widely implemented
	        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;

	        blob = new BlobBuilder();

	        blob.append(content);

	        blob = blob.getBlob();
	      } catch (e) {
	        // The proposed API
	        blob = new Blob([content]);
	      }

	      return new Worker(URL.createObjectURL(blob));
	    } catch (e) {
	      return new Worker('data:application/javascript,' + encodeURIComponent(content));
	    }
	  } catch (e) {
	    if (!url) {
	      throw Error('Inline worker is not supported');
	    }

	    return new Worker(url);
	  }
	};

	/***/ }),
	/* 164 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _keys = __webpack_require__(36);

	var _keys2 = _interopRequireDefault(_keys);

	var _getOwnPropertyNames = __webpack_require__(55);

	var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _getOwnPropertyDescriptor = __webpack_require__(35);

	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

	exports.default = getAbstract;

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Modified from: https://jsconsole.com/
	function getAbstract(obj) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      topObj = _ref.topObj,
	      _ref$level = _ref.level,
	      level = _ref$level === undefined ? 0 : _ref$level,
	      _ref$getterVal = _ref.getterVal,
	      getterVal = _ref$getterVal === undefined ? false : _ref$getterVal,
	      _ref$unenumerable = _ref.unenumerable,
	      unenumerable = _ref$unenumerable === undefined ? true : _ref$unenumerable;

	  var json = '',
	      type = '',
	      keyNum = 5,
	      parts = [],
	      names = [],
	      objEllipsis = '',
	      circular = false,
	      i = void 0;

	  topObj = topObj || obj;

	  var passOpts = { getterVal: getterVal, unenumerable: unenumerable, level: level + 1 },
	      doStringify = level === 0;

	  var keyWrapper = '<span style="color: #a71d5d;">',
	      numWrapper = '<span style="color: #0086b3;">',
	      nullWrapper = '<span style="color: #0086b3;">',
	      strWrapper = '<span style="color: #183691;">',
	      boolWrapper = '<span style="color: #0086b3;">',
	      specialWrapper = '<span style="color: #707d8b;">',
	      strEscape = function strEscape(str) {
	    return (0, _util.escape)(str).replace(/\\n/g, '↵').replace(/\\f|\\r|\\t/g, '').replace(/\\/g, '');
	  },
	      wrapperEnd = '</span>';

	  var wrapKey = function wrapKey(key) {
	    return keyWrapper + strEscape(key) + wrapperEnd;
	  },
	      wrapNum = function wrapNum(num) {
	    return numWrapper + num + wrapperEnd;
	  },
	      wrapRegExp = function wrapRegExp(str) {
	    return strWrapper + str + wrapperEnd;
	  },
	      wrapBool = function wrapBool(bool) {
	    return boolWrapper + bool + wrapperEnd;
	  },
	      wrapNull = function wrapNull(str) {
	    return nullWrapper + str + wrapperEnd;
	  };

	  function wrapStr(str) {
	    str = (0, _util.toStr)(str);

	    if ((0, _util.contain)(SPECIAL_VAL, str) || (0, _util.startWith)(str, 'Array[')) {
	      return specialWrapper + strEscape(str) + wrapperEnd;
	    }

	    return strWrapper + strEscape('"' + str + '"') + wrapperEnd;
	  }

	  function objIteratee(name) {
	    if (i > keyNum) {
	      objEllipsis = ', …';
	      return;
	    }
	    var key = wrapKey((0, _util.escapeJsonStr)(name));

	    if (!getterVal) {
	      var descriptor = (0, _getOwnPropertyDescriptor2.default)(obj, name);
	      if (descriptor.get) {
	        parts.push(key + ': ' + wrapStr('(...)'));
	        i++;
	        return;
	      }
	    }
	    parts.push(key + ': ' + getAbstract(topObj[name], passOpts));
	    i++;
	  }

	  try {
	    type = {}.toString.call(obj);
	  } catch (e) {
	    type = '[object Object]';
	  }

	  var isStr = type == '[object String]',
	      isArr = type == '[object Array]',
	      isObj = type == '[object Object]',
	      isNum = type == '[object Number]',
	      isRegExp = type == '[object RegExp]',
	      isSymbol = type == '[object Symbol]',
	      isFn = type == '[object Function]',
	      isBool = type == '[object Boolean]';

	  if (circular) {
	    json = wrapStr('[circular]');
	  } else if (isStr) {
	    json = wrapStr((0, _util.escapeJsonStr)(obj));
	  } else if (isRegExp) {
	    json = wrapRegExp((0, _util.escapeJsonStr)(obj.toString()));
	  } else if (isFn) {
	    json = wrapStr('function');
	  } else if (isArr) {
	    if (doStringify) {
	      json = '[';
	      var len = obj.length,
	          arrEllipsis = '';

	      if (len > 100) {
	        len = 100;
	        arrEllipsis = ', …';
	      }
	      for (var _i = 0; _i < len; _i++) {
	        parts.push('' + getAbstract(obj[_i], passOpts));
	      }
	      json += parts.join(', ') + arrEllipsis + ']';
	    } else {
	      json = wrapStr('Array(' + obj.length + ')');
	    }
	  } else if (isObj) {
	    if (canBeProto(obj)) {
	      obj = (0, _getPrototypeOf2.default)(obj);
	    }

	    names = unenumerable ? (0, _getOwnPropertyNames2.default)(obj) : (0, _keys2.default)(obj);
	    if (doStringify) {
	      i = 1;
	      json = '{ ';
	      (0, _util.each)(names, objIteratee);
	      json += parts.join(', ') + objEllipsis + ' }';
	    } else {
	      json = (0, _util.getObjType)(obj);
	      if (json === 'Object') json = '{…}';
	    }
	  } else if (isNum) {
	    json = obj + '';
	    if ((0, _util.endWith)(json, 'Infinity') || json === 'NaN') {
	      json = '"' + json + '"';
	    } else {
	      json = wrapNum(json);
	    }
	  } else if (isBool) {
	    json = wrapBool(obj ? 'true' : 'false');
	  } else if (obj === null) {
	    json = wrapNull('null');
	  } else if (isSymbol) {
	    json = wrapStr('Symbol');
	  } else if (obj === undefined) {
	    json = wrapStr('undefined');
	  } else {
	    try {
	      if (canBeProto(obj)) {
	        obj = (0, _getPrototypeOf2.default)(obj);
	      }

	      if (doStringify) {
	        i = 1;
	        json = '{ ';
	        names = unenumerable ? (0, _getOwnPropertyNames2.default)(obj) : (0, _keys2.default)(obj);
	        (0, _util.each)(names, objIteratee);
	        json += parts.join(', ') + objEllipsis + ' }';
	      } else {
	        json = (0, _util.getObjType)(obj);
	        if (json === 'Object') json = '{…}';
	      }
	    } catch (e) {
	      json = wrapStr(obj);
	    }
	  }

	  return json;
	} // Simple version for stringify, used for displaying object abstract.


	var SPECIAL_VAL = ['(...)', 'undefined', 'Symbol', 'Object', 'function'];

	function canBeProto(obj) {
	  var emptyObj = (0, _util.isEmpty)((0, _getOwnPropertyNames2.default)(obj)),
	      proto = (0, _getPrototypeOf2.default)(obj);

	  return emptyObj && proto && proto !== Object.prototype;
	}

	/***/ }),
	/* 165 */
	/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint curly:false, eqeqeq:true, laxbreak:true, noempty:false */
	/* AUTO-GENERATED. DO NOT MODIFY. */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.


	 Style HTML
	---------------

	  Written by Nochum Sossonko, (nsossonko@hotmail.com)

	  Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>
	    http://jsbeautifier.org/

	  Usage:
	    style_html(html_source);

	    style_html(html_source, options);

	  The options are:
	    indent_inner_html (default false)  — indent <head> and <body> sections,
	    indent_size (default 4)          — indentation size,
	    indent_char (default space)      — character to indent with,
	    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)
	    brace_style (default "collapse") - "collapse" | "expand" | "end-expand" | "none"
	            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.
	    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted
	    content_unformatted (defaults to pre tag) - list of tags, whose content shouldn't be reformatted
	    indent_scripts (default normal)  - "keep"|"separate"|"normal"
	    preserve_newlines (default true) - whether existing line breaks before elements should be preserved
	                                        Only works before elements, not inside tags or for text.
	    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk
	    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}
	    end_with_newline (false)          - end with a newline
	    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.

	    e.g.

	    style_html(html_source, {
	      'indent_inner_html': false,
	      'indent_size': 2,
	      'indent_char': ' ',
	      'wrap_line_length': 78,
	      'brace_style': 'expand',
	      'preserve_newlines': true,
	      'max_preserve_newlines': 5,
	      'indent_handlebars': false,
	      'extra_liners': ['/html']
	    });
	*/

	(function() {
	var legacy_beautify_html =
	/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// identity function for calling harmony imports with the correct context
	/******/ 	__webpack_require__.i = function(value) { return value; };
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, {
	/******/ 				configurable: false,
	/******/ 				enumerable: true,
	/******/ 				get: getter
	/******/ 			});
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 3);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports, __webpack_require__) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	  The MIT License (MIT)

	  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	  Permission is hereby granted, free of charge, to any person
	  obtaining a copy of this software and associated documentation files
	  (the "Software"), to deal in the Software without restriction,
	  including without limitation the rights to use, copy, modify, merge,
	  publish, distribute, sublicense, and/or sell copies of the Software,
	  and to permit persons to whom the Software is furnished to do so,
	  subject to the following conditions:

	  The above copyright notice and this permission notice shall be
	  included in all copies or substantial portions of the Software.

	  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	  SOFTWARE.
	*/

	var mergeOpts = __webpack_require__(2).mergeOpts;
	var acorn = __webpack_require__(1);


	var lineBreak = acorn.lineBreak;
	var allLineBreaks = acorn.allLineBreaks;

	// function trim(s) {
	//     return s.replace(/^\s+|\s+$/g, '');
	// }

	function ltrim(s) {
	    return s.replace(/^\s+/g, '');
	}

	function rtrim(s) {
	    return s.replace(/\s+$/g, '');
	}

	function Beautifier(html_source, options, js_beautify, css_beautify) {
	    //Wrapper function to invoke all the necessary constructors and deal with the output.
	    html_source = html_source || '';

	    var multi_parser,
	        indent_inner_html,
	        indent_body_inner_html,
	        indent_head_inner_html,
	        indent_size,
	        indent_character,
	        wrap_line_length,
	        brace_style,
	        unformatted,
	        content_unformatted,
	        preserve_newlines,
	        max_preserve_newlines,
	        indent_handlebars,
	        wrap_attributes,
	        wrap_attributes_indent_size,
	        is_wrap_attributes_force,
	        is_wrap_attributes_force_expand_multiline,
	        is_wrap_attributes_force_aligned,
	        end_with_newline,
	        extra_liners,
	        eol;

	    options = options || {};

	    // Allow the setting of language/file-type specific options
	    // with inheritance of overall settings
	    options = mergeOpts(options, 'html');

	    // backwards compatibility to 1.3.4
	    if ((options.wrap_line_length === undefined || parseInt(options.wrap_line_length, 10) === 0) &&
	        (options.max_char !== undefined && parseInt(options.max_char, 10) !== 0)) {
	        options.wrap_line_length = options.max_char;
	    }

	    indent_inner_html = (options.indent_inner_html === undefined) ? false : options.indent_inner_html;
	    indent_body_inner_html = (options.indent_body_inner_html === undefined) ? true : options.indent_body_inner_html;
	    indent_head_inner_html = (options.indent_head_inner_html === undefined) ? true : options.indent_head_inner_html;
	    indent_size = (options.indent_size === undefined) ? 4 : parseInt(options.indent_size, 10);
	    indent_character = (options.indent_char === undefined) ? ' ' : options.indent_char;
	    brace_style = (options.brace_style === undefined) ? 'collapse' : options.brace_style;
	    wrap_line_length = parseInt(options.wrap_line_length, 10) === 0 ? 32786 : parseInt(options.wrap_line_length || 250, 10);
	    unformatted = options.unformatted || [
	        // https://www.w3.org/TR/html5/dom.html#phrasing-content
	        'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',
	        'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',
	        'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',
	        'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',
	        'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',
	        'video', 'wbr', 'text',
	        // prexisting - not sure of full effect of removing, leaving in
	        'acronym', 'address', 'big', 'dt', 'ins', 'strike', 'tt',
	    ];
	    content_unformatted = options.content_unformatted || [
	        'pre',
	    ];
	    preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;
	    max_preserve_newlines = preserve_newlines ?
	        (isNaN(parseInt(options.max_preserve_newlines, 10)) ? 32786 : parseInt(options.max_preserve_newlines, 10)) :
	        0;
	    indent_handlebars = (options.indent_handlebars === undefined) ? false : options.indent_handlebars;
	    wrap_attributes = (options.wrap_attributes === undefined) ? 'auto' : options.wrap_attributes;
	    wrap_attributes_indent_size = (isNaN(parseInt(options.wrap_attributes_indent_size, 10))) ? indent_size : parseInt(options.wrap_attributes_indent_size, 10);
	    is_wrap_attributes_force = wrap_attributes.substr(0, 'force'.length) === 'force';
	    is_wrap_attributes_force_expand_multiline = (wrap_attributes === 'force-expand-multiline');
	    is_wrap_attributes_force_aligned = (wrap_attributes === 'force-aligned');
	    end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;
	    extra_liners = (typeof options.extra_liners === 'object') && options.extra_liners ?
	        options.extra_liners.concat() : (typeof options.extra_liners === 'string') ?
	        options.extra_liners.split(',') : 'head,body,/html'.split(',');
	    eol = options.eol ? options.eol : 'auto';

	    if (options.indent_with_tabs) {
	        indent_character = '\t';
	        indent_size = 1;
	    }

	    if (eol === 'auto') {
	        eol = '\n';
	        if (html_source && lineBreak.test(html_source || '')) {
	            eol = html_source.match(lineBreak)[0];
	        }
	    }

	    eol = eol.replace(/\\r/, '\r').replace(/\\n/, '\n');

	    // HACK: newline parsing inconsistent. This brute force normalizes the input.
	    html_source = html_source.replace(allLineBreaks, '\n');

	    function Parser() {

	        this.pos = 0; //Parser position
	        this.token = '';
	        this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT
	        this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values
	            parent: 'parent1',
	            parentcount: 1,
	            parent1: ''
	        };
	        this.tag_type = '';
	        this.token_text = this.last_token = this.last_text = this.token_type = '';
	        this.newlines = 0;
	        this.indent_content = indent_inner_html;
	        this.indent_body_inner_html = indent_body_inner_html;
	        this.indent_head_inner_html = indent_head_inner_html;

	        this.Utils = { //Uilities made available to the various functions
	            whitespace: "\n\r\t ".split(''),

	            single_token: options.void_elements || [
	                // HTLM void elements - aka self-closing tags - aka singletons
	                // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements
	                'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',
	                'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',
	                // NOTE: Optional tags - are not understood.
	                // https://www.w3.org/TR/html5/syntax.html#optional-tags
	                // The rules for optional tags are too complex for a simple list
	                // Also, the content of these tags should still be indented in many cases.
	                // 'li' is a good exmple.

	                // Doctype and xml elements
	                '!doctype', '?xml',
	                // ?php tag
	                '?php',
	                // other tags that were in this list, keeping just in case
	                'basefont', 'isindex'
	            ],
	            extra_liners: extra_liners, //for tags that need a line of whitespace before them
	            in_array: function(what, arr) {
	                for (var i = 0; i < arr.length; i++) {
	                    if (what === arr[i]) {
	                        return true;
	                    }
	                }
	                return false;
	            }
	        };

	        // Return true if the given text is composed entirely of whitespace.
	        this.is_whitespace = function(text) {
	            for (var n = 0; n < text.length; n++) {
	                if (!this.Utils.in_array(text.charAt(n), this.Utils.whitespace)) {
	                    return false;
	                }
	            }
	            return true;
	        };

	        this.traverse_whitespace = function() {
	            var input_char = '';

	            input_char = this.input.charAt(this.pos);
	            if (this.Utils.in_array(input_char, this.Utils.whitespace)) {
	                this.newlines = 0;
	                while (this.Utils.in_array(input_char, this.Utils.whitespace)) {
	                    if (preserve_newlines && input_char === '\n' && this.newlines <= max_preserve_newlines) {
	                        this.newlines += 1;
	                    }

	                    this.pos++;
	                    input_char = this.input.charAt(this.pos);
	                }
	                return true;
	            }
	            return false;
	        };

	        // Append a space to the given content (string array) or, if we are
	        // at the wrap_line_length, append a newline/indentation.
	        // return true if a newline was added, false if a space was added
	        this.space_or_wrap = function(content) {
	            if (this.line_char_count >= this.wrap_line_length) { //insert a line when the wrap_line_length is reached
	                this.print_newline(false, content);
	                this.print_indentation(content);
	                return true;
	            } else {
	                this.line_char_count++;
	                content.push(' ');
	                return false;
	            }
	        };

	        this.get_content = function() { //function to capture regular content between tags
	            var input_char = '',
	                content = [],
	                handlebarsStarted = 0;

	            while (this.input.charAt(this.pos) !== '<' || handlebarsStarted === 2) {
	                if (this.pos >= this.input.length) {
	                    return content.length ? content.join('') : ['', 'TK_EOF'];
	                }

	                if (handlebarsStarted < 2 && this.traverse_whitespace()) {
	                    this.space_or_wrap(content);
	                    continue;
	                }

	                input_char = this.input.charAt(this.pos);

	                if (indent_handlebars) {
	                    if (input_char === '{') {
	                        handlebarsStarted += 1;
	                    } else if (handlebarsStarted < 2) {
	                        handlebarsStarted = 0;
	                    }

	                    if (input_char === '}' && handlebarsStarted > 0) {
	                        if (handlebarsStarted-- === 0) {
	                            break;
	                        }
	                    }
	                    // Handlebars parsing is complicated.
	                    // {{#foo}} and {{/foo}} are formatted tags.
	                    // {{something}} should get treated as content, except:
	                    // {{else}} specifically behaves like {{#if}} and {{/if}}
	                    var peek3 = this.input.substr(this.pos, 3);
	                    if (peek3 === '{{#' || peek3 === '{{/') {
	                        // These are tags and not content.
	                        break;
	                    } else if (peek3 === '{{!') {
	                        return [this.get_tag(), 'TK_TAG_HANDLEBARS_COMMENT'];
	                    } else if (this.input.substr(this.pos, 2) === '{{') {
	                        if (this.get_tag(true) === '{{else}}') {
	                            break;
	                        }
	                    }
	                }

	                this.pos++;
	                this.line_char_count++;
	                content.push(input_char); //letter at-a-time (or string) inserted to an array
	            }
	            return content.length ? content.join('') : '';
	        };

	        this.get_contents_to = function(name) { //get the full content of a script or style to pass to js_beautify
	            if (this.pos === this.input.length) {
	                return ['', 'TK_EOF'];
	            }
	            var content = '';
	            var reg_match = new RegExp('</' + name + '\\s*>', 'igm');
	            reg_match.lastIndex = this.pos;
	            var reg_array = reg_match.exec(this.input);
	            var end_script = reg_array ? reg_array.index : this.input.length; //absolute end of script
	            if (this.pos < end_script) { //get everything in between the script tags
	                content = this.input.substring(this.pos, end_script);
	                this.pos = end_script;
	            }
	            return content;
	        };

	        this.record_tag = function(tag) { //function to record a tag and its parent in this.tags Object
	            if (this.tags[tag + 'count']) { //check for the existence of this tag type
	                this.tags[tag + 'count']++;
	                this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level
	            } else { //otherwise initialize this tag type
	                this.tags[tag + 'count'] = 1;
	                this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level
	            }
	            this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)
	            this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')
	        };

	        this.retrieve_tag = function(tag) { //function to retrieve the opening tag to the corresponding closer
	            if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it
	                var temp_parent = this.tags.parent; //check to see if it's a closable tag.
	                while (temp_parent) { //till we reach '' (the initial value);
	                    if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it
	                        break;
	                    }
	                    temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree
	                }
	                if (temp_parent) { //if we caught something
	                    this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly
	                    this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent
	                }
	                delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...
	                delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself
	                if (this.tags[tag + 'count'] === 1) {
	                    delete this.tags[tag + 'count'];
	                } else {
	                    this.tags[tag + 'count']--;
	                }
	            }
	        };

	        this.indent_to_tag = function(tag) {
	            // Match the indentation level to the last use of this tag, but don't remove it.
	            if (!this.tags[tag + 'count']) {
	                return;
	            }
	            var temp_parent = this.tags.parent;
	            while (temp_parent) {
	                if (tag + this.tags[tag + 'count'] === temp_parent) {
	                    break;
	                }
	                temp_parent = this.tags[temp_parent + 'parent'];
	            }
	            if (temp_parent) {
	                this.indent_level = this.tags[tag + this.tags[tag + 'count']];
	            }
	        };

	        this.get_tag = function(peek) { //function to get a full tag and parse its type
	            var input_char = '',
	                content = [],
	                comment = '',
	                space = false,
	                first_attr = true,
	                has_wrapped_attrs = false,
	                tag_start, tag_end,
	                tag_start_char,
	                orig_pos = this.pos,
	                orig_line_char_count = this.line_char_count,
	                is_tag_closed = false,
	                tail;

	            peek = peek !== undefined ? peek : false;

	            do {
	                if (this.pos >= this.input.length) {
	                    if (peek) {
	                        this.pos = orig_pos;
	                        this.line_char_count = orig_line_char_count;
	                    }
	                    return content.length ? content.join('') : ['', 'TK_EOF'];
	                }

	                input_char = this.input.charAt(this.pos);
	                this.pos++;

	                if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space
	                    space = true;
	                    continue;
	                }

	                if (input_char === "'" || input_char === '"') {
	                    input_char += this.get_unformatted(input_char);
	                    space = true;
	                }

	                if (input_char === '=') { //no space before =
	                    space = false;
	                }
	                tail = this.input.substr(this.pos - 1);
	                if (is_wrap_attributes_force_expand_multiline && has_wrapped_attrs && !is_tag_closed && (input_char === '>' || input_char === '/')) {
	                    if (tail.match(/^\/?\s*>/)) {
	                        space = false;
	                        is_tag_closed = true;
	                        this.print_newline(false, content);
	                        this.print_indentation(content);
	                    }
	                }
	                if (content.length && content[content.length - 1] !== '=' && input_char !== '>' && space) {
	                    //no space after = or before >
	                    var wrapped = this.space_or_wrap(content);
	                    var indentAttrs = wrapped && input_char !== '/' && !is_wrap_attributes_force;
	                    space = false;

	                    if (is_wrap_attributes_force && input_char !== '/') {
	                        var force_first_attr_wrap = false;
	                        if (is_wrap_attributes_force_expand_multiline && first_attr) {
	                            var is_only_attribute = tail.match(/^\S*(="([^"]|\\")*")?\s*\/?\s*>/) !== null;
	                            force_first_attr_wrap = !is_only_attribute;
	                        }
	                        if (!first_attr || force_first_attr_wrap) {
	                            this.print_newline(false, content);
	                            this.print_indentation(content);
	                            indentAttrs = true;
	                        }
	                    }
	                    if (indentAttrs) {
	                        has_wrapped_attrs = true;

	                        //indent attributes an auto, forced, or forced-align line-wrap
	                        var alignment_size = wrap_attributes_indent_size;
	                        if (is_wrap_attributes_force_aligned) {
	                            alignment_size = content.indexOf(' ') + 1;
	                        }

	                        for (var count = 0; count < alignment_size; count++) {
	                            // only ever further indent with spaces since we're trying to align characters
	                            content.push(' ');
	                        }
	                    }
	                    if (first_attr) {
	                        for (var i = 0; i < content.length; i++) {
	                            if (content[i] === ' ') {
	                                first_attr = false;
	                                break;
	                            }
	                        }
	                    }
	                }

	                if (indent_handlebars && tag_start_char === '<') {
	                    // When inside an angle-bracket tag, put spaces around
	                    // handlebars not inside of strings.
	                    if ((input_char + this.input.charAt(this.pos)) === '{{') {
	                        input_char += this.get_unformatted('}}');
	                        if (content.length && content[content.length - 1] !== ' ' && content[content.length - 1] !== '<') {
	                            input_char = ' ' + input_char;
	                        }
	                        space = true;
	                    }
	                }

	                if (input_char === '<' && !tag_start_char) {
	                    tag_start = this.pos - 1;
	                    tag_start_char = '<';
	                }

	                if (indent_handlebars && !tag_start_char) {
	                    if (content.length >= 2 && content[content.length - 1] === '{' && content[content.length - 2] === '{') {
	                        if (input_char === '#' || input_char === '/' || input_char === '!') {
	                            tag_start = this.pos - 3;
	                        } else {
	                            tag_start = this.pos - 2;
	                        }
	                        tag_start_char = '{';
	                    }
	                }

	                this.line_char_count++;
	                content.push(input_char); //inserts character at-a-time (or string)

	                if (content[1] && (content[1] === '!' || content[1] === '?' || content[1] === '%')) { //if we're in a comment, do something special
	                    // We treat all comments as literals, even more than preformatted tags
	                    // we just look for the appropriate close tag
	                    content = [this.get_comment(tag_start)];
	                    break;
	                }

	                if (indent_handlebars && content[1] && content[1] === '{' && content[2] && content[2] === '!') { //if we're in a comment, do something special
	                    // We treat all comments as literals, even more than preformatted tags
	                    // we just look for the appropriate close tag
	                    content = [this.get_comment(tag_start)];
	                    break;
	                }

	                if (indent_handlebars && tag_start_char === '{' && content.length > 2 && content[content.length - 2] === '}' && content[content.length - 1] === '}') {
	                    break;
	                }
	            } while (input_char !== '>');

	            var tag_complete = content.join('');
	            var tag_index;
	            var tag_offset;

	            // must check for space first otherwise the tag could have the first attribute included, and
	            // then not un-indent correctly
	            if (tag_complete.indexOf(' ') !== -1) { //if there's whitespace, thats where the tag name ends
	                tag_index = tag_complete.indexOf(' ');
	            } else if (tag_complete.indexOf('\n') !== -1) { //if there's a line break, thats where the tag name ends
	                tag_index = tag_complete.indexOf('\n');
	            } else if (tag_complete.charAt(0) === '{') {
	                tag_index = tag_complete.indexOf('}');
	            } else { //otherwise go with the tag ending
	                tag_index = tag_complete.indexOf('>');
	            }
	            if (tag_complete.charAt(0) === '<' || !indent_handlebars) {
	                tag_offset = 1;
	            } else {
	                tag_offset = tag_complete.charAt(2) === '#' ? 3 : 2;
	            }
	            var tag_check = tag_complete.substring(tag_offset, tag_index).toLowerCase();
	            if (tag_complete.charAt(tag_complete.length - 2) === '/' ||
	                this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)
	                if (!peek) {
	                    this.tag_type = 'SINGLE';
	                }
	            } else if (indent_handlebars && tag_complete.charAt(0) === '{' && tag_check === 'else') {
	                if (!peek) {
	                    this.indent_to_tag('if');
	                    this.tag_type = 'HANDLEBARS_ELSE';
	                    this.indent_content = true;
	                    this.traverse_whitespace();
	                }
	            } else if (this.is_unformatted(tag_check, unformatted) ||
	                this.is_unformatted(tag_check, content_unformatted)) {
	                // do not reformat the "unformatted" or "content_unformatted" tags
	                comment = this.get_unformatted('</' + tag_check + '>', tag_complete); //...delegate to get_unformatted function
	                content.push(comment);
	                tag_end = this.pos - 1;
	                this.tag_type = 'SINGLE';
	            } else if (tag_check === 'script' &&
	                (tag_complete.search('type') === -1 ||
	                    (tag_complete.search('type') > -1 &&
	                        tag_complete.search(/\b(text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect)/) > -1))) {
	                if (!peek) {
	                    this.record_tag(tag_check);
	                    this.tag_type = 'SCRIPT';
	                }
	            } else if (tag_check === 'style' &&
	                (tag_complete.search('type') === -1 ||
	                    (tag_complete.search('type') > -1 && tag_complete.search('text/css') > -1))) {
	                if (!peek) {
	                    this.record_tag(tag_check);
	                    this.tag_type = 'STYLE';
	                }
	            } else if (tag_check.charAt(0) === '!') { //peek for <! comment
	                // for comments content is already correct.
	                if (!peek) {
	                    this.tag_type = 'SINGLE';
	                    this.traverse_whitespace();
	                }
	            } else if (!peek) {
	                if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending
	                    this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors
	                    this.tag_type = 'END';
	                } else { //otherwise it's a start-tag
	                    this.record_tag(tag_check); //push it on the tag stack
	                    if (tag_check.toLowerCase() !== 'html') {
	                        this.indent_content = true;
	                    }
	                    this.tag_type = 'START';
	                }

	                // Allow preserving of newlines after a start or end tag
	                if (this.traverse_whitespace()) {
	                    this.space_or_wrap(content);
	                }

	                if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line
	                    this.print_newline(false, this.output);
	                    if (this.output.length && this.output[this.output.length - 2] !== '\n') {
	                        this.print_newline(true, this.output);
	                    }
	                }
	            }

	            if (peek) {
	                this.pos = orig_pos;
	                this.line_char_count = orig_line_char_count;
	            }

	            return content.join(''); //returns fully formatted tag
	        };

	        this.get_comment = function(start_pos) { //function to return comment content in its entirety
	            // this is will have very poor perf, but will work for now.
	            var comment = '',
	                delimiter = '>',
	                matched = false;

	            this.pos = start_pos;
	            var input_char = this.input.charAt(this.pos);
	            this.pos++;

	            while (this.pos <= this.input.length) {
	                comment += input_char;

	                // only need to check for the delimiter if the last chars match
	                if (comment.charAt(comment.length - 1) === delimiter.charAt(delimiter.length - 1) &&
	                    comment.indexOf(delimiter) !== -1) {
	                    break;
	                }

	                // only need to search for custom delimiter for the first few characters
	                if (!matched && comment.length < 10) {
	                    if (comment.indexOf('<![if') === 0) { //peek for <![if conditional comment
	                        delimiter = '<![endif]>';
	                        matched = true;
	                    } else if (comment.indexOf('<![cdata[') === 0) { //if it's a <[cdata[ comment...
	                        delimiter = ']]>';
	                        matched = true;
	                    } else if (comment.indexOf('<![') === 0) { // some other ![ comment? ...
	                        delimiter = ']>';
	                        matched = true;
	                    } else if (comment.indexOf('<!--') === 0) { // <!-- comment ...
	                        delimiter = '-->';
	                        matched = true;
	                    } else if (comment.indexOf('{{!--') === 0) { // {{!-- handlebars comment
	                        delimiter = '--}}';
	                        matched = true;
	                    } else if (comment.indexOf('{{!') === 0) { // {{! handlebars comment
	                        if (comment.length === 5 && comment.indexOf('{{!--') === -1) {
	                            delimiter = '}}';
	                            matched = true;
	                        }
	                    } else if (comment.indexOf('<?') === 0) { // {{! handlebars comment
	                        delimiter = '?>';
	                        matched = true;
	                    } else if (comment.indexOf('<%') === 0) { // {{! handlebars comment
	                        delimiter = '%>';
	                        matched = true;
	                    }
	                }

	                input_char = this.input.charAt(this.pos);
	                this.pos++;
	            }

	            return comment;
	        };

	        function tokenMatcher(delimiter) {
	            var token = '';

	            var add = function(str) {
	                var newToken = token + str.toLowerCase();
	                token = newToken.length <= delimiter.length ? newToken : newToken.substr(newToken.length - delimiter.length, delimiter.length);
	            };

	            var doesNotMatch = function() {
	                return token.indexOf(delimiter) === -1;
	            };

	            return {
	                add: add,
	                doesNotMatch: doesNotMatch
	            };
	        }

	        this.get_unformatted = function(delimiter, orig_tag) { //function to return unformatted content in its entirety
	            if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) !== -1) {
	                return '';
	            }
	            var input_char = '';
	            var content = '';
	            var space = true;

	            var delimiterMatcher = tokenMatcher(delimiter);

	            do {

	                if (this.pos >= this.input.length) {
	                    return content;
	                }

	                input_char = this.input.charAt(this.pos);
	                this.pos++;

	                if (this.Utils.in_array(input_char, this.Utils.whitespace)) {
	                    if (!space) {
	                        this.line_char_count--;
	                        continue;
	                    }
	                    if (input_char === '\n' || input_char === '\r') {
	                        content += '\n';
	                        /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'
	            for (var i=0; i<this.indent_level; i++) {
	              content += this.indent_string;
	            }
	            space = false; //...and make sure other indentation is erased
	            */
	                        this.line_char_count = 0;
	                        continue;
	                    }
	                }
	                content += input_char;
	                delimiterMatcher.add(input_char);
	                this.line_char_count++;
	                space = true;

	                if (indent_handlebars && input_char === '{' && content.length && content.charAt(content.length - 2) === '{') {
	                    // Handlebars expressions in strings should also be unformatted.
	                    content += this.get_unformatted('}}');
	                    // Don't consider when stopping for delimiters.
	                }
	            } while (delimiterMatcher.doesNotMatch());

	            return content;
	        };

	        this.get_token = function() { //initial handler for token-retrieval
	            var token;

	            if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript
	                var type = this.last_token.substr(7);
	                token = this.get_contents_to(type);
	                if (typeof token !== 'string') {
	                    return token;
	                }
	                return [token, 'TK_' + type];
	            }
	            if (this.current_mode === 'CONTENT') {
	                token = this.get_content();
	                if (typeof token !== 'string') {
	                    return token;
	                } else {
	                    return [token, 'TK_CONTENT'];
	                }
	            }

	            if (this.current_mode === 'TAG') {
	                token = this.get_tag();
	                if (typeof token !== 'string') {
	                    return token;
	                } else {
	                    var tag_name_type = 'TK_TAG_' + this.tag_type;
	                    return [token, tag_name_type];
	                }
	            }
	        };

	        this.get_full_indent = function(level) {
	            level = this.indent_level + level || 0;
	            if (level < 1) {
	                return '';
	            }

	            return Array(level + 1).join(this.indent_string);
	        };

	        this.is_unformatted = function(tag_check, unformatted) {
	            //is this an HTML5 block-level link?
	            if (!this.Utils.in_array(tag_check, unformatted)) {
	                return false;
	            }

	            if (tag_check.toLowerCase() !== 'a' || !this.Utils.in_array('a', unformatted)) {
	                return true;
	            }

	            //at this point we have an  tag; is its first child something we want to remain
	            //unformatted?
	            var next_tag = this.get_tag(true /* peek. */ );

	            // test next_tag to see if it is just html tag (no external content)
	            var tag = (next_tag || "").match(/^\s*<\s*\/?([a-z]*)\s*[^>]*>\s*$/);

	            // if next_tag comes back but is not an isolated tag, then
	            // let's treat the 'a' tag as having content
	            // and respect the unformatted option
	            if (!tag || this.Utils.in_array(tag[1], unformatted)) {
	                return true;
	            } else {
	                return false;
	            }
	        };

	        this.printer = function(js_source, indent_character, indent_size, wrap_line_length, brace_style) { //handles input/output and some other printing functions

	            this.input = js_source || ''; //gets the input for the Parser

	            // HACK: newline parsing inconsistent. This brute force normalizes the input.
	            this.input = this.input.replace(/\r\n|[\r\u2028\u2029]/g, '\n');

	            this.output = [];
	            this.indent_character = indent_character;
	            this.indent_string = '';
	            this.indent_size = indent_size;
	            this.brace_style = brace_style;
	            this.indent_level = 0;
	            this.wrap_line_length = wrap_line_length;
	            this.line_char_count = 0; //count to see if wrap_line_length was exceeded

	            for (var i = 0; i < this.indent_size; i++) {
	                this.indent_string += this.indent_character;
	            }

	            this.print_newline = function(force, arr) {
	                this.line_char_count = 0;
	                if (!arr || !arr.length) {
	                    return;
	                }
	                if (force || (arr[arr.length - 1] !== '\n')) { //we might want the extra line
	                    if ((arr[arr.length - 1] !== '\n')) {
	                        arr[arr.length - 1] = rtrim(arr[arr.length - 1]);
	                    }
	                    arr.push('\n');
	                }
	            };

	            this.print_indentation = function(arr) {
	                for (var i = 0; i < this.indent_level; i++) {
	                    arr.push(this.indent_string);
	                    this.line_char_count += this.indent_string.length;
	                }
	            };

	            this.print_token = function(text) {
	                // Avoid printing initial whitespace.
	                if (this.is_whitespace(text) && !this.output.length) {
	                    return;
	                }
	                if (text || text !== '') {
	                    if (this.output.length && this.output[this.output.length - 1] === '\n') {
	                        this.print_indentation(this.output);
	                        text = ltrim(text);
	                    }
	                }
	                this.print_token_raw(text);
	            };

	            this.print_token_raw = function(text) {
	                // If we are going to print newlines, truncate trailing
	                // whitespace, as the newlines will represent the space.
	                if (this.newlines > 0) {
	                    text = rtrim(text);
	                }

	                if (text && text !== '') {
	                    if (text.length > 1 && text.charAt(text.length - 1) === '\n') {
	                        // unformatted tags can grab newlines as their last character
	                        this.output.push(text.slice(0, -1));
	                        this.print_newline(false, this.output);
	                    } else {
	                        this.output.push(text);
	                    }
	                }

	                for (var n = 0; n < this.newlines; n++) {
	                    this.print_newline(n > 0, this.output);
	                }
	                this.newlines = 0;
	            };

	            this.indent = function() {
	                this.indent_level++;
	            };

	            this.unindent = function() {
	                if (this.indent_level > 0) {
	                    this.indent_level--;
	                }
	            };
	        };
	        return this;
	    }

	    /*_____________________--------------------_____________________*/

	    this.beautify = function() {
	        multi_parser = new Parser(); //wrapping functions Parser
	        multi_parser.printer(html_source, indent_character, indent_size, wrap_line_length, brace_style); //initialize starting values
	        while (true) {
	            var t = multi_parser.get_token();
	            multi_parser.token_text = t[0];
	            multi_parser.token_type = t[1];

	            if (multi_parser.token_type === 'TK_EOF') {
	                break;
	            }

	            switch (multi_parser.token_type) {
	                case 'TK_TAG_START':
	                    multi_parser.print_newline(false, multi_parser.output);
	                    multi_parser.print_token(multi_parser.token_text);
	                    if (multi_parser.indent_content) {
	                        if ((multi_parser.indent_body_inner_html || !multi_parser.token_text.match(/<body(?:.*)>/)) &&
	                            (multi_parser.indent_head_inner_html || !multi_parser.token_text.match(/<head(?:.*)>/))) {

	                            multi_parser.indent();
	                        }

	                        multi_parser.indent_content = false;
	                    }
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_STYLE':
	                case 'TK_TAG_SCRIPT':
	                    multi_parser.print_newline(false, multi_parser.output);
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_END':
	                    //Print new line only if the tag has no content and has child
	                    if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {
	                        var tag_name = (multi_parser.token_text.match(/\w+/) || [])[0];
	                        var tag_extracted_from_last_output = null;
	                        if (multi_parser.output.length) {
	                            tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length - 1].match(/(?:<|{{#)\s*(\w+)/);
	                        }
	                        if (tag_extracted_from_last_output === null ||
	                            (tag_extracted_from_last_output[1] !== tag_name && !multi_parser.Utils.in_array(tag_extracted_from_last_output[1], unformatted))) {
	                            multi_parser.print_newline(false, multi_parser.output);
	                        }
	                    }
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_SINGLE':
	                    // Don't add a newline before elements that should remain unformatted.
	                    var tag_check = multi_parser.token_text.match(/^\s*<([a-z-]+)/i);
	                    if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)) {
	                        multi_parser.print_newline(false, multi_parser.output);
	                    }
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_HANDLEBARS_ELSE':
	                    // Don't add a newline if opening {{#if}} tag is on the current line
	                    var foundIfOnCurrentLine = false;
	                    for (var lastCheckedOutput = multi_parser.output.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {
	                        if (multi_parser.output[lastCheckedOutput] === '\n') {
	                            break;
	                        } else {
	                            if (multi_parser.output[lastCheckedOutput].match(/{{#if/)) {
	                                foundIfOnCurrentLine = true;
	                                break;
	                            }
	                        }
	                    }
	                    if (!foundIfOnCurrentLine) {
	                        multi_parser.print_newline(false, multi_parser.output);
	                    }
	                    multi_parser.print_token(multi_parser.token_text);
	                    if (multi_parser.indent_content) {
	                        multi_parser.indent();
	                        multi_parser.indent_content = false;
	                    }
	                    multi_parser.current_mode = 'CONTENT';
	                    break;
	                case 'TK_TAG_HANDLEBARS_COMMENT':
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'TAG';
	                    break;
	                case 'TK_CONTENT':
	                    multi_parser.print_token(multi_parser.token_text);
	                    multi_parser.current_mode = 'TAG';
	                    break;
	                case 'TK_STYLE':
	                case 'TK_SCRIPT':
	                    if (multi_parser.token_text !== '') {
	                        multi_parser.print_newline(false, multi_parser.output);
	                        var text = multi_parser.token_text,
	                            _beautifier,
	                            script_indent_level = 1;
	                        if (multi_parser.token_type === 'TK_SCRIPT') {
	                            _beautifier = typeof js_beautify === 'function' && js_beautify;
	                        } else if (multi_parser.token_type === 'TK_STYLE') {
	                            _beautifier = typeof css_beautify === 'function' && css_beautify;
	                        }

	                        if (options.indent_scripts === "keep") {
	                            script_indent_level = 0;
	                        } else if (options.indent_scripts === "separate") {
	                            script_indent_level = -multi_parser.indent_level;
	                        }

	                        var indentation = multi_parser.get_full_indent(script_indent_level);
	                        if (_beautifier) {

	                            // call the Beautifier if avaliable
	                            var Child_options = function() {
	                                this.eol = '\n';
	                            };
	                            Child_options.prototype = options;
	                            var child_options = new Child_options();
	                            text = _beautifier(text.replace(/^\s*/, indentation), child_options);
	                        } else {
	                            // simply indent the string otherwise
	                            var white = text.match(/^\s*/)[0];
	                            var _level = white.match(/[^\n\r]*$/)[0].split(multi_parser.indent_string).length - 1;
	                            var reindent = multi_parser.get_full_indent(script_indent_level - _level);
	                            text = text.replace(/^\s*/, indentation)
	                                .replace(/\r\n|\r|\n/g, '\n' + reindent)
	                                .replace(/\s+$/, '');
	                        }
	                        if (text) {
	                            multi_parser.print_token_raw(text);
	                            multi_parser.print_newline(true, multi_parser.output);
	                        }
	                    }
	                    multi_parser.current_mode = 'TAG';
	                    break;
	                default:
	                    // We should not be getting here but we don't want to drop input on the floor
	                    // Just output the text and move on
	                    if (multi_parser.token_text !== '') {
	                        multi_parser.print_token(multi_parser.token_text);
	                    }
	                    break;
	            }
	            multi_parser.last_token = multi_parser.token_type;
	            multi_parser.last_text = multi_parser.token_text;
	        }
	        var sweet_code = multi_parser.output.join('').replace(/[\r\n\t ]+$/, '');

	        // establish end_with_newline
	        if (end_with_newline) {
	            sweet_code += '\n';
	        }

	        if (eol !== '\n') {
	            sweet_code = sweet_code.replace(/[\n]/g, eol);
	        }

	        return sweet_code;
	    };
	}

	module.exports.Beautifier = Beautifier;


	/***/ }),
	/* 1 */
	/***/ (function(module, exports) {

	/* jshint curly: false */
	// This section of code is taken from acorn.
	//
	// Acorn was written by Marijn Haverbeke and released under an MIT
	// license. The Unicode regexps (for identifiers and whitespace) were
	// taken from [Esprima](http://esprima.org) by Ariya Hidayat.
	//
	// Git repositories for Acorn are available at
	//
	//     http://marijnhaverbeke.nl/git/acorn
	//     https://github.com/marijnh/acorn.git

	// ## Character categories

	// Big ugly regular expressions that match characters in the
	// whitespace, identifier, and identifier-start categories. These
	// are only applied when a character is found to actually have a
	// code point above 128.

	var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/; // jshint ignore:line
	var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
	var nonASCIIidentifierChars = "\u0300-\u036f\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u0620-\u0649\u0672-\u06d3\u06e7-\u06e8\u06fb-\u06fc\u0730-\u074a\u0800-\u0814\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0840-\u0857\u08e4-\u08fe\u0900-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962-\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09d7\u09df-\u09e0\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5f-\u0b60\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62-\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2-\u0ce3\u0ce6-\u0cef\u0d02\u0d03\u0d46-\u0d48\u0d57\u0d62-\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e34-\u0e3a\u0e40-\u0e45\u0e50-\u0e59\u0eb4-\u0eb9\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f41-\u0f47\u0f71-\u0f84\u0f86-\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1029\u1040-\u1049\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u170e-\u1710\u1720-\u1730\u1740-\u1750\u1772\u1773\u1780-\u17b2\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1920-\u192b\u1930-\u193b\u1951-\u196d\u19b0-\u19c0\u19c8-\u19c9\u19d0-\u19d9\u1a00-\u1a15\u1a20-\u1a53\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1b46-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1bb0-\u1bb9\u1be6-\u1bf3\u1c00-\u1c22\u1c40-\u1c49\u1c5b-\u1c7d\u1cd0-\u1cd2\u1d00-\u1dbe\u1e01-\u1f15\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2d81-\u2d96\u2de0-\u2dff\u3021-\u3028\u3099\u309a\ua640-\ua66d\ua674-\ua67d\ua69f\ua6f0-\ua6f1\ua7f8-\ua800\ua806\ua80b\ua823-\ua827\ua880-\ua881\ua8b4-\ua8c4\ua8d0-\ua8d9\ua8f3-\ua8f7\ua900-\ua909\ua926-\ua92d\ua930-\ua945\ua980-\ua983\ua9b3-\ua9c0\uaa00-\uaa27\uaa40-\uaa41\uaa4c-\uaa4d\uaa50-\uaa59\uaa7b\uaae0-\uaae9\uaaf2-\uaaf3\uabc0-\uabe1\uabec\uabed\uabf0-\uabf9\ufb20-\ufb28\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";
	var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
	var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

	// Whether a single character denotes a newline.

	exports.newline = /[\n\r\u2028\u2029]/;

	// Matches a whole line break (where CRLF is considered a single
	// line break). Used to count lines.

	// in javascript, these two differ
	// in python they are the same, different methods are called on them
	exports.lineBreak = new RegExp('\r\n|' + exports.newline.source);
	exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');


	// Test whether a given character code starts an identifier.

	exports.isIdentifierStart = function(code) {
	    // permit $ (36) and @ (64). @ is used in ES7 decorators.
	    if (code < 65) return code === 36 || code === 64;
	    // 65 through 91 are uppercase letters.
	    if (code < 91) return true;
	    // permit _ (95).
	    if (code < 97) return code === 95;
	    // 97 through 123 are lowercase letters.
	    if (code < 123) return true;
	    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
	};

	// Test whether a given character is part of an identifier.

	exports.isIdentifierChar = function(code) {
	    if (code < 48) return code === 36;
	    if (code < 58) return true;
	    if (code < 65) return false;
	    if (code < 91) return true;
	    if (code < 97) return code === 95;
	    if (code < 123) return true;
	    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
	};


	/***/ }),
	/* 2 */
	/***/ (function(module, exports) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	function mergeOpts(allOptions, targetType) {
	    var finalOpts = {};
	    var name;

	    for (name in allOptions) {
	        if (name !== targetType) {
	            finalOpts[name] = allOptions[name];
	        }
	    }

	    //merge in the per type settings for the targetType
	    if (targetType in allOptions) {
	        for (name in allOptions[targetType]) {
	            finalOpts[name] = allOptions[targetType][name];
	        }
	    }
	    return finalOpts;
	}

	module.exports.mergeOpts = mergeOpts;


	/***/ }),
	/* 3 */
	/***/ (function(module, exports, __webpack_require__) {

	/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */
	/*

	    The MIT License (MIT)

	    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.

	    Permission is hereby granted, free of charge, to any person
	    obtaining a copy of this software and associated documentation files
	    (the "Software"), to deal in the Software without restriction,
	    including without limitation the rights to use, copy, modify, merge,
	    publish, distribute, sublicense, and/or sell copies of the Software,
	    and to permit persons to whom the Software is furnished to do so,
	    subject to the following conditions:

	    The above copyright notice and this permission notice shall be
	    included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
	    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	    SOFTWARE.
	*/

	var Beautifier = __webpack_require__(0).Beautifier;

	function style_html(html_source, options, js_beautify, css_beautify) {
	    var beautifier = new Beautifier(html_source, options, js_beautify, css_beautify);
	    return beautifier.beautify();
	}

	module.exports = style_html;

	/***/ })
	/******/ ]);
	var style_html = legacy_beautify_html;
	/* Footer */
	if (true) {
	    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, __webpack_require__(58), __webpack_require__(59)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(requireamd) {
	        var js_beautify = __webpack_require__(58);
	        var css_beautify = __webpack_require__(59);

	        return {
	            html_beautify: function(html_source, options) {
	                return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);
	            }
	        };
	    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
					__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof exports !== "undefined") {
	    // Add support for CommonJS. Just put this file somewhere on your require.paths
	    // and you will be able to `var html_beautify = require("beautify").html_beautify`.
	    var js_beautify = require('./beautify.js');
	    var css_beautify = require('./beautify-css.js');

	    exports.html_beautify = function(html_source, options) {
	        return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);
	    };
	} else if (typeof window !== "undefined") {
	    // If we're running a web page and don't have either of the above, add our one global
	    window.html_beautify = function(html_source, options) {
	        return style_html(html_source, options, window.js_beautify, window.css_beautify);
	    };
	} else if (typeof global !== "undefined") {
	    // If we don't even have window, try global.
	    global.html_beautify = function(html_source, options) {
	        return style_html(html_source, options, global.js_beautify, global.css_beautify);
	    };
	}

	}());


	/***/ }),
	/* 166 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-container .eruda-json {\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n  cursor: default;\n  font-family: Consolas, Lucida Console, Monaco, MonoSpace;\n  font-size: 12px;\n  line-height: 1.2;\n  min-height: 100%;\n  color: #263238; }\n  .eruda-container .eruda-json,\n  .eruda-container .eruda-json ul {\n    list-style: none !important; }\n  .eruda-container .eruda-json ul {\n    padding: 0 !important;\n    padding-left: 15px !important;\n    margin: 0 !important; }\n  .eruda-container .eruda-json li {\n    position: relative;\n    white-space: nowrap;\n    line-height: 16px;\n    min-height: 16px; }\n  .eruda-container .eruda-json > li > .eruda-key {\n    display: none; }\n  .eruda-container .eruda-json > li {\n    padding: 10px 0; }\n  .eruda-container .eruda-json .eruda-array .eruda-object .eruda-key {\n    display: inline; }\n  .eruda-container .eruda-json .eruda-null {\n    color: #0086b3; }\n  .eruda-container .eruda-json .eruda-string {\n    color: #183691; }\n  .eruda-container .eruda-json .eruda-number {\n    color: #0086b3; }\n  .eruda-container .eruda-json .eruda-boolean {\n    color: #0086b3; }\n  .eruda-container .eruda-json .eruda-special {\n    color: #707d8b; }\n  .eruda-container .eruda-json .eruda-key {\n    color: #a71d5d; }\n  .eruda-container .eruda-json .eruda-key-lighter {\n    color: #d391b5; }\n  .eruda-container .eruda-json .eruda-expanded:before {\n    content: '';\n    width: 0;\n    height: 0;\n    border: 4px solid transparent;\n    position: absolute;\n    border-top-color: #707d8b;\n    left: -12px;\n    top: 6px; }\n  .eruda-container .eruda-json .eruda-collapsed:before {\n    content: '';\n    border-left-color: #707d8b;\n    border-top-color: transparent;\n    left: -10px;\n    top: 4px; }\n  .eruda-container .eruda-json li .eruda-collapsed ~ .eruda-close:before {\n    color: #999; }\n  .eruda-container .eruda-json .eruda-hidden ~ ul {\n    display: none; }\n  .eruda-container .eruda-json span {\n    position: static !important; }\n", ""]);

	// exports


	/***/ }),
	/* 167 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "        <div class=\"eruda-header\">\n            <span data-mark=\"time\">"
	    + alias4(((helper = (helper = helpers.time || (depth0 != null ? depth0.time : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"time","hash":{},"data":data}) : helper)))
	    + "</span> <span>"
	    + alias4(((helper = (helper = helpers.from || (depth0 != null ? depth0.from : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"from","hash":{},"data":data}) : helper)))
	    + "</span>\n        </div>\n";
	},"3":function(container,depth0,helpers,partials,data) {
	    var helper;

	  return "            <div class=\"eruda-icon-container\">\n                <span class=\"eruda-icon eruda-icon-"
	    + container.escapeExpression(((helper = (helper = helpers.icon || (depth0 != null ? depth0.icon : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"icon","hash":{},"data":data}) : helper)))
	    + "\"></span>\n            </div>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "<li>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.displayHeader : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "    <div class=\"eruda-"
	    + alias4(((helper = (helper = helpers.type || (depth0 != null ? depth0.type : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"type","hash":{},"data":data}) : helper)))
	    + " eruda-log-item\" data-id=\""
	    + alias4(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"id","hash":{},"data":data}) : helper)))
	    + "\" data-type=\""
	    + alias4(((helper = (helper = helpers.type || (depth0 != null ? depth0.type : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"type","hash":{},"data":data}) : helper)))
	    + "\">\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.icon : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "        <div class=\"eruda-count eruda-hidden\" data-mark=\"count\"></div>\n        <div class=\"eruda-log-content-wrapper\">\n            <div class=\"eruda-log-content\">"
	    + ((stack1 = ((helper = (helper = helpers.msg || (depth0 != null ? depth0.msg : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"msg","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "</div>\n        </div>\n    </div>\n</li>";
	},"useData":true});

	/***/ }),
	/* 168 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-console .eruda-logs {\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  height: 100%;\n  font-size: 14px;\n  padding-top: 1px; }\n  .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-header {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    white-space: nowrap;\n    margin: 5px 0;\n    padding: 0 10px;\n    font-size: 12px;\n    color: #707d8b; }\n  .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item {\n    position: relative;\n    background: #fff;\n    padding: 10px;\n    border-bottom: 1px solid #eceffe;\n    border-top: 1px solid #eceffe;\n    margin-top: -1px; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item:after {\n      content: '';\n      display: block;\n      clear: both; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item a {\n      color: #2196f3 !important; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-count,\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-icon-container {\n      float: left;\n      margin-right: 5px; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-icon-container .eruda-icon {\n      line-height: 20px;\n      font-size: 12px;\n      color: #263238; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-icon-container .eruda-icon-chevron-right {\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-icon-container .eruda-icon-info-circle {\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-icon-container .eruda-icon-times-circle {\n      color: #f44336; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-icon-container .eruda-icon-exclamation-triangle {\n      color: #ff6f00; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-count {\n      background: #2196f3;\n      padding: 2px 4px;\n      color: #fff;\n      border-radius: 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-log-content-wrapper {\n      overflow: hidden; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-log-content {\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n      white-space: pre-wrap;\n      -webkit-user-select: text;\n         -moz-user-select: text;\n          -ms-user-select: text;\n              user-select: text;\n      line-height: 20px; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item .eruda-log-content * {\n        -webkit-user-select: text;\n           -moz-user-select: text;\n            -ms-user-select: text;\n                user-select: text; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-input {\n      background: #fff; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-html table, .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-table table {\n      width: 100%;\n      background: #fff;\n      border-bottom: 1px solid #eceffe;\n      border-collapse: collapse; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-html table th, .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-table table th {\n        background: #2196f3;\n        color: #fff; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-html table th,\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-html table td,\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-table table th,\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-table table td {\n        padding: 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-html .eruda-blue, .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-table .eruda-blue {\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-error {\n      z-index: 50;\n      background: #ffebee;\n      color: #f44336;\n      border-top: 1px solid #f44336;\n      border-bottom: 1px solid #f44336; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-error .eruda-stack {\n        padding-left: 1.2em;\n        white-space: nowrap; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-error .eruda-count {\n        background: #f44336; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-debug {\n      z-index: 20;\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-warn {\n      z-index: 40;\n      background: #fffbe6;\n      border-top: 1px solid #ffc107;\n      border-bottom: 1px solid #ffc107; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-info {\n      z-index: 30;\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-logs .eruda-log-item.eruda-output {\n      color: #263238; }\n", ""]);

	// exports


	/***/ }),
	/* 169 */
	/***/ (function(module, exports) {

	module.exports = {":$":"Load jQuery",":_":"Load underscore","/regexp":"Show logs that match given regexp"}

	/***/ }),
	/* 170 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=container.escapeExpression;

	  return "            <tr>\n                <td>"
	    + alias1(((helper = (helper = helpers.key || (data && data.key)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"key","hash":{},"data":data}) : helper)))
	    + "</td>\n                <td>"
	    + alias1(container.lambda(depth0, depth0))
	    + "</td>\n            </tr>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return "<table>\n    <thead>\n        <tr>\n            <th>Command</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n"
	    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.commands : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "    </tbody>\n</table>";
	},"useData":true});

	/***/ }),
	/* 171 */
	/***/ (function(module, exports) {

	module.exports = {"jQuery":"//cdn.bootcss.com/jquery/2.2.1/jquery.js","underscore":"//cdn.bootcss.com/underscore.js/1.8.3/underscore-min.js"}

	/***/ }),
	/* 172 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-console {\n  padding-top: 40px;\n  padding-bottom: 40px; }\n  .eruda-dev-tools .eruda-tools .eruda-console .eruda-control {\n    position: absolute;\n    width: 100%;\n    height: 40px;\n    left: 0;\n    top: 0;\n    cursor: default;\n    padding: 10px 10px 10px 40px;\n    background: #fff;\n    line-height: 20px; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-icon-ban,\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-icon-info-circle {\n      display: inline-block;\n      color: #707d8b;\n      padding: 10px;\n      font-size: 16px;\n      position: absolute;\n      top: 1px;\n      cursor: pointer;\n      -webkit-transition: color 0.3s;\n      transition: color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-icon-ban:active,\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-icon-info-circle:active {\n        color: #263238; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-icon-ban {\n      left: 0; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-icon-info-circle {\n      right: 0; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-filter {\n      cursor: pointer;\n      color: #707d8b;\n      margin: 0 1px;\n      font-size: 12px;\n      height: 20px;\n      display: inline-block;\n      padding: 0 4px;\n      line-height: 20px;\n      border-radius: 4px;\n      -webkit-transition: background 0.3s, color 0.3s;\n      transition: background 0.3s, color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-control .eruda-filter.eruda-active {\n        background: #707d8b;\n        color: #fff; }\n  .eruda-dev-tools .eruda-tools .eruda-console .eruda-js-input {\n    position: absolute;\n    z-index: 100;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    background: #fff;\n    height: 40px; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-js-input .eruda-buttons {\n      display: none;\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 40px;\n      color: #707d8b;\n      font-size: 12px;\n      border-bottom: 1px solid #eceffe; }\n      .eruda-dev-tools .eruda-tools .eruda-console .eruda-js-input .eruda-buttons .eruda-button {\n        cursor: pointer;\n        width: 50%;\n        display: inline-block;\n        text-align: center;\n        border-right: 1px solid #eceffe;\n        height: 40px;\n        line-height: 40px;\n        float: left;\n        -webkit-transition: background 0.3s, color 0.3s;\n        transition: background 0.3s, color 0.3s; }\n        .eruda-dev-tools .eruda-tools .eruda-console .eruda-js-input .eruda-buttons .eruda-button:last-child {\n          border-right: none; }\n        .eruda-dev-tools .eruda-tools .eruda-console .eruda-js-input .eruda-buttons .eruda-button:active {\n          background: #2196f3;\n          color: #fff; }\n    .eruda-dev-tools .eruda-tools .eruda-console .eruda-js-input textarea {\n      padding: 10px;\n      outline: none;\n      border: none;\n      font-size: 14px;\n      width: 100%;\n      height: 100%;\n      -webkit-user-select: text;\n         -moz-user-select: text;\n          -ms-user-select: text;\n              user-select: text;\n      resize: none; }\n", ""]);

	// exports


	/***/ }),
	/* 173 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    return "<div class=\"eruda-control\">\n    <span class=\"eruda-icon-ban eruda-clear-console\"></span>\n    <span class=\"eruda-filter eruda-active\" data-filter=\"all\">All</span>\n    <span class=\"eruda-filter\" data-filter=\"error\">Error</span>\n    <span class=\"eruda-filter\" data-filter=\"warn\">Warning</span>\n    <span class=\"eruda-filter\" data-filter=\"info\">Info</span>\n    <span class=\"eruda-filter\" data-filter=\"log\">Log</span>\n    <span class=\"eruda-filter\" data-filter=\"debug\">Debug</span>\n    <span class=\"eruda-icon-info-circle eruda-help\"></span>\n</div>\n<ul class=\"eruda-logs\"></ul>\n<div class=\"eruda-js-input\">\n    <div class=\"eruda-buttons\">\n        <div class=\"eruda-button eruda-cancel\">Cancel</div>\n        <div class=\"eruda-button eruda-execute\">Execute</div>\n    </div>\n    <textarea placeholder=\"Type JavaScript here\"></textarea>\n</div>\n";
	},"useData":true});

	/***/ }),
	/* 174 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _XhrRequest = __webpack_require__(175);

	var _XhrRequest2 = _interopRequireDefault(_XhrRequest);

	var _FetchRequest = __webpack_require__(176);

	var _FetchRequest2 = _interopRequireDefault(_FetchRequest);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Network = function (_Tool) {
	  (0, _inherits3.default)(Network, _Tool);

	  function Network() {
	    (0, _classCallCheck3.default)(this, Network);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Network.__proto__ || (0, _getPrototypeOf2.default)(Network)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(177));

	    _this.name = 'network';
	    _this._requests = {};
	    _this._tpl = __webpack_require__(178);
	    _this._isFetchSupported = false;
	    if (window.fetch) _this._isFetchSupported = (0, _util.isNative)(window.fetch);
	    return _this;
	  }

	  (0, _createClass3.default)(Network, [{
	    key: 'init',
	    value: function init($el, container) {
	      (0, _get3.default)(Network.prototype.__proto__ || (0, _getPrototypeOf2.default)(Network.prototype), 'init', this).call(this, $el);

	      this._container = container;
	      this._bindEvent();
	      this._initCfg();
	      this.overrideXhr();
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      (0, _get3.default)(Network.prototype.__proto__ || (0, _getPrototypeOf2.default)(Network.prototype), 'show', this).call(this);

	      this._render();
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      this._requests = {};
	      this._render();
	    }
	  }, {
	    key: 'overrideXhr',
	    value: function overrideXhr() {
	      var winXhrProto = window.XMLHttpRequest.prototype;

	      var origSend = this._origSend = winXhrProto.send,
	          origOpen = this._origOpen = winXhrProto.open;

	      var self = this;

	      winXhrProto.open = function (method, url) {
	        var xhr = this;

	        var req = xhr.erudaRequest = new _XhrRequest2.default(xhr, method, url);

	        req.on('send', function (id, data) {
	          return self._addReq(id, data);
	        });
	        req.on('update', function (id, data) {
	          return self._updateReq(id, data);
	        });

	        xhr.addEventListener('readystatechange', function () {
	          switch (xhr.readyState) {
	            case 2:
	              return req.handleHeadersReceived();
	            case 4:
	              return req.handleDone();
	          }
	        });

	        origOpen.apply(this, arguments);
	      };

	      winXhrProto.send = function (data) {
	        var req = this.erudaRequest;
	        if (req) req.handleSend(data);

	        origSend.apply(this, arguments);
	      };
	    }
	  }, {
	    key: 'restoreXhr',
	    value: function restoreXhr() {
	      var winXhrProto = window.XMLHttpRequest.prototype;

	      if (this._origOpen) winXhrProto.open = this._origOpen;
	      if (this._origSend) winXhrProto.send = this._origSend;
	    }
	  }, {
	    key: 'overrideFetch',
	    value: function overrideFetch() {
	      if (!this._isFetchSupported) return;

	      var origFetch = this._origFetch = window.fetch;

	      var self = this;

	      window.fetch = function () {
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }

	        var req = new (Function.prototype.bind.apply(_FetchRequest2.default, [null].concat(args)))();
	        req.on('send', function (id, data) {
	          return self._addReq(id, data);
	        });
	        req.on('update', function (id, data) {
	          return self._updateReq(id, data);
	        });

	        var fetchResult = origFetch.apply(undefined, args);
	        req.send(fetchResult);

	        return fetchResult;
	      };
	    }
	  }, {
	    key: 'restoreFetch',
	    value: function restoreFetch() {
	      if (!this._isFetchSupported) return;

	      if (this._origFetch) window.fetch = this._origFetch;
	    }
	  }, {
	    key: '_addReq',
	    value: function _addReq(id, data) {
	      (0, _util.defaults)(data, {
	        name: '',
	        url: '',
	        status: 'pending',
	        type: 'unknown',
	        subType: 'unknown',
	        size: 0,
	        data: '',
	        method: 'GET',
	        startTime: (0, _util.now)(),
	        time: 0,
	        resHeaders: {},
	        resTxt: '',
	        done: false
	      });

	      this._requests[id] = data;

	      this._render();
	    }
	  }, {
	    key: '_updateReq',
	    value: function _updateReq(id, data) {
	      var target = this._requests[id];

	      if (!target) return;

	      (0, _util.extend)(target, data);

	      target.time = target.time - target.startTime;
	      target.displayTime = (0, _util.ms)(target.time);

	      if (target.done && (target.status < 200 || target >= 300)) target.hasErr = true;

	      this._render();
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var _this2 = this;

	      var $el = this._$el,
	          container = this._container;

	      var self = this;

	      $el.on('click', '.eruda-request', function () {
	        var id = (0, _util.$)(this).data('id'),
	            data = self._requests[id];

	        if (!data.done) return;

	        showSources('http', {
	          url: data.url,
	          data: data.data,
	          resTxt: data.resTxt,
	          type: data.type,
	          subType: data.subType,
	          resHeaders: data.resHeaders
	        });
	      }).on('click', '.eruda-clear-request', function () {
	        return _this2.clear();
	      });

	      function showSources(type, data) {
	        var sources = container.get('sources');
	        if (!sources) return;

	        sources.set(type, data);

	        container.showTool('sources');
	      }
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _get3.default)(Network.prototype.__proto__ || (0, _getPrototypeOf2.default)(Network.prototype), 'destroy', this).call(this);

	      _util.evalCss.remove(this._style);
	      this.restoreXhr();
	      this.restoreFetch();
	    }
	  }, {
	    key: '_initCfg',
	    value: function _initCfg() {
	      var _this3 = this;

	      var cfg = this.config = _Settings2.default.createCfg('network', {
	        overrideFetch: true
	      });

	      if (cfg.get('overrideFetch')) this.overrideFetch();

	      cfg.on('change', function (key, val) {
	        switch (key) {
	          case 'overrideFetch':
	            return val ? _this3.overrideFetch() : _this3.restoreFetch();
	        }
	      });

	      var settings = this._container.get('settings');
	      settings.text('Network').switch(cfg, 'overrideFetch', 'Catch Fetch Requests').separator();
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      if (!this.active) return;

	      var renderData = {};

	      if (!(0, _util.isEmpty)(this._requests)) renderData.requests = this._requests;

	      this._renderHtml(this._tpl(renderData));
	    }
	  }, {
	    key: '_renderHtml',
	    value: function _renderHtml(html) {
	      if (html === this._lastHtml) return;
	      this._lastHtml = html;
	      this._$el.html(html);
	    }
	  }]);
	  return Network;
	}(_Tool3.default);

	exports.default = Network;

	/***/ }),
	/* 175 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray2 = __webpack_require__(75);

	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _util = __webpack_require__(80);

	var _util2 = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var XhrRequest = function (_Emitter) {
	  (0, _inherits3.default)(XhrRequest, _Emitter);

	  function XhrRequest(xhr, method, url) {
	    (0, _classCallCheck3.default)(this, XhrRequest);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (XhrRequest.__proto__ || (0, _getPrototypeOf2.default)(XhrRequest)).call(this));

	    _this._xhr = xhr;
	    _this._method = method;
	    _this._url = (0, _util2.fullUrl)(url);
	    _this._id = (0, _util2.uniqId)('request');
	    return _this;
	  }

	  (0, _createClass3.default)(XhrRequest, [{
	    key: 'handleSend',
	    value: function handleSend(data) {
	      if (!(0, _util2.isStr)(data)) data = '';

	      this.emit('send', this._id, {
	        name: (0, _util2.getFileName)(this._url),
	        url: this._url,
	        data: data,
	        method: this._method
	      });
	    }
	  }, {
	    key: 'handleHeadersReceived',
	    value: function handleHeadersReceived() {
	      var xhr = this._xhr;

	      var type = (0, _util.getType)(xhr.getResponseHeader('Content-Type'));

	      this.emit('update', this._id, {
	        type: type.type,
	        subType: type.subType,
	        size: getSize(xhr, true, this._url),
	        time: (0, _util2.now)(),
	        resHeaders: getHeaders(xhr)
	      });
	    }
	  }, {
	    key: 'handleDone',
	    value: function handleDone() {
	      var xhr = this._xhr,
	          resType = xhr.responseType;

	      var resTxt = resType === '' || resType === 'text' || resType === 'json' ? xhr.responseText : '';

	      this.emit('update', this._id, {
	        status: xhr.status,
	        done: true,
	        size: getSize(xhr, false, this._url),
	        time: (0, _util2.now)(),
	        resTxt: resTxt
	      });
	    }
	  }]);
	  return XhrRequest;
	}(_util2.Emitter);

	exports.default = XhrRequest;


	function getHeaders(xhr) {
	  var raw = xhr.getAllResponseHeaders(),
	      lines = raw.split('\n');

	  var ret = {};

	  (0, _util2.each)(lines, function (line) {
	    line = (0, _util2.trim)(line);

	    if (line === '') return;

	    var _line$split = line.split(':', 2),
	        _line$split2 = (0, _slicedToArray3.default)(_line$split, 2),
	        key = _line$split2[0],
	        val = _line$split2[1];

	    ret[key] = (0, _util2.trim)(val);
	  });

	  return ret;
	}

	function getSize(xhr, headersOnly, url) {
	  var size = 0;

	  function getStrSize() {
	    if (!headersOnly) {
	      var resType = xhr.responseType;
	      var resTxt = resType === '' || resType === 'text' || resType === 'json' ? xhr.responseText : '';
	      if (resTxt) size = (0, _util.lenToUtf8Bytes)(resTxt);
	    }
	  }

	  if ((0, _util2.isCrossOrig)(url)) {
	    getStrSize();
	  } else {
	    try {
	      size = (0, _util2.toNum)(xhr.getResponseHeader('Content-Length'));
	    } catch (e) {
	      getStrSize();
	    }
	  }

	  if (size === 0) getStrSize();

	  return (0, _util2.fileSize)(size) + 'B';
	}

	/***/ }),
	/* 176 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _util = __webpack_require__(80);

	var _util2 = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var FetchRequest = function (_Emitter) {
	  (0, _inherits3.default)(FetchRequest, _Emitter);

	  function FetchRequest(url) {
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    (0, _classCallCheck3.default)(this, FetchRequest);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (FetchRequest.__proto__ || (0, _getPrototypeOf2.default)(FetchRequest)).call(this));

	    if (url instanceof window.Request) url = url.url;

	    _this._url = (0, _util2.fullUrl)(url);
	    _this._id = (0, _util2.uniqId)('request');
	    _this._options = options;
	    _this._method = options.method || 'GET';
	    return _this;
	  }

	  (0, _createClass3.default)(FetchRequest, [{
	    key: 'send',
	    value: function send(fetchResult) {
	      var _this2 = this;

	      var options = this._options;

	      var data = (0, _util2.isStr)(options.body) ? options.body : '';

	      this._fetch = fetchResult;
	      this.emit('send', this._id, {
	        name: (0, _util2.getFileName)(this._url),
	        url: this._url,
	        data: data,
	        method: this._method
	      });

	      fetchResult.then(function (res) {
	        res = res.clone();

	        var type = (0, _util.getType)(res.headers.get('Content-Type'));

	        res.text().then(function (resTxt) {
	          _this2.emit('update', _this2._id, {
	            type: type.type,
	            subType: type.subType,
	            time: (0, _util2.now)(),
	            size: getSize(res, resTxt),
	            resTxt: resTxt,
	            resHeaders: getHeaders(res),
	            status: res.status,
	            done: true
	          });
	        });

	        return res;
	      });
	    }
	  }]);
	  return FetchRequest;
	}(_util2.Emitter);

	exports.default = FetchRequest;


	function getSize(res, resTxt) {
	  var size = 0;

	  var contentLen = res.headers.get('Content-length');

	  if (contentLen) {
	    size = (0, _util2.toNum)(contentLen);
	  } else {
	    size = (0, _util.lenToUtf8Bytes)(resTxt);
	  }

	  return (0, _util2.fileSize)(size) + 'B';
	}

	function getHeaders(res) {
	  var ret = {};

	  res.headers.forEach(function (val, key) {
	    return ret[key] = val;
	  });

	  return ret;
	}

	/***/ }),
	/* 177 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-network {\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch; }\n  .eruda-dev-tools .eruda-tools .eruda-network .eruda-title {\n    background: #707d8b;\n    padding: 10px;\n    color: #fff; }\n    .eruda-dev-tools .eruda-tools .eruda-network .eruda-title .eruda-btn {\n      margin-left: 10px;\n      float: right;\n      background: #fff;\n      color: #707d8b;\n      text-align: center;\n      width: 18px;\n      height: 18px;\n      line-height: 18px;\n      border-radius: 50%;\n      font-size: 12px;\n      cursor: pointer;\n      -webkit-transition: color 0.3s;\n      transition: color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-network .eruda-title .eruda-btn:active {\n        color: #263238; }\n  .eruda-dev-tools .eruda-tools .eruda-network .eruda-requests {\n    background: #fff;\n    border-bottom: 1px solid #eceffe;\n    margin-bottom: 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-network .eruda-requests li {\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n      cursor: pointer;\n      border-top: 1px solid #eceffe;\n      height: 41px;\n      white-space: nowrap; }\n      .eruda-dev-tools .eruda-tools .eruda-network .eruda-requests li.eruda-error span {\n        color: #f44336; }\n      .eruda-dev-tools .eruda-tools .eruda-network .eruda-requests li span {\n        display: inline-block;\n        line-height: 40px;\n        height: 40px;\n        padding: 0 10px;\n        font-size: 12px;\n        vertical-align: top; }\n      .eruda-dev-tools .eruda-tools .eruda-network .eruda-requests li:nth-child(even) {\n        background: #eceffe; }\n", ""]);

	// exports


	/***/ }),
	/* 178 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.requests : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"2":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "            <li class=\"eruda-request "
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.hasErr : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "\" data-id=\""
	    + alias4(((helper = (helper = helpers.key || (data && data.key)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "\">\n                <span>"
	    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
	    + "</span>\n                <span>"
	    + alias4(((helper = (helper = helpers.status || (depth0 != null ? depth0.status : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"status","hash":{},"data":data}) : helper)))
	    + "</span>\n                <span>"
	    + alias4(((helper = (helper = helpers.method || (depth0 != null ? depth0.method : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"method","hash":{},"data":data}) : helper)))
	    + "</span>\n                <span>"
	    + alias4(((helper = (helper = helpers.subType || (depth0 != null ? depth0.subType : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"subType","hash":{},"data":data}) : helper)))
	    + "</span>\n                <span>"
	    + alias4(((helper = (helper = helpers.size || (depth0 != null ? depth0.size : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"size","hash":{},"data":data}) : helper)))
	    + "</span>\n                <span>"
	    + alias4(((helper = (helper = helpers.displayTime || (depth0 != null ? depth0.displayTime : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"displayTime","hash":{},"data":data}) : helper)))
	    + "</span>\n                <span class=\"eruda-blue\">"
	    + alias4(((helper = (helper = helpers.url || (depth0 != null ? depth0.url : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"url","hash":{},"data":data}) : helper)))
	    + "</span>\n            </li>\n";
	},"3":function(container,depth0,helpers,partials,data) {
	    return "eruda-error";
	},"5":function(container,depth0,helpers,partials,data) {
	    return "        <li><span>Empty</span></li>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return "<div class=\"eruda-title\">\n    Request\n    <div class=\"eruda-btn eruda-clear-request\">\n        <span class=\"eruda-icon-ban\"></span>\n    </div>\n</div>\n<ul class=\"eruda-requests\">\n"
	    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.requests : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(5, data, 0),"data":data})) != null ? stack1 : "")
	    + "</ul>\n";
	},"useData":true});

	/***/ }),
	/* 179 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _CssStore = __webpack_require__(180);

	var _CssStore2 = _interopRequireDefault(_CssStore);

	var _stringify = __webpack_require__(78);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _Highlight = __webpack_require__(181);

	var _Highlight2 = _interopRequireDefault(_Highlight);

	var _Select = __webpack_require__(184);

	var _Select2 = _interopRequireDefault(_Select);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Elements = function (_Tool) {
	  (0, _inherits3.default)(Elements, _Tool);

	  function Elements() {
	    (0, _classCallCheck3.default)(this, Elements);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Elements.__proto__ || (0, _getPrototypeOf2.default)(Elements)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(185));

	    _this.name = 'elements';
	    _this._tpl = __webpack_require__(186);
	    _this._rmDefComputedStyle = true;
	    _this._highlightElement = false;
	    _this._selectElement = false;
	    _this._observeElement = true;
	    return _this;
	  }

	  (0, _createClass3.default)(Elements, [{
	    key: 'init',
	    value: function init($el, container) {
	      (0, _get3.default)(Elements.prototype.__proto__ || (0, _getPrototypeOf2.default)(Elements.prototype), 'init', this).call(this, $el);

	      this._container = container;

	      $el.html('<div class="eruda-show-area"></div>');
	      this._$showArea = $el.find('.eruda-show-area');
	      $el.append(__webpack_require__(187)());

	      this._htmlEl = document.documentElement;
	      this._highlight = new _Highlight2.default(this._container.$container);
	      this._select = new _Select2.default();
	      this._bindEvent();
	      this._initObserver();
	      this._initCfg();
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      (0, _get3.default)(Elements.prototype.__proto__ || (0, _getPrototypeOf2.default)(Elements.prototype), 'show', this).call(this);

	      if (this._observeElement) this._enableObserver();
	      if (!this._curEl) this._setEl(this._htmlEl);
	      this._render();
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this._disableObserver();

	      return (0, _get3.default)(Elements.prototype.__proto__ || (0, _getPrototypeOf2.default)(Elements.prototype), 'hide', this).call(this);
	    }
	  }, {
	    key: 'set',
	    value: function set(e) {
	      this._setEl(e);
	      this.scrollToTop();
	      this._render();

	      return this;
	    }
	  }, {
	    key: 'overrideEventTarget',
	    value: function overrideEventTarget() {
	      var winEventProto = getWinEventProto();

	      var origAddEvent = this._origAddEvent = winEventProto.addEventListener,
	          origRmEvent = this._origRmEvent = winEventProto.removeEventListener;

	      winEventProto.addEventListener = function (type, listener, useCapture) {
	        addEvent(this, type, listener, useCapture);
	        origAddEvent.apply(this, arguments);
	      };

	      winEventProto.removeEventListener = function (type, listener, useCapture) {
	        rmEvent(this, type, listener, useCapture);
	        origRmEvent.apply(this, arguments);
	      };
	    }
	  }, {
	    key: 'scrollToTop',
	    value: function scrollToTop() {
	      var el = this._$showArea.get(0);

	      el.scrollTop = 0;
	    }
	  }, {
	    key: 'restoreEventTarget',
	    value: function restoreEventTarget() {
	      var winEventProto = getWinEventProto();

	      if (this._origAddEvent) winEventProto.addEventListener = this._origAddEvent;
	      if (this._origRmEvent) winEventProto.removeEventListener = this._origRmEvent;
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _get3.default)(Elements.prototype.__proto__ || (0, _getPrototypeOf2.default)(Elements.prototype), 'destroy', this).call(this);

	      _util.evalCss.remove(this._style);
	      this._select.disable();
	      this._highlight.destroy();
	      this._disableObserver();
	      this.restoreEventTarget();
	    }
	  }, {
	    key: '_back',
	    value: function _back() {
	      if (this._curEl === this._htmlEl) return;

	      var parentQueue = this._curParentQueue,
	          parent = parentQueue.shift();

	      while (!isElExist(parent)) {
	        parent = parentQueue.shift();
	      }this.set(parent);
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var _this2 = this;

	      var self = this,
	          container = this._container,
	          select = this._select;

	      this._$el.on('click', '.eruda-child', function () {
	        var idx = (0, _util.$)(this).data('idx'),
	            curEl = self._curEl,
	            el = curEl.childNodes[idx];

	        if (el && el.nodeType === 3) {
	          var curTagName = curEl.tagName,
	              type = void 0;

	          switch (curTagName) {
	            case 'SCRIPT':
	              type = 'js';
	              break;
	            case 'STYLE':
	              type = 'css';
	              break;
	            default:
	              return;
	          }

	          var sources = container.get('sources');

	          if (sources) {
	            sources.set(type, el.nodeValue);
	            container.showTool('sources');
	          }

	          return;
	        }

	        !isElExist(el) ? self._render() : self.set(el);
	      }).on('click', '.eruda-listener-content', function () {
	        var text = (0, _util.$)(this).text(),
	            sources = container.get('sources');

	        if (sources) {
	          sources.set('js', text);
	          container.showTool('sources');
	        }
	      }).on('click', '.eruda-breadcrumb', function () {
	        var data = _this2._elData || JSON.parse((0, _stringify2.default)(_this2._curEl, { getterVal: true })),
	            sources = container.get('sources');

	        _this2._elData = data;

	        if (sources) {
	          sources.set('json', data);
	          container.showTool('sources');
	        }
	      }).on('click', '.eruda-parent', function () {
	        var idx = (0, _util.$)(this).data('idx'),
	            curEl = self._curEl,
	            el = curEl.parentNode;

	        while (idx-- && el.parentNode) {
	          el = el.parentNode;
	        }!isElExist(el) ? self._render() : self.set(el);
	      }).on('click', '.eruda-toggle-all-computed-style', function () {
	        return _this2._toggleAllComputedStyle();
	      });

	      var $bottomBar = this._$el.find('.eruda-bottom-bar');

	      $bottomBar.on('click', '.eruda-refresh', function () {
	        return _this2._render();
	      }).on('click', '.eruda-highlight', function () {
	        return _this2._toggleHighlight();
	      }).on('click', '.eruda-select', function () {
	        return _this2._toggleSelect();
	      }).on('click', '.eruda-reset', function () {
	        return _this2.set(_this2._htmlEl);
	      });

	      select.on('select', function (target) {
	        return _this2.set(target);
	      });
	    }
	  }, {
	    key: '_toggleAllComputedStyle',
	    value: function _toggleAllComputedStyle() {
	      this._rmDefComputedStyle = !this._rmDefComputedStyle;

	      this._render();
	    }
	  }, {
	    key: '_enableObserver',
	    value: function _enableObserver() {
	      this._observer.observe(this._htmlEl, {
	        attributes: true,
	        childList: true,
	        subtree: true
	      });
	    }
	  }, {
	    key: '_disableObserver',
	    value: function _disableObserver() {
	      this._observer.disconnect();
	    }
	  }, {
	    key: '_toggleHighlight',
	    value: function _toggleHighlight() {
	      if (this._selectElement) return;

	      this._$el.find('.eruda-highlight').toggleClass('eruda-active');
	      this._highlightElement = !this._highlightElement;

	      this._render();
	    }
	  }, {
	    key: '_toggleSelect',
	    value: function _toggleSelect() {
	      var select = this._select;

	      this._$el.find('.eruda-select').toggleClass('eruda-active');
	      if (!this._selectElement && !this._highlightElement) this._toggleHighlight();
	      this._selectElement = !this._selectElement;

	      if (this._selectElement) {
	        select.enable();
	        this._container.hide();
	      } else {
	        select.disable();
	      }
	    }
	  }, {
	    key: '_setEl',
	    value: function _setEl(el) {
	      this._curEl = el;
	      this._elData = null;
	      this._curCssStore = new _CssStore2.default(el);
	      this._highlight.setEl(el);
	      this._rmDefComputedStyle = true;

	      var parentQueue = [];

	      var parent = el.parentNode;
	      while (parent) {
	        parentQueue.push(parent);
	        parent = parent.parentNode;
	      }
	      this._curParentQueue = parentQueue;
	    }
	  }, {
	    key: '_getData',
	    value: function _getData() {
	      var ret = {};

	      var el = this._curEl,
	          cssStore = this._curCssStore;

	      var className = el.className,
	          id = el.id,
	          attributes = el.attributes,
	          tagName = el.tagName;


	      ret.parents = getParents(el);
	      ret.children = formatChildNodes(el.childNodes);
	      ret.attributes = formatAttr(attributes);
	      ret.name = formatElName({ tagName: tagName, id: id, className: className, attributes: attributes });

	      var events = el.erudaEvents;
	      if (events && (0, _util.keys)(events).length !== 0) ret.listeners = events;

	      if (needNoStyle(tagName)) return ret;

	      var computedStyle = cssStore.getComputedStyle();

	      function getBoxModelValue(type) {
	        var keys = ['top', 'left', 'right', 'bottom'];
	        if (type !== 'position') keys = (0, _util.map)(keys, function (key) {
	          return type + '-' + key;
	        });
	        if (type === 'border') keys = (0, _util.map)(keys, function (key) {
	          return key + '-width';
	        });

	        return {
	          top: boxModelValue(computedStyle[keys[0]], type),
	          left: boxModelValue(computedStyle[keys[1]], type),
	          right: boxModelValue(computedStyle[keys[2]], type),
	          bottom: boxModelValue(computedStyle[keys[3]], type)
	        };
	      }

	      var boxModel = {
	        margin: getBoxModelValue('margin'),
	        border: getBoxModelValue('border'),
	        padding: getBoxModelValue('padding'),
	        content: {
	          width: boxModelValue(computedStyle['width']),
	          height: boxModelValue(computedStyle['height'])
	        }
	      };

	      if (computedStyle['position'] !== 'static') {
	        boxModel.position = getBoxModelValue('position');
	      }
	      ret.boxModel = boxModel;

	      if (this._rmDefComputedStyle) computedStyle = rmDefComputedStyle(computedStyle);
	      ret.rmDefComputedStyle = this._rmDefComputedStyle;
	      processStyleRules(computedStyle);
	      ret.computedStyle = computedStyle;

	      var styles = cssStore.getMatchedCSSRules();
	      styles.unshift(getInlineStyle(el.style));
	      styles.forEach(function (style) {
	        return processStyleRules(style.style);
	      });
	      ret.styles = styles;

	      return ret;
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      if (!isElExist(this._curEl)) return this._back();

	      this._highlight[this._highlightElement ? 'show' : 'hide']();
	      this._renderHtml(this._tpl(this._getData()));
	    }
	  }, {
	    key: '_renderHtml',
	    value: function _renderHtml(html) {
	      if (html === this._lastHtml) return;
	      this._lastHtml = html;
	      this._$showArea.html(html);
	    }
	  }, {
	    key: '_initObserver',
	    value: function _initObserver() {
	      var _this3 = this;

	      this._observer = new _util.MutationObserver(function (mutations) {
	        (0, _util.each)(mutations, function (mutation) {
	          return _this3._handleMutation(mutation);
	        });
	      });
	    }
	  }, {
	    key: '_handleMutation',
	    value: function _handleMutation(mutation) {
	      var i = void 0,
	          len = void 0,
	          node = void 0;

	      if ((0, _util.isErudaEl)(mutation.target)) return;

	      if (mutation.type === 'attributes') {
	        if (mutation.target !== this._curEl) return;
	        this._render();
	      } else if (mutation.type === 'childList') {
	        if (mutation.target === this._curEl) return this._render();

	        var addedNodes = mutation.addedNodes;

	        for (i = 0, len = addedNodes.length; i < len; i++) {
	          node = addedNodes[i];

	          if (node.parentNode === this._curEl) return this._render();
	        }

	        var removedNodes = mutation.removedNodes;

	        for (i = 0, len = removedNodes.length; i < len; i++) {
	          if (removedNodes[i] === this._curEl) return this.set(this._htmlEl);
	        }
	      }
	    }
	  }, {
	    key: '_initCfg',
	    value: function _initCfg() {
	      var _this4 = this;

	      var cfg = this.config = _Settings2.default.createCfg('elements', {
	        overrideEventTarget: true,
	        observeElement: true
	      });

	      if (cfg.get('overrideEventTarget')) this.overrideEventTarget();
	      if (cfg.get('observeElement')) this._observeElement = false;

	      cfg.on('change', function (key, val) {
	        switch (key) {
	          case 'overrideEventTarget':
	            return val ? _this4.overrideEventTarget() : _this4.restoreEventTarget();
	          case 'observeElement':
	            _this4._observeElement = val;
	            return val ? _this4._enableObserver() : _this4._disableObserver();
	        }
	      });

	      var settings = this._container.get('settings');
	      settings.text('Elements').switch(cfg, 'overrideEventTarget', 'Catch Event Listeners');

	      if (this._observer) settings.switch(cfg, 'observeElement', 'Auto Refresh');

	      settings.separator();
	    }
	  }]);
	  return Elements;
	}(_Tool3.default);

	exports.default = Elements;


	function processStyleRules(style) {
	  (0, _util.each)(style, function (val, key) {
	    return style[key] = processStyleRule(val);
	  });
	}

	var regColor = /rgba?\((.*?)\)/g,
	    regCssUrl = /url\("?(.*?)"?\)/g;

	function processStyleRule(val) {
	  // For css custom properties, val is unable to retrieved.
	  val = (0, _util.toStr)(val);

	  return val.replace(regColor, '<span class="eruda-style-color" style="background-color: $&"></span>$&').replace(regCssUrl, function (match, url) {
	    return 'url("' + wrapLink(url) + '")';
	  });
	}

	var isElExist = function isElExist(val) {
	  return (0, _util.isEl)(val) && val.parentNode;
	};

	function formatElName(data) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$noAttr = _ref.noAttr,
	      noAttr = _ref$noAttr === undefined ? false : _ref$noAttr;

	  var id = data.id,
	      className = data.className,
	      attributes = data.attributes;


	  var ret = '<span class="eruda-blue">' + data.tagName.toLowerCase() + '</span>';

	  if (id !== '') ret += '#' + id;

	  if ((0, _util.isStr)(className)) {
	    (0, _util.each)(className.split(/\s+/g), function (val) {
	      if (val.trim() === '') return;
	      ret += '.' + val;
	    });
	  }

	  if (!noAttr) {
	    (0, _util.each)(attributes, function (attr) {
	      var name = attr.name;
	      if (name === 'id' || name === 'class' || name === 'style') return;
	      ret += ' ' + name + '="' + attr.value + '"';
	    });
	  }

	  return ret;
	}

	var formatAttr = function formatAttr(attributes) {
	  return (0, _util.map)(attributes, function (attr) {
	    var name = attr.name,
	        value = attr.value;

	    value = (0, _util.escape)(value);

	    var isLink = (name === 'src' || name === 'href') && !(0, _util.startWith)(value, 'data');
	    if (isLink) value = wrapLink(value);
	    if (name === 'style') value = processStyleRule(value);

	    return { name: name, value: value };
	  });
	};

	function formatChildNodes(nodes) {
	  var ret = [];

	  for (var i = 0, len = nodes.length; i < len; i++) {
	    var child = nodes[i],
	        nodeType = child.nodeType;

	    if (nodeType === 3 || nodeType === 8) {
	      var val = child.nodeValue.trim();
	      if (val !== '') ret.push({
	        text: val,
	        isCmt: nodeType === 8,
	        idx: i
	      });
	      continue;
	    }

	    var isSvg = !(0, _util.isStr)(child.className);

	    if (nodeType === 1 && child.id !== 'eruda' && (isSvg || child.className.indexOf('eruda') < 0)) {
	      ret.push({
	        text: formatElName(child),
	        isEl: true,
	        idx: i
	      });
	    }
	  }

	  return ret;
	}

	function getParents(el) {
	  var ret = [],
	      i = 0,
	      parent = el.parentNode;

	  while (parent && parent.nodeType === 1) {
	    ret.push({
	      text: formatElName(parent, { noAttr: true }),
	      idx: i++
	    });

	    parent = parent.parentNode;
	  }

	  return ret.reverse();
	}

	function getInlineStyle(style) {
	  var ret = {
	    selectorText: 'element.style',
	    style: {}
	  };

	  for (var i = 0, len = style.length; i < len; i++) {
	    var s = style[i];

	    ret.style[s] = style[s];
	  }

	  return ret;
	}

	var defComputedStyle = __webpack_require__(188);

	function rmDefComputedStyle(computedStyle) {
	  var ret = {};

	  (0, _util.each)(computedStyle, function (val, key) {
	    if (val === defComputedStyle[key]) return;

	    ret[key] = val;
	  });

	  return ret;
	}

	var NO_STYLE_TAG = ['script', 'style', 'meta', 'title', 'link', 'head'];

	var needNoStyle = function needNoStyle(tagName) {
	  return NO_STYLE_TAG.indexOf(tagName.toLowerCase()) > -1;
	};

	function addEvent(el, type, listener) {
	  var useCapture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

	  if (!(0, _util.isEl)(el) || !(0, _util.isFn)(listener) || !(0, _util.isBool)(useCapture)) return;

	  var events = el.erudaEvents = el.erudaEvents || {};

	  events[type] = events[type] || [];
	  events[type].push({
	    listener: listener,
	    listenerStr: listener.toString(),
	    useCapture: useCapture
	  });
	}

	function rmEvent(el, type, listener) {
	  var useCapture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

	  if (!(0, _util.isEl)(el) || !(0, _util.isFn)(listener) || !(0, _util.isBool)(useCapture)) return;

	  var events = el.erudaEvents;

	  if (!(events && events[type])) return;

	  var listeners = events[type];

	  for (var i = 0, len = listeners.length; i < len; i++) {
	    if (listeners[i].listener === listener) {
	      listeners.splice(i, 1);
	      break;
	    }
	  }

	  if (listeners.length === 0) delete events[type];
	  if ((0, _util.keys)(events).length === 0) delete el.erudaEvents;
	}

	var getWinEventProto = function getWinEventProto() {
	  return (0, _util.safeGet)(window, 'EventTarget.prototype') || window.Node.prototype;
	};

	var wrapLink = function wrapLink(link) {
	  return '<a href="' + link + '" target="_blank">' + link + '</a>';
	};

	function boxModelValue(val, type) {
	  if ((0, _util.isNum)(val)) return val;

	  if (!(0, _util.isStr)(val)) return '‒';

	  var ret = (0, _util.pxToNum)(val);
	  if ((0, _util.isNaN)(ret)) return val;

	  if (type === 'position') return ret;

	  return ret === 0 ? '‒' : ret;
	}

	/***/ }),
	/* 180 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function formatStyle(style) {
	  var ret = {};

	  for (var i = 0, len = style.length; i < len; i++) {
	    var name = style[i];

	    if (style[name] === 'initial') continue;

	    ret[name] = style[name];
	  }

	  return ret;
	}

	var elProto = Element.prototype;

	var matchesSel = function matchesSel() {
	  return false;
	};

	if (elProto.webkitMatchesSelector) {
	  matchesSel = function matchesSel(el, selText) {
	    return el.webkitMatchesSelector(selText);
	  };
	} else if (elProto.mozMatchesSelector) {
	  matchesSel = function matchesSel(el, selText) {
	    return el.mozMatchesSelector(selText);
	  };
	}

	var CssStore = function () {
	  function CssStore(el) {
	    (0, _classCallCheck3.default)(this, CssStore);

	    this._el = el;
	  }

	  (0, _createClass3.default)(CssStore, [{
	    key: 'getComputedStyle',
	    value: function getComputedStyle() {
	      var computedStyle = window.getComputedStyle(this._el);

	      return formatStyle(computedStyle);
	    }
	  }, {
	    key: 'getMatchedCSSRules',
	    value: function getMatchedCSSRules() {
	      var _this = this;

	      var ret = [];

	      (0, _util.each)(document.styleSheets, function (styleSheet) {
	        try {
	          // Started with version 64, Chrome does not allow cross origin script to access this property.
	          if (!styleSheet.cssRules) return;
	        } catch (e) {
	          return;
	        }

	        (0, _util.each)(styleSheet.cssRules, function (cssRule) {
	          var matchesEl = false;

	          // Mobile safari will throw DOM Exception 12 error, need to try catch it.
	          try {
	            matchesEl = _this._elMatchesSel(cssRule.selectorText);
	            /* eslint-disable no-empty */
	          } catch (e) {}

	          if (!matchesEl) return;

	          ret.push({
	            selectorText: cssRule.selectorText,
	            style: formatStyle(cssRule.style)
	          });
	        });
	      });

	      return ret;
	    }
	  }, {
	    key: '_elMatchesSel',
	    value: function _elMatchesSel(selText) {
	      return matchesSel(this._el, selText);
	    }
	  }]);
	  return CssStore;
	}();

	exports.default = CssStore;

	/***/ }),
	/* 181 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Highlight = function () {
	  function Highlight($container) {
	    (0, _classCallCheck3.default)(this, Highlight);

	    this._style = (0, _util.evalCss)(__webpack_require__(182));

	    this._isShow = false;

	    this._appendTpl($container);
	    this._bindEvent();
	  }

	  (0, _createClass3.default)(Highlight, [{
	    key: 'setEl',
	    value: function setEl(el) {
	      this._$target = (0, _util.$)(el);
	      this._target = el;
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this._isShow = true;
	      this.render();
	      this._$el.show();
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      _util.evalCss.remove(this._style);
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this._isShow = false;
	      this._$el.hide();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _$target$offset = this._$target.offset(),
	          left = _$target$offset.left,
	          width = _$target$offset.width,
	          top = _$target$offset.top,
	          height = _$target$offset.height;

	      this._$el.css({ left: left, top: top - window.scrollY, width: width, height: height });

	      var computedStyle = getComputedStyle(this._target, '');

	      var getNumStyle = function getNumStyle(name) {
	        return (0, _util.pxToNum)(computedStyle.getPropertyValue(name));
	      };

	      var ml = getNumStyle('margin-left'),
	          mr = getNumStyle('margin-right'),
	          mt = getNumStyle('margin-top'),
	          mb = getNumStyle('margin-bottom');

	      this._$margin.css({
	        left: -ml,
	        top: -mt,
	        width: width + ml + mr,
	        height: height + mt + mb
	      });

	      var bl = getNumStyle('border-left-width'),
	          br = getNumStyle('border-right-width'),
	          bt = getNumStyle('border-top-width'),
	          bb = getNumStyle('border-bottom-width');

	      var bw = width - bl - br,
	          bh = height - bt - bb;

	      this._$padding.css({
	        left: bl,
	        top: bt,
	        width: bw,
	        height: bh
	      });

	      var pl = getNumStyle('padding-left'),
	          pr = getNumStyle('padding-right'),
	          pt = getNumStyle('padding-top'),
	          pb = getNumStyle('padding-bottom');

	      this._$content.css({
	        left: bl + pl,
	        top: bl + pt,
	        width: bw - pl - pr,
	        height: bh - pt - pb
	      });

	      this._$size.css({
	        top: -mt - (top - mt < 25 ? 0 : 25),
	        left: -ml
	      }).html(formatElName(this._target) + ' | ' + width + ' \xD7 ' + height);
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var _this = this;

	      window.addEventListener('scroll', function () {
	        if (!_this._isShow) return;
	        _this.render();
	      }, false);
	    }
	  }, {
	    key: '_appendTpl',
	    value: function _appendTpl($container) {
	      $container.append(__webpack_require__(183)());

	      var $el = this._$el = $container.find('.eruda-elements-highlight');
	      this._$margin = $el.find('.eruda-margin');
	      this._$padding = $el.find('.eruda-padding');
	      this._$content = $el.find('.eruda-content');
	      this._$size = $el.find('.eruda-size');
	    }
	  }]);
	  return Highlight;
	}();

	exports.default = Highlight;


	function formatElName(el) {
	  var id = el.id,
	      className = el.className;


	  var ret = '<span style="color:#ee78e6">' + el.tagName.toLowerCase() + '</span>';

	  if (id !== '') ret += '<span style="color:#ffab66">#' + id + '</span>';

	  var classes = '';
	  if ((0, _util.isStr)(className)) {
	    (0, _util.each)(className.split(/\s+/g), function (val) {
	      if ((0, _util.trim)(val) === '') return;

	      classes += '.' + val;
	    });
	  }

	  ret += '<span style="color:#8ed3fb">' + classes + '</span>';

	  return ret;
	}

	/***/ }),
	/* 182 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-elements-highlight {\n  display: none;\n  position: absolute;\n  left: 0;\n  right: 0;\n  z-index: -100;\n  pointer-events: none !important; }\n  .eruda-elements-highlight * {\n    pointer-events: none !important; }\n  .eruda-elements-highlight .eruda-indicator {\n    opacity: 0.5;\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%; }\n  .eruda-elements-highlight .eruda-margin {\n    position: absolute;\n    background: #e8925b;\n    z-index: 100; }\n  .eruda-elements-highlight .eruda-border {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background: #ffcd7c;\n    z-index: 200; }\n  .eruda-elements-highlight .eruda-padding {\n    position: absolute;\n    background: #86af76;\n    z-index: 300; }\n  .eruda-elements-highlight .eruda-content {\n    position: absolute;\n    background: #5e88c1;\n    z-index: 400; }\n  .eruda-elements-highlight .eruda-size {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: #333740;\n    color: #d9d9d9;\n    font-size: 12px;\n    height: 25px;\n    line-height: 25px;\n    text-align: center;\n    padding: 0 5px;\n    white-space: nowrap;\n    overflow-x: hidden; }\n", ""]);

	// exports


	/***/ }),
	/* 183 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    return "<div class=\"eruda-elements-highlight\">\n    <div class=\"eruda-indicator\">\n        <div class=\"eruda-margin\"></div>\n        <div class=\"eruda-border\"></div>\n        <div class=\"eruda-padding\"></div>\n        <div class=\"eruda-content\"></div>\n    </div>\n    <div class=\"eruda-size\"></div>\n</div>";
	},"useData":true});

	/***/ }),
	/* 184 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Select = function (_Emitter) {
	  (0, _inherits3.default)(Select, _Emitter);

	  function Select() {
	    (0, _classCallCheck3.default)(this, Select);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Select.__proto__ || (0, _getPrototypeOf2.default)(Select)).call(this));

	    var self = _this;

	    _this._startListener = function (e) {
	      if ((0, _util.isErudaEl)(e.target)) return;

	      self._timer = setTimeout(function () {
	        self.emit('select', e.target);
	      }, 200);

	      return false;
	    };

	    _this._moveListener = function () {
	      clearTimeout(self._timer);
	    };

	    _this._clickListener = function (e) {
	      if ((0, _util.isErudaEl)(e.target)) return;

	      e.preventDefault();
	      e.stopImmediatePropagation();
	    };
	    return _this;
	  }

	  (0, _createClass3.default)(Select, [{
	    key: 'enable',
	    value: function enable() {
	      this.disable();
	      function addEvent(type, listener) {
	        document.body.addEventListener(type, listener, true);
	      }
	      addEvent('touchstart', this._startListener);
	      addEvent('touchmove', this._moveListener);
	      addEvent('click', this._clickListener);

	      return this;
	    }
	  }, {
	    key: 'disable',
	    value: function disable() {
	      function rmEvent(type, listener) {
	        document.body.removeEventListener(type, listener, true);
	      }
	      rmEvent('touchstart', this._startListener);
	      rmEvent('touchmove', this._moveListener);
	      rmEvent('click', this._clickListener);

	      return this;
	    }
	  }]);
	  return Select;
	}(_util.Emitter);

	exports.default = Select;

	/***/ }),
	/* 185 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-elements {\n  padding-bottom: 40px;\n  font-size: 14px; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-show-area {\n    overflow-y: auto;\n    -webkit-overflow-scrolling: touch;\n    height: 100%; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-parents {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    background: #fff;\n    padding: 10px;\n    white-space: nowrap;\n    border-bottom: 1px solid #eceffe;\n    cursor: pointer;\n    font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-parents li {\n      display: inline-block; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-parents li .eruda-parent {\n        display: inline-block; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-parents li:last-child {\n        margin-right: 0; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-parents .eruda-icon-chevron-right {\n      font-size: 8px; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-breadcrumb {\n    background: #fff;\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n    margin-bottom: 10px;\n    word-break: break-all;\n    padding: 10px;\n    font-size: 16px;\n    min-height: 40px;\n    border-bottom: 1px solid #eceffe;\n    cursor: pointer;\n    -webkit-transition: background 0.3s, color 0.3s;\n    transition: background 0.3s, color 0.3s; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-breadcrumb:active {\n      background: #2196f3;\n      color: #fff; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-breadcrumb:active span {\n        color: #fff; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-section {\n    margin-bottom: 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-section h2 {\n      background: #2196f3;\n      padding: 10px;\n      color: #fff;\n      font-size: 14px;\n      -webkit-transition: background 0.3s;\n      transition: background 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-section h2 .eruda-btn {\n        margin-left: 10px;\n        float: right;\n        text-align: center;\n        width: 18px;\n        height: 18px;\n        line-height: 18px;\n        font-size: 12px; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-section h2.eruda-active-effect {\n        cursor: pointer; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-section h2.eruda-active-effect:active {\n        background: #1565c0; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-children {\n    background: #fff;\n    margin-bottom: 10px !important;\n    border-bottom: 1px solid #eceffe; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-children li {\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n      cursor: default;\n      padding: 10px;\n      border-top: 1px solid #eceffe;\n      white-space: nowrap;\n      -webkit-transition: background 0.3s, color 0.3s;\n      transition: background 0.3s, color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-children li span {\n        -webkit-transition: color 0.3s;\n        transition: color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-children li.eruda-active-effect {\n        cursor: pointer; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-children li.eruda-active-effect:active {\n        background: #2196f3;\n        color: #fff; }\n        .eruda-dev-tools .eruda-tools .eruda-elements .eruda-children li.eruda-active-effect:active span {\n          color: #fff; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-attributes {\n    background: #fff;\n    font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-attributes a {\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-attributes .eruda-table-wrapper {\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-attributes table td {\n      padding: 5px 10px; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-text-content {\n    background: #fff; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-text-content .eruda-content {\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n      padding: 10px; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-style-color {\n    width: 7px;\n    height: 7px;\n    margin-right: 2px;\n    border: 1px solid #263238;\n    display: inline-block; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    background: #fff;\n    font-size: 12px;\n    padding: 10px;\n    text-align: center;\n    white-space: nowrap;\n    border-bottom: 1px solid #eceffe; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-label {\n      position: absolute;\n      margin-left: 3px;\n      padding: 0 2px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-top,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-left,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-right,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-bottom {\n      display: inline-block; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-left,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-right {\n      vertical-align: middle; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-position,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-margin,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-border,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-padding,\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-content {\n      position: relative;\n      background: #fff;\n      display: inline-block;\n      text-align: center;\n      vertical-align: middle;\n      padding: 3px;\n      margin: 3px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-position {\n      border: 1px grey dotted; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-margin {\n      border: 1px dashed;\n      background: rgba(246, 178, 107, 0.66); }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-border {\n      border: 1px #000 solid;\n      background: rgba(255, 229, 153, 0.66); }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-padding {\n      border: 1px grey dashed;\n      background: rgba(147, 196, 125, 0.55); }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-box-model .eruda-content {\n      border: 1px grey solid;\n      min-width: 100px;\n      background: rgba(111, 168, 220, 0.66); }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-computed-style {\n    background: #fff;\n    font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-computed-style a {\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-computed-style .eruda-table-wrapper {\n      overflow-y: auto;\n      -webkit-overflow-scrolling: touch;\n      max-height: 200px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-computed-style table td {\n      padding: 5px 10px; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-computed-style table td.eruda-key {\n        white-space: nowrap;\n        color: #f44336; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-styles {\n    background: #fff;\n    font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-styles .eruda-style-wrapper {\n      padding: 10px; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-styles .eruda-style-wrapper .eruda-style-rules {\n        border-radius: 4px;\n        -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n                box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n        padding: 10px;\n        background: #fff;\n        margin-bottom: 10px; }\n        .eruda-dev-tools .eruda-tools .eruda-elements .eruda-styles .eruda-style-wrapper .eruda-style-rules .eruda-rule {\n          padding-left: 2em;\n          word-break: break-all; }\n          .eruda-dev-tools .eruda-tools .eruda-elements .eruda-styles .eruda-style-wrapper .eruda-style-rules .eruda-rule a {\n            color: #2196f3; }\n          .eruda-dev-tools .eruda-tools .eruda-elements .eruda-styles .eruda-style-wrapper .eruda-style-rules .eruda-rule span {\n            color: #f44336; }\n        .eruda-dev-tools .eruda-tools .eruda-elements .eruda-styles .eruda-style-wrapper .eruda-style-rules:last-child {\n          margin-bottom: 0; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-listeners {\n    background: #fff;\n    font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-listeners .eruda-listener-wrapper {\n      padding: 10px; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-listeners .eruda-listener-wrapper .eruda-listener {\n        -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n                box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n        margin-bottom: 10px;\n        background: #fff;\n        border-radius: 4px;\n        overflow: hidden; }\n        .eruda-dev-tools .eruda-tools .eruda-elements .eruda-listeners .eruda-listener-wrapper .eruda-listener .eruda-listener-type {\n          padding: 10px;\n          background: #2196f3;\n          color: #fff; }\n        .eruda-dev-tools .eruda-tools .eruda-elements .eruda-listeners .eruda-listener-wrapper .eruda-listener .eruda-listener-content li {\n          overflow-x: auto;\n          -webkit-overflow-scrolling: touch;\n          padding: 10px;\n          border-top: none; }\n          .eruda-dev-tools .eruda-tools .eruda-elements .eruda-listeners .eruda-listener-wrapper .eruda-listener .eruda-listener-content li.eruda-capture {\n            background: #eceffe; }\n  .eruda-dev-tools .eruda-tools .eruda-elements .eruda-bottom-bar {\n    height: 40px;\n    background: #fff;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    font-size: 0;\n    border-top: 1px solid #eceffe; }\n    .eruda-dev-tools .eruda-tools .eruda-elements .eruda-bottom-bar .eruda-btn {\n      cursor: pointer;\n      text-align: center;\n      color: #707d8b;\n      font-size: 14px;\n      line-height: 40px;\n      width: 25%;\n      display: inline-block;\n      -webkit-transition: background 0.3s, color 0.3s;\n      transition: background 0.3s, color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-bottom-bar .eruda-btn:active {\n        background: #2196f3;\n        color: #fff; }\n      .eruda-dev-tools .eruda-tools .eruda-elements .eruda-bottom-bar .eruda-btn.eruda-active {\n        color: #2196f3; }\n", ""]);

	// exports


	/***/ }),
	/* 186 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return "    <ul class=\"eruda-parents\">\n"
	    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.parents : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "    </ul>\n";
	},"2":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function";

	  return "            <li>\n                <div class=\"eruda-parent\" data-idx=\""
	    + container.escapeExpression(((helper = (helper = helpers.idx || (depth0 != null ? depth0.idx : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"idx","hash":{},"data":data}) : helper)))
	    + "\">"
	    + ((stack1 = ((helper = (helper = helpers.text || (depth0 != null ? depth0.text : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"text","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "</div>\n                <span class=\"eruda-icon-chevron-right\"></span>\n            </li>\n";
	},"4":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return "    <ul class=\"eruda-children\">\n"
	    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.children : depth0),{"name":"each","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "    </ul>\n";
	},"5":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function";

	  return "            <li class=\"eruda-child "
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isCmt : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + " "
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isEl : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "\" data-idx=\""
	    + container.escapeExpression(((helper = (helper = helpers.idx || (depth0 != null ? depth0.idx : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"idx","hash":{},"data":data}) : helper)))
	    + "\">"
	    + ((stack1 = ((helper = (helper = helpers.text || (depth0 != null ? depth0.text : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"text","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "</li>\n";
	},"6":function(container,depth0,helpers,partials,data) {
	    return "eruda-green";
	},"8":function(container,depth0,helpers,partials,data) {
	    return "eruda-active-effect";
	},"10":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.attributes : depth0),{"name":"each","hash":{},"fn":container.program(11, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"11":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function";

	  return "                    <tr>\n                        <td>"
	    + container.escapeExpression(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
	    + "</td>\n                        <td>"
	    + ((stack1 = ((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"value","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "</td>\n                    </tr>\n";
	},"13":function(container,depth0,helpers,partials,data) {
	    return "                <tr>\n                    <td>Empty</td>\n                </tr>\n";
	},"15":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return "    <div class=\"eruda-styles eruda-section\">\n        <h2>Styles</h2>\n        <div class=\"eruda-style-wrapper\">\n"
	    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.styles : depth0),{"name":"each","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "        </div>\n    </div>\n";
	},"16":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {});

	  return "                <div class=\"eruda-style-rules\">\n                    <div>"
	    + container.escapeExpression(((helper = (helper = helpers.selectorText || (depth0 != null ? depth0.selectorText : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"selectorText","hash":{},"data":data}) : helper)))
	    + " {</div>\n"
	    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.style : depth0),{"name":"each","hash":{},"fn":container.program(17, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "                    <div>}</div>\n                </div>\n";
	},"17":function(container,depth0,helpers,partials,data) {
	    var stack1, helper;

	  return "                        <div class=\"eruda-rule\">\n                            <span>"
	    + container.escapeExpression(((helper = (helper = helpers.key || (data && data.key)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"key","hash":{},"data":data}) : helper)))
	    + "</span>: "
	    + ((stack1 = container.lambda(depth0, depth0)) != null ? stack1 : "")
	    + ";\n                        </div>\n";
	},"19":function(container,depth0,helpers,partials,data) {
	    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.lambda, alias3=container.escapeExpression;

	  return "    <div class=\"eruda-computed-style eruda-section\">\n        <h2 class=\"eruda-toggle-all-computed-style eruda-active-effect\">Computed Style\n            <div class=\"eruda-btn\">\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.rmDefComputedStyle : depth0),{"name":"if","hash":{},"fn":container.program(20, data, 0),"inverse":container.program(22, data, 0),"data":data})) != null ? stack1 : "")
	    + "            </div>\n        </h2>\n        <div class=\"eruda-box-model\">\n            "
	    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.position : stack1),{"name":"if","hash":{},"fn":container.program(24, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "<div class=\"eruda-margin\">\n                    <div class=\"eruda-label\">margin</div><div class=\"eruda-top\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.margin : stack1)) != null ? stack1.top : stack1), depth0))
	    + "</div><br><div class=\"eruda-left\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.margin : stack1)) != null ? stack1.left : stack1), depth0))
	    + "</div><div class=\"eruda-border\">\n                        <div class=\"eruda-label\">border</div><div class=\"eruda-top\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.border : stack1)) != null ? stack1.top : stack1), depth0))
	    + "</div><br><div class=\"eruda-left\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.border : stack1)) != null ? stack1.left : stack1), depth0))
	    + "</div><div class=\"eruda-padding\">\n                            <div class=\"eruda-label\">padding</div><div class=\"eruda-top\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.padding : stack1)) != null ? stack1.top : stack1), depth0))
	    + "</div><br><div class=\"eruda-left\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.padding : stack1)) != null ? stack1.left : stack1), depth0))
	    + "</div><div class=\"eruda-content\">\n                                <span>"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.content : stack1)) != null ? stack1.width : stack1), depth0))
	    + "</span> × <span>"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.content : stack1)) != null ? stack1.height : stack1), depth0))
	    + "</span>\n                            </div><div class=\"eruda-right\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.padding : stack1)) != null ? stack1.right : stack1), depth0))
	    + "</div><br><div class=\"eruda-bottom\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.padding : stack1)) != null ? stack1.bottom : stack1), depth0))
	    + "</div></div><div class=\"eruda-right\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.border : stack1)) != null ? stack1.right : stack1), depth0))
	    + "</div><br><div class=\"eruda-bottom\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.border : stack1)) != null ? stack1.bottom : stack1), depth0))
	    + "</div></div><div class=\"eruda-right\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.margin : stack1)) != null ? stack1.right : stack1), depth0))
	    + "</div><br><div class=\"eruda-bottom\">"
	    + alias3(alias2(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.margin : stack1)) != null ? stack1.bottom : stack1), depth0))
	    + "</div></div>"
	    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.position : stack1),{"name":"if","hash":{},"fn":container.program(26, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "\n        </div>\n        <div class=\"eruda-table-wrapper\">\n            <table>\n                <tbody>\n"
	    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.computedStyle : depth0),{"name":"each","hash":{},"fn":container.program(28, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "                </tbody>\n            </table>\n        </div>\n    </div>\n";
	},"20":function(container,depth0,helpers,partials,data) {
	    return "                    <span class=\"eruda-icon-compress\"></span>\n";
	},"22":function(container,depth0,helpers,partials,data) {
	    return "                    <span class=\"eruda-icon-expand\"></span>\n";
	},"24":function(container,depth0,helpers,partials,data) {
	    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

	  return "<div class=\"eruda-position\">\n                <div class=\"eruda-label\">position</div><div class=\"eruda-top\">"
	    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.position : stack1)) != null ? stack1.top : stack1), depth0))
	    + "</div><br><div class=\"eruda-left\">"
	    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.position : stack1)) != null ? stack1.left : stack1), depth0))
	    + "</div>";
	},"26":function(container,depth0,helpers,partials,data) {
	    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

	  return "<div class=\"eruda-right\">"
	    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.position : stack1)) != null ? stack1.right : stack1), depth0))
	    + "</div><br><div class=\"eruda-bottom\">"
	    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.boxModel : depth0)) != null ? stack1.position : stack1)) != null ? stack1.bottom : stack1), depth0))
	    + "</div></div>";
	},"28":function(container,depth0,helpers,partials,data) {
	    var stack1, helper;

	  return "                    <tr>\n                        <td class=\"eruda-key\">"
	    + container.escapeExpression(((helper = (helper = helpers.key || (data && data.key)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"key","hash":{},"data":data}) : helper)))
	    + "</td>\n                        <td>"
	    + ((stack1 = container.lambda(depth0, depth0)) != null ? stack1 : "")
	    + "</td>\n                    </tr>\n";
	},"30":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return "    <div class=\"eruda-listeners eruda-section\">\n        <h2>Event Listeners</h2>\n        <div class=\"eruda-listener-wrapper\">\n"
	    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.listeners : depth0),{"name":"each","hash":{},"fn":container.program(31, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "        </div>\n    </div>\n";
	},"31":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {});

	  return "               <div class=\"eruda-listener\">\n                   <div class=\"eruda-listener-type\">"
	    + container.escapeExpression(((helper = (helper = helpers.key || (data && data.key)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "</div>\n                   <ul class=\"eruda-listener-content\">\n"
	    + ((stack1 = helpers.each.call(alias1,depth0,{"name":"each","hash":{},"fn":container.program(32, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "                   </ul>\n               </div>\n";
	},"32":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {});

	  return "                           <li class=\""
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.useCapture : depth0),{"name":"if","hash":{},"fn":container.program(33, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "\">"
	    + container.escapeExpression(((helper = (helper = helpers.listenerStr || (depth0 != null ? depth0.listenerStr : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"listenerStr","hash":{},"data":data}) : helper)))
	    + "</li>\n";
	},"33":function(container,depth0,helpers,partials,data) {
	    return "eruda-capture";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {});

	  return ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.parents : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "<div class=\"eruda-breadcrumb\">\n    "
	    + ((stack1 = ((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "\n</div>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.children : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "<div class=\"eruda-attributes eruda-section\">\n    <h2>Attributes</h2>\n    <div class=\"eruda-table-wrapper\">\n        <table>\n            <tbody>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.attributes : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.program(13, data, 0),"data":data})) != null ? stack1 : "")
	    + "            </tbody>\n        </table>\n    </div>\n</div>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.styles : depth0),{"name":"if","hash":{},"fn":container.program(15, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.computedStyle : depth0),{"name":"if","hash":{},"fn":container.program(19, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.listeners : depth0),{"name":"if","hash":{},"fn":container.program(30, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"useData":true});

	/***/ }),
	/* 187 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    return "<div class=\"eruda-bottom-bar\">\n    <div class=\"eruda-btn eruda-select\">\n        <span class=\"eruda-icon eruda-icon-hand-pointer-o\"></span>\n    </div>\n    <div class=\"eruda-btn eruda-refresh\">\n        <span class=\"eruda-icon eruda-icon-repeat\"></span>\n    </div>\n    <div class=\"eruda-btn eruda-highlight\">\n        <span class=\"eruda-icon eruda-icon-eye\"></span>\n    </div>\n    <div class=\"eruda-btn eruda-reset\">\n        <span class=\"eruda-icon eruda-icon-rotate-left\"></span>\n    </div>\n</div>";
	},"useData":true});

	/***/ }),
	/* 188 */
	/***/ (function(module, exports) {

	module.exports = {"align-content":"stretch","align-items":"stretch","align-self":"start","alignment-baseline":"auto","all":"","animation":"none 0s ease 0s 1 normal none running","animation-delay":"0s","animation-direction":"normal","animation-duration":"0s","animation-fill-mode":"none","animation-iteration-count":"1","animation-name":"none","animation-play-state":"running","animation-timing-function":"ease","backface-visibility":"visible","background":"rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box","background-attachment":"scroll","background-blend-mode":"normal","background-clip":"border-box","background-color":"rgba(0, 0, 0, 0)","background-image":"none","background-origin":"padding-box","background-position":"0% 0%","background-position-x":"0%","background-position-y":"0%","background-repeat":"repeat","background-repeat-x":"","background-repeat-y":"","background-size":"auto","baseline-shift":"0px","border":"0px none rgb(0, 0, 0)","border-bottom":"0px none rgb(0, 0, 0)","border-bottom-color":"rgb(0, 0, 0)","border-bottom-left-radius":"0px","border-bottom-right-radius":"0px","border-bottom-style":"none","border-bottom-width":"0px","border-collapse":"separate","border-color":"rgb(0, 0, 0)","border-image":"none","border-image-outset":"0px","border-image-repeat":"stretch","border-image-slice":"100%","border-image-source":"none","border-image-width":"1","border-left":"0px none rgb(0, 0, 0)","border-left-color":"rgb(0, 0, 0)","border-left-style":"none","border-left-width":"0px","border-radius":"0px","border-right":"0px none rgb(0, 0, 0)","border-right-color":"rgb(0, 0, 0)","border-right-style":"none","border-right-width":"0px","border-spacing":"0px 0px","border-style":"none","border-top":"0px none rgb(0, 0, 0)","border-top-color":"rgb(0, 0, 0)","border-top-left-radius":"0px","border-top-right-radius":"0px","border-top-style":"none","border-top-width":"0px","border-width":"0px","bottom":"auto","box-shadow":"none","box-sizing":"content-box","buffered-rendering":"auto","caption-side":"top","clear":"none","clip":"auto","clip-path":"none","clip-rule":"nonzero","color":"rgb(0, 0, 0)","color-interpolation":"sRGB","color-interpolation-filters":"linearRGB","color-rendering":"auto","content":"","counter-increment":"none","counter-reset":"none","cursor":"auto","cx":"0px","cy":"0px","direction":"ltr","display":"block","dominant-baseline":"auto","empty-cells":"show","fill":"rgb(0, 0, 0)","fill-opacity":"1","fill-rule":"nonzero","filter":"none","flex":"0 1 auto","flex-basis":"auto","flex-direction":"row","flex-flow":"row nowrap","flex-grow":"0","flex-shrink":"1","flex-wrap":"nowrap","float":"none","flood-color":"rgb(0, 0, 0)","flood-opacity":"1","font":"normal normal normal normal 16px / normal simsun","font-family":"Simsun","font-feature-settings":"normal","font-kerning":"auto","font-size":"16px","font-stretch":"normal","font-style":"normal","font-variant":"normal","font-variant-ligatures":"normal","font-weight":"normal","image-rendering":"auto","isolation":"auto","justify-content":"flex-start","left":"auto","letter-spacing":"normal","lighting-color":"rgb(255, 255, 255)","line-height":"normal","list-style":"disc outside none","list-style-image":"none","list-style-position":"outside","list-style-type":"disc","margin":"0px","margin-bottom":"0px","margin-left":"0px","margin-right":"0px","margin-top":"0px","marker":"","marker-end":"none","marker-mid":"none","marker-start":"none","mask":"none","mask-type":"luminance","max-height":"none","max-width":"none","max-zoom":"","min-height":"0px","min-width":"0px","min-zoom":"","mix-blend-mode":"normal","motion":"none 0px auto 0deg","motion-offset":"0px","motion-path":"none","motion-rotation":"auto 0deg","object-fit":"fill","object-position":"50% 50%","opacity":"1","order":"0","orientation":"","orphans":"auto","outline":"rgb(0, 0, 0) none 0px","outline-color":"rgb(0, 0, 0)","outline-offset":"0px","outline-style":"none","outline-width":"0px","overflow":"visible","overflow-wrap":"normal","overflow-x":"visible","overflow-y":"visible","padding":"0px","padding-bottom":"0px","padding-left":"0px","padding-right":"0px","padding-top":"0px","page":"","page-break-after":"auto","page-break-before":"auto","page-break-inside":"auto","paint-order":"fill stroke markers","perspective":"none","pointer-events":"auto","position":"static","quotes":"","r":"0px","resize":"none","right":"auto","rx":"0px","ry":"0px","shape-image-threshold":"0","shape-margin":"0px","shape-outside":"none","shape-rendering":"auto","size":"","speak":"normal","src":"","stop-color":"rgb(0, 0, 0)","stop-opacity":"1","stroke":"none","stroke-dasharray":"none","stroke-dashoffset":"0px","stroke-linecap":"butt","stroke-linejoin":"miter","stroke-miterlimit":"4","stroke-opacity":"1","stroke-width":"1px","tab-size":"8","table-layout":"auto","text-align":"start","text-align-last":"auto","text-anchor":"start","text-combine-upright":"none","text-decoration":"none","text-indent":"0px","text-orientation":"mixed","text-overflow":"clip","text-rendering":"auto","text-shadow":"none","text-transform":"none","top":"auto","touch-action":"auto","transform":"none","transform-style":"flat","transition":"all 0s ease 0s","transition-delay":"0s","transition-duration":"0s","transition-property":"all","transition-timing-function":"ease","unicode-bidi":"normal","unicode-range":"","user-zoom":"","vector-effect":"none","vertical-align":"baseline","visibility":"visible","-webkit-app-region":"no-drag","-webkit-appearance":"none","-webkit-background-clip":"border-box","-webkit-background-composite":"source-over","-webkit-background-origin":"padding-box","-webkit-border-after":"0px none rgb(0, 0, 0)","-webkit-border-after-color":"rgb(0, 0, 0)","-webkit-border-after-style":"none","-webkit-border-after-width":"0px","-webkit-border-before":"0px none rgb(0, 0, 0)","-webkit-border-before-color":"rgb(0, 0, 0)","-webkit-border-before-style":"none","-webkit-border-before-width":"0px","-webkit-border-end":"0px none rgb(0, 0, 0)","-webkit-border-end-color":"rgb(0, 0, 0)","-webkit-border-end-style":"none","-webkit-border-end-width":"0px","-webkit-border-horizontal-spacing":"0px","-webkit-border-image":"none","-webkit-border-start":"0px none rgb(0, 0, 0)","-webkit-border-start-color":"rgb(0, 0, 0)","-webkit-border-start-style":"none","-webkit-border-start-width":"0px","-webkit-border-vertical-spacing":"0px","-webkit-box-align":"stretch","-webkit-box-decoration-break":"slice","-webkit-box-direction":"normal","-webkit-box-flex":"0","-webkit-box-flex-group":"1","-webkit-box-lines":"single","-webkit-box-ordinal-group":"1","-webkit-box-orient":"horizontal","-webkit-box-pack":"start","-webkit-box-reflect":"none","-webkit-clip-path":"none","-webkit-column-break-after":"auto","-webkit-column-break-before":"auto","-webkit-column-break-inside":"auto","-webkit-column-count":"auto","-webkit-column-gap":"normal","-webkit-column-rule":"0px none rgb(0, 0, 0)","-webkit-column-rule-color":"rgb(0, 0, 0)","-webkit-column-rule-style":"none","-webkit-column-rule-width":"0px","-webkit-column-span":"none","-webkit-column-width":"auto","-webkit-columns":"auto auto","-webkit-filter":"none","-webkit-font-size-delta":"","-webkit-font-smoothing":"auto","-webkit-highlight":"none","-webkit-hyphenate-character":"auto","-webkit-line-break":"auto","-webkit-line-clamp":"none","-webkit-locale":"auto","-webkit-logical-height":"8px","-webkit-logical-width":"980px","-webkit-margin-after":"0px","-webkit-margin-after-collapse":"collapse","-webkit-margin-before":"0px","-webkit-margin-before-collapse":"collapse","-webkit-margin-bottom-collapse":"collapse","-webkit-margin-collapse":"","-webkit-margin-end":"0px","-webkit-margin-start":"0px","-webkit-margin-top-collapse":"collapse","-webkit-mask":"","-webkit-mask-box-image":"none","-webkit-mask-box-image-outset":"0px","-webkit-mask-box-image-repeat":"stretch","-webkit-mask-box-image-slice":"0 fill","-webkit-mask-box-image-source":"none","-webkit-mask-box-image-width":"auto","-webkit-mask-clip":"border-box","-webkit-mask-composite":"source-over","-webkit-mask-image":"none","-webkit-mask-origin":"border-box","-webkit-mask-position":"0% 0%","-webkit-mask-position-x":"0%","-webkit-mask-position-y":"0%","-webkit-mask-repeat":"repeat","-webkit-mask-repeat-x":"","-webkit-mask-repeat-y":"","-webkit-mask-size":"auto","-webkit-max-logical-height":"none","-webkit-max-logical-width":"none","-webkit-min-logical-height":"0px","-webkit-min-logical-width":"0px","-webkit-padding-after":"0px","-webkit-padding-before":"0px","-webkit-padding-end":"0px","-webkit-padding-start":"0px","-webkit-perspective-origin-x":"","-webkit-perspective-origin-y":"","-webkit-print-color-adjust":"economy","-webkit-rtl-ordering":"logical","-webkit-ruby-position":"before","-webkit-tap-highlight-color":"rgba(0, 0, 0, 0.180392)","-webkit-text-combine":"none","-webkit-text-decorations-in-effect":"none","-webkit-text-emphasis":"","-webkit-text-emphasis-color":"rgb(0, 0, 0)","-webkit-text-emphasis-position":"over","-webkit-text-emphasis-style":"none","-webkit-text-fill-color":"rgb(0, 0, 0)","-webkit-text-orientation":"vertical-right","-webkit-text-security":"none","-webkit-text-stroke":"","-webkit-text-stroke-color":"rgb(0, 0, 0)","-webkit-text-stroke-width":"0px","-webkit-transform-origin-x":"","-webkit-transform-origin-y":"","-webkit-transform-origin-z":"","-webkit-user-drag":"auto","-webkit-user-modify":"read-only","-webkit-user-select":"text","-webkit-writing-mode":"horizontal-tb","white-space":"normal","widows":"1","will-change":"auto","word-break":"normal","word-spacing":"0px","word-wrap":"normal","writing-mode":"horizontal-tb","x":"0px","y":"0px","z-index":"0","zoom":"1"}

	/***/ }),
	/* 189 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _defSnippets = __webpack_require__(190);

	var _defSnippets2 = _interopRequireDefault(_defSnippets);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Snippets = function (_Tool) {
	  (0, _inherits3.default)(Snippets, _Tool);

	  function Snippets() {
	    (0, _classCallCheck3.default)(this, Snippets);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Snippets.__proto__ || (0, _getPrototypeOf2.default)(Snippets)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(192));

	    _this.name = 'snippets';

	    _this._snippets = [];
	    _this._tpl = __webpack_require__(193);
	    return _this;
	  }

	  (0, _createClass3.default)(Snippets, [{
	    key: 'init',
	    value: function init($el) {
	      (0, _get3.default)(Snippets.prototype.__proto__ || (0, _getPrototypeOf2.default)(Snippets.prototype), 'init', this).call(this, $el);

	      this._bindEvent();
	      this._addDefSnippets();
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _get3.default)(Snippets.prototype.__proto__ || (0, _getPrototypeOf2.default)(Snippets.prototype), 'destroy', this).call(this);

	      _util.evalCss.remove(this._style);
	    }
	  }, {
	    key: 'add',
	    value: function add(name, fn, desc) {
	      this._snippets.push({ name: name, fn: fn, desc: desc });

	      this._render();

	      return this;
	    }
	  }, {
	    key: 'remove',
	    value: function remove(name) {
	      var snippets = this._snippets;

	      for (var i = 0, len = snippets.length; i < len; i++) {
	        if (snippets[i].name === name) snippets.splice(i, 1);
	      }

	      this._render();

	      return this;
	    }
	  }, {
	    key: 'run',
	    value: function run(name) {
	      var snippets = this._snippets;

	      for (var i = 0, len = snippets.length; i < len; i++) {
	        if (snippets[i].name === name) this._run(i);
	      }

	      return this;
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      this._snippets = [];
	      this._render();

	      return this;
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var self = this;

	      this._$el.on('click', '.eruda-run', function () {
	        var idx = (0, _util.$)(this).data('idx');

	        self._run(idx);
	      });
	    }
	  }, {
	    key: '_run',
	    value: function _run(idx) {
	      this._snippets[idx].fn.call(null);
	    }
	  }, {
	    key: '_addDefSnippets',
	    value: function _addDefSnippets() {
	      var _this2 = this;

	      (0, _util.each)(_defSnippets2.default, function (snippet) {
	        _this2.add(snippet.name, snippet.fn, snippet.desc);
	      });
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      this._renderHtml(this._tpl({
	        snippets: this._snippets
	      }));
	    }
	  }, {
	    key: '_renderHtml',
	    value: function _renderHtml(html) {
	      if (html === this._lastHtml) return;
	      this._lastHtml = html;
	      this._$el.html(html);
	    }
	  }]);
	  return Snippets;
	}(_Tool3.default);

	exports.default = Snippets;

	/***/ }),
	/* 190 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _stringify = __webpack_require__(34);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _logger = __webpack_require__(37);

	var _logger2 = _interopRequireDefault(_logger);

	var _emitter = __webpack_require__(27);

	var _emitter2 = _interopRequireDefault(_emitter);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var style = null;

	exports.default = [{
	  name: 'Border All',
	  fn: function fn() {
	    if (style) {
	      _util.evalCss.remove(style);
	      style = null;
	      return;
	    }

	    style = (0, _util.evalCss)('* { outline: 2px dashed #707d8b; outline-offset: -3px; }', document.head);
	  },

	  desc: 'Add color borders to all elements'
	}, {
	  name: 'Refresh Page',
	  fn: function fn() {
	    var url = new _util.Url();
	    url.setQuery('timestamp', (0, _util.now)());

	    window.location.replace(url.toString());
	  },

	  desc: 'Add timestamp to url and refresh'
	}, {
	  name: 'Search Text',
	  fn: function fn() {
	    var keyword = prompt('Enter the text');

	    search(keyword);
	  },

	  desc: 'Highlight given text on page'
	}, {
	  name: 'Edit Page',
	  fn: function fn() {
	    var body = document.body;

	    body.contentEditable = body.contentEditable !== 'true';
	  },

	  desc: 'Toggle body contentEditable'
	}, {
	  name: 'Load Fps Plugin',
	  fn: function fn() {
	    loadPlugin('fps');
	  },

	  desc: 'Display page fps'
	}, {
	  name: 'Load Features Plugin',
	  fn: function fn() {
	    loadPlugin('features');
	  },

	  desc: 'Browser feature detections'
	}, {
	  name: 'Load Timing Plugin',
	  fn: function fn() {
	    loadPlugin('timing');
	  },

	  desc: 'Show performance and resource timing'
	}, {
	  name: 'Load Memory Plugin',
	  fn: function fn() {
	    loadPlugin('memory');
	  },

	  desc: 'Display memory'
	}, {
	  name: 'Load Code Plugin',
	  fn: function fn() {
	    loadPlugin('code');
	  },

	  desc: 'Edit and run JavaScript'
	}, {
	  name: 'Load Benchmark Plugin',
	  fn: function fn() {
	    loadPlugin('benchmark');
	  },

	  desc: 'Run JavaScript benchmarks'
	}, {
	  name: 'Load Geolocation Plugin',
	  fn: function fn() {
	    loadPlugin('geolocation');
	  },

	  desc: 'Test geolocation'
	}, {
	  name: 'Restore Settings',
	  fn: function fn() {
	    var store = (0, _util.safeStorage)('local');

	    var data = JSON.parse((0, _stringify2.default)(store));

	    (0, _util.each)(data, function (val, key) {
	      if (!(0, _util.isStr)(val)) return;

	      if ((0, _util.startWith)(key, 'eruda')) store.removeItem(key);
	    });

	    window.location.reload();
	  },

	  desc: 'Restore defaults and reload'
	}];


	(0, _util.evalCss)(__webpack_require__(191), document.head);

	function search(text) {
	  var root = document.body,
	      regText = new RegExp(text, 'ig');

	  traverse(root, function (node) {
	    var $node = (0, _util.$)(node);

	    if (!$node.hasClass('eruda-search-highlight-block')) return;

	    return document.createTextNode($node.text());
	  });

	  traverse(root, function (node) {
	    if (node.nodeType !== 3) return;

	    var val = node.nodeValue;
	    val = val.replace(regText, function (match) {
	      return '<span class="eruda-keyword">' + match + '</span>';
	    });
	    if (val === node.nodeValue) return;

	    var $ret = (0, _util.$)(document.createElement('div'));

	    $ret.html(val);
	    $ret.addClass('eruda-search-highlight-block');

	    return $ret.get(0);
	  });
	}

	function traverse(root, processor) {
	  var childNodes = root.childNodes;

	  if ((0, _util.isErudaEl)(root)) return;

	  for (var i = 0, len = childNodes.length; i < len; i++) {
	    var newNode = traverse(childNodes[i], processor);
	    if (newNode) root.replaceChild(newNode, childNodes[i]);
	  }

	  return processor(root);
	}

	function loadPlugin(name) {
	  var globalName = 'eruda' + (0, _util.upperFirst)(name);
	  if (window[globalName]) return;

	  (0, _util.loadJs)('//cdn.jsdelivr.net/npm/eruda-' + name + '@' + pluginVersion[name], function (isLoaded) {
	    if (!isLoaded || !window[globalName]) return _logger2.default.error('Fail to load plugin ' + name);

	    _emitter2.default.emit(_emitter2.default.ADD, window[globalName]);
	    _emitter2.default.emit(_emitter2.default.SHOW, name);
	  });
	}

	var pluginVersion = {
	  fps: '1.0.2',
	  features: '1.0.2',
	  timing: '1.1.1',
	  memory: '1.0.1',
	  code: '1.0.0',
	  benchmark: '1.0.0',
	  geolocation: '1.1.0'
	};

	/***/ }),
	/* 191 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-search-highlight-block {\n  display: inline; }\n  .eruda-search-highlight-block .eruda-keyword {\n    background: #ffc107;\n    color: #fff; }\n", ""]);

	// exports


	/***/ }),
	/* 192 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-snippets {\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  padding: 10px; }\n  .eruda-dev-tools .eruda-tools .eruda-snippets .eruda-section {\n    margin-bottom: 10px;\n    border-radius: 4px;\n    -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n    cursor: pointer; }\n    .eruda-dev-tools .eruda-tools .eruda-snippets .eruda-section:active .eruda-name {\n      background: #263238; }\n    .eruda-dev-tools .eruda-tools .eruda-snippets .eruda-section:active .eruda-description {\n      background: #eceffe; }\n    .eruda-dev-tools .eruda-tools .eruda-snippets .eruda-section .eruda-name {\n      padding: 10px;\n      color: #fff;\n      background: #707d8b;\n      -webkit-transition: background 0.3s;\n      transition: background 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-snippets .eruda-section .eruda-name .eruda-btn {\n        margin-left: 10px;\n        float: right;\n        text-align: center;\n        width: 18px;\n        height: 18px;\n        line-height: 18px;\n        font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-snippets .eruda-section .eruda-description {\n      background: #fff;\n      padding: 10px;\n      -webkit-transition: background 0.3s;\n      transition: background 0.3s; }\n", ""]);

	// exports


	/***/ }),
	/* 193 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var alias1=container.lambda, alias2=container.escapeExpression;

	  return "    <div class=\"eruda-section eruda-run\" data-idx=\""
	    + alias2(alias1((data && data.index), depth0))
	    + "\">\n        <h2 class=\"eruda-name\">"
	    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
	    + "\n            <div class=\"eruda-btn\">\n                <span class=\"eruda-icon-play\"></span>\n            </div>\n        </h2>\n        <div class=\"eruda-description\">\n            "
	    + alias2(alias1((depth0 != null ? depth0.desc : depth0), depth0))
	    + "\n        </div>\n    </div>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.snippets : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"useData":true});

	/***/ }),
	/* 194 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getIterator2 = __webpack_require__(77);

	var _getIterator3 = _interopRequireDefault(_getIterator2);

	var _stringify = __webpack_require__(34);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Resources = function (_Tool) {
	  (0, _inherits3.default)(Resources, _Tool);

	  function Resources() {
	    (0, _classCallCheck3.default)(this, Resources);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Resources.__proto__ || (0, _getPrototypeOf2.default)(Resources)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(195));

	    _this.name = 'resources';
	    _this._localStoreData = [];
	    _this._hideErudaSetting = false;
	    _this._sessionStoreData = [];
	    _this._cookieData = [];
	    _this._scriptData = [];
	    _this._stylesheetData = [];
	    _this._iframeData = [];
	    _this._imageData = [];
	    _this._observeElement = true;
	    _this._tpl = __webpack_require__(196);
	    return _this;
	  }

	  (0, _createClass3.default)(Resources, [{
	    key: 'init',
	    value: function init($el, container) {
	      (0, _get3.default)(Resources.prototype.__proto__ || (0, _getPrototypeOf2.default)(Resources.prototype), 'init', this).call(this, $el);

	      this._container = container;

	      this.refresh();
	      this._bindEvent();
	      this._initObserver();
	      this._initCfg();
	    }
	  }, {
	    key: 'refresh',
	    value: function refresh() {
	      return this.refreshLocalStorage().refreshSessionStorage().refreshCookie().refreshScript().refreshStylesheet().refreshIframe().refreshImage()._render();
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _get3.default)(Resources.prototype.__proto__ || (0, _getPrototypeOf2.default)(Resources.prototype), 'destroy', this).call(this);

	      this._disableObserver();
	      _util.evalCss.remove(this._style);
	    }
	  }, {
	    key: 'refreshScript',
	    value: function refreshScript() {
	      var scriptData = [];

	      (0, _util.$)('script').each(function () {
	        var src = this.src;

	        if (src !== '') scriptData.push(src);
	      });

	      scriptData = (0, _util.unique)(scriptData);

	      this._scriptData = scriptData;

	      return this;
	    }
	  }, {
	    key: 'refreshStylesheet',
	    value: function refreshStylesheet() {
	      var stylesheetData = [];

	      (0, _util.$)('link').each(function () {
	        if (this.rel !== 'stylesheet') return;

	        stylesheetData.push(this.href);
	      });

	      stylesheetData = (0, _util.unique)(stylesheetData);

	      this._stylesheetData = stylesheetData;

	      return this;
	    }
	  }, {
	    key: 'refreshIframe',
	    value: function refreshIframe() {
	      var iframeData = [];

	      (0, _util.$)('iframe').each(function () {
	        var $this = (0, _util.$)(this),
	            src = $this.attr('src');

	        if (src) iframeData.push(src);
	      });

	      iframeData = (0, _util.unique)(iframeData);

	      this._iframeData = iframeData;

	      return this;
	    }
	  }, {
	    key: 'refreshLocalStorage',
	    value: function refreshLocalStorage() {
	      this._refreshStorage('local');

	      return this;
	    }
	  }, {
	    key: 'refreshSessionStorage',
	    value: function refreshSessionStorage() {
	      this._refreshStorage('session');

	      return this;
	    }
	  }, {
	    key: '_refreshStorage',
	    value: function _refreshStorage(type) {
	      var _this2 = this;

	      var store = (0, _util.safeStorage)(type, false);

	      if (!store) return;

	      var storeData = [];

	      // Mobile safari is not able to loop through localStorage directly.
	      store = JSON.parse((0, _stringify2.default)(store));

	      (0, _util.each)(store, function (val, key) {
	        // According to issue 20, not all values are guaranteed to be string.
	        if (!(0, _util.isStr)(val)) return;

	        if (_this2._hideErudaSetting) {
	          if ((0, _util.startWith)(key, 'eruda') || key === 'active-eruda') return;
	        }

	        storeData.push({
	          key: key,
	          val: sliceStr(val, 200)
	        });
	      });

	      this['_' + type + 'StoreData'] = storeData;
	    }
	  }, {
	    key: 'refreshCookie',
	    value: function refreshCookie() {
	      var cookieData = [];

	      var cookie = document.cookie;
	      if ((0, _util.trim)(cookie) !== '') {
	        (0, _util.each)(document.cookie.split(';'), function (val, t) {
	          val = val.split('=');
	          t = (0, _util.decodeUriComponent)(val[1]);
	          cookieData.push({
	            key: (0, _util.trim)(val[0]),
	            val: t
	          });
	        });
	      }

	      this._cookieData = cookieData;

	      return this;
	    }
	  }, {
	    key: 'refreshImage',
	    value: function refreshImage() {
	      var imageData = [];

	      var performance = this._performance = window.webkitPerformance || window.performance;
	      if (performance && performance.getEntries) {
	        var entries = this._performance.getEntries();
	        entries.forEach(function (entry) {
	          if (entry.initiatorType === 'img' || isImg(entry.name)) {
	            imageData.push(entry.name);
	          }
	        });
	      } else {
	        (0, _util.$)('img').each(function () {
	          var $this = (0, _util.$)(this),
	              src = $this.attr('src');

	          if ($this.data('exclude') === 'true') return;

	          imageData.push(src);
	        });
	      }

	      imageData = (0, _util.unique)(imageData);
	      imageData.sort();
	      this._imageData = imageData;

	      return this;
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      (0, _get3.default)(Resources.prototype.__proto__ || (0, _getPrototypeOf2.default)(Resources.prototype), 'show', this).call(this);
	      if (this._observeElement) this._enableObserver();

	      return this.refresh();
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this._disableObserver();

	      return (0, _get3.default)(Resources.prototype.__proto__ || (0, _getPrototypeOf2.default)(Resources.prototype), 'hide', this).call(this);
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var _this3 = this;

	      var self = this,
	          $el = this._$el,
	          container = this._container;

	      $el.on('click', '.eruda-refresh-local-storage', function () {
	        return _this3.refreshLocalStorage()._render();
	      }).on('click', '.eruda-refresh-session-storage', function () {
	        return _this3.refreshSessionStorage()._render();
	      }).on('click', '.eruda-refresh-cookie', function () {
	        return _this3.refreshCookie()._render();
	      }).on('click', '.eruda-refresh-script', function () {
	        return _this3.refreshScript()._render();
	      }).on('click', '.eruda-refresh-stylesheet', function () {
	        return _this3.refreshStylesheet()._render();
	      }).on('click', '.eruda-refresh-iframe', function () {
	        return _this3.refreshIframe()._render();
	      }).on('click', '.eruda-refresh-image', function () {
	        return _this3.refreshImage()._render();
	      }).on('click', '.eruda-delete-storage', function () {
	        var $this = (0, _util.$)(this),
	            key = $this.data('key'),
	            type = $this.data('type');

	        if (type === 'local') {
	          localStorage.removeItem(key);
	          self.refreshLocalStorage()._render();
	        } else {
	          sessionStorage.removeItem(key);
	          self.refreshSessionStorage()._render();
	        }
	      }).on('click', '.eruda-delete-cookie', function () {
	        var key = (0, _util.$)(this).data('key');

	        (0, _util.rmCookie)(key);
	        self.refreshCookie()._render();
	      }).on('click', '.eruda-clear-storage', function () {
	        var type = (0, _util.$)(this).data('type');

	        if (type === 'local') {
	          (0, _util.each)(self._localStoreData, function (val) {
	            return localStorage.removeItem(val.key);
	          });
	          self.refreshLocalStorage()._render();
	        } else {
	          (0, _util.each)(self._sessionStoreData, function (val) {
	            return sessionStorage.removeItem(val.key);
	          });
	          self.refreshSessionStorage()._render();
	        }
	      }).on('click', '.eruda-clear-cookie', function () {
	        (0, _util.each)(_this3._cookieData, function (val) {
	          return (0, _util.rmCookie)(val.key);
	        });
	        _this3.refreshCookie()._render();
	      }).on('click', '.eruda-storage-val', function () {
	        var $this = (0, _util.$)(this),
	            key = $this.data('key'),
	            type = $this.data('type');

	        var val = type === 'local' ? localStorage.getItem(key) : sessionStorage.getItem(key);

	        try {
	          showSources('json', JSON.parse(val));
	        } catch (e) {
	          showSources('raw', val);
	        }
	      }).on('click', '.eruda-img-link', function () {
	        var src = (0, _util.$)(this).attr('src');

	        showSources('img', src);
	      }).on('click', '.eruda-css-link', linkFactory('css')).on('click', '.eruda-js-link', linkFactory('js')).on('click', '.eruda-iframe-link', linkFactory('iframe'));

	      _util.orientation.on('change', function () {
	        return _this3._render();
	      });

	      function showSources(type, data) {
	        var sources = container.get('sources');
	        if (!sources) return;

	        sources.set(type, data);

	        container.showTool('sources');

	        return true;
	      }

	      function linkFactory(type) {
	        return function (e) {
	          if (!container.get('sources')) return;
	          e.preventDefault();

	          var url = (0, _util.$)(this).attr('href');

	          if (type === 'iframe' || (0, _util.isCrossOrig)(url)) {
	            showSources('iframe', url);
	          } else {
	            (0, _util.ajax)({
	              url: url,
	              success: function success(data) {
	                showSources(type, data);
	              },
	              dataType: 'raw'
	            });
	          }
	        };
	      }
	    }
	  }, {
	    key: '_initCfg',
	    value: function _initCfg() {
	      var _this4 = this;

	      var cfg = this.config = _Settings2.default.createCfg('resources', {
	        hideErudaSetting: true,
	        observeElement: true
	      });

	      if (cfg.get('hideErudaSetting')) this._hideErudaSetting = true;
	      if (!cfg.get('observeElement')) this._observeElement = false;

	      cfg.on('change', function (key, val) {
	        switch (key) {
	          case 'hideErudaSetting':
	            _this4._hideErudaSetting = val;
	            return;
	          case 'observeElement':
	            _this4._observeElement = val;
	            return val ? _this4._enableObserver() : _this4._disableObserver();
	        }
	      });

	      var settings = this._container.get('settings');
	      settings.text('Resources').switch(cfg, 'hideErudaSetting', 'Hide Eruda Setting').switch(cfg, 'observeElement', 'Auto Refresh Elements').separator();
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      var cookieData = this._cookieData,
	          scriptData = this._scriptData,
	          stylesheetData = this._stylesheetData,
	          imageData = this._imageData;

	      this._renderHtml(this._tpl({
	        localStoreData: this._localStoreData,
	        sessionStoreData: this._sessionStoreData,
	        cookieData: cookieData,
	        cookieState: getState('cookie', cookieData.length),
	        scriptData: scriptData,
	        scriptState: getState('script', scriptData.length),
	        stylesheetData: stylesheetData,
	        stylesheetState: getState('stylesheet', stylesheetData.length),
	        iframeData: this._iframeData,
	        imageData: imageData,
	        imageState: getState('image', imageData.length)
	      }));
	    }
	  }, {
	    key: '_renderHtml',
	    value: function _renderHtml(html) {
	      if (html === this._lastHtml) return;
	      this._lastHtml = html;
	      this._$el.html(html);
	    }
	  }, {
	    key: '_initObserver',
	    value: function _initObserver() {
	      var _this5 = this;

	      this._observer = new _util.MutationObserver(function (mutations) {
	        var needToRender = false;
	        (0, _util.each)(mutations, function (mutation) {
	          if (_this5._handleMutation(mutation)) needToRender = true;
	        });
	        if (needToRender) _this5._render();
	      });
	    }
	  }, {
	    key: '_handleMutation',
	    value: function _handleMutation(mutation) {
	      var _this6 = this;

	      if ((0, _util.isErudaEl)(mutation.target)) return;

	      var checkEl = function checkEl(el) {
	        var tagName = getLowerCaseTagName(el);
	        switch (tagName) {
	          case 'script':
	            _this6.refreshScript();
	            return true;
	          case 'img':
	            _this6.refreshImage();
	            return true;
	          case 'link':
	            _this6.refreshStylesheet();
	            return true;
	        }

	        return false;
	      };

	      if (mutation.type === 'attributes') {
	        if (checkEl(mutation.target)) return true;
	      } else if (mutation.type === 'childList') {
	        if (checkEl(mutation.target)) return true;
	        var nodes = (0, _util.toArr)(mutation.addedNodes);
	        nodes = (0, _util.concat)(nodes, (0, _util.toArr)(mutation.removedNodes));

	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;

	        try {
	          for (var _iterator = (0, _getIterator3.default)(nodes), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var node = _step.value;

	            if (checkEl(node)) return true;
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	              _iterator.return();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	      }

	      return false;
	    }
	  }, {
	    key: '_enableObserver',
	    value: function _enableObserver() {
	      this._observer.observe(document.documentElement, {
	        attributes: true,
	        childList: true,
	        subtree: true
	      });
	    }
	  }, {
	    key: '_disableObserver',
	    value: function _disableObserver() {
	      this._observer.disconnect();
	    }
	  }]);
	  return Resources;
	}(_Tool3.default);

	exports.default = Resources;


	function getState(type, len) {
	  if (len === 0) return '';

	  var warn = 0,
	      danger = 0;

	  switch (type) {
	    case 'cookie':
	      warn = 30;
	      danger = 60;
	      break;
	    case 'script':
	      warn = 5;
	      danger = 10;
	      break;
	    case 'stylesheet':
	      warn = 4;
	      danger = 8;
	      break;
	    case 'image':
	      warn = 50;
	      danger = 100;
	      break;
	  }

	  if (len >= danger) return 'eruda-danger';
	  if (len >= warn) return 'eruda-warn';

	  return 'eruda-ok';
	}

	function getLowerCaseTagName(el) {
	  if (!el.tagName) return '';
	  return el.tagName.toLowerCase();
	}

	var sliceStr = function sliceStr(str, len) {
	  return str.length < len ? str : str.slice(0, len) + '...';
	};

	var regImg = /\.(jpeg|jpg|gif|png)$/;

	var isImg = function isImg(url) {
	  return regImg.test(url);
	};

	/***/ }),
	/* 195 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-resources {\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  padding: 10px;\n  font-size: 14px; }\n  .eruda-dev-tools .eruda-tools .eruda-resources .eruda-section {\n    margin-bottom: 10px;\n    border-radius: 4px;\n    -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    overflow: hidden; }\n  .eruda-dev-tools .eruda-tools .eruda-resources .eruda-title {\n    padding: 10px;\n    color: #fff;\n    background: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-resources .eruda-title .eruda-btn {\n      margin-left: 10px;\n      float: right;\n      background: #fff;\n      color: #707d8b;\n      text-align: center;\n      width: 18px;\n      height: 18px;\n      line-height: 18px;\n      border-radius: 50%;\n      font-size: 12px;\n      cursor: pointer;\n      -webkit-transition: color 0.3s;\n      transition: color 0.3s; }\n      .eruda-dev-tools .eruda-tools .eruda-resources .eruda-title .eruda-btn:active {\n        color: #263238; }\n    .eruda-dev-tools .eruda-tools .eruda-resources .eruda-title.eruda-ok {\n      background: #009688; }\n    .eruda-dev-tools .eruda-tools .eruda-resources .eruda-title.eruda-warn {\n      background: #ffc107; }\n    .eruda-dev-tools .eruda-tools .eruda-resources .eruda-title.eruda-danger {\n      background: #f44336; }\n  .eruda-dev-tools .eruda-tools .eruda-resources .eruda-link-list {\n    font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-resources .eruda-link-list li {\n      padding: 10px;\n      background: #fff;\n      word-break: break-all; }\n      .eruda-dev-tools .eruda-tools .eruda-resources .eruda-link-list li a {\n        color: #2196f3 !important; }\n  .eruda-dev-tools .eruda-tools .eruda-resources .eruda-image-list {\n    font-size: 12px;\n    background: #fff;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    padding: 10px !important; }\n    .eruda-dev-tools .eruda-tools .eruda-resources .eruda-image-list:after {\n      content: '';\n      display: block;\n      clear: both; }\n    .eruda-dev-tools .eruda-tools .eruda-resources .eruda-image-list li {\n      -webkit-box-flex: 1;\n          -ms-flex-positive: 1;\n              flex-grow: 1;\n      cursor: pointer;\n      overflow-y: hidden; }\n      .eruda-dev-tools .eruda-tools .eruda-resources .eruda-image-list li.eruda-image {\n        height: 100px;\n        font-size: 0; }\n      .eruda-dev-tools .eruda-tools .eruda-resources .eruda-image-list li img {\n        height: 100px;\n        min-width: 100%;\n        -o-object-fit: cover;\n           object-fit: cover; }\n  .eruda-dev-tools .eruda-tools .eruda-resources table {\n    border-collapse: collapse;\n    width: 100%;\n    font-size: 12px;\n    background: #fff; }\n    .eruda-dev-tools .eruda-tools .eruda-resources table td {\n      padding: 10px;\n      word-break: break-all; }\n      .eruda-dev-tools .eruda-tools .eruda-resources table td.eruda-key {\n        overflow-x: auto;\n        -webkit-overflow-scrolling: touch;\n        white-space: nowrap;\n        max-width: 120px; }\n      .eruda-dev-tools .eruda-tools .eruda-resources table td.eruda-control {\n        padding: 0;\n        font-size: 0;\n        width: 40px; }\n        .eruda-dev-tools .eruda-tools .eruda-resources table td.eruda-control .eruda-icon-trash {\n          cursor: pointer;\n          color: #f44336;\n          font-size: 14px;\n          display: inline-block;\n          width: 40px;\n          height: 40px;\n          text-align: center;\n          line-height: 40px;\n          -webkit-transition: color 0.3s;\n          transition: color 0.3s; }\n          .eruda-dev-tools .eruda-tools .eruda-resources table td.eruda-control .eruda-icon-trash:active {\n            color: #b71c1c; }\n", ""]);

	// exports


	/***/ }),
	/* 196 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.localStoreData : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"2":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "                    <tr>\n                        <td class=\"eruda-key\">"
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "</td>\n                        <td class=\"eruda-storage-val\" data-key=\""
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "\" data-type=\"local\">"
	    + alias4(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper)))
	    + "</td>\n                        <td class=\"eruda-control\">\n                            <span class=\"eruda-icon-trash eruda-delete-storage\" data-key=\""
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "\" data-type=\"local\"></span>\n                        </td>\n                    </tr>\n";
	},"4":function(container,depth0,helpers,partials,data) {
	    return "                <tr>\n                    <td>Empty</td>\n                </tr>\n";
	},"6":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.sessionStoreData : depth0),{"name":"each","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"7":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "                <tr>\n                    <td class=\"eruda-key\">"
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "</td>\n                    <td class=\"eruda-storage-val\" data-key=\""
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "\" data-type=\"session\">"
	    + alias4(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper)))
	    + "</td>\n                    <td class=\"eruda-control\">\n                        <span class=\"eruda-icon-trash eruda-delete-storage\" data-key=\""
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "\" data-type=\"session\"></span>\n                    </td>\n                </tr>\n";
	},"9":function(container,depth0,helpers,partials,data) {
	    return "            <tr>\n                <td>Empty</td>\n            </tr>\n";
	},"11":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.cookieData : depth0),{"name":"each","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"12":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "                    <tr>\n                        <td class=\"eruda-key\">"
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "</td>\n                        <td>"
	    + alias4(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper)))
	    + "</td>\n                        <td class=\"eruda-control\">\n                            <span class=\"eruda-icon-trash eruda-delete-cookie\" data-key=\""
	    + alias4(((helper = (helper = helpers.key || (depth0 != null ? depth0.key : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"key","hash":{},"data":data}) : helper)))
	    + "\"></span>\n                        </td>\n                    </tr>\n";
	},"14":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.scriptData : depth0),{"name":"each","hash":{},"fn":container.program(15, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"15":function(container,depth0,helpers,partials,data) {
	    var alias1=container.lambda, alias2=container.escapeExpression;

	  return "                <li>\n                    <a href=\""
	    + alias2(alias1(depth0, depth0))
	    + "\" target=\"_blank\" class=\"eruda-js-link\">"
	    + alias2(alias1(depth0, depth0))
	    + "</a>\n                </li>\n";
	},"17":function(container,depth0,helpers,partials,data) {
	    return "            <li>Empty</li>\n";
	},"19":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.stylesheetData : depth0),{"name":"each","hash":{},"fn":container.program(20, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"20":function(container,depth0,helpers,partials,data) {
	    var alias1=container.lambda, alias2=container.escapeExpression;

	  return "                <li>\n                    <a href=\""
	    + alias2(alias1(depth0, depth0))
	    + "\" target=\"_blank\" class=\"eruda-css-link\">"
	    + alias2(alias1(depth0, depth0))
	    + "</a>\n                </li>\n";
	},"22":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.iframeData : depth0),{"name":"each","hash":{},"fn":container.program(23, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"23":function(container,depth0,helpers,partials,data) {
	    var alias1=container.lambda, alias2=container.escapeExpression;

	  return "                <li>\n                    <a href=\""
	    + alias2(alias1(depth0, depth0))
	    + "\" target=\"_blank\" class=\"eruda-iframe-link\">"
	    + alias2(alias1(depth0, depth0))
	    + "</a>\n                </li>\n";
	},"25":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.imageData : depth0),{"name":"each","hash":{},"fn":container.program(26, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"26":function(container,depth0,helpers,partials,data) {
	    return "                <li class=\"eruda-image\">\n                    <img src=\""
	    + container.escapeExpression(container.lambda(depth0, depth0))
	    + "\" data-exclude=\"true\" class=\"eruda-img-link\"/>\n                </li>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "<div class=\"eruda-section eruda-local-storage\">\n    <h2 class=\"eruda-title\">\n        Local Storage\n        <div class=\"eruda-btn eruda-refresh-local-storage\">\n            <span class=\"eruda-icon-repeat\"></span>\n        </div>\n        <div class=\"eruda-btn eruda-clear-storage\" data-type=\"local\">\n            <span class=\"eruda-icon-ban\"></span>\n        </div>\n    </h2>\n    <table>\n        <tbody>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.localStoreData : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "")
	    + "        </tbody>\n    </table>\n</div>\n<div class=\"eruda-section eruda-session-storage\">\n    <h2 class=\"eruda-title\">\n        Session Storage\n        <div class=\"eruda-btn eruda-refresh-session-storage\">\n            <span class=\"eruda-icon-repeat\"></span>\n        </div>\n        <div class=\"eruda-btn eruda-clear-storage\" data-type=\"session\">\n            <span class=\"eruda-icon-ban\"></span>\n        </div>\n    </h2>\n    <table>\n        <tbody>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.sessionStoreData : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.program(9, data, 0),"data":data})) != null ? stack1 : "")
	    + "        </tbody>\n    </table>\n</div>\n<div class=\"eruda-section eruda-cookie\">\n    <h2 class=\"eruda-title "
	    + alias4(((helper = (helper = helpers.cookieState || (depth0 != null ? depth0.cookieState : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cookieState","hash":{},"data":data}) : helper)))
	    + "\">\n        Cookie\n        <div class=\"eruda-btn eruda-refresh-cookie\">\n            <span class=\"eruda-icon-repeat\"></span>\n        </div>\n        <div class=\"eruda-btn eruda-clear-cookie\">\n            <span class=\"eruda-icon-ban\"></span>\n        </div>\n    </h2>\n    <table>\n        <tbody>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.cookieData : depth0),{"name":"if","hash":{},"fn":container.program(11, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "")
	    + "        </tbody>\n    </table>\n</div>\n<div class=\"eruda-section eruda-script\">\n    <h2 class=\"eruda-title "
	    + alias4(((helper = (helper = helpers.scriptState || (depth0 != null ? depth0.scriptState : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"scriptState","hash":{},"data":data}) : helper)))
	    + "\">\n        Script\n        <div class=\"eruda-btn eruda-refresh-script\">\n            <span class=\"eruda-icon-repeat\"></span>\n        </div>\n    </h2>\n    <ul class=\"eruda-link-list\">\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.scriptData : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.program(17, data, 0),"data":data})) != null ? stack1 : "")
	    + "    </ul>\n</div>\n<div class=\"eruda-section eruda-stylesheet\">\n    <h2 class=\"eruda-title "
	    + alias4(((helper = (helper = helpers.stylesheetState || (depth0 != null ? depth0.stylesheetState : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"stylesheetState","hash":{},"data":data}) : helper)))
	    + "\">\n        Stylesheet\n        <div class=\"eruda-btn eruda-refresh-stylesheet\">\n            <span class=\"eruda-icon-repeat\"></span>\n        </div>\n    </h2>\n    <ul class=\"eruda-link-list\">\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.stylesheetData : depth0),{"name":"if","hash":{},"fn":container.program(19, data, 0),"inverse":container.program(17, data, 0),"data":data})) != null ? stack1 : "")
	    + "    </ul>\n</div>\n<div class=\"eruda-section eruda-iframe\">\n    <h2 class=\"eruda-title\">\n        Iframe\n        <div class=\"eruda-btn eruda-refresh-iframe\">\n            <span class=\"eruda-icon-repeat\"></span>\n        </div>\n    </h2>\n    <ul class=\"eruda-link-list\">\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.iframeData : depth0),{"name":"if","hash":{},"fn":container.program(22, data, 0),"inverse":container.program(17, data, 0),"data":data})) != null ? stack1 : "")
	    + "    </ul>\n</div>\n<div class=\"eruda-section eruda-image\">\n    <h2 class=\"eruda-title "
	    + alias4(((helper = (helper = helpers.imageState || (depth0 != null ? depth0.imageState : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"imageState","hash":{},"data":data}) : helper)))
	    + "\">\n        Image\n        <div class=\"eruda-btn eruda-refresh-image\">\n            <span class=\"eruda-icon-repeat\"></span>\n        </div>\n    </h2>\n    <ul class=\"eruda-image-list\">\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.imageData : depth0),{"name":"if","hash":{},"fn":container.program(25, data, 0),"inverse":container.program(17, data, 0),"data":data})) != null ? stack1 : "")
	    + "    </ul>\n</div>\n";
	},"useData":true});

	/***/ }),
	/* 197 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _defInfo = __webpack_require__(198);

	var _defInfo2 = _interopRequireDefault(_defInfo);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Info = function (_Tool) {
	  (0, _inherits3.default)(Info, _Tool);

	  function Info() {
	    (0, _classCallCheck3.default)(this, Info);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Info.__proto__ || (0, _getPrototypeOf2.default)(Info)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(199));

	    _this.name = 'info';
	    _this._tpl = __webpack_require__(200);
	    _this._infos = [];
	    return _this;
	  }

	  (0, _createClass3.default)(Info, [{
	    key: 'init',
	    value: function init($el) {
	      (0, _get3.default)(Info.prototype.__proto__ || (0, _getPrototypeOf2.default)(Info.prototype), 'init', this).call(this, $el);

	      this._addDefInfo();
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this._render();

	      (0, _get3.default)(Info.prototype.__proto__ || (0, _getPrototypeOf2.default)(Info.prototype), 'show', this).call(this);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _get3.default)(Info.prototype.__proto__ || (0, _getPrototypeOf2.default)(Info.prototype), 'destroy', this).call(this);

	      _util.evalCss.remove(this._style);
	    }
	  }, {
	    key: 'add',
	    value: function add(name, val) {
	      var infos = this._infos,
	          isUpdate = false;

	      (0, _util.each)(infos, function (info) {
	        if (name !== info.name) return;

	        info.val = val;
	        isUpdate = true;
	      });

	      if (!isUpdate) infos.push({ name: name, val: val });

	      this._render();

	      return this;
	    }
	  }, {
	    key: 'remove',
	    value: function remove(name) {
	      var infos = this._infos;

	      for (var i = infos.length - 1; i >= 0; i--) {
	        if (infos[i].name === name) infos.splice(i, 1);
	      }

	      this._render();

	      return this;
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      this._infos = [];

	      this._render();

	      return this;
	    }
	  }, {
	    key: '_addDefInfo',
	    value: function _addDefInfo() {
	      var _this2 = this;

	      (0, _util.each)(_defInfo2.default, function (info) {
	        return _this2.add(info.name, info.val);
	      });
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      var infos = [];

	      (0, _util.each)(this._infos, function (_ref) {
	        var name = _ref.name,
	            val = _ref.val;

	        if ((0, _util.isFn)(val)) val = val();

	        infos.push({ name: name, val: val });
	      });

	      this._renderHtml(this._tpl({ infos: infos }));
	    }
	  }, {
	    key: '_renderHtml',
	    value: function _renderHtml(html) {
	      if (html === this._lastHtml) return;
	      this._lastHtml = html;
	      this._$el.html(html);
	    }
	  }]);
	  return Info;
	}(_Tool3.default);

	exports.default = Info;

	/***/ }),
	/* 198 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _util = __webpack_require__(0);

	var browser = (0, _util.detectBrowser)();

	exports.default = [{
	    name: 'Location',
	    val: function val() {
	        return location.href;
	    }
	}, {
	    name: 'User Agent',
	    val: navigator.userAgent
	}, {
	    name: 'Device',
	    val: '<table>\n                  <tbody>\n                      <tr>\n                          <td class="eruda-device-key">screen</td>\n                          <td>' + screen.width + ' * ' + screen.height + '</td>\n                      </tr>\n                      <tr>\n                          <td>viewport</td>\n                          <td>' + window.innerWidth + ' * ' + window.innerHeight + '</td>\n                      </tr>\n                      <tr>\n                          <td>pixel ratio</td>\n                          <td>' + window.devicePixelRatio + '</td>\n                      </tr>\n                  </tbody>\n              </table>'
	}, {
	    name: 'System',
	    val: '<table>\n                  <tbody>\n                      <tr>\n                          <td class="eruda-system-key">os</td>\n                          <td>' + (0, _util.detectOs)() + '</td>\n                      </tr>\n                      <tr>\n                          <td>browser</td>\n                          <td>' + (browser.name + ' ' + browser.version) + '</td>\n                      </tr>\n                  </tbody>  \n              </table>'
	}, {
	    name: 'About',
	    val: '<a href="https://github.com/liriliri/eruda" target="_blank">Eruda v' + "1.5.0" + '</a>'
	}];

	/***/ }),
	/* 199 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-info.eruda-tool {\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch; }\n  .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li {\n    border-radius: 4px;\n    background: #fff;\n    margin: 10px;\n    -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2); }\n    .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-title,\n    .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-content {\n      padding: 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-title {\n      padding-bottom: 0;\n      font-size: 16px;\n      color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-content {\n      margin: 0;\n      -webkit-user-select: text;\n         -moz-user-select: text;\n          -ms-user-select: text;\n              user-select: text;\n      word-break: break-all; }\n      .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-content table {\n        width: 100%;\n        border-collapse: collapse; }\n        .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-content table th,\n        .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-content table td {\n          border: 1px solid #eceffe;\n          padding: 10px; }\n      .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-content * {\n        -webkit-user-select: text;\n           -moz-user-select: text;\n            -ms-user-select: text;\n                user-select: text; }\n      .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-content a {\n        color: #2196f3; }\n    .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-device-key,\n    .eruda-dev-tools .eruda-tools .eruda-info.eruda-tool li .eruda-system-key {\n      width: 100px; }\n", ""]);

	// exports


	/***/ }),
	/* 200 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function";

	  return "        <li>\n            <h2 class=\"eruda-title\">"
	    + container.escapeExpression(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
	    + "</h2>\n            <div class=\"eruda-content\">"
	    + ((stack1 = ((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"val","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "</div>\n        </li>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return "<ul>\n"
	    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.infos : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "</ul>\n";
	},"useData":true});

	/***/ }),
	/* 201 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get2 = __webpack_require__(14);

	var _get3 = _interopRequireDefault(_get2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _Tool2 = __webpack_require__(9);

	var _Tool3 = _interopRequireDefault(_Tool2);

	var _jsBeautify = __webpack_require__(57);

	var _jsBeautify2 = _interopRequireDefault(_jsBeautify);

	var _highlight = __webpack_require__(56);

	var _highlight2 = _interopRequireDefault(_highlight);

	var _JsonViewer = __webpack_require__(79);

	var _JsonViewer2 = _interopRequireDefault(_JsonViewer);

	var _Settings = __webpack_require__(13);

	var _Settings2 = _interopRequireDefault(_Settings);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Sources = function (_Tool) {
	  (0, _inherits3.default)(Sources, _Tool);

	  function Sources() {
	    (0, _classCallCheck3.default)(this, Sources);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Sources.__proto__ || (0, _getPrototypeOf2.default)(Sources)).call(this));

	    _this._style = (0, _util.evalCss)(__webpack_require__(202));

	    _this.name = 'sources';
	    _this._showLineNum = true;
	    _this._formatCode = true;

	    _this._loadTpl();
	    return _this;
	  }

	  (0, _createClass3.default)(Sources, [{
	    key: 'init',
	    value: function init($el, container) {
	      (0, _get3.default)(Sources.prototype.__proto__ || (0, _getPrototypeOf2.default)(Sources.prototype), 'init', this).call(this, $el);

	      this._container = container;
	      this._bindEvent();
	      this._initCfg();
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _get3.default)(Sources.prototype.__proto__ || (0, _getPrototypeOf2.default)(Sources.prototype), 'destroy', this).call(this);

	      _util.evalCss.remove(this._style);
	    }
	  }, {
	    key: 'set',
	    value: function set(type, val) {
	      if (type === 'img') {
	        this._isFetchingData = true;

	        var img = new Image();

	        var self = this;

	        img.onload = function () {
	          self._isFetchingData = false;
	          self._data = {
	            type: 'img',
	            val: {
	              width: this.width,
	              height: this.height,
	              src: val
	            }
	          };

	          self._render();
	        };
	        img.onerror = function () {
	          self._isFetchingData = false;
	        };

	        img.src = val;

	        return;
	      }

	      this._data = { type: type, val: val };

	      this._render();

	      return this;
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      (0, _get3.default)(Sources.prototype.__proto__ || (0, _getPrototypeOf2.default)(Sources.prototype), 'show', this).call(this);

	      if (!this._data && !this._isFetchingData) {
	        this._renderDef();
	      }

	      return this;
	    }
	  }, {
	    key: '_renderDef',
	    value: function _renderDef() {
	      var _this2 = this;

	      if (this._html) {
	        this._data = {
	          type: 'html',
	          val: this._html
	        };

	        return this._render();
	      }

	      if (this._isGettingHtml) return;
	      this._isGettingHtml = true;

	      (0, _util.ajax)({
	        url: location.href,
	        success: function success(data) {
	          return _this2._html = data;
	        },
	        error: function error() {
	          return _this2._html = 'Sorry, unable to fetch source code:(';
	        },
	        complete: function complete() {
	          _this2._isGettingHtml = false;
	          _this2._renderDef();
	        },
	        dataType: 'raw'
	      });
	    }
	  }, {
	    key: '_bindEvent',
	    value: function _bindEvent() {
	      var _this3 = this;

	      this._container.on('showTool', function (name, lastTool) {
	        if (name !== _this3.name && lastTool.name === _this3.name) {
	          delete _this3._data;
	        }
	      });

	      this._$el.on('click', '.eruda-http .eruda-response', function () {
	        var data = _this3._data.val,
	            resTxt = data.resTxt;

	        switch (data.subType) {
	          case 'css':
	            return _this3.set('css', resTxt);
	          case 'html':
	            return _this3.set('html', resTxt);
	          case 'javascript':
	            return _this3.set('js', resTxt);
	          case 'json':
	            return _this3.set('json', resTxt);
	        }
	        switch (data.type) {
	          case 'image':
	            return _this3.set('img', data.url);
	        }
	      });
	    }
	  }, {
	    key: '_loadTpl',
	    value: function _loadTpl() {
	      this._codeTpl = __webpack_require__(203);
	      this._imgTpl = __webpack_require__(204);
	      this._httpTpl = __webpack_require__(205);
	      this._jsonTpl = __webpack_require__(206);
	      this._rawTpl = __webpack_require__(207);
	      this._iframeTpl = __webpack_require__(208);
	    }
	  }, {
	    key: '_initCfg',
	    value: function _initCfg() {
	      var _this4 = this;

	      var cfg = this.config = _Settings2.default.createCfg('sources', {
	        showLineNum: true,
	        formatCode: true
	      });

	      if (!cfg.get('showLineNum')) this._showLineNum = false;
	      if (!cfg.get('formatCode')) this._formatCode = false;

	      cfg.on('change', function (key, val) {
	        switch (key) {
	          case 'showLineNum':
	            _this4._showLineNum = val;
	            return;
	          case 'formatCode':
	            _this4._formatCode = val;
	            return;
	        }
	      });

	      var settings = this._container.get('settings');
	      settings.text('Sources').switch(cfg, 'showLineNum', 'Show Line Numbers').switch(cfg, 'formatCode', 'Beautify Code').separator();
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      this._isInit = true;

	      var data = this._data;

	      switch (data.type) {
	        case 'html':
	        case 'js':
	        case 'css':
	          return this._renderCode();
	        case 'img':
	          return this._renderImg();
	        case 'http':
	          return this._renderHttp();
	        case 'json':
	          return this._renderJson();
	        case 'raw':
	          return this._renderRaw();
	        case 'iframe':
	          return this._renderIframe();
	      }
	    }
	  }, {
	    key: '_renderImg',
	    value: function _renderImg() {
	      this._renderHtml(this._imgTpl(this._data.val));
	    }
	  }, {
	    key: '_renderHttp',
	    value: function _renderHttp() {
	      var val = this._data.val;

	      if (val.resTxt.trim() === '') delete val.resTxt;
	      if ((0, _util.isEmpty)(val.resHeaders)) delete val.resHeaders;

	      this._renderHtml(this._httpTpl(this._data.val));
	    }
	  }, {
	    key: '_renderCode',
	    value: function _renderCode() {
	      var data = this._data;

	      var code = data.val,
	          len = data.val.length;

	      // If source code too big, don't process it.
	      if (len < MAX_BEAUTIFY_LEN && this._formatCode) {
	        switch (data.type) {
	          case 'html':
	            code = _jsBeautify2.default.html(code, { unformatted: [] });
	            break;
	          case 'css':
	            code = _jsBeautify2.default.css(code);
	            break;
	          case 'js':
	            code = (0, _jsBeautify2.default)(code);
	            break;
	        }

	        code = (0, _highlight2.default)(code, data.type);
	      } else {
	        code = (0, _util.escape)(code);
	      }

	      if (len < MAX_LINE_NUM_LEN && this._showLineNum) {
	        code = code.split('\n').map(function (line, idx) {
	          if ((0, _util.trim)(line) === '') line = '&nbsp;';

	          return {
	            idx: idx + 1,
	            val: line
	          };
	        });
	      }

	      this._renderHtml(this._codeTpl({
	        code: code,
	        showLineNum: len < MAX_LINE_NUM_LEN && this._showLineNum
	      }));
	    }
	  }, {
	    key: '_renderJson',
	    value: function _renderJson() {
	      // Using cache will keep binding json events to the same elements.
	      this._renderHtml(this._jsonTpl(), false);

	      var val = this._data.val;

	      try {
	        if ((0, _util.isStr)(val)) val = JSON.parse(val);
	        /* eslint-disable no-empty */
	      } catch (e) {}

	      new _JsonViewer2.default(val, this._$el.find('.eruda-json'));
	    }
	  }, {
	    key: '_renderRaw',
	    value: function _renderRaw() {
	      this._renderHtml(this._rawTpl({ val: this._data.val }));
	    }
	  }, {
	    key: '_renderIframe',
	    value: function _renderIframe() {
	      this._renderHtml(this._iframeTpl({ src: this._data.val }));
	    }
	  }, {
	    key: '_renderHtml',
	    value: function _renderHtml(html) {
	      var _this5 = this;

	      var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	      if (cache && html === this._lastHtml) return;
	      this._lastHtml = html;
	      this._$el.html(html);
	      // Need setTimeout to make it work
	      setTimeout(function () {
	        return _this5._$el.get(0).scrollTop = 0;
	      }, 0);
	    }
	  }]);
	  return Sources;
	}(_Tool3.default);

	exports.default = Sources;


	var MAX_BEAUTIFY_LEN = 100000,
	    MAX_LINE_NUM_LEN = 400000;

	/***/ }),
	/* 202 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-dev-tools .eruda-tools .eruda-sources {\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-code-wrapper,\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-raw-wrapper {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    width: 100%;\n    background: #fff;\n    min-height: 100%; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-raw {\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n    padding: 10px; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-code {\n    font-family: Consolas, Lucida Console, Monaco, MonoSpace;\n    font-size: 12px; }\n    .eruda-dev-tools .eruda-tools .eruda-sources .eruda-code .eruda-content * {\n      -webkit-user-select: text;\n         -moz-user-select: text;\n          -ms-user-select: text;\n              user-select: text; }\n  .eruda-dev-tools .eruda-tools .eruda-sources pre.eruda-code {\n    padding: 10px; }\n  .eruda-dev-tools .eruda-tools .eruda-sources table.eruda-code {\n    border-collapse: collapse; }\n    .eruda-dev-tools .eruda-tools .eruda-sources table.eruda-code .eruda-gutter {\n      background: #eceffe;\n      color: #707d8b; }\n    .eruda-dev-tools .eruda-tools .eruda-sources table.eruda-code .eruda-line-num {\n      border-right: 1px solid #707d8b;\n      padding: 0 3px 0 5px;\n      text-align: right; }\n    .eruda-dev-tools .eruda-tools .eruda-sources table.eruda-code .eruda-code-line {\n      padding: 0 4px;\n      white-space: pre; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-image .eruda-breadcrumb {\n    background: #fff;\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n    margin-bottom: 10px;\n    word-break: break-all;\n    padding: 10px;\n    font-size: 16px;\n    min-height: 40px;\n    border-bottom: 1px solid #eceffe; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-image .eruda-img-container {\n    text-align: center; }\n    .eruda-dev-tools .eruda-tools .eruda-sources .eruda-image .eruda-img-container img {\n      max-width: 100%;\n      -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n              box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.05), 0 1px 4px 0 rgba(0, 0, 0, 0.08), 0 3px 1px -2px rgba(0, 0, 0, 0.2); }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-image .eruda-img-info {\n    text-align: center;\n    margin: 20px 0;\n    color: #707d8b; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-json {\n    background: #fff;\n    padding: 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-sources .eruda-json * {\n      -webkit-user-select: text;\n         -moz-user-select: text;\n          -ms-user-select: text;\n              user-select: text; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-breadcrumb {\n    background: #fff;\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n    margin-bottom: 10px;\n    word-break: break-all;\n    padding: 10px;\n    font-size: 16px;\n    min-height: 40px;\n    border-bottom: 1px solid #eceffe; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-section {\n    background: #fff;\n    margin-bottom: 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-section h2 {\n      background: #2196f3;\n      padding: 10px;\n      color: #fff;\n      font-size: 14px; }\n    .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-section table * {\n      -webkit-user-select: text;\n         -moz-user-select: text;\n          -ms-user-select: text;\n              user-select: text; }\n    .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-section table td {\n      font-size: 12px;\n      padding: 5px 10px; }\n    .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-section table .eruda-key {\n      white-space: nowrap; }\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-response,\n  .eruda-dev-tools .eruda-tools .eruda-sources .eruda-http .eruda-data {\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    background: #fff;\n    padding: 10px;\n    font-size: 12px;\n    margin-bottom: 10px;\n    white-space: pre-wrap; }\n  .eruda-dev-tools .eruda-tools .eruda-sources iframe {\n    width: 100%;\n    height: 100%; }\n", ""]);

	// exports


	/***/ }),
	/* 203 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

	  return "    <div class=\"eruda-code-wrapper\">\n        <table class=\"eruda-code\">\n            <tbody>\n                <tr>\n                    <td class=\"eruda-gutter\">\n"
	    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.code : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "                    </td>\n                    <td class=\"eruda-content\">\n"
	    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.code : depth0),{"name":"each","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n";
	},"2":function(container,depth0,helpers,partials,data) {
	    var helper;

	  return "                            <div class=\"eruda-line-num\">"
	    + container.escapeExpression(((helper = (helper = helpers.idx || (depth0 != null ? depth0.idx : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"idx","hash":{},"data":data}) : helper)))
	    + "</div>\n";
	},"4":function(container,depth0,helpers,partials,data) {
	    var stack1, helper;

	  return "                            <pre class=\"eruda-code-line\">"
	    + ((stack1 = ((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"val","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "</pre>\n";
	},"6":function(container,depth0,helpers,partials,data) {
	    var stack1, helper;

	  return "    <div class=\"eruda-code-wrapper\">\n        <pre class=\"eruda-code\">"
	    + ((stack1 = ((helper = (helper = helpers.code || (depth0 != null ? depth0.code : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"code","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "</pre>\n    </div>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.showLineNum : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(6, data, 0),"data":data})) != null ? stack1 : "");
	},"useData":true});

	/***/ }),
	/* 204 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

	  return "<div class=\"eruda-image\">\n    <div class=\"eruda-breadcrumb\">"
	    + alias4(((helper = (helper = helpers.src || (depth0 != null ? depth0.src : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"src","hash":{},"data":data}) : helper)))
	    + "</div>\n    <div class=\"eruda-img-container\" data-exclude=\"true\">\n        <img src=\""
	    + alias4(((helper = (helper = helpers.src || (depth0 != null ? depth0.src : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"src","hash":{},"data":data}) : helper)))
	    + "\">\n    </div>\n    <div class=\"eruda-img-info\">"
	    + alias4(((helper = (helper = helpers.width || (depth0 != null ? depth0.width : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"width","hash":{},"data":data}) : helper)))
	    + " × "
	    + alias4(((helper = (helper = helpers.height || (depth0 != null ? depth0.height : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"height","hash":{},"data":data}) : helper)))
	    + "</div>\n</div>";
	},"useData":true});

	/***/ }),
	/* 205 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"1":function(container,depth0,helpers,partials,data) {
	    var helper;

	  return "        <pre class=\"eruda-data\">"
	    + container.escapeExpression(((helper = (helper = helpers.data || (depth0 != null ? depth0.data : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"data","hash":{},"data":data}) : helper)))
	    + "</pre>\n";
	},"3":function(container,depth0,helpers,partials,data) {
	    var stack1;

	  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.resHeaders : depth0),{"name":"each","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
	},"4":function(container,depth0,helpers,partials,data) {
	    var helper, alias1=container.escapeExpression;

	  return "                        <tr>\n                            <td class=\"eruda-key\">"
	    + alias1(((helper = (helper = helpers.key || (data && data.key)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"key","hash":{},"data":data}) : helper)))
	    + "</td>\n                            <td>"
	    + alias1(container.lambda(depth0, depth0))
	    + "</td>\n                        </tr>\n";
	},"6":function(container,depth0,helpers,partials,data) {
	    return "                    <tr>\n                        <td>Empty</td>\n                    </tr>\n";
	},"8":function(container,depth0,helpers,partials,data) {
	    var helper;

	  return "        <pre class=\"eruda-response\">"
	    + container.escapeExpression(((helper = (helper = helpers.resTxt || (depth0 != null ? depth0.resTxt : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"resTxt","hash":{},"data":data}) : helper)))
	    + "</pre>\n";
	},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper, alias1=depth0 != null ? depth0 : (container.nullContext || {});

	  return "<div class=\"eruda-http\">\n    <div class=\"eruda-breadcrumb\">"
	    + container.escapeExpression(((helper = (helper = helpers.url || (depth0 != null ? depth0.url : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"url","hash":{},"data":data}) : helper)))
	    + "</div>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.data : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "    <div class=\"eruda-section\">\n        <h2>Response Headers</h2>\n        <table class=\"eruda-headers\">\n            <tbody>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.resHeaders : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.program(6, data, 0),"data":data})) != null ? stack1 : "")
	    + "            </tbody>\n        </table>\n    </div>\n"
	    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.resTxt : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
	    + "</div>";
	},"useData":true});

	/***/ }),
	/* 206 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    return "<ul class=\"eruda-json\"></ul>";
	},"useData":true});

	/***/ }),
	/* 207 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var helper;

	  return "<div class=\"eruda-raw-wrapper\">\n    <div class=\"eruda-raw\">"
	    + container.escapeExpression(((helper = (helper = helpers.val || (depth0 != null ? depth0.val : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"val","hash":{},"data":data}) : helper)))
	    + "</div>\n</div>\n";
	},"useData":true});

	/***/ }),
	/* 208 */
	/***/ (function(module, exports, __webpack_require__) {

	var Handlebars = __webpack_require__(1);
	function __default(obj) { return obj && (obj.__esModule ? obj["default"] : obj); }
	module.exports = (Handlebars["default"] || Handlebars).template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
	    var stack1, helper;

	  return "<iframe src=\""
	    + ((stack1 = ((helper = (helper = helpers.src || (depth0 != null ? depth0.src : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"src","hash":{},"data":data}) : helper))) != null ? stack1 : "")
	    + "\"></iframe>";
	},"useData":true});

	/***/ }),
	/* 209 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Storage = __webpack_require__(210);

	var _Storage2 = _interopRequireDefault(_Storage);

	var _logger = __webpack_require__(37);

	var _logger2 = _interopRequireDefault(_logger);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var configs = {};

	var config = {
	  create: function create(name) {
	    _logger2.default.warn('createCfg is deprecated');

	    if (!configs[name]) configs[name] = new _Storage2.default(name);

	    return configs[name];
	  }
	};

	exports.default = config;

	/***/ }),
	/* 210 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(5);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(2);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(3);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(7);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(8);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _stringify = __webpack_require__(34);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _util = __webpack_require__(0);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var localStore = {
	  _storage: (0, _util.safeStorage)('local'),
	  get: function get(key) {
	    var val = this._storage.getItem(key);

	    try {
	      val = JSON.parse(val);
	      /* eslint-disable no-empty */
	    } catch (e) {}

	    return val;
	  },
	  set: function set(key, val) {
	    if ((0, _util.isObj)(val)) val = (0, _stringify2.default)(val);

	    this._storage.setItem(key, val);

	    return this;
	  },
	  remove: function remove(key) {
	    this._storage.removeItem(key);

	    return this;
	  }
	};

	var Storage = function (_Emitter) {
	  (0, _inherits3.default)(Storage, _Emitter);

	  function Storage(name) {
	    (0, _classCallCheck3.default)(this, Storage);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Storage.__proto__ || (0, _getPrototypeOf2.default)(Storage)).call(this));

	    _this._name = name;
	    _this._val = localStore.get(name);
	    if (!_this._val || !(0, _util.isObj)(_this._val)) _this._val = {};
	    return _this;
	  }

	  (0, _createClass3.default)(Storage, [{
	    key: 'save',
	    value: function save() {
	      localStore.set(this._name, this._val);

	      return this;
	    }
	  }, {
	    key: 'get',
	    value: function get(key) {
	      if ((0, _util.isUndef)(key)) return this._val;

	      return this._val[key];
	    }
	  }, {
	    key: 'set',
	    value: function set(key, val) {
	      var _this2 = this;

	      var kv = void 0;

	      if ((0, _util.isObj)(key)) {
	        kv = key;
	      } else {
	        kv = {};
	        kv[key] = val;
	      }

	      (0, _util.each)(kv, function (val, key) {
	        var preVal = _this2._val[key];
	        _this2._val[key] = val;
	        if (preVal !== val) _this2.emit('change', key, val);
	      });

	      return this.save();
	    }
	  }]);
	  return Storage;
	}(_util.Emitter);

	exports.default = Storage;

	/***/ }),
	/* 211 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _assign = __webpack_require__(38);

	var _assign2 = _interopRequireDefault(_assign);

	exports.default = function (util) {
	  (0, _assign2.default)(util, {
	    highlight: _highlight2.default,
	    beautify: _jsBeautify2.default
	  });
	};

	var _highlight = __webpack_require__(56);

	var _highlight2 = _interopRequireDefault(_highlight);

	var _jsBeautify = __webpack_require__(57);

	var _jsBeautify2 = _interopRequireDefault(_jsBeautify);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/***/ }),
	/* 212 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-container {\n  pointer-events: none;\n  will-change: transform;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100000;\n  color: #263238;\n  -webkit-transform: translateZ(0);\n          transform: translateZ(0);\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-seri;\n  font-size: 14px;\n  direction: ltr; }\n  .eruda-container * {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    pointer-events: all;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-text-size-adjust: none; }\n  .eruda-container ul {\n    list-style: none;\n    padding: 0;\n    margin: 0; }\n  .eruda-container h1,\n  .eruda-container h2,\n  .eruda-container h3,\n  .eruda-container h4 {\n    margin: 0; }\n\n.eruda-hidden {\n  display: none; }\n\n.eruda-blue {\n  color: #2196f3; }\n\n.eruda-red {\n  color: #f44336; }\n\n.eruda-green {\n  color: #009688; }\n", ""]);

	// exports


	/***/ }),
	/* 213 */
	/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)(false);
	// imports


	// module
	exports.push([module.i, ".eruda-container html,\n.eruda-container body,\n.eruda-container div,\n.eruda-container span,\n.eruda-container applet,\n.eruda-container object,\n.eruda-container iframe,\n.eruda-container h1,\n.eruda-container h2,\n.eruda-container h3,\n.eruda-container h4,\n.eruda-container h5,\n.eruda-container h6,\n.eruda-container p,\n.eruda-container blockquote,\n.eruda-container pre,\n.eruda-container a,\n.eruda-container abbr,\n.eruda-container acronym,\n.eruda-container address,\n.eruda-container big,\n.eruda-container cite,\n.eruda-container code,\n.eruda-container del,\n.eruda-container dfn,\n.eruda-container em,\n.eruda-container img,\n.eruda-container ins,\n.eruda-container kbd,\n.eruda-container q,\n.eruda-container s,\n.eruda-container samp,\n.eruda-container small,\n.eruda-container strike,\n.eruda-container strong,\n.eruda-container sub,\n.eruda-container sup,\n.eruda-container tt,\n.eruda-container var,\n.eruda-container b,\n.eruda-container u,\n.eruda-container i,\n.eruda-container center,\n.eruda-container dl,\n.eruda-container dt,\n.eruda-container dd,\n.eruda-container ol,\n.eruda-container ul,\n.eruda-container li,\n.eruda-container fieldset,\n.eruda-container form,\n.eruda-container label,\n.eruda-container legend,\n.eruda-container table,\n.eruda-container caption,\n.eruda-container tbody,\n.eruda-container tfoot,\n.eruda-container thead,\n.eruda-container tr,\n.eruda-container th,\n.eruda-container td,\n.eruda-container article,\n.eruda-container aside,\n.eruda-container canvas,\n.eruda-container details,\n.eruda-container embed,\n.eruda-container figure,\n.eruda-container figcaption,\n.eruda-container footer,\n.eruda-container header,\n.eruda-container hgroup,\n.eruda-container menu,\n.eruda-container nav,\n.eruda-container output,\n.eruda-container ruby,\n.eruda-container section,\n.eruda-container summary,\n.eruda-container time,\n.eruda-container mark,\n.eruda-container audio,\n.eruda-container video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n.eruda-container article,\n.eruda-container aside,\n.eruda-container details,\n.eruda-container figcaption,\n.eruda-container figure,\n.eruda-container footer,\n.eruda-container header,\n.eruda-container hgroup,\n.eruda-container menu,\n.eruda-container nav,\n.eruda-container section {\n  display: block; }\n\n.eruda-container body {\n  line-height: 1; }\n\n.eruda-container ol,\n.eruda-container ul {\n  list-style: none; }\n\n.eruda-container blockquote,\n.eruda-container q {\n  quotes: none; }\n\n.eruda-container blockquote:before,\n.eruda-container blockquote:after,\n.eruda-container q:before,\n.eruda-container q:after {\n  content: '';\n  content: none; }\n\n.eruda-container table {\n  border-collapse: collapse;\n  border-spacing: 0; }\n", ""]);

	// exports


	/***/ })
	/******/ ]);
	});
	//# sourceMappingURL=eruda.js.map

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	(function() {
	    //无依赖版
	    var noop = function(){}
	    function Deferred(mixin) {
	        var state = "pending", dirty = false
	        function ok(x) {
	            state = "fulfilled"
	            return x
	        }
	        function ng(e) {
	            state = "rejected"
	            throw e
	        }
	        
	        var dfd = {
	            callback: {
	                resolve: ok,
	                reject: ng,
	                notify: noop,
	                ensure: noop
	            },
	            dirty: function() {
	                return dirty
	            },
	            state: function() {
	                return state
	            },
	            promise: {
	                then: function() {
	                    return _post.apply(null, arguments)
	                },
	                otherwise: function(onReject) {
	                    return _post(0, onReject)
	                },
	                //https://github.com/cujojs/when/issues/103
	                ensure: function(onEnsure) {
	                    return _post(0, 0, 0, onEnsure)
	                },
	                _next: null
	            }
	        }
	        if (typeof mixin === "function") {
	            mixin(dfd.promise)
	        } else if (mixin && typeof mixin === "object") {
	            for (var i in mixin) {
	                if (!dfd.promise[i]) {
	                    dfd.promise[i] = mixin[i]
	                }
	            }
	        }


	//http://thanpol.as/javascript/promises-a-performance-hits-you-should-be-aware-of/
	        "resolve,reject,notify".replace(/\w+/g, function(method) {
	            dfd[method] = function() {
	                var that = this, args = arguments
	                //http://promisesaplus.com/ 4.1
	                if (that.dirty()) {
	                    _fire.call(that, method, args)
	                } else {
	                    Deferred.nextTick(function() {
	                        _fire.call(that, method, args)
	                    })
	                }
	            }
	        })
	        return dfd

	        function _post() {
	            var index = -1, fns = arguments;
	            "resolve,reject,notify,ensure".replace(/\w+/g, function(method) {
	                var fn = fns[++index];
	                if (typeof fn === "function") {
	                    dirty = true
	                    if (method === "resolve" || method === "reject") {
	                        dfd.callback[method] = function() {
	                            try {
	                                var value = fn.apply(this, arguments)
	                                state = "fulfilled"
	                                return value
	                            } catch (err) {
	                                state = "rejected"
	                                return err
	                            }
	                        }
	                    } else {
	                        dfd.callback[method] = fn;
	                    }
	                }
	            })
	            var deferred = dfd.promise._next = Deferred(mixin)
	            return deferred.promise;
	        }

	        function _fire(method, array) {
	            var next = "resolve", value
	            if (this.state() === "pending" || method === "notify") {
	                var fn = this.callback[method]
	                try {
	                    value = fn.apply(this, array);
	                } catch (e) {//处理notify的异常
	                    value = e
	                }
	                if (this.state() === "rejected") {
	                    next = "reject"
	                } else if (method === "notify") {
	                    next = "notify"
	                }
	                array = [value]
	            }
	            var ensure = this.callback.ensure
	            if (noop !== ensure) {
	                try {
	                    ensure.call(this)//模拟finally
	                } catch (e) {
	                    next = "reject";
	                    array = [e];
	                }
	            }
	            var nextDeferred = this.promise._next
	            if (Deferred.isPromise(value)) {
	                value._next = nextDeferred
	            } else {
	                if (nextDeferred) {
	                    _fire.call(nextDeferred, next, array);
	                }
	            }
	        }

	    }
	    window.Deferred = Deferred;
	    Deferred.isPromise = function(obj) {
	        return !!(obj && typeof obj.then === "function");
	    };

	    function some(any, promises) {
	        var deferred = Deferred(), n = 0, result = [], end
	        function loop(promise, index) {
	            promise.then(function(ret) {
	                if (!end) {
	                    result[index] = ret//保证回调的顺序
	                    n++;
	                    if (any || n >= promises.length) {
	                        deferred.resolve(any ? ret : result);
	                        end = true
	                    }
	                }
	            }, function(e) {
	                end = true
	                deferred.reject(e);
	            })
	        }
	        for (var i = 0, l = promises.length; i < l; i++) {
	            loop(promises[i], i)
	        }
	        return deferred.promise;
	    }
	    Deferred.all = function() {
	        return some(false, arguments)
	    }
	    Deferred.any = function() {
	        return some(true, arguments)
	    };
	//http://www.raychase.net/1329
	//http://www.cnblogs.com/iamzhanglei/archive/2013/02/24/2924680.html
	    var BrowserMutationObserver = window.MutationObserver || window.WebKitMutationObserver;
	    if (BrowserMutationObserver) {//chrome firefox
	        Deferred.nextTick = function(callback) {
	            var input = document.createElement("input")
	            var observer = new BrowserMutationObserver(function(mutations) {
	                mutations.forEach(function() {
	                    callback()
	                });
	            });
	            observer.observe(input, {attributes: true});
	            input.setAttribute("value", Math.random())
	        }
	    } else if (window.VBArray) {//IE
	        Deferred.nextTick = function(callback) {
	            var node = document.createElement("script");
	            node.onreadystatechange = function() {
	                callback()
	                node.onreadystatechange = null
	                node.parentNode && node.parentNode.removeChild(node);
	                node = null;
	            };
	            document.documentElement.appendChild(node);
	        }
	    } else if (window.postMessage && window.addEventListener) {//safar opera
	        Deferred.nextTick = function(callback) {
	            function onGlobalMessage(event) {
	                if (typeof event.data === "string" && event.data.indexOf("usePostMessage") === 0) {
	                    callback()
	                }
	            }
	            window.addEventListener("message", onGlobalMessage);
	            var now = new Date - 0;
	            window.postMessage("usePostMessage" + now, "*");
	        }
	    } else {
	        Deferred.nextTick = function(callback) {
	            setTimeout(callback, 0)
	        }
	    }


	})()


/***/ }),
/* 5 */
/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }),
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(jQuery) {/*!
	 * Bootstrap v3.3.7 (http://getbootstrap.com)
	 * Copyright 2011-2016 Twitter, Inc.
	 * Licensed under the MIT license
	 */
	if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){"use strict";var b=a.fn.jquery.split(" ")[0].split(".");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>3)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(jQuery),+function(a){"use strict";function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one("bsTransitionEnd",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){if(a(b.target).is(this))return b.handleObj.handler.apply(this,arguments)}})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var c=a(this),e=c.data("bs.alert");e||c.data("bs.alert",e=new d(this)),"string"==typeof b&&e[b].call(c)})}var c='[data-dismiss="alert"]',d=function(b){a(b).on("click",c,this.close)};d.VERSION="3.3.7",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger("closed.bs.alert").remove()}var e=a(this),f=e.attr("data-target");f||(f=e.attr("href"),f=f&&f.replace(/.*(?=#[^\s]*$)/,""));var g=a("#"===f?[]:f);b&&b.preventDefault(),g.length||(g=e.closest(".alert")),g.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(g.removeClass("in"),a.support.transition&&g.hasClass("fade")?g.one("bsTransitionEnd",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on("click.bs.alert.data-api",c,d.prototype.close)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof b&&b;e||d.data("bs.button",e=new c(this,f)),"toggle"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION="3.3.7",c.DEFAULTS={loadingText:"loading..."},c.prototype.setState=function(b){var c="disabled",d=this.$element,e=d.is("input")?"val":"html",f=d.data();b+="Text",null==f.resetText&&d.data("resetText",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),"loadingText"==b?(this.isLoading=!0,d.addClass(c).attr(c,c).prop(c,!0)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c).prop(c,!1))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle="buttons"]');if(b.length){var c=this.$element.find("input");"radio"==c.prop("type")?(c.prop("checked")&&(a=!1),b.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==c.prop("type")&&(c.prop("checked")!==this.$element.hasClass("active")&&(a=!1),this.$element.toggleClass("active")),c.prop("checked",this.$element.hasClass("active")),a&&c.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(c){var d=a(c.target).closest(".btn");b.call(d,"toggle"),a(c.target).is('input[type="radio"], input[type="checkbox"]')||(c.preventDefault(),d.is("input,button")?d.trigger("focus"):d.find("input:visible,button:visible").first().trigger("focus"))}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(b){a(b.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},c.DEFAULTS,d.data(),"object"==typeof b&&b),g="string"==typeof b?b:f.slide;e||d.data("bs.carousel",e=new c(this,f)),"number"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",a.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",a.proxy(this.pause,this)).on("mouseleave.bs.carousel",a.proxy(this.cycle,this))};c.VERSION="3.3.7",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(".item"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d="prev"==a&&0===c||"next"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e="prev"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(a>this.$items.length-1||a<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?"next":"prev",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){if(!this.sliding)return this.slide("next")},c.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},c.prototype.slide=function(b,d){var e=this.$element.find(".item.active"),f=d||this.getItemForDirection(b,e),g=this.interval,h="next"==b?"left":"right",i=this;if(f.hasClass("active"))return this.sliding=!1;var j=f[0],k=a.Event("slide.bs.carousel",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass("active")}var m=a.Event("slid.bs.carousel",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass("slide")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one("bsTransitionEnd",function(){f.removeClass([b,h].join(" ")).addClass("active"),e.removeClass(["active",h].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass("active"),f.addClass("active"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr("data-target")||(d=e.attr("href"))&&d.replace(/.*(?=#[^\s]+$)/,""));if(f.hasClass("carousel")){var g=a.extend({},f.data(),e.data()),h=e.attr("data-slide-to");h&&(g.interval=!1),b.call(f,g),h&&f.data("bs.carousel").to(h),c.preventDefault()}};a(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){"use strict";function b(b){var c,d=b.attr("data-target")||(c=b.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,"");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data("bs.collapse"),f=a.extend({},d.DEFAULTS,c.data(),"object"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data("bs.collapse",e=new d(this,f)),"string"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle="collapse"][href="#'+b.id+'"],[data-toggle="collapse"][data-target="#'+b.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION="3.3.7",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var b,e=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(e&&e.length&&(b=e.data("bs.collapse"),b&&b.transitioning))){var f=a.Event("show.bs.collapse");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,"hide"),b||e.data("bs.collapse",null));var g=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var h=function(){this.$element.removeClass("collapsing").addClass("collapse in")[g](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return h.call(this);var i=a.camelCase(["scroll",g].join("-"));this.$element.one("bsTransitionEnd",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return a.support.transition?void this.$element[c](0).one("bsTransitionEnd",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass("in");a.attr("aria-expanded",c),b.toggleClass("collapsed",!c).attr("aria-expanded",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(d){var e=a(this);e.attr("data-target")||d.preventDefault();var f=b(e),g=f.data("bs.collapse"),h=g?"toggle":e.data();c.call(f,h)})}(jQuery),+function(a){"use strict";function b(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\s]*$)/,""));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass("open")&&(c&&"click"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event("hide.bs.dropdown",f)),c.isDefaultPrevented()||(d.attr("aria-expanded","false"),e.removeClass("open").trigger(a.Event("hidden.bs.dropdown",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data("bs.dropdown");d||c.data("bs.dropdown",d=new g(this)),"string"==typeof b&&d[b].call(c)})}var e=".dropdown-backdrop",f='[data-toggle="dropdown"]',g=function(b){a(b).on("click.bs.dropdown",this.toggle)};g.VERSION="3.3.7",g.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=b(e),g=f.hasClass("open");if(c(),!g){"ontouchstart"in document.documentElement&&!f.closest(".navbar-nav").length&&a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click",c);var h={relatedTarget:this};if(f.trigger(d=a.Event("show.bs.dropdown",h)),d.isDefaultPrevented())return;e.trigger("focus").attr("aria-expanded","true"),f.toggleClass("open").trigger(a.Event("shown.bs.dropdown",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(".disabled, :disabled")){var e=b(d),g=e.hasClass("open");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger("focus"),d.trigger("click");var h=" li:not(.disabled):visible a",i=e.find(".dropdown-menu"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger("focus")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on("click.bs.dropdown.data-api",c).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",f,g.prototype.toggle).on("keydown.bs.dropdown.data-api",f,g.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",g.prototype.keydown)}(jQuery),+function(a){"use strict";function b(b,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},c.DEFAULTS,e.data(),"object"==typeof b&&b);f||e.data("bs.modal",f=new c(this,g)),"string"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,a.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};c.VERSION="3.3.7",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){d.$element.one("mouseup.dismiss.bs.modal",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass("fade");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass("in"),d.enforceFocus();var f=a.Event("shown.bs.modal",{relatedTarget:b});e?d.$dialog.one("bsTransitionEnd",function(){d.$element.trigger("focus").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger("focus").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),a.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){document===a.target||this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger("focus")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},c.prototype.resize=function(){this.isShown?a(window).on("resize.bs.modal",a.proxy(this.handleUpdate,this)):a(window).off("resize.bs.modal")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass("modal-open"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger("hidden.bs.modal")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement("div")).addClass("modal-backdrop "+e).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;f?this.$backdrop.one("bsTransitionEnd",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:""})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement("div");a.className="modal-scrollbar-measure",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(c){var d=a(this),e=d.attr("href"),f=a(d.attr("data-target")||e&&e.replace(/.*(?=#[^\s]+$)/,"")),g=f.data("bs.modal")?"toggle":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is("a")&&c.preventDefault(),f.one("show.bs.modal",function(a){a.isDefaultPrevented()||f.one("hidden.bs.modal",function(){d.is(":visible")&&d.trigger("focus")})}),b.call(f,g,this)})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof b&&b;!e&&/destroy|hide/.test(b)||(e||d.data("bs.tooltip",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",a,b)};c.VERSION="3.3.7",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focusin",i="hover"==g?"mouseleave":"focusout";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&"number"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&&(c.inState["focusin"==b.type?"focus":"hover"]=!0),c.tip().hasClass("in")||"in"==c.hoverState?void(c.hoverState="in"):(clearTimeout(c.timeout),c.hoverState="in",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){"in"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data("bs."+this.type);if(c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c)),b instanceof a.Event&&(c.inState["focusout"==b.type?"focus":"hover"]=!1),!c.isInStateTrue())return clearTimeout(c.timeout),c.hoverState="out",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){"out"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide()},c.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr("id",g),this.$element.attr("aria-describedby",g),this.options.animation&&f.addClass("fade");var h="function"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\s?auto?\s?/i,j=i.test(h);j&&(h=h.replace(i,"")||"top"),f.detach().css({top:0,left:0,display:"block"}).addClass(h).data("bs."+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h="bottom"==h&&k.bottom+m>o.bottom?"top":"top"==h&&k.top-m<o.top?"bottom":"right"==h&&k.right+l>o.width?"left":"left"==h&&k.left-l<o.left?"right":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger("shown.bs."+e.type),e.hoverState=null,"out"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass("fade")?f.one("bsTransitionEnd",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css("margin-top"),10),h=parseInt(d.css("margin-left"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass("in");var i=d[0].offsetWidth,j=d[0].offsetHeight;"top"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?"offsetWidth":"offsetHeight";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?"left":"top",50*(1-a/b)+"%").css(c?"top":"left","")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},c.prototype.hide=function(b){function d(){"in"!=e.hoverState&&f.detach(),e.$element&&e.$element.removeAttr("aria-describedby").trigger("hidden.bs."+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event("hide.bs."+this.type);if(this.$element.trigger(g),!g.isDefaultPrevented())return f.removeClass("in"),a.support.transition&&f.hasClass("fade")?f.one("bsTransitionEnd",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this},c.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&&a.attr("data-original-title",a.attr("title")||"").attr("title","")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d="BODY"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=window.SVGElement&&c instanceof window.SVGElement,g=d?{top:0,left:0}:f?null:b.offset(),h={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},i=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,h,i,g)},c.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data("bs."+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data("bs."+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass("in")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off("."+a.type).removeData("bs."+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null,a.$element=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof b&&b;!e&&/destroy|hide/.test(b)||(e||d.data("bs.popover",e=new c(this,f)),"string"==typeof b&&e[b]())})}var c=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");c.VERSION="3.3.7",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof c?"html":"append":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){"use strict";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&&c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&&e[c]()})}b.VERSION="3.3.7",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c="offset",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c="position",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data("target")||b.attr("href"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(":visible")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){
	this.activeTarget=b,this.clear();var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");d.parent(".dropdown-menu").length&&(d=d.closest("li.dropdown").addClass("active")),d.trigger("activate.bs.scrollspy")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on("load.bs.scrollspy.data-api",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new c(this)),"string"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION="3.3.7",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){var e=c.find(".active:last a"),f=a.Event("hide.bs.tab",{relatedTarget:b[0]}),g=a.Event("show.bs.tab",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest("li"),c),this.activate(h,h.parent(),function(){e.trigger({type:"hidden.bs.tab",relatedTarget:b[0]}),b.trigger({type:"shown.bs.tab",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),h?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu").length&&b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),e&&e()}var g=d.find("> .active"),h=e&&a.support.transition&&(g.length&&g.hasClass("fade")||!!d.find("> .fade").length);g.length&&h?g.one("bsTransitionEnd",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass("in")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),"show")};a(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',e).on("click.bs.tab.data-api",'[data-toggle="pill"]',e)}(jQuery),+function(a){"use strict";function b(b){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof b&&b;e||d.data("bs.affix",e=new c(this,f)),"string"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION="3.3.7",c.RESET="affix affix-top affix-bottom",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&"top"==this.affixed)return e<c&&"top";if("bottom"==this.affixed)return null!=c?!(e+this.unpin<=f.top)&&"bottom":!(e+g<=a-d)&&"bottom";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&e<=c?"top":null!=d&&i+j>=a-d&&"bottom"},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass("affix");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(":visible")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());"object"!=typeof d&&(f=e=d),"function"==typeof e&&(e=d.top(this.$element)),"function"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css("top","");var i="affix"+(h?"-"+h:""),j=a.Event(i+".bs.affix");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin="bottom"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix","affixed")+".bs.affix")}"bottom"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================
	 * Bootstrap: modal.js v3.3.7
	 * http://getbootstrap.com/javascript/#modals
	 * ========================================================================
	 * Copyright 2011-2016 Twitter, Inc.
	 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
	 * ======================================================================== */


	+function ($) {
	  'use strict';

	  // MODAL CLASS DEFINITION
	  // ======================

	  var Modal = function (element, options) {
	    this.options             = options
	    this.$body               = $(document.body)
	    this.$element            = $(element)
	    this.$dialog             = this.$element.find('.modal-dialog')
	    this.$backdrop           = null
	    this.isShown             = null
	    this.originalBodyPad     = null
	    this.scrollbarWidth      = 0
	    this.ignoreBackdropClick = false

	    if (this.options.remote) {
	      this.$element
	        .find('.modal-content')
	        .load(this.options.remote, $.proxy(function () {
	          this.$element.trigger('loaded.bs.modal')
	        }, this))
	    }
	  }

	  Modal.VERSION  = '3.3.7'

	  Modal.TRANSITION_DURATION = 300
	  Modal.BACKDROP_TRANSITION_DURATION = 150

	  Modal.DEFAULTS = {
	    backdrop: true,
	    keyboard: true,
	    show: true
	  }

	  Modal.prototype.toggle = function (_relatedTarget) {
	    return this.isShown ? this.hide() : this.show(_relatedTarget)
	  }

	  Modal.prototype.show = function (_relatedTarget) {
	    var that = this
	    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

	    this.$element.trigger(e)

	    if (this.isShown || e.isDefaultPrevented()) return

	    this.isShown = true

	    this.checkScrollbar()
	    this.setScrollbar()
	    this.$body.addClass('modal-open')

	    this.escape()
	    this.resize()

	    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

	    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
	      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
	        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
	      })
	    })

	    this.backdrop(function () {
	      var transition = $.support.transition && that.$element.hasClass('fade')

	      if (!that.$element.parent().length) {
	        that.$element.appendTo(that.$body) // don't move modals dom position
	      }

	      that.$element
	        .show()
	        .scrollTop(0)

	      that.adjustDialog()

	      if (transition) {
	        that.$element[0].offsetWidth // force reflow
	      }

	      that.$element.addClass('in')

	      that.enforceFocus()

	      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

	      transition ?
	        that.$dialog // wait for modal to slide in
	          .one('bsTransitionEnd', function () {
	            that.$element.trigger('focus').trigger(e)
	          })
	          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
	        that.$element.trigger('focus').trigger(e)
	    })
	  }

	  Modal.prototype.hide = function (e) {
	    if (e) e.preventDefault()

	    e = $.Event('hide.bs.modal')

	    this.$element.trigger(e)

	    if (!this.isShown || e.isDefaultPrevented()) return

	    this.isShown = false

	    this.escape()
	    this.resize()

	    $(document).off('focusin.bs.modal')

	    this.$element
	      .removeClass('in')
	      .off('click.dismiss.bs.modal')
	      .off('mouseup.dismiss.bs.modal')

	    this.$dialog.off('mousedown.dismiss.bs.modal')

	    $.support.transition && this.$element.hasClass('fade') ?
	      this.$element
	        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
	        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
	      this.hideModal()
	  }

	  Modal.prototype.enforceFocus = function () {
	    $(document)
	      .off('focusin.bs.modal') // guard against infinite focus loop
	      .on('focusin.bs.modal', $.proxy(function (e) {
	        if (document !== e.target &&
	            this.$element[0] !== e.target &&
	            !this.$element.has(e.target).length) {
	          this.$element.trigger('focus')
	        }
	      }, this))
	  }

	  Modal.prototype.escape = function () {
	    if (this.isShown && this.options.keyboard) {
	      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
	        e.which == 27 && this.hide()
	      }, this))
	    } else if (!this.isShown) {
	      this.$element.off('keydown.dismiss.bs.modal')
	    }
	  }

	  Modal.prototype.resize = function () {
	    if (this.isShown) {
	      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
	    } else {
	      $(window).off('resize.bs.modal')
	    }
	  }

	  Modal.prototype.hideModal = function () {
	    var that = this
	    this.$element.hide()
	    this.backdrop(function () {
	      that.$body.removeClass('modal-open')
	      that.resetAdjustments()
	      that.resetScrollbar()
	      that.$element.trigger('hidden.bs.modal')
	    })
	  }

	  Modal.prototype.removeBackdrop = function () {
	    this.$backdrop && this.$backdrop.remove()
	    this.$backdrop = null
	  }

	  Modal.prototype.backdrop = function (callback) {
	    var that = this
	    var animate = this.$element.hasClass('fade') ? 'fade' : ''

	    if (this.isShown && this.options.backdrop) {
	      var doAnimate = $.support.transition && animate

	      this.$backdrop = $(document.createElement('div'))
	        .addClass('modal-backdrop ' + animate)
	        .appendTo(this.$body)

	      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
	        if (this.ignoreBackdropClick) {
	          this.ignoreBackdropClick = false
	          return
	        }
	        if (e.target !== e.currentTarget) return
	        this.options.backdrop == 'static'
	          ? this.$element[0].focus()
	          : this.hide()
	      }, this))

	      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

	      this.$backdrop.addClass('in')

	      if (!callback) return

	      doAnimate ?
	        this.$backdrop
	          .one('bsTransitionEnd', callback)
	          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
	        callback()

	    } else if (!this.isShown && this.$backdrop) {
	      this.$backdrop.removeClass('in')

	      var callbackRemove = function () {
	        that.removeBackdrop()
	        callback && callback()
	      }
	      $.support.transition && this.$element.hasClass('fade') ?
	        this.$backdrop
	          .one('bsTransitionEnd', callbackRemove)
	          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
	        callbackRemove()

	    } else if (callback) {
	      callback()
	    }
	  }

	  // these following methods are used to handle overflowing modals

	  Modal.prototype.handleUpdate = function () {
	    this.adjustDialog()
	  }

	  Modal.prototype.adjustDialog = function () {
	    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

	    this.$element.css({
	      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
	      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
	    })
	  }

	  Modal.prototype.resetAdjustments = function () {
	    this.$element.css({
	      paddingLeft: '',
	      paddingRight: ''
	    })
	  }

	  Modal.prototype.checkScrollbar = function () {
	    var fullWindowWidth = window.innerWidth
	    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
	      var documentElementRect = document.documentElement.getBoundingClientRect()
	      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
	    }
	    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
	    this.scrollbarWidth = this.measureScrollbar()
	  }

	  Modal.prototype.setScrollbar = function () {
	    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
	    this.originalBodyPad = document.body.style.paddingRight || ''
	    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
	  }

	  Modal.prototype.resetScrollbar = function () {
	    this.$body.css('padding-right', this.originalBodyPad)
	  }

	  Modal.prototype.measureScrollbar = function () { // thx walsh
	    var scrollDiv = document.createElement('div')
	    scrollDiv.className = 'modal-scrollbar-measure'
	    this.$body.append(scrollDiv)
	    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
	    this.$body[0].removeChild(scrollDiv)
	    return scrollbarWidth
	  }


	  // MODAL PLUGIN DEFINITION
	  // =======================

	  function Plugin(option, _relatedTarget) {
	    return this.each(function () {
	      var $this   = $(this)
	      var data    = $this.data('bs.modal')
	      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

	      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
	      if (typeof option == 'string') data[option](_relatedTarget)
	      else if (options.show) data.show(_relatedTarget)
	    })
	  }

	  var old = $.fn.modal

	  $.fn.modal             = Plugin
	  $.fn.modal.Constructor = Modal


	  // MODAL NO CONFLICT
	  // =================

	  $.fn.modal.noConflict = function () {
	    $.fn.modal = old
	    return this
	  }


	  // MODAL DATA-API
	  // ==============

	  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
	    var $this   = $(this)
	    var href    = $this.attr('href')
	    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
	    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

	    if ($this.is('a')) e.preventDefault()

	    $target.one('show.bs.modal', function (showEvent) {
	      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
	      $target.one('hidden.bs.modal', function () {
	        $this.is(':visible') && $this.trigger('focus')
	      })
	    })
	    Plugin.call($target, option, this)
	  })

	}(jQuery);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 16 */
/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }),
/* 17 */,
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* =========================================================
	 * bootstrap-datetimepicker.js
	 * =========================================================
	 * Copyright 2012 Stefan Petre
	 *
	 * Improvements by Andrew Rowls
	 * Improvements by Sébastien Malot
	 * Improvements by Yun Lai
	 * Improvements by Kenneth Henderick
	 * Improvements by CuGBabyBeaR
	 * Improvements by Christian Vaas <auspex@auspex.eu>
	 *
	 * Project URL : http://www.malot.fr/bootstrap-datetimepicker
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * ========================================================= */

	(function (factory) {
	    if (true)
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    else if (typeof exports === 'object')
	        factory(require('jquery'));
	    else
	        factory(jQuery);

	}(function ($, undefined) {

	    // Add ECMA262-5 Array methods if not supported natively (IE8)
	    if (!('indexOf' in Array.prototype)) {
	        Array.prototype.indexOf = function (find, i) {
	            if (i === undefined) i = 0;
	            if (i < 0) i += this.length;
	            if (i < 0) i = 0;
	            for (var n = this.length; i < n; i++) {
	                if (i in this && this[i] === find) {
	                    return i;
	                }
	            }
	            return -1;
	        }
	    }

	    // Add timezone abbreviation support for ie6+, Chrome, Firefox
	    function timeZoneAbbreviation() {
	        var abbreviation, date, formattedStr, i, len, matchedStrings, ref, str;
	        date = (new Date()).toString();
	        formattedStr = ((ref = date.split('(')[1]) != null ? ref.slice(0, -1) : 0) || date.split(' ');
	        if (formattedStr instanceof Array) {
	            matchedStrings = [];
	            for (var i = 0, len = formattedStr.length; i < len; i++) {
	                str = formattedStr[i];
	                if ((abbreviation = (ref = str.match(/\b[A-Z]+\b/)) !== null) ? ref[0] : 0) {
	                    matchedStrings.push(abbreviation);
	                }
	            }
	            formattedStr = matchedStrings.pop();
	        }
	        return formattedStr;
	    }

	    function UTCDate() {
	        return new Date(Date.UTC.apply(Date, arguments));
	    }

	    // Picker object
	    var Datetimepicker = function (element, options) {
	        var that = this;

	        this.element = $(element);

	        // add container for single page application
	        // when page switch the datetimepicker div will be removed also.
	        this.container = options.container || 'body';

	        this.language = options.language || this.element.data('date-language') || 'en';
	        this.language = this.language in dates ? this.language : this.language.split('-')[0]; // fr-CA fallback to fr
	        this.language = this.language in dates ? this.language : 'en';
	        this.isRTL = dates[this.language].rtl || false;
	        this.formatType = options.formatType || this.element.data('format-type') || 'standard';
	        this.format = DPGlobal.parseFormat(options.format || this.element.data('date-format') || dates[this.language].format || DPGlobal.getDefaultFormat(this.formatType, 'input'), this.formatType);
	        this.isInline = false;
	        this.isVisible = false;
	        this.isInput = this.element.is('input');
	        this.fontAwesome = options.fontAwesome || this.element.data('font-awesome') || false;

	        this.bootcssVer = options.bootcssVer || (this.isInput ? (this.element.is('.form-control') ? 3 : 2) : ( this.bootcssVer = this.element.is('.input-group') ? 3 : 2 ));

	        this.component = this.element.is('.date') ? ( this.bootcssVer === 3 ? this.element.find('.input-group-addon .glyphicon-th, .input-group-addon .glyphicon-time, .input-group-addon .glyphicon-remove, .input-group-addon .glyphicon-calendar, .input-group-addon .fa-calendar, .input-group-addon .fa-clock-o').parent() : this.element.find('.add-on .icon-th, .add-on .icon-time, .add-on .icon-calendar, .add-on .fa-calendar, .add-on .fa-clock-o').parent()) : false;
	        this.componentReset = this.element.is('.date') ? ( this.bootcssVer === 3 ? this.element.find('.input-group-addon .glyphicon-remove, .input-group-addon .fa-times').parent() : this.element.find('.add-on .icon-remove, .add-on .fa-times').parent()) : false;
	        this.hasInput = this.component && this.element.find('input').length;
	        if (this.component && this.component.length === 0) {
	            this.component = false;
	        }
	        this.linkField = options.linkField || this.element.data('link-field') || false;
	        this.linkFormat = DPGlobal.parseFormat(options.linkFormat || this.element.data('link-format') || DPGlobal.getDefaultFormat(this.formatType, 'link'), this.formatType);
	        this.minuteStep = options.minuteStep || this.element.data('minute-step') || 5;
	        this.pickerPosition = options.pickerPosition || this.element.data('picker-position') || 'bottom-right';
	        this.showMeridian = options.showMeridian || this.element.data('show-meridian') || false;
	        this.initialDate = options.initialDate || new Date();
	        this.zIndex = options.zIndex || this.element.data('z-index') || undefined;
	        this.title = typeof options.title === 'undefined' ? false : options.title;
	        this.timezone = options.timezone || timeZoneAbbreviation();

	        this.icons = {
	            leftArrow: this.fontAwesome ? 'fa-arrow-left' : (this.bootcssVer === 3 ? 'glyphicon-arrow-left' : 'icon-arrow-left'),
	            rightArrow: this.fontAwesome ? 'fa-arrow-right' : (this.bootcssVer === 3 ? 'glyphicon-arrow-right' : 'icon-arrow-right')
	        }
	        this.icontype = this.fontAwesome ? 'fa' : 'glyphicon';

	        this._attachEvents();

	        this.clickedOutside = function (e) {
	            // Clicked outside the datetimepicker, hide it
	            if ($(e.target).closest('.datetimepicker').length === 0) {
	                that.hide();
	            }
	        }

	        this.formatViewType = 'datetime';
	        if ('formatViewType' in options) {
	            this.formatViewType = options.formatViewType;
	        } else if ('formatViewType' in this.element.data()) {
	            this.formatViewType = this.element.data('formatViewType');
	        }

	        this.minView = 0;
	        if ('minView' in options) {
	            this.minView = options.minView;
	        } else if ('minView' in this.element.data()) {
	            this.minView = this.element.data('min-view');
	        }
	        this.minView = DPGlobal.convertViewMode(this.minView);

	        this.maxView = DPGlobal.modes.length - 1;
	        if ('maxView' in options) {
	            this.maxView = options.maxView;
	        } else if ('maxView' in this.element.data()) {
	            this.maxView = this.element.data('max-view');
	        }
	        this.maxView = DPGlobal.convertViewMode(this.maxView);

	        this.wheelViewModeNavigation = false;
	        if ('wheelViewModeNavigation' in options) {
	            this.wheelViewModeNavigation = options.wheelViewModeNavigation;
	        } else if ('wheelViewModeNavigation' in this.element.data()) {
	            this.wheelViewModeNavigation = this.element.data('view-mode-wheel-navigation');
	        }

	        this.wheelViewModeNavigationInverseDirection = false;

	        if ('wheelViewModeNavigationInverseDirection' in options) {
	            this.wheelViewModeNavigationInverseDirection = options.wheelViewModeNavigationInverseDirection;
	        } else if ('wheelViewModeNavigationInverseDirection' in this.element.data()) {
	            this.wheelViewModeNavigationInverseDirection = this.element.data('view-mode-wheel-navigation-inverse-dir');
	        }

	        this.wheelViewModeNavigationDelay = 100;
	        if ('wheelViewModeNavigationDelay' in options) {
	            this.wheelViewModeNavigationDelay = options.wheelViewModeNavigationDelay;
	        } else if ('wheelViewModeNavigationDelay' in this.element.data()) {
	            this.wheelViewModeNavigationDelay = this.element.data('view-mode-wheel-navigation-delay');
	        }

	        this.startViewMode = 2;
	        if ('startView' in options) {
	            this.startViewMode = options.startView;
	        } else if ('startView' in this.element.data()) {
	            this.startViewMode = this.element.data('start-view');
	        }
	        this.startViewMode = DPGlobal.convertViewMode(this.startViewMode);
	        this.viewMode = this.startViewMode;

	        this.viewSelect = this.minView;
	        if ('viewSelect' in options) {
	            this.viewSelect = options.viewSelect;
	        } else if ('viewSelect' in this.element.data()) {
	            this.viewSelect = this.element.data('view-select');
	        }
	        this.viewSelect = DPGlobal.convertViewMode(this.viewSelect);

	        this.forceParse = true;
	        if ('forceParse' in options) {
	            this.forceParse = options.forceParse;
	        } else if ('dateForceParse' in this.element.data()) {
	            this.forceParse = this.element.data('date-force-parse');
	        }
	        var template = this.bootcssVer === 3 ? DPGlobal.templateV3 : DPGlobal.template;
	        while (template.indexOf('{iconType}') !== -1) {
	            template = template.replace('{iconType}', this.icontype);
	        }
	        while (template.indexOf('{leftArrow}') !== -1) {
	            template = template.replace('{leftArrow}', this.icons.leftArrow);
	        }
	        while (template.indexOf('{rightArrow}') !== -1) {
	            template = template.replace('{rightArrow}', this.icons.rightArrow);
	        }
	        this.picker = $(template)
	            .appendTo(this.isInline ? this.element : this.container) // 'body')
	            .on({
	                click: $.proxy(this.click, this),
	                mousedown: $.proxy(this.mousedown, this)
	            });

	        if (this.wheelViewModeNavigation) {
	            if ($.fn.mousewheel) {
	                this.picker.on({mousewheel: $.proxy(this.mousewheel, this)});
	            } else {
	                console.log('Mouse Wheel event is not supported. Please include the jQuery Mouse Wheel plugin before enabling this option');
	            }
	        }

	        if (this.isInline) {
	            this.picker.addClass('datetimepicker-inline');
	        } else {
	            this.picker.addClass('datetimepicker-dropdown-' + this.pickerPosition + ' dropdown-menu');
	        }
	        if (this.isRTL) {
	            this.picker.addClass('datetimepicker-rtl');
	            var selector = this.bootcssVer === 3 ? '.prev span, .next span' : '.prev i, .next i';
	            this.picker.find(selector).toggleClass(this.icons.leftArrow + ' ' + this.icons.rightArrow);
	        }

	        $(document).on('mousedown touchend', this.clickedOutside);

	        this.autoclose = false;
	        if ('autoclose' in options) {
	            this.autoclose = options.autoclose;
	        } else if ('dateAutoclose' in this.element.data()) {
	            this.autoclose = this.element.data('date-autoclose');
	        }

	        this.keyboardNavigation = true;
	        if ('keyboardNavigation' in options) {
	            this.keyboardNavigation = options.keyboardNavigation;
	        } else if ('dateKeyboardNavigation' in this.element.data()) {
	            this.keyboardNavigation = this.element.data('date-keyboard-navigation');
	        }

	        this.todayBtn = (options.todayBtn || this.element.data('date-today-btn') || false);
	        this.clearBtn = (options.clearBtn || this.element.data('date-clear-btn') || false);
	        this.todayHighlight = (options.todayHighlight || this.element.data('date-today-highlight') || false);

	        this.weekStart = 0;
	        if (typeof options.weekStart !== 'undefined') {
	            this.weekStart = options.weekStart;
	        } else if (typeof this.element.data('date-weekstart') !== 'undefined') {
	            this.weekStart = this.element.data('date-weekstart');
	        } else if (typeof dates[this.language].weekStart !== 'undefined') {
	            this.weekStart = dates[this.language].weekStart;
	        }
	        this.weekStart = this.weekStart % 7;
	        this.weekEnd = ((this.weekStart + 6) % 7);
	        this.onRenderDay = function (date) {
	            var render = (options.onRenderDay || function () {
	                return [];
	            })(date);
	            if (typeof render === 'string') {
	                render = [render];
	            }
	            var res = ['day'];
	            return res.concat((render ? render : []));
	        };
	        this.onRenderHour = function (date) {
	            var render = (options.onRenderHour || function () {
	                return [];
	            })(date);
	            var res = ['hour'];
	            if (typeof render === 'string') {
	                render = [render];
	            }
	            return res.concat((render ? render : []));
	        };
	        this.onRenderMinute = function (date) {
	            var render = (options.onRenderMinute || function () {
	                return [];
	            })(date);
	            var res = ['minute'];
	            if (typeof render === 'string') {
	                render = [render];
	            }
	            if (date < this.startDate || date > this.endDate) {
	                res.push('disabled');
	            } else if (Math.floor(this.date.getUTCMinutes() / this.minuteStep) === Math.floor(date.getUTCMinutes() / this.minuteStep)) {
	                res.push('active');
	            }
	            return res.concat((render ? render : []));
	        };
	        this.onRenderYear = function (date) {
	            var render = (options.onRenderYear || function () {
	                return [];
	            })(date);
	            var res = ['year'];
	            if (typeof render === 'string') {
	                render = [render];
	            }
	            if (this.date.getUTCFullYear() === date.getUTCFullYear()) {
	                res.push('active');
	            }
	            var currentYear = date.getUTCFullYear();
	            var endYear = this.endDate.getUTCFullYear();
	            if ((date < this.startDate || currentYear > endYear) && (date.getUTCFullYear() != this.startDate.getUTCFullYear())) {
	                res.push('disabled');
	            }
	            return res.concat((render ? render : []));
	        }
	        this.onRenderMonth = function (date) {
	            var render = (options.onRenderMonth || function () {
	                return [];
	            })(date);
	            var res = ['month'];
	            if (typeof render === 'string') {
	                render = [render];
	            }
	            return res.concat((render ? render : []));
	        }
	        this.startDate = new Date(-8639968443048000);
	        this.endDate = new Date(8639968443048000);
	        this.datesDisabled = [];
	        this.daysOfWeekDisabled = [];
	        this.setStartDate(options.startDate || this.element.data('date-startdate'));
	        this.setEndDate(options.endDate || this.element.data('date-enddate'));
	        this.setDatesDisabled(options.datesDisabled || this.element.data('date-dates-disabled'));
	        this.setDaysOfWeekDisabled(options.daysOfWeekDisabled || this.element.data('date-days-of-week-disabled'));
	        this.setMinutesDisabled(options.minutesDisabled || this.element.data('date-minute-disabled'));
	        this.setHoursDisabled(options.hoursDisabled || this.element.data('date-hour-disabled'));
	        this.fillDow();
	        this.fillMonths();
	        this.update();
	        this.showMode();

	        if (this.isInline) {
	            this.show();
	        }
	    };

	    Datetimepicker.prototype = {
	        constructor: Datetimepicker,

	        _events: [],
	        _attachEvents: function () {
	            this._detachEvents();
	            if (this.isInput) { // single input
	                this._events = [
	                    [this.element, {
	                        focus: $.proxy(this.show, this),
	                        keyup: $.proxy(this.update, this),
	                        keydown: $.proxy(this.keydown, this)
	                    }]
	                ];
	            }
	            else if (this.component && this.hasInput) { // component: input + button
	                this._events = [
	                    // For components that are not readonly, allow keyboard nav
	                    [this.element.find('input'), {
	                        focus: $.proxy(this.show, this),
	                        keyup: $.proxy(this.update, this),
	                        keydown: $.proxy(this.keydown, this)
	                    }],
	                    [this.component, {
	                        click: $.proxy(this.show, this)
	                    }]
	                ];
	                if (this.componentReset) {
	                    this._events.push([
	                        this.componentReset,
	                        {click: $.proxy(this.reset, this)}
	                    ]);
	                }
	            }
	            else if (this.element.is('div')) {  // inline datetimepicker
	                this.isInline = true;
	            }
	            else {
	                this._events = [
	                    [this.element, {
	                        click: $.proxy(this.show, this)
	                    }]
	                ];
	            }
	            for (var i = 0, el, ev; i < this._events.length; i++) {
	                el = this._events[i][0];
	                ev = this._events[i][1];
	                el.on(ev);
	            }
	        },

	        _detachEvents: function () {
	            for (var i = 0, el, ev; i < this._events.length; i++) {
	                el = this._events[i][0];
	                ev = this._events[i][1];
	                el.off(ev);
	            }
	            this._events = [];
	        },

	        show: function (e) {
	            this.picker.show();
	            this.height = this.component ? this.component.outerHeight() : this.element.outerHeight();
	            if (this.forceParse) {
	                this.update();
	            }
	            this.place();
	            $(window).on('resize', $.proxy(this.place, this));
	            if (e) {
	                e.stopPropagation();
	                e.preventDefault();
	            }
	            this.isVisible = true;
	            this.element.trigger({
	                type: 'show',
	                date: this.date
	            });
	        },

	        hide: function () {
	            if (!this.isVisible) return;
	            if (this.isInline) return;
	            this.picker.hide();
	            $(window).off('resize', this.place);
	            this.viewMode = this.startViewMode;
	            this.showMode();
	            if (!this.isInput) {
	                $(document).off('mousedown', this.hide);
	            }

	            if (
	                this.forceParse &&
	                (
	                    this.isInput && this.element.val() ||
	                    this.hasInput && this.element.find('input').val()
	                )
	            )
	                this.setValue();
	            this.isVisible = false;
	            this.element.trigger({
	                type: 'hide',
	                date: this.date
	            });
	        },

	        remove: function () {
	            this._detachEvents();
	            $(document).off('mousedown', this.clickedOutside);
	            this.picker.remove();
	            delete this.picker;
	            delete this.element.data().datetimepicker;
	        },

	        getDate: function () {
	            var d = this.getUTCDate();
	            if (d === null) {
	                return null;
	            }
	            return new Date(d.getTime() + (d.getTimezoneOffset() * 60000));
	        },

	        getUTCDate: function () {
	            return this.date;
	        },

	        getInitialDate: function () {
	            return this.initialDate
	        },

	        setInitialDate: function (initialDate) {
	            this.initialDate = initialDate;
	        },

	        setDate: function (d) {
	            this.setUTCDate(new Date(d.getTime() - (d.getTimezoneOffset() * 60000)));
	        },

	        setUTCDate: function (d) {
	            if (d >= this.startDate && d <= this.endDate) {
	                this.date = d;
	                this.setValue();
	                this.viewDate = this.date;
	                this.fill();
	            } else {
	                this.element.trigger({
	                    type: 'outOfRange',
	                    date: d,
	                    startDate: this.startDate,
	                    endDate: this.endDate
	                });
	            }
	        },

	        setFormat: function (format) {
	            this.format = DPGlobal.parseFormat(format, this.formatType);
	            var element;
	            if (this.isInput) {
	                element = this.element;
	            } else if (this.component) {
	                element = this.element.find('input');
	            }
	            if (element && element.val()) {
	                this.setValue();
	            }
	        },

	        setValue: function () {
	            var formatted = this.getFormattedDate();
	            if (!this.isInput) {
	                if (this.component) {
	                    this.element.find('input').val(formatted);
	                }
	                this.element.data('date', formatted);
	            } else {
	                this.element.val(formatted);
	            }
	            if (this.linkField) {
	                $('#' + this.linkField).val(this.getFormattedDate(this.linkFormat));
	            }
	        },

	        getFormattedDate: function (format) {
	            format = format || this.format;
	            return DPGlobal.formatDate(this.date, format, this.language, this.formatType, this.timezone);
	        },

	        setStartDate: function (startDate) {
	            this.startDate = startDate || this.startDate;
	            if (this.startDate.valueOf() !== 8639968443048000) {
	                this.startDate = DPGlobal.parseDate(this.startDate, this.format, this.language, this.formatType, this.timezone);
	            }
	            this.update();
	            this.updateNavArrows();
	        },

	        setEndDate: function (endDate) {
	            this.endDate = endDate || this.endDate;
	            if (this.endDate.valueOf() !== 8639968443048000) {
	                this.endDate = DPGlobal.parseDate(this.endDate, this.format, this.language, this.formatType, this.timezone);
	            }
	            this.update();
	            this.updateNavArrows();
	        },

	        setDatesDisabled: function (datesDisabled) {
	            this.datesDisabled = datesDisabled || [];
	            if (!$.isArray(this.datesDisabled)) {
	                this.datesDisabled = this.datesDisabled.split(/,\s*/);
	            }
	            var mThis = this;
	            this.datesDisabled = $.map(this.datesDisabled, function (d) {
	                return DPGlobal.parseDate(d, mThis.format, mThis.language, mThis.formatType, mThis.timezone).toDateString();
	            });
	            this.update();
	            this.updateNavArrows();
	        },

	        setTitle: function (selector, value) {
	            return this.picker.find(selector)
	                .find('th:eq(1)')
	                .text(this.title === false ? value : this.title);
	        },

	        setDaysOfWeekDisabled: function (daysOfWeekDisabled) {
	            this.daysOfWeekDisabled = daysOfWeekDisabled || [];
	            if (!$.isArray(this.daysOfWeekDisabled)) {
	                this.daysOfWeekDisabled = this.daysOfWeekDisabled.split(/,\s*/);
	            }
	            this.daysOfWeekDisabled = $.map(this.daysOfWeekDisabled, function (d) {
	                return parseInt(d, 10);
	            });
	            this.update();
	            this.updateNavArrows();
	        },

	        setMinutesDisabled: function (minutesDisabled) {
	            this.minutesDisabled = minutesDisabled || [];
	            if (!$.isArray(this.minutesDisabled)) {
	                this.minutesDisabled = this.minutesDisabled.split(/,\s*/);
	            }
	            this.minutesDisabled = $.map(this.minutesDisabled, function (d) {
	                return parseInt(d, 10);
	            });
	            this.update();
	            this.updateNavArrows();
	        },

	        setHoursDisabled: function (hoursDisabled) {
	            this.hoursDisabled = hoursDisabled || [];
	            if (!$.isArray(this.hoursDisabled)) {
	                this.hoursDisabled = this.hoursDisabled.split(/,\s*/);
	            }
	            this.hoursDisabled = $.map(this.hoursDisabled, function (d) {
	                return parseInt(d, 10);
	            });
	            this.update();
	            this.updateNavArrows();
	        },

	        place: function () {
	            if (this.isInline) return;

	            if (!this.zIndex) {
	                var index_highest = 0;
	                $('div').each(function () {
	                    var index_current = parseInt($(this).css('zIndex'), 10);
	                    if (index_current > index_highest) {
	                        index_highest = index_current;
	                    }
	                });
	                this.zIndex = index_highest + 10;
	            }

	            var offset, top, left, containerOffset;
	            if (this.container instanceof $) {
	                containerOffset = this.container.offset();
	            } else {
	                containerOffset = $(this.container).offset();
	            }

	            if (this.component) {
	                offset = this.component.offset();
	                left = offset.left;
	                if (this.pickerPosition === 'bottom-left' || this.pickerPosition === 'top-left') {
	                    left += this.component.outerWidth() - this.picker.outerWidth();
	                }
	            } else {
	                offset = this.element.offset();
	                left = offset.left;
	                if (this.pickerPosition === 'bottom-left' || this.pickerPosition === 'top-left') {
	                    left += this.element.outerWidth() - this.picker.outerWidth();
	                }
	            }

	            var bodyWidth = document.body.clientWidth || window.innerWidth;
	            if (left + 220 > bodyWidth) {
	                left = bodyWidth - 220;
	            }

	            if (this.pickerPosition === 'top-left' || this.pickerPosition === 'top-right') {
	                top = offset.top - this.picker.outerHeight();
	            } else {
	                top = offset.top + this.height;
	            }

	            top = top - containerOffset.top;
	            left = left - containerOffset.left;

	            this.picker.css({
	                top: top,
	                left: left,
	                zIndex: this.zIndex
	            });
	        },

	        hour_minute: "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]",

	        update: function () {
	            var date, fromArgs = false;
	            if (arguments && arguments.length && (typeof arguments[0] === 'string' || arguments[0] instanceof Date)) {
	                date = arguments[0];
	                fromArgs = true;
	            } else {
	                date = (this.isInput ? this.element.val() : this.element.find('input').val()) || this.element.data('date') || this.initialDate;
	                if (typeof date === 'string') {
	                    date = date.replace(/^\s+|\s+$/g, '');
	                }
	            }

	            if (!date) {
	                date = new Date();
	                fromArgs = false;
	            }

	            if (typeof date === "string") {
	                if (new RegExp(this.hour_minute).test(date) || new RegExp(this.hour_minute + ":[0-5][0-9]").test(date)) {
	                    date = this.getDate()
	                }
	            }

	            this.date = DPGlobal.parseDate(date, this.format, this.language, this.formatType, this.timezone);

	            if (fromArgs) this.setValue();

	            if (this.date < this.startDate) {
	                this.viewDate = new Date(this.startDate);
	            } else if (this.date > this.endDate) {
	                this.viewDate = new Date(this.endDate);
	            } else {
	                this.viewDate = new Date(this.date);
	            }
	            this.fill();
	        },

	        fillDow: function () {
	            var dowCnt = this.weekStart,
	                html = '<tr>';
	            while (dowCnt < this.weekStart + 7) {
	                html += '<th class="dow">' + dates[this.language].daysMin[(dowCnt++) % 7] + '</th>';
	            }
	            html += '</tr>';
	            this.picker.find('.datetimepicker-days thead').append(html);
	        },

	        fillMonths: function () {
	            var html = '';
	            var d = new Date(this.viewDate);
	            for (var i = 0; i < 12; i++) {
	                d.setUTCMonth(i);
	                var classes = this.onRenderMonth(d);
	                html += '<span class="' + classes.join(' ') + '">' + dates[this.language].monthsShort[i] + '</span>';
	            }
	            this.picker.find('.datetimepicker-months td').html(html);
	        },

	        fill: function () {
	            if (!this.date || !this.viewDate) {
	                return;
	            }
	            var d = new Date(this.viewDate),
	                year = d.getUTCFullYear(),
	                month = d.getUTCMonth(),
	                dayMonth = d.getUTCDate(),
	                hours = d.getUTCHours(),
	                startYear = this.startDate.getUTCFullYear(),
	                startMonth = this.startDate.getUTCMonth(),
	                endYear = this.endDate.getUTCFullYear(),
	                endMonth = this.endDate.getUTCMonth() + 1,
	                currentDate = (new UTCDate(this.date.getUTCFullYear(), this.date.getUTCMonth(), this.date.getUTCDate())).valueOf(),
	                today = new Date();
	            this.setTitle('.datetimepicker-days', dates[this.language].months[month] + ' ' + year)
	            if (this.formatViewType === 'time') {
	                var formatted = this.getFormattedDate();
	                this.setTitle('.datetimepicker-hours', formatted);
	                this.setTitle('.datetimepicker-minutes', formatted);
	            } else {
	                this.setTitle('.datetimepicker-hours', dayMonth + ' ' + dates[this.language].months[month] + ' ' + year);
	                this.setTitle('.datetimepicker-minutes', dayMonth + ' ' + dates[this.language].months[month] + ' ' + year);
	            }
	            this.picker.find('tfoot th.today')
	                .text(dates[this.language].today || dates['en'].today)
	                .toggle(this.todayBtn !== false);
	            this.picker.find('tfoot th.clear')
	                .text(dates[this.language].clear || dates['en'].clear)
	                .toggle(this.clearBtn !== false);
	            this.updateNavArrows();
	            this.fillMonths();
	            var prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0),
	                day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
	            prevMonth.setUTCDate(day);
	            prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7) % 7);
	            var nextMonth = new Date(prevMonth);
	            nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
	            nextMonth = nextMonth.valueOf();
	            var html = [];
	            var classes;
	            while (prevMonth.valueOf() < nextMonth) {
	                if (prevMonth.getUTCDay() === this.weekStart) {
	                    html.push('<tr>');
	                }
	                classes = this.onRenderDay(prevMonth);
	                if (prevMonth.getUTCFullYear() < year || (prevMonth.getUTCFullYear() === year && prevMonth.getUTCMonth() < month)) {
	                    classes.push('old');
	                } else if (prevMonth.getUTCFullYear() > year || (prevMonth.getUTCFullYear() === year && prevMonth.getUTCMonth() > month)) {
	                    classes.push('new');
	                }
	                // Compare internal UTC date with local today, not UTC today
	                if (this.todayHighlight &&
	                    prevMonth.getUTCFullYear() === today.getFullYear() &&
	                    prevMonth.getUTCMonth() === today.getMonth() &&
	                    prevMonth.getUTCDate() === today.getDate()) {
	                    classes.push('today');
	                }
	                if (prevMonth.valueOf() === currentDate) {
	                    classes.push('active');
	                }
	                if ((prevMonth.valueOf() + 86400000) <= this.startDate || prevMonth.valueOf() > this.endDate ||
	                    $.inArray(prevMonth.getUTCDay(), this.daysOfWeekDisabled) !== -1 ||
	                    $.inArray(prevMonth.toDateString(), this.datesDisabled) !== -1) {
	                    classes.push('disabled');
	                }
	                html.push('<td class="' + classes.join(' ') + '">' + prevMonth.getUTCDate() + '</td>');
	                if (prevMonth.getUTCDay() === this.weekEnd) {
	                    html.push('</tr>');
	                }
	                prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);
	            }
	            this.picker.find('.datetimepicker-days tbody').empty().append(html.join(''));

	            html = [];
	            var txt = '', meridian = '', meridianOld = '';
	            var hoursDisabled = this.hoursDisabled || [];
	            d = new Date(this.viewDate)
	            for (var i = 0; i < 24; i++) {
	                d.setUTCHours(i);
	                classes = this.onRenderHour(d);
	                if (hoursDisabled.indexOf(i) !== -1) {
	                    classes.push('disabled');
	                }
	                var actual = UTCDate(year, month, dayMonth, i);
	                // We want the previous hour for the startDate
	                if ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate) {
	                    classes.push('disabled');
	                } else if (hours === i) {
	                    classes.push('active');
	                }
	                if (this.showMeridian && dates[this.language].meridiem.length === 2) {
	                    meridian = (i < 12 ? dates[this.language].meridiem[0] : dates[this.language].meridiem[1]);
	                    if (meridian !== meridianOld) {
	                        if (meridianOld !== '') {
	                            html.push('</fieldset>');
	                        }
	                        html.push('<fieldset class="hour"><legend>' + meridian.toUpperCase() + '</legend>');
	                    }
	                    meridianOld = meridian;
	                    txt = (i % 12 ? i % 12 : 12);
	                    if (i < 12) {
	                        classes.push('hour_am');
	                    } else {
	                        classes.push('hour_pm');
	                    }
	                    html.push('<span class="' + classes.join(' ') + '">' + txt + '</span>');
	                    if (i === 23) {
	                        html.push('</fieldset>');
	                    }
	                } else {
	                    txt = i + ':00';
	                    html.push('<span class="' + classes.join(' ') + '">' + txt + '</span>');
	                }
	            }
	            this.picker.find('.datetimepicker-hours td').html(html.join(''));

	            html = [];
	            txt = '';
	            meridian = '';
	            meridianOld = '';
	            var minutesDisabled = this.minutesDisabled || [];
	            d = new Date(this.viewDate);
	            for (var i = 0; i < 60; i += this.minuteStep) {
	                if (minutesDisabled.indexOf(i) !== -1) continue;
	                d.setUTCMinutes(i);
	                d.setUTCSeconds(0);
	                classes = this.onRenderMinute(d);
	                if (this.showMeridian && dates[this.language].meridiem.length === 2) {
	                    meridian = (hours < 12 ? dates[this.language].meridiem[0] : dates[this.language].meridiem[1]);
	                    if (meridian !== meridianOld) {
	                        if (meridianOld !== '') {
	                            html.push('</fieldset>');
	                        }
	                        html.push('<fieldset class="minute"><legend>' + meridian.toUpperCase() + '</legend>');
	                    }
	                    meridianOld = meridian;
	                    txt = (hours % 12 ? hours % 12 : 12);
	                    html.push('<span class="' + classes.join(' ') + '">' + txt + ':' + (i < 10 ? '0' + i : i) + '</span>');
	                    if (i === 59) {
	                        html.push('</fieldset>');
	                    }
	                } else {
	                    txt = i + ':00';
	                    html.push('<span class="' + classes.join(' ') + '">' + hours + ':' + (i < 10 ? '0' + i : i) + '</span>');
	                }
	            }
	            this.picker.find('.datetimepicker-minutes td').html(html.join(''));

	            var currentYear = this.date.getUTCFullYear();
	            var months = this.setTitle('.datetimepicker-months', year)
	                .end()
	                .find('.month').removeClass('active');
	            if (currentYear === year) {
	                // getUTCMonths() returns 0 based, and we need to select the next one
	                // To cater bootstrap 2 we don't need to select the next one
	                months.eq(this.date.getUTCMonth()).addClass('active');
	            }
	            if (year < startYear || year > endYear) {
	                months.addClass('disabled');
	            }
	            if (year === startYear) {
	                months.slice(0, startMonth).addClass('disabled');
	            }
	            if (year === endYear) {
	                months.slice(endMonth).addClass('disabled');
	            }

	            html = '';
	            year = parseInt(year / 10, 10) * 10;
	            var yearCont = this.setTitle('.datetimepicker-years', year + '-' + (year + 9))
	                .end()
	                .find('td');
	            year -= 1;
	            d = new Date(this.viewDate);
	            for (var i = -1; i < 11; i++) {
	                d.setUTCFullYear(year);
	                classes = this.onRenderYear(d);
	                if (i === -1 || i === 10) {
	                    classes.push(old);
	                }
	                html += '<span class="' + classes.join(' ') + '">' + year + '</span>';
	                year += 1;
	            }
	            yearCont.html(html);
	            this.place();
	        },

	        updateNavArrows: function () {
	            var d = new Date(this.viewDate),
	                year = d.getUTCFullYear(),
	                month = d.getUTCMonth(),
	                day = d.getUTCDate(),
	                hour = d.getUTCHours();
	            switch (this.viewMode) {
	                case 0:
	                    if (year <= this.startDate.getUTCFullYear()
	                        && month <= this.startDate.getUTCMonth()
	                        && day <= this.startDate.getUTCDate()
	                        && hour <= this.startDate.getUTCHours()) {
	                        this.picker.find('.prev').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.prev').css({visibility: 'visible'});
	                    }
	                    if (year >= this.endDate.getUTCFullYear()
	                        && month >= this.endDate.getUTCMonth()
	                        && day >= this.endDate.getUTCDate()
	                        && hour >= this.endDate.getUTCHours()) {
	                        this.picker.find('.next').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.next').css({visibility: 'visible'});
	                    }
	                    break;
	                case 1:
	                    if (year <= this.startDate.getUTCFullYear()
	                        && month <= this.startDate.getUTCMonth()
	                        && day <= this.startDate.getUTCDate()) {
	                        this.picker.find('.prev').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.prev').css({visibility: 'visible'});
	                    }
	                    if (year >= this.endDate.getUTCFullYear()
	                        && month >= this.endDate.getUTCMonth()
	                        && day >= this.endDate.getUTCDate()) {
	                        this.picker.find('.next').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.next').css({visibility: 'visible'});
	                    }
	                    break;
	                case 2:
	                    if (year <= this.startDate.getUTCFullYear()
	                        && month <= this.startDate.getUTCMonth()) {
	                        this.picker.find('.prev').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.prev').css({visibility: 'visible'});
	                    }
	                    if (year >= this.endDate.getUTCFullYear()
	                        && month >= this.endDate.getUTCMonth()) {
	                        this.picker.find('.next').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.next').css({visibility: 'visible'});
	                    }
	                    break;
	                case 3:
	                case 4:
	                    if (year <= this.startDate.getUTCFullYear()) {
	                        this.picker.find('.prev').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.prev').css({visibility: 'visible'});
	                    }
	                    if (year >= this.endDate.getUTCFullYear()) {
	                        this.picker.find('.next').css({visibility: 'hidden'});
	                    } else {
	                        this.picker.find('.next').css({visibility: 'visible'});
	                    }
	                    break;
	            }
	        },

	        mousewheel: function (e) {

	            e.preventDefault();
	            e.stopPropagation();

	            if (this.wheelPause) {
	                return;
	            }

	            this.wheelPause = true;

	            var originalEvent = e.originalEvent;

	            var delta = originalEvent.wheelDelta;

	            var mode = delta > 0 ? 1 : (delta === 0) ? 0 : -1;

	            if (this.wheelViewModeNavigationInverseDirection) {
	                mode = -mode;
	            }

	            this.showMode(mode);

	            setTimeout($.proxy(function () {

	                this.wheelPause = false

	            }, this), this.wheelViewModeNavigationDelay);

	        },

	        click: function (e) {
	            e.stopPropagation();
	            e.preventDefault();
	            var target = $(e.target).closest('span, td, th, legend');
	            if (target.is('.' + this.icontype)) {
	                target = $(target).parent().closest('span, td, th, legend');
	            }
	            if (target.length === 1) {
	                if (target.is('.disabled')) {
	                    this.element.trigger({
	                        type: 'outOfRange',
	                        date: this.viewDate,
	                        startDate: this.startDate,
	                        endDate: this.endDate
	                    });
	                    return;
	                }
	                switch (target[0].nodeName.toLowerCase()) {
	                    case 'th':
	                        switch (target[0].className) {
	                            case 'switch':
	                                this.showMode(1);
	                                break;
	                            case 'prev':
	                            case 'next':
	                                var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1);
	                                switch (this.viewMode) {
	                                    case 0:
	                                        this.viewDate = this.moveHour(this.viewDate, dir);
	                                        break;
	                                    case 1:
	                                        this.viewDate = this.moveDate(this.viewDate, dir);
	                                        break;
	                                    case 2:
	                                        this.viewDate = this.moveMonth(this.viewDate, dir);
	                                        break;
	                                    case 3:
	                                    case 4:
	                                        this.viewDate = this.moveYear(this.viewDate, dir);
	                                        break;
	                                }
	                                this.fill();
	                                this.element.trigger({
	                                    type: target[0].className + ':' + this.convertViewModeText(this.viewMode),
	                                    date: this.viewDate,
	                                    startDate: this.startDate,
	                                    endDate: this.endDate
	                                });
	                                break;
	                            case 'clear':
	                                this.reset();
	                                if (this.autoclose) {
	                                    this.hide();
	                                }
	                                break;
	                            case 'today':
	                                var date = new Date();
	                                date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), 0);

	                                // Respect startDate and endDate.
	                                if (date < this.startDate) date = this.startDate;
	                                else if (date > this.endDate) date = this.endDate;

	                                this.viewMode = this.startViewMode;
	                                this.showMode(0);
	                                this._setDate(date);
	                                this.fill();
	                                if (this.autoclose) {
	                                    this.hide();
	                                }
	                                break;
	                        }
	                        break;
	                    case 'span':
	                        if (!target.is('.disabled')) {
	                            var year = this.viewDate.getUTCFullYear(),
	                                month = this.viewDate.getUTCMonth(),
	                                day = this.viewDate.getUTCDate(),
	                                hours = this.viewDate.getUTCHours(),
	                                minutes = this.viewDate.getUTCMinutes(),
	                                seconds = this.viewDate.getUTCSeconds();

	                            if (target.is('.month')) {
	                                this.viewDate.setUTCDate(1);
	                                month = target.parent().find('span').index(target);
	                                day = this.viewDate.getUTCDate();
	                                this.viewDate.setUTCMonth(month);
	                                this.element.trigger({
	                                    type: 'changeMonth',
	                                    date: this.viewDate
	                                });
	                                if (this.viewSelect >= 3) {
	                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
	                                }
	                            } else if (target.is('.year')) {
	                                this.viewDate.setUTCDate(1);
	                                year = parseInt(target.text(), 10) || 0;
	                                this.viewDate.setUTCFullYear(year);
	                                this.element.trigger({
	                                    type: 'changeYear',
	                                    date: this.viewDate
	                                });
	                                if (this.viewSelect >= 4) {
	                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
	                                }
	                            } else if (target.is('.hour')) {
	                                hours = parseInt(target.text(), 10) || 0;
	                                if (target.hasClass('hour_am') || target.hasClass('hour_pm')) {
	                                    if (hours === 12 && target.hasClass('hour_am')) {
	                                        hours = 0;
	                                    } else if (hours !== 12 && target.hasClass('hour_pm')) {
	                                        hours += 12;
	                                    }
	                                }
	                                this.viewDate.setUTCHours(hours);
	                                this.element.trigger({
	                                    type: 'changeHour',
	                                    date: this.viewDate
	                                });
	                                if (this.viewSelect >= 1) {
	                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
	                                }
	                            } else if (target.is('.minute')) {
	                                minutes = parseInt(target.text().substr(target.text().indexOf(':') + 1), 10) || 0;
	                                this.viewDate.setUTCMinutes(minutes);
	                                this.element.trigger({
	                                    type: 'changeMinute',
	                                    date: this.viewDate
	                                });
	                                if (this.viewSelect >= 0) {
	                                    this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
	                                }
	                            }
	                            if (this.viewMode !== 0) {
	                                var oldViewMode = this.viewMode;
	                                this.showMode(-1);
	                                this.fill();
	                                if (oldViewMode === this.viewMode && this.autoclose) {
	                                    this.hide();
	                                }
	                            } else {
	                                this.fill();
	                                if (this.autoclose) {
	                                    this.hide();
	                                }
	                            }
	                        }
	                        break;
	                    case 'td':
	                        if (target.is('.day') && !target.is('.disabled')) {
	                            var day = parseInt(target.text(), 10) || 1;
	                            var year = this.viewDate.getUTCFullYear(),
	                                month = this.viewDate.getUTCMonth(),
	                                hours = this.viewDate.getUTCHours(),
	                                minutes = this.viewDate.getUTCMinutes(),
	                                seconds = this.viewDate.getUTCSeconds();
	                            if (target.is('.old')) {
	                                if (month === 0) {
	                                    month = 11;
	                                    year -= 1;
	                                } else {
	                                    month -= 1;
	                                }
	                            } else if (target.is('.new')) {
	                                if (month === 11) {
	                                    month = 0;
	                                    year += 1;
	                                } else {
	                                    month += 1;
	                                }
	                            }
	                            this.viewDate.setUTCFullYear(year);
	                            this.viewDate.setUTCMonth(month, day);
	                            this.element.trigger({
	                                type: 'changeDay',
	                                date: this.viewDate
	                            });
	                            if (this.viewSelect >= 2) {
	                                this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));
	                            }
	                        }
	                        var oldViewMode = this.viewMode;
	                        this.showMode(-1);
	                        this.fill();
	                        if (oldViewMode === this.viewMode && this.autoclose) {
	                            this.hide();
	                        }
	                        break;
	                }
	            }
	        },

	        _setDate: function (date, which) {
	            if (!which || which === 'date')
	                this.date = date;
	            if (!which || which === 'view')
	                this.viewDate = date;
	            this.fill();
	            this.setValue();
	            var element;
	            if (this.isInput) {
	                element = this.element;
	            } else if (this.component) {
	                element = this.element.find('input');
	            }
	            if (element) {
	                element.change();
	            }
	            this.element.trigger({
	                type: 'changeDate',
	                date: this.getDate()
	            });
	            if (date === null)
	                this.date = this.viewDate;
	        },

	        moveMinute: function (date, dir) {
	            if (!dir) return date;
	            var new_date = new Date(date.valueOf());
	            //dir = dir > 0 ? 1 : -1;
	            new_date.setUTCMinutes(new_date.getUTCMinutes() + (dir * this.minuteStep));
	            return new_date;
	        },

	        moveHour: function (date, dir) {
	            if (!dir) return date;
	            var new_date = new Date(date.valueOf());
	            //dir = dir > 0 ? 1 : -1;
	            new_date.setUTCHours(new_date.getUTCHours() + dir);
	            return new_date;
	        },

	        moveDate: function (date, dir) {
	            if (!dir) return date;
	            var new_date = new Date(date.valueOf());
	            //dir = dir > 0 ? 1 : -1;
	            new_date.setUTCDate(new_date.getUTCDate() + dir);
	            return new_date;
	        },

	        moveMonth: function (date, dir) {
	            if (!dir) return date;
	            var new_date = new Date(date.valueOf()),
	                day = new_date.getUTCDate(),
	                month = new_date.getUTCMonth(),
	                mag = Math.abs(dir),
	                new_month, test;
	            dir = dir > 0 ? 1 : -1;
	            if (mag === 1) {
	                test = dir === -1
	                    // If going back one month, make sure month is not current month
	                    // (eg, Mar 31 -> Feb 31 === Feb 28, not Mar 02)
	                    ? function () {
	                        return new_date.getUTCMonth() === month;
	                    }
	                    // If going forward one month, make sure month is as expected
	                    // (eg, Jan 31 -> Feb 31 === Feb 28, not Mar 02)
	                    : function () {
	                        return new_date.getUTCMonth() !== new_month;
	                    };
	                new_month = month + dir;
	                new_date.setUTCMonth(new_month);
	                // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11
	                if (new_month < 0 || new_month > 11)
	                    new_month = (new_month + 12) % 12;
	            } else {
	                // For magnitudes >1, move one month at a time...
	                for (var i = 0; i < mag; i++)
	                    // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...
	                    new_date = this.moveMonth(new_date, dir);
	                // ...then reset the day, keeping it in the new month
	                new_month = new_date.getUTCMonth();
	                new_date.setUTCDate(day);
	                test = function () {
	                    return new_month !== new_date.getUTCMonth();
	                };
	            }
	            // Common date-resetting loop -- if date is beyond end of month, make it
	            // end of month
	            while (test()) {
	                new_date.setUTCDate(--day);
	                new_date.setUTCMonth(new_month);
	            }
	            return new_date;
	        },

	        moveYear: function (date, dir) {
	            return this.moveMonth(date, dir * 12);
	        },

	        dateWithinRange: function (date) {
	            return date >= this.startDate && date <= this.endDate;
	        },

	        keydown: function (e) {
	            if (this.picker.is(':not(:visible)')) {
	                if (e.keyCode === 27) // allow escape to hide and re-show picker
	                    this.show();
	                return;
	            }
	            var dateChanged = false,
	                dir, newDate, newViewDate;
	            switch (e.keyCode) {
	                case 27: // escape
	                    this.hide();
	                    e.preventDefault();
	                    break;
	                case 37: // left
	                case 39: // right
	                    if (!this.keyboardNavigation) break;
	                    dir = e.keyCode === 37 ? -1 : 1;
	                    var viewMode = this.viewMode;
	                    if (e.ctrlKey) {
	                        viewMode += 2;
	                    } else if (e.shiftKey) {
	                        viewMode += 1;
	                    }
	                    if (viewMode === 4) {
	                        newDate = this.moveYear(this.date, dir);
	                        newViewDate = this.moveYear(this.viewDate, dir);
	                    } else if (viewMode === 3) {
	                        newDate = this.moveMonth(this.date, dir);
	                        newViewDate = this.moveMonth(this.viewDate, dir);
	                    } else if (viewMode === 2) {
	                        newDate = this.moveDate(this.date, dir);
	                        newViewDate = this.moveDate(this.viewDate, dir);
	                    } else if (viewMode === 1) {
	                        newDate = this.moveHour(this.date, dir);
	                        newViewDate = this.moveHour(this.viewDate, dir);
	                    } else if (viewMode === 0) {
	                        newDate = this.moveMinute(this.date, dir);
	                        newViewDate = this.moveMinute(this.viewDate, dir);
	                    }
	                    if (this.dateWithinRange(newDate)) {
	                        this.date = newDate;
	                        this.viewDate = newViewDate;
	                        this.setValue();
	                        this.update();
	                        e.preventDefault();
	                        dateChanged = true;
	                    }
	                    break;
	                case 38: // up
	                case 40: // down
	                    if (!this.keyboardNavigation) break;
	                    dir = e.keyCode === 38 ? -1 : 1;
	                    viewMode = this.viewMode;
	                    if (e.ctrlKey) {
	                        viewMode += 2;
	                    } else if (e.shiftKey) {
	                        viewMode += 1;
	                    }
	                    if (viewMode === 4) {
	                        newDate = this.moveYear(this.date, dir);
	                        newViewDate = this.moveYear(this.viewDate, dir);
	                    } else if (viewMode === 3) {
	                        newDate = this.moveMonth(this.date, dir);
	                        newViewDate = this.moveMonth(this.viewDate, dir);
	                    } else if (viewMode === 2) {
	                        newDate = this.moveDate(this.date, dir * 7);
	                        newViewDate = this.moveDate(this.viewDate, dir * 7);
	                    } else if (viewMode === 1) {
	                        if (this.showMeridian) {
	                            newDate = this.moveHour(this.date, dir * 6);
	                            newViewDate = this.moveHour(this.viewDate, dir * 6);
	                        } else {
	                            newDate = this.moveHour(this.date, dir * 4);
	                            newViewDate = this.moveHour(this.viewDate, dir * 4);
	                        }
	                    } else if (viewMode === 0) {
	                        newDate = this.moveMinute(this.date, dir * 4);
	                        newViewDate = this.moveMinute(this.viewDate, dir * 4);
	                    }
	                    if (this.dateWithinRange(newDate)) {
	                        this.date = newDate;
	                        this.viewDate = newViewDate;
	                        this.setValue();
	                        this.update();
	                        e.preventDefault();
	                        dateChanged = true;
	                    }
	                    break;
	                case 13: // enter
	                    if (this.viewMode !== 0) {
	                        var oldViewMode = this.viewMode;
	                        this.showMode(-1);
	                        this.fill();
	                        if (oldViewMode === this.viewMode && this.autoclose) {
	                            this.hide();
	                        }
	                    } else {
	                        this.fill();
	                        if (this.autoclose) {
	                            this.hide();
	                        }
	                    }
	                    e.preventDefault();
	                    break;
	                case 9: // tab
	                    this.hide();
	                    break;
	            }
	            if (dateChanged) {
	                var element;
	                if (this.isInput) {
	                    element = this.element;
	                } else if (this.component) {
	                    element = this.element.find('input');
	                }
	                if (element) {
	                    element.change();
	                }
	                this.element.trigger({
	                    type: 'changeDate',
	                    date: this.getDate()
	                });
	            }
	        },

	        showMode: function (dir) {
	            if (dir) {
	                var newViewMode = Math.max(0, Math.min(DPGlobal.modes.length - 1, this.viewMode + dir));
	                if (newViewMode >= this.minView && newViewMode <= this.maxView) {
	                    this.element.trigger({
	                        type: 'changeMode',
	                        date: this.viewDate,
	                        oldViewMode: this.viewMode,
	                        newViewMode: newViewMode
	                    });

	                    this.viewMode = newViewMode;
	                }
	            }
	            /*
	             vitalets: fixing bug of very special conditions:
	             jquery 1.7.1 + webkit + show inline datetimepicker in bootstrap popover.
	             Method show() does not set display css correctly and datetimepicker is not shown.
	             Changed to .css('display', 'block') solve the problem.
	             See https://github.com/vitalets/x-editable/issues/37

	             In jquery 1.7.2+ everything works fine.
	             */
	            //this.picker.find('>div').hide().filter('.datetimepicker-'+DPGlobal.modes[this.viewMode].clsName).show();
	            this.picker.find('>div').hide().filter('.datetimepicker-' + DPGlobal.modes[this.viewMode].clsName).css('display', 'block');
	            this.updateNavArrows();
	        },

	        reset: function () {
	            this._setDate(null, 'date');
	        },

	        convertViewModeText: function (viewMode) {
	            switch (viewMode) {
	                case 4:
	                    return 'decade';
	                case 3:
	                    return 'year';
	                case 2:
	                    return 'month';
	                case 1:
	                    return 'day';
	                case 0:
	                    return 'hour';
	            }
	        }
	    };

	    var old = $.fn.datetimepicker;
	    $.fn.datetimepicker = function (option) {
	        var args = Array.apply(null, arguments);
	        args.shift();
	        var internal_return;
	        this.each(function () {
	            var $this = $(this),
	                data = $this.data('datetimepicker'),
	                options = typeof option === 'object' && option;
	            if (!data) {
	                $this.data('datetimepicker', (data = new Datetimepicker(this, $.extend({}, $.fn.datetimepicker.defaults, options))));
	            }
	            if (typeof option === 'string' && typeof data[option] === 'function') {
	                internal_return = data[option].apply(data, args);
	                if (internal_return !== undefined) {
	                    return false;
	                }
	            }
	        });
	        if (internal_return !== undefined)
	            return internal_return;
	        else
	            return this;
	    };

	    $.fn.datetimepicker.defaults = {};
	    $.fn.datetimepicker.Constructor = Datetimepicker;
	    var dates = $.fn.datetimepicker.dates = {
	        en: {
	            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
	            daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
	            daysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],
	            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
	            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
	            meridiem: ['am', 'pm'],
	            suffix: ['st', 'nd', 'rd', 'th'],
	            today: 'Today',
	            clear: 'Clear'
	        }
	    };

	    var DPGlobal = {
	        modes: [
	            {
	                clsName: 'minutes',
	                navFnc: 'Hours',
	                navStep: 1
	            },
	            {
	                clsName: 'hours',
	                navFnc: 'Date',
	                navStep: 1
	            },
	            {
	                clsName: 'days',
	                navFnc: 'Month',
	                navStep: 1
	            },
	            {
	                clsName: 'months',
	                navFnc: 'FullYear',
	                navStep: 1
	            },
	            {
	                clsName: 'years',
	                navFnc: 'FullYear',
	                navStep: 10
	            }
	        ],
	        isLeapYear: function (year) {
	            return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))
	        },
	        getDaysInMonth: function (year, month) {
	            return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]
	        },
	        getDefaultFormat: function (type, field) {
	            if (type === 'standard') {
	                if (field === 'input')
	                    return 'yyyy-mm-dd hh:ii';
	                else
	                    return 'yyyy-mm-dd hh:ii:ss';
	            } else if (type === 'php') {
	                if (field === 'input')
	                    return 'Y-m-d H:i';
	                else
	                    return 'Y-m-d H:i:s';
	            } else {
	                throw new Error('Invalid format type.');
	            }
	        },
	        validParts: function (type) {
	            if (type === 'standard') {
	                return /t|hh?|HH?|p|P|z|Z|ii?|ss?|dd?|DD?|mm?|MM?|yy(?:yy)?/g;
	            } else if (type === 'php') {
	                return /[dDjlNwzFmMnStyYaABgGhHis]/g;
	            } else {
	                throw new Error('Invalid format type.');
	            }
	        },
	        nonpunctuation: /[^ -\/:-@\[-`{-~\t\n\rTZ]+/g,
	        parseFormat: function (format, type) {
	            // IE treats \0 as a string end in inputs (truncating the value),
	            // so it's a bad format delimiter, anyway
	            var separators = format.replace(this.validParts(type), '\0').split('\0'),
	                parts = format.match(this.validParts(type));
	            if (!separators || !separators.length || !parts || parts.length === 0) {
	                throw new Error('Invalid date format.');
	            }
	            return {separators: separators, parts: parts};
	        },
	        parseDate: function (date, format, language, type, timezone) {
	            if (date instanceof Date) {
	                var dateUTC = new Date(date.valueOf() - date.getTimezoneOffset() * 60000);
	                dateUTC.setMilliseconds(0);
	                return dateUTC;
	            }
	            if (/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(date)) {
	                format = this.parseFormat('yyyy-mm-dd', type);
	            }
	            if (/^\d{4}\-\d{1,2}\-\d{1,2}[T ]\d{1,2}\:\d{1,2}$/.test(date)) {
	                format = this.parseFormat('yyyy-mm-dd hh:ii', type);
	            }
	            if (/^\d{4}\-\d{1,2}\-\d{1,2}[T ]\d{1,2}\:\d{1,2}\:\d{1,2}[Z]{0,1}$/.test(date)) {
	                format = this.parseFormat('yyyy-mm-dd hh:ii:ss', type);
	            }
	            if (/^[-+]\d+[dmwy]([\s,]+[-+]\d+[dmwy])*$/.test(date)) {
	                var part_re = /([-+]\d+)([dmwy])/,
	                    parts = date.match(/([-+]\d+)([dmwy])/g),
	                    part, dir;
	                date = new Date();
	                for (var i = 0; i < parts.length; i++) {
	                    part = part_re.exec(parts[i]);
	                    dir = parseInt(part[1]);
	                    switch (part[2]) {
	                        case 'd':
	                            date.setUTCDate(date.getUTCDate() + dir);
	                            break;
	                        case 'm':
	                            date = Datetimepicker.prototype.moveMonth.call(Datetimepicker.prototype, date, dir);
	                            break;
	                        case 'w':
	                            date.setUTCDate(date.getUTCDate() + dir * 7);
	                            break;
	                        case 'y':
	                            date = Datetimepicker.prototype.moveYear.call(Datetimepicker.prototype, date, dir);
	                            break;
	                    }
	                }
	                return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), 0);
	            }
	            var parts = date && date.toString().match(this.nonpunctuation) || [],
	                date = new Date(0, 0, 0, 0, 0, 0, 0),
	                parsed = {},
	                setters_order = ['hh', 'h', 'ii', 'i', 'ss', 's', 'yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'D', 'DD', 'd', 'dd', 'H', 'HH', 'p', 'P', 'z', 'Z'],
	                setters_map = {
	                    hh: function (d, v) {
	                        return d.setUTCHours(v);
	                    },
	                    h: function (d, v) {
	                        return d.setUTCHours(v);
	                    },
	                    HH: function (d, v) {
	                        return d.setUTCHours(v === 12 ? 0 : v);
	                    },
	                    H: function (d, v) {
	                        return d.setUTCHours(v === 12 ? 0 : v);
	                    },
	                    ii: function (d, v) {
	                        return d.setUTCMinutes(v);
	                    },
	                    i: function (d, v) {
	                        return d.setUTCMinutes(v);
	                    },
	                    ss: function (d, v) {
	                        return d.setUTCSeconds(v);
	                    },
	                    s: function (d, v) {
	                        return d.setUTCSeconds(v);
	                    },
	                    yyyy: function (d, v) {
	                        return d.setUTCFullYear(v);
	                    },
	                    yy: function (d, v) {
	                        return d.setUTCFullYear(2000 + v);
	                    },
	                    m: function (d, v) {
	                        v -= 1;
	                        while (v < 0) v += 12;
	                        v %= 12;
	                        d.setUTCMonth(v);
	                        while (d.getUTCMonth() !== v)
	                            if (isNaN(d.getUTCMonth()))
	                                return d;
	                            else
	                                d.setUTCDate(d.getUTCDate() - 1);
	                        return d;
	                    },
	                    d: function (d, v) {
	                        return d.setUTCDate(v);
	                    },
	                    p: function (d, v) {
	                        return d.setUTCHours(v === 1 ? d.getUTCHours() + 12 : d.getUTCHours());
	                    },
	                    z: function () {
	                        return timezone
	                    }
	                },
	                val, filtered, part;
	            setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];
	            setters_map['dd'] = setters_map['d'];
	            setters_map['P'] = setters_map['p'];
	            setters_map['Z'] = setters_map['z'];
	            date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());
	            if (parts.length === format.parts.length) {
	                for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
	                    val = parseInt(parts[i], 10);
	                    part = format.parts[i];
	                    if (isNaN(val)) {
	                        switch (part) {
	                            case 'MM':
	                                filtered = $(dates[language].months).filter(function () {
	                                    var m = this.slice(0, parts[i].length),
	                                        p = parts[i].slice(0, m.length);
	                                    return m === p;
	                                });
	                                val = $.inArray(filtered[0], dates[language].months) + 1;
	                                break;
	                            case 'M':
	                                filtered = $(dates[language].monthsShort).filter(function () {
	                                    var m = this.slice(0, parts[i].length),
	                                        p = parts[i].slice(0, m.length);
	                                    return m.toLowerCase() === p.toLowerCase();
	                                });
	                                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
	                                break;
	                            case 'p':
	                            case 'P':
	                                val = $.inArray(parts[i].toLowerCase(), dates[language].meridiem);
	                                break;
	                            case 'z':
	                            case 'Z':
	                                timezone;
	                                break;

	                        }
	                    }
	                    parsed[part] = val;
	                }
	                for (var i = 0, s; i < setters_order.length; i++) {
	                    s = setters_order[i];
	                    if (s in parsed && !isNaN(parsed[s]))
	                        setters_map[s](date, parsed[s])
	                }
	            }
	            return date;
	        },
	        formatDate: function (date, format, language, type, timezone) {
	            if (date === null) {
	                return '';
	            }
	            var val;
	            if (type === 'standard') {
	                val = {
	                    t: date.getTime(),
	                    // year
	                    yy: date.getUTCFullYear().toString().substring(2),
	                    yyyy: date.getUTCFullYear(),
	                    // month
	                    m: date.getUTCMonth() + 1,
	                    M: dates[language].monthsShort[date.getUTCMonth()],
	                    MM: dates[language].months[date.getUTCMonth()],
	                    // day
	                    d: date.getUTCDate(),
	                    D: dates[language].daysShort[date.getUTCDay()],
	                    DD: dates[language].days[date.getUTCDay()],
	                    p: (dates[language].meridiem.length === 2 ? dates[language].meridiem[date.getUTCHours() < 12 ? 0 : 1] : ''),
	                    // hour
	                    h: date.getUTCHours(),
	                    // minute
	                    i: date.getUTCMinutes(),
	                    // second
	                    s: date.getUTCSeconds(),
	                    // timezone
	                    z: timezone
	                };

	                if (dates[language].meridiem.length === 2) {
	                    val.H = (val.h % 12 === 0 ? 12 : val.h % 12);
	                }
	                else {
	                    val.H = val.h;
	                }
	                val.HH = (val.H < 10 ? '0' : '') + val.H;
	                val.P = val.p.toUpperCase();
	                val.Z = val.z;
	                val.hh = (val.h < 10 ? '0' : '') + val.h;
	                val.ii = (val.i < 10 ? '0' : '') + val.i;
	                val.ss = (val.s < 10 ? '0' : '') + val.s;
	                val.dd = (val.d < 10 ? '0' : '') + val.d;
	                val.mm = (val.m < 10 ? '0' : '') + val.m;
	            } else if (type === 'php') {
	                // php format
	                val = {
	                    // year
	                    y: date.getUTCFullYear().toString().substring(2),
	                    Y: date.getUTCFullYear(),
	                    // month
	                    F: dates[language].months[date.getUTCMonth()],
	                    M: dates[language].monthsShort[date.getUTCMonth()],
	                    n: date.getUTCMonth() + 1,
	                    t: DPGlobal.getDaysInMonth(date.getUTCFullYear(), date.getUTCMonth()),
	                    // day
	                    j: date.getUTCDate(),
	                    l: dates[language].days[date.getUTCDay()],
	                    D: dates[language].daysShort[date.getUTCDay()],
	                    w: date.getUTCDay(), // 0 -> 6
	                    N: (date.getUTCDay() === 0 ? 7 : date.getUTCDay()),       // 1 -> 7
	                    S: (date.getUTCDate() % 10 <= dates[language].suffix.length ? dates[language].suffix[date.getUTCDate() % 10 - 1] : ''),
	                    // hour
	                    a: (dates[language].meridiem.length === 2 ? dates[language].meridiem[date.getUTCHours() < 12 ? 0 : 1] : ''),
	                    g: (date.getUTCHours() % 12 === 0 ? 12 : date.getUTCHours() % 12),
	                    G: date.getUTCHours(),
	                    // minute
	                    i: date.getUTCMinutes(),
	                    // second
	                    s: date.getUTCSeconds()
	                };
	                val.m = (val.n < 10 ? '0' : '') + val.n;
	                val.d = (val.j < 10 ? '0' : '') + val.j;
	                val.A = val.a.toString().toUpperCase();
	                val.h = (val.g < 10 ? '0' : '') + val.g;
	                val.H = (val.G < 10 ? '0' : '') + val.G;
	                val.i = (val.i < 10 ? '0' : '') + val.i;
	                val.s = (val.s < 10 ? '0' : '') + val.s;
	            } else {
	                throw new Error('Invalid format type.');
	            }
	            var date = [],
	                seps = $.extend([], format.separators);
	            for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
	                if (seps.length) {
	                    date.push(seps.shift());
	                }
	                date.push(val[format.parts[i]]);
	            }
	            if (seps.length) {
	                date.push(seps.shift());
	            }
	            return date.join('');
	        },
	        convertViewMode: function (viewMode) {
	            switch (viewMode) {
	                case 4:
	                case 'decade':
	                    viewMode = 4;
	                    break;
	                case 3:
	                case 'year':
	                    viewMode = 3;
	                    break;
	                case 2:
	                case 'month':
	                    viewMode = 2;
	                    break;
	                case 1:
	                case 'day':
	                    viewMode = 1;
	                    break;
	                case 0:
	                case 'hour':
	                    viewMode = 0;
	                    break;
	            }

	            return viewMode;
	        },
	        headTemplate: '<thead>' +
	        '<tr>' +
	        '<th class="prev"><i class="{iconType} {leftArrow}"/></th>' +
	        '<th colspan="5" class="switch"></th>' +
	        '<th class="next"><i class="{iconType} {rightArrow}"/></th>' +
	        '</tr>' +
	        '</thead>',
	        headTemplateV3: '<thead>' +
	        '<tr>' +
	        '<th class="prev"><span class="{iconType} {leftArrow}"></span> </th>' +
	        '<th colspan="5" class="switch"></th>' +
	        '<th class="next"><span class="{iconType} {rightArrow}"></span> </th>' +
	        '</tr>' +
	        '</thead>',
	        contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
	        footTemplate: '<tfoot>' +
	        '<tr><th colspan="7" class="today"></th></tr>' +
	        '<tr><th colspan="7" class="clear"></th></tr>' +
	        '</tfoot>'
	    };
	    DPGlobal.template = '<div class="datetimepicker">' +
	        '<div class="datetimepicker-minutes">' +
	        '<table class=" table-condensed">' +
	        DPGlobal.headTemplate +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-hours">' +
	        '<table class=" table-condensed">' +
	        DPGlobal.headTemplate +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-days">' +
	        '<table class=" table-condensed">' +
	        DPGlobal.headTemplate +
	        '<tbody></tbody>' +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-months">' +
	        '<table class="table-condensed">' +
	        DPGlobal.headTemplate +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-years">' +
	        '<table class="table-condensed">' +
	        DPGlobal.headTemplate +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '</div>';
	    DPGlobal.templateV3 = '<div class="datetimepicker">' +
	        '<div class="datetimepicker-minutes">' +
	        '<table class=" table-condensed">' +
	        DPGlobal.headTemplateV3 +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-hours">' +
	        '<table class=" table-condensed">' +
	        DPGlobal.headTemplateV3 +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-days">' +
	        '<table class=" table-condensed">' +
	        DPGlobal.headTemplateV3 +
	        '<tbody></tbody>' +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-months">' +
	        '<table class="table-condensed">' +
	        DPGlobal.headTemplateV3 +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '<div class="datetimepicker-years">' +
	        '<table class="table-condensed">' +
	        DPGlobal.headTemplateV3 +
	        DPGlobal.contTemplate +
	        DPGlobal.footTemplate +
	        '</table>' +
	        '</div>' +
	        '</div>';
	    $.fn.datetimepicker.DPGlobal = DPGlobal;

	    /* DATETIMEPICKER NO CONFLICT
	     * =================== */

	    $.fn.datetimepicker.noConflict = function () {
	        $.fn.datetimepicker = old;
	        return this;
	    };

	    /* DATETIMEPICKER DATA-API
	     * ================== */

	    $(document).on(
	        'focus.datetimepicker.data-api click.datetimepicker.data-api',
	        '[data-provide="datetimepicker"]',
	        function (e) {
	            var $this = $(this);
	            if ($this.data('datetimepicker')) return;
	            e.preventDefault();
	            // component click requires us to explicitly show it
	            $this.datetimepicker('show');
	        }
	    );
	    $(function () {
	        $('[data-provide="datetimepicker-inline"]').datetimepicker();
	    });

	}));


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(jQuery) {/**
	 * Simplified Chinese translation for bootstrap-datetimepicker
	 * Yuan Cheung <advanimal@gmail.com>
	 */
	;(function($){
		$.fn.datetimepicker.dates['zh-CN'] = {
				days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
				daysShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六", "周日"],
				daysMin:  ["日", "一", "二", "三", "四", "五", "六", "日"],
				months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
				monthsShort: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
				today: "今天",
				suffix: [],
				meridiem: ["上午", "下午"]
		};
	}(jQuery));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 20 */
/***/ (function(module, exports) {

	var rank = 2;
	var log = {
	    debug: function(msg) {
	        if (console && rank >= 2) {
	            console.debug("debug:" + msg);
	        }
	    },
	    info: function(msg) {
	        if (console && rank >= 1) {
	            console.info("info:" + msg);
	        }
	    },
	    err: function(msg) {
	        if (console && rank >= 0) {
	            console.error("error:" + msg);
	        }
	    }
	};

	module.exports = log;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Created by brave on 17/3/28.
	 */

	var env = ("uat");
	var envHost = ("https://hms-uat.test-cignacmb.com");
	// var source = 'akg';
	var source = 'akg';
	var serverUrl = '/gis_server';
	var lifeTimeInsurancePeriod = 100;//终生保险起期间
	var object = {
	    order_type: 502,//默认个别产品代号
	    source: source,
	    companyName: '安康万家团体重大疾病保险',
	    pay_year_flag: 'Y',
	    lifeTimeInsurancePeriod: lifeTimeInsurancePeriod,
	    companyShortName: '安康万家团体重大疾病保险',
	    envHost: envHost,
	    env: env,
	    serverUrl: serverUrl,
	    host: '',//项目主机
	    loginCodeUrl: serverUrl + '/' + env + '/getAuthImage',//上传文件的主机ip及相对路径
	    payUrl: 'http://esales-old.test-cignacmb.com/payment-uat1/index.xhtml',//上传文件的主机ip及相对路径
	    appName: serverUrl + '/' + env + '/op/' + source,//项目接口appName
	    payAppName: serverUrl + '/' + env,//用于支付成功回调页获取列表appName
	    uploadFileAppName: serverUrl + '/' + env + '/file/' + source,//项目接口appName
	    notifyConfirmUrl: serverUrl + '/' + env + '/notifyConfirm?source=' + source,//项目下载投保确认书路径
	    downLoadBodyCheckUrl: serverUrl + '/' + env + '/downLoadBodyCheck?source=' + source,//项目下载投保确认书路径
	    downloadConfirmUrl: serverUrl + '/' + env + '/downloadConfirm?source=' + source,//项目下载投保确认书路径
	    previewDownloadFileUrl: serverUrl + '/' + env + '/downLoadBodyCheck?source=' + source,//项目下载投保确认书路径
	    notLoginRedirectUrl: serverUrl + '/' + env + '/opr/' + source + '/userIdentification',//项目下载投保确认书路径
	    token: 'kohler-mKeyTest',
	    backendUrl: serverUrl + "/" + env + "/far/",
	    backendUrl2: serverUrl + "/" + env
	};
	if (env == 'uat' || env == 'uat2') {
	    object.payUrl = 'http://esales-old.test-cignacmb.com/payment-uat2/index.xhtml'
	    object.faceMatchingUrl = 'https://member-uat.test-cignacmb.com/support/validateVideo';//人脸识别url
	}
	if (env == 'prd') {
	    object.notLoginRedirectUrl = serverUrl + '/' + env + '/opr/' + source + '/userIdentification';
	    object.faceMatchingUrl = 'https://member.cignacmb.com/support/validateVideo'; //人脸识别url
	}
	module.exports = object;

/***/ }),
/* 22 */,
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, avalon) {/*!
	built in 2018-2-7:20:17 version 2.2.10 by 司徒正美
	https://github.com/RubyLouvre/avalon/tree/2.2.9
	修复ms-for循环生成option与ms-deplex的联动问题
	解决 IE8 html 属性中的中文被转成 unicode 字符串问题 
	修复多个计算属性不更新的问题

	*/(function (global, factory) {
	     true ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.avalon = factory();
	})(this, function () {
	    'use strict';

	    var win = typeof window === 'object' ? window : typeof global === 'object' ? global : {};

	    var inBrowser = !!win.location && win.navigator;
	    /* istanbul ignore if  */

	    var document$1 = inBrowser ? win.document : {
	        createElement: Object,
	        createElementNS: Object,
	        documentElement: 'xx',
	        contains: Boolean
	    };
	    var root = inBrowser ? document$1.documentElement : {
	        outerHTML: 'x'
	    };

	    var versions = {
	        objectobject: 7, //IE7-8
	        objectundefined: 6, //IE6
	        undefinedfunction: NaN, // other modern browsers
	        undefinedobject: NaN //Mobile Safari 8.0.0 (iOS 8.4.0) 
	        //objectfunction chrome 47
	    };
	    /* istanbul ignore next  */
	    var msie$1 = document$1.documentMode || versions[typeof document$1.all + typeof XMLHttpRequest];

	    var modern = /NaN|undefined/.test(msie$1) || msie$1 > 8;

	    /*
	     https://github.com/rsms/js-lru
	     entry             entry             entry             entry        
	     ______            ______            ______            ______       
	     | head |.newer => |      |.newer => |      |.newer => | tail |      
	     |  A   |          |  B   |          |  C   |          |  D   |      
	     |______| <= older.|______| <= older.|______| <= older.|______|      
	     
	     removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added 
	     */
	    function Cache(maxLength) {
	        // 标识当前缓存数组的大小
	        this.size = 0;
	        // 标识缓存数组能达到的最大长度
	        this.limit = maxLength;
	        //  head（最不常用的项），tail（最常用的项）全部初始化为undefined

	        this.head = this.tail = void 0;
	        this._keymap = {};
	    }

	    Cache.prototype = {
	        put: function put(key, value) {
	            var entry = {
	                key: key,
	                value: value
	            };
	            this._keymap[key] = entry;
	            if (this.tail) {
	                // 如果存在tail（缓存数组的长度不为0），将tail指向新的 entry
	                this.tail.newer = entry;
	                entry.older = this.tail;
	            } else {
	                // 如果缓存数组的长度为0，将head指向新的entry
	                this.head = entry;
	            }
	            this.tail = entry;
	            // 如果缓存数组达到上限，则先删除 head 指向的缓存对象
	            /* istanbul ignore if */
	            if (this.size === this.limit) {
	                this.shift();
	            } else {
	                this.size++;
	            }
	            return value;
	        },
	        shift: function shift() {
	            /* istanbul ignore next */
	            var entry = this.head;
	            /* istanbul ignore if */
	            if (entry) {
	                // 删除 head ，并改变指向
	                this.head = this.head.newer;
	                // 同步更新 _keymap 里面的属性值
	                this.head.older = entry.newer = entry.older = this._keymap[entry.key] = void 0;
	                delete this._keymap[entry.key]; //#1029
	                // 同步更新 缓存数组的长度
	                this.size--;
	            }
	        },
	        get: function get(key) {
	            var entry = this._keymap[key];
	            // 如果查找不到含有`key`这个属性的缓存对象
	            if (entry === void 0) return;
	            // 如果查找到的缓存对象已经是 tail (最近使用过的)
	            /* istanbul ignore if */
	            if (entry === this.tail) {
	                return entry.value;
	            }
	            // HEAD--------------TAIL
	            //   <.older   .newer>
	            //  <--- add direction --
	            //   A  B  C  <D>  E
	            if (entry.newer) {
	                // 处理 newer 指向
	                if (entry === this.head) {
	                    // 如果查找到的缓存对象是 head (最近最少使用过的)
	                    // 则将 head 指向原 head 的 newer 所指向的缓存对象
	                    this.head = entry.newer;
	                }
	                // 将所查找的缓存对象的下一级的 older 指向所查找的缓存对象的older所指向的值
	                // 例如：A B C D E
	                // 如果查找到的是D，那么将E指向C，不再指向D
	                entry.newer.older = entry.older; // C <-- E.
	            }
	            if (entry.older) {
	                // 处理 older 指向
	                // 如果查找到的是D，那么C指向E，不再指向D
	                entry.older.newer = entry.newer; // C. --> E
	            }
	            // 处理所查找到的对象的 newer 以及 older 指向
	            entry.newer = void 0; // D --x
	            // older指向之前使用过的变量，即D指向E
	            entry.older = this.tail; // D. --> E
	            if (this.tail) {
	                // 将E的newer指向D
	                this.tail.newer = entry; // E. <-- D
	            }
	            // 改变 tail 为D 
	            this.tail = entry;
	            return entry.value;
	        }
	    };

	    var delayCompile = {};

	    var directives = {};

	    function directive(name, opts) {
	        if (directives[name]) {
	            avalon.warn(name, 'directive have defined! ');
	        }
	        directives[name] = opts;
	        if (!opts.update) {
	            opts.update = function () {};
	        }
	        if (opts.delay) {
	            delayCompile[name] = 1;
	        }
	        return opts;
	    }

	    function delayCompileNodes(dirs) {
	        for (var i in delayCompile) {
	            if ('ms-' + i in dirs) {
	                return true;
	            }
	        }
	    }

	    var window$1 = win;
	    function avalon(el) {
	        return new avalon.init(el);
	    }

	    avalon.init = function (el) {
	        this[0] = this.element = el;
	    };

	    avalon.fn = avalon.prototype = avalon.init.prototype;

	    function shadowCopy(destination, source) {
	        for (var property in source) {
	            destination[property] = source[property];
	        }
	        return destination;
	    }
	    var rword = /[^, ]+/g;
	    var rnowhite = /\S+/g; //存在非空字符
	    var platform = {}; //用于放置平台差异的方法与属性


	    function oneObject(array, val) {
	        if (typeof array === 'string') {
	            array = array.match(rword) || [];
	        }
	        var result = {},
	            value = val !== void 0 ? val : 1;
	        for (var i = 0, n = array.length; i < n; i++) {
	            result[array[i]] = value;
	        }
	        return result;
	    }

	    var op = Object.prototype;
	    function quote(str) {
	        return avalon._quote(str);
	    }
	    var inspect = op.toString;
	    var ohasOwn = op.hasOwnProperty;
	    var ap = Array.prototype;

	    var hasConsole = typeof console === 'object';
	    avalon.config = { debug: true };
	    function log() {
	        if (hasConsole && avalon.config.debug) {
	            Function.apply.call(console.log, console, arguments);
	        }
	    }
	    function warn() {
	        if (hasConsole && avalon.config.debug) {
	            var method = console.warn || console.log;
	            // http://qiang106.iteye.com/blog/1721425
	            Function.apply.call(method, console, arguments);
	        }
	    }
	    function error(str, e) {
	        throw (e || Error)(str);
	    }
	    function noop() {}
	    function isObject(a) {
	        return a !== null && typeof a === 'object';
	    }

	    function range(start, end, step) {
	        // 用于生成整数数组
	        step || (step = 1);
	        if (end == null) {
	            end = start || 0;
	            start = 0;
	        }
	        var index = -1,
	            length = Math.max(0, Math.ceil((end - start) / step)),
	            result = new Array(length);
	        while (++index < length) {
	            result[index] = start;
	            start += step;
	        }
	        return result;
	    }

	    var rhyphen = /([a-z\d])([A-Z]+)/g;
	    function hyphen(target) {
	        //转换为连字符线风格
	        return target.replace(rhyphen, '$1-$2').toLowerCase();
	    }

	    var rcamelize = /[-_][^-_]/g;
	    function camelize(target) {
	        //提前判断，提高getStyle等的效率
	        if (!target || target.indexOf('-') < 0 && target.indexOf('_') < 0) {
	            return target;
	        }
	        //转换为驼峰风格
	        return target.replace(rcamelize, function (match) {
	            return match.charAt(1).toUpperCase();
	        });
	    }

	    var _slice = ap.slice;
	    function slice(nodes, start, end) {
	        return _slice.call(nodes, start, end);
	    }

	    var rhashcode = /\d\.\d{4}/;
	    //生成UUID http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript
	    function makeHashCode(prefix) {
	        /* istanbul ignore next*/
	        prefix = prefix || 'avalon';
	        /* istanbul ignore next*/
	        return String(Math.random() + Math.random()).replace(rhashcode, prefix);
	    }
	    //生成事件回调的UUID(用户通过ms-on指令)
	    function getLongID(fn) {
	        /* istanbul ignore next */
	        return fn.uuid || (fn.uuid = makeHashCode('e'));
	    }
	    var UUID = 1;
	    //生成事件回调的UUID(用户通过avalon.bind)
	    function getShortID(fn) {
	        /* istanbul ignore next */
	        return fn.uuid || (fn.uuid = '_' + ++UUID);
	    }

	    var rescape = /[-.*+?^${}()|[\]\/\\]/g;
	    function escapeRegExp(target) {
	        //http://stevenlevithan.com/regex/xregexp/
	        //将字符串安全格式化为正则表达式的源码
	        return (target + '').replace(rescape, '\\$&');
	    }

	    var eventHooks = {};
	    var eventListeners = {};
	    var validators = {};
	    var cssHooks = {};

	    window$1.avalon = avalon;

	    function createFragment() {
	        /* istanbul ignore next  */
	        return document$1.createDocumentFragment();
	    }

	    var rentities = /&[a-z0-9#]{2,10};/;
	    var temp = document$1.createElement('div');
	    shadowCopy(avalon, {
	        Array: {
	            merge: function merge(target, other) {
	                //合并两个数组 avalon2新增
	                target.push.apply(target, other);
	            },
	            ensure: function ensure(target, item) {
	                //只有当前数组不存在此元素时只添加它
	                if (target.indexOf(item) === -1) {
	                    return target.push(item);
	                }
	            },
	            removeAt: function removeAt(target, index) {
	                //移除数组中指定位置的元素，返回布尔表示成功与否
	                return !!target.splice(index, 1).length;
	            },
	            remove: function remove(target, item) {
	                //移除数组中第一个匹配传参的那个元素，返回布尔表示成功与否
	                var index = target.indexOf(item);
	                if (~index) return avalon.Array.removeAt(target, index);
	                return false;
	            }
	        },
	        evaluatorPool: new Cache(888),
	        parsers: {
	            number: function number(a) {
	                return a === '' ? '' : parseFloat(a) || 0;
	            },
	            string: function string(a) {
	                return a === null || a === void 0 ? '' : a + '';
	            },
	            "boolean": function boolean(a) {
	                if (a === '') return a;
	                return a === 'true' || a === '1';
	            }
	        },
	        _decode: function _decode(str) {
	            if (rentities.test(str)) {
	                temp.innerHTML = str;
	                return temp.innerText || temp.textContent;
	            }
	            return str;
	        }
	    });

	    //============== config ============
	    function config(settings) {
	        for (var p in settings) {
	            var val = settings[p];
	            if (typeof config.plugins[p] === 'function') {
	                config.plugins[p](val);
	            } else {
	                config[p] = val;
	            }
	        }
	        return this;
	    }

	    var plugins = {
	        interpolate: function interpolate(array) {
	            var openTag = array[0];
	            var closeTag = array[1];
	            if (openTag === closeTag) {
	                throw new SyntaxError('interpolate openTag cannot equal to closeTag');
	            }
	            var str = openTag + 'test' + closeTag;

	            if (/[<>]/.test(str)) {
	                throw new SyntaxError('interpolate cannot contains "<" or ">"');
	            }

	            config.openTag = openTag;
	            config.closeTag = closeTag;
	            var o = escapeRegExp(openTag);
	            var c = escapeRegExp(closeTag);

	            config.rtext = new RegExp(o + '(.+?)' + c, 'g');
	            config.rexpr = new RegExp(o + '([\\s\\S]*)' + c);
	        }
	    };
	    function createAnchor(nodeValue) {
	        return document$1.createComment(nodeValue);
	    }
	    config.plugins = plugins;
	    config({
	        interpolate: ['{{', '}}'],
	        debug: true
	    });
	    //============  config ============

	    shadowCopy(avalon, {
	        shadowCopy: shadowCopy,

	        oneObject: oneObject,
	        inspect: inspect,
	        ohasOwn: ohasOwn,
	        rword: rword,
	        version: "2.2.10",
	        vmodels: {},

	        directives: directives,
	        directive: directive,

	        eventHooks: eventHooks,
	        eventListeners: eventListeners,
	        validators: validators,
	        cssHooks: cssHooks,

	        log: log,
	        noop: noop,
	        warn: warn,
	        error: error,
	        config: config,

	        modern: modern,
	        msie: msie$1,
	        root: root,
	        document: document$1,
	        window: window$1,
	        inBrowser: inBrowser,

	        isObject: isObject,
	        range: range,
	        slice: slice,
	        hyphen: hyphen,
	        camelize: camelize,
	        escapeRegExp: escapeRegExp,
	        quote: quote,

	        makeHashCode: makeHashCode

	    });

	    /**
	     * 此模块用于修复语言的底层缺陷
	     */
	    function isNative(fn) {
	        return (/\[native code\]/.test(fn)
	        );
	    }

	    /* istanbul ignore if*/
	    if (!isNative('司徒正美'.trim)) {
	        var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
	        String.prototype.trim = function () {
	            return this.replace(rtrim, '');
	        };
	    }
	    if (!Object.create) {
	        Object.create = function () {
	            function F() {}

	            return function (o) {
	                if (arguments.length != 1) {
	                    throw new Error('Object.create implementation only accepts one parameter.');
	                }
	                F.prototype = o;
	                return new F();
	            };
	        }();
	    }
	    var hasDontEnumBug = !{
	        'toString': null
	    }.propertyIsEnumerable('toString');
	    var hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');
	    var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];
	    var dontEnumsLength = dontEnums.length;
	    /* istanbul ignore if*/
	    if (!isNative(Object.keys)) {
	        Object.keys = function (object) {
	            //ecma262v5 15.2.3.14
	            var theKeys = [];
	            var skipProto = hasProtoEnumBug && typeof object === 'function';
	            if (typeof object === 'string' || object && object.callee) {
	                for (var i = 0; i < object.length; ++i) {
	                    theKeys.push(String(i));
	                }
	            } else {
	                for (var name in object) {
	                    if (!(skipProto && name === 'prototype') && ohasOwn.call(object, name)) {
	                        theKeys.push(String(name));
	                    }
	                }
	            }

	            if (hasDontEnumBug) {
	                var ctor = object.constructor,
	                    skipConstructor = ctor && ctor.prototype === object;
	                for (var j = 0; j < dontEnumsLength; j++) {
	                    var dontEnum = dontEnums[j];
	                    if (!(skipConstructor && dontEnum === 'constructor') && ohasOwn.call(object, dontEnum)) {
	                        theKeys.push(dontEnum);
	                    }
	                }
	            }
	            return theKeys;
	        };
	    }
	    /* istanbul ignore if*/
	    if (!isNative(Array.isArray)) {
	        Array.isArray = function (a) {
	            return Object.prototype.toString.call(a) === '[object Array]';
	        };
	    }

	    /* istanbul ignore if*/
	    if (!isNative(isNative.bind)) {
	        /* istanbul ignore next*/
	        Function.prototype.bind = function (scope) {
	            if (arguments.length < 2 && scope === void 0) return this;
	            var fn = this,
	                argv = arguments;
	            return function () {
	                var args = [],
	                    i;
	                for (i = 1; i < argv.length; i++) {
	                    args.push(argv[i]);
	                }for (i = 0; i < arguments.length; i++) {
	                    args.push(arguments[i]);
	                }return fn.apply(scope, args);
	            };
	        };
	    }
	    //https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/slice
	    /**
	     * Shim for "fixing" IE's lack of support (IE < 9) for applying slice
	     * on host objects like NamedNodeMap, NodeList, and HTMLCollection
	     * (technically, since host objects have been implementation-dependent,
	     * at least before ES6, IE hasn't needed to work this way).
	     * Also works on strings, fixes IE < 9 to allow an explicit undefined
	     * for the 2nd argument (as in Firefox), and prevents errors when
	     * called on other DOM objects.
	     */

	    try {
	        // Can't be used with DOM elements in IE < 9
	        _slice.call(avalon.document.documentElement);
	    } catch (e) {
	        // Fails in IE < 9
	        // This will work for genuine arrays, array-like objects,
	        // NamedNodeMap (attributes, entities, notations),
	        // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),
	        // and will not fail on other DOM objects (as do DOM elements in IE < 9)
	        /* istanbul ignore next*/
	        ap.slice = function (begin, end) {
	            // IE < 9 gets unhappy with an undefined end argument
	            end = typeof end !== 'undefined' ? end : this.length;

	            // For native Array objects, we use the native slice function
	            if (Array.isArray(this)) {
	                return _slice.call(this, begin, end);
	            }

	            // For array like object we handle it ourselves.
	            var i,
	                cloned = [],
	                size,
	                len = this.length;

	            // Handle negative value for "begin"
	            var start = begin || 0;
	            start = start >= 0 ? start : len + start;

	            // Handle negative value for "end"
	            var upTo = end ? end : len;
	            if (end < 0) {
	                upTo = len + end;
	            }

	            // Actual expected size of the slice
	            size = upTo - start;

	            if (size > 0) {
	                cloned = new Array(size);
	                if (this.charAt) {
	                    for (i = 0; i < size; i++) {
	                        cloned[i] = this.charAt(start + i);
	                    }
	                } else {
	                    for (i = 0; i < size; i++) {
	                        cloned[i] = this[start + i];
	                    }
	                }
	            }

	            return cloned;
	        };
	    }
	    /* istanbul ignore next*/
	    function iterator(vars, body, ret) {
	        var fun = 'for(var ' + vars + 'i=0,n = this.length; i < n; i++){' + body.replace('_', '((i in this) && fn.call(scope,this[i],i,this))') + '}' + ret;
	        /* jshint ignore:start */
	        return Function('fn,scope', fun);
	        /* jshint ignore:end */
	    }
	    /* istanbul ignore if*/
	    if (!isNative(ap.map)) {
	        avalon.shadowCopy(ap, {
	            //定位操作，返回数组中第一个等于给定参数的元素的索引值。
	            indexOf: function indexOf(item, index) {
	                var n = this.length,
	                    i = ~~index;
	                if (i < 0) i += n;
	                for (; i < n; i++) {
	                    if (this[i] === item) return i;
	                }return -1;
	            },
	            //定位操作，同上，不过是从后遍历。
	            lastIndexOf: function lastIndexOf(item, index) {
	                var n = this.length,
	                    i = index == null ? n - 1 : index;
	                if (i < 0) i = Math.max(0, n + i);
	                for (; i >= 0; i--) {
	                    if (this[i] === item) return i;
	                }return -1;
	            },
	            //迭代操作，将数组的元素挨个儿传入一个函数中执行。Prototype.js的对应名字为each。
	            forEach: iterator('', '_', ''),
	            //迭代类 在数组中的每个项上运行一个函数，如果此函数的值为真，则此元素作为新数组的元素收集起来，并返回新数组
	            filter: iterator('r=[],j=0,', 'if(_)r[j++]=this[i]', 'return r'),
	            //收集操作，将数组的元素挨个儿传入一个函数中执行，然后把它们的返回值组成一个新数组返回。Prototype.js的对应名字为collect。
	            map: iterator('r=[],', 'r[i]=_', 'return r'),
	            //只要数组中有一个元素满足条件（放进给定函数返回true），那么它就返回true。Prototype.js的对应名字为any。
	            some: iterator('', 'if(_)return true', 'return false'),
	            //只有数组中的元素都满足条件（放进给定函数返回true），它才返回true。Prototype.js的对应名字为all。
	            every: iterator('', 'if(!_)return false', 'return true')
	        });
	    }

	    //这里放置存在异议的方法
	    var compaceQuote = function () {
	        //https://github.com/bestiejs/json3/blob/master/lib/json3.js
	        var Escapes = {
	            92: "\\\\",
	            34: '\\"',
	            8: "\\b",
	            12: "\\f",
	            10: "\\n",
	            13: "\\r",
	            9: "\\t"
	        };

	        var leadingZeroes = '000000';
	        var toPaddedString = function toPaddedString(width, value) {
	            return (leadingZeroes + (value || 0)).slice(-width);
	        };
	        var unicodePrefix = '\\u00';
	        var escapeChar = function escapeChar(character) {
	            var charCode = character.charCodeAt(0),
	                escaped = Escapes[charCode];
	            if (escaped) {
	                return escaped;
	            }
	            return unicodePrefix + toPaddedString(2, charCode.toString(16));
	        };
	        var reEscape = /[\x00-\x1f\x22\x5c]/g;
	        return function (value) {
	            /* istanbul ignore next */
	            reEscape.lastIndex = 0;
	            /* istanbul ignore next */
	            return '"' + (reEscape.test(value) ? String(value).replace(reEscape, escapeChar) : value) + '"';
	        };
	    }();
	    try {
	        avalon._quote = msie <= 8 ? compaceQuote : JSON.stringify;
	    } catch (e) {
	        /* istanbul ignore next  */
	        avalon._quote = compaceQuote;
	    }

	    var class2type = {};
	    'Boolean Number String Function Array Date RegExp Object Error'.replace(avalon.rword, function (name) {
	        class2type['[object ' + name + ']'] = name.toLowerCase();
	    });

	    avalon.type = function (obj) {
	        //取得目标的类型
	        if (obj == null) {
	            return String(obj);
	        }
	        // 早期的webkit内核浏览器实现了已废弃的ecma262v4标准，可以将正则字面量当作函数使用，因此typeof在判定正则时会返回function
	        return typeof obj === 'object' || typeof obj === 'function' ? class2type[inspect.call(obj)] || 'object' : typeof obj;
	    };

	    var rfunction = /^\s*\bfunction\b/;

	    avalon.isFunction = /* istanbul ignore if */typeof alert === 'object' ? function (fn) {
	        /* istanbul ignore next */
	        try {
	            /* istanbul ignore next */
	            return rfunction.test(fn + '');
	        } catch (e) {
	            /* istanbul ignore next */
	            return false;
	        }
	    } : function (fn) {
	        return inspect.call(fn) === '[object Function]';
	    };

	    // 利用IE678 window == document为true,document == window竟然为false的神奇特性
	    // 标准浏览器及IE9，IE10等使用 正则检测
	    /* istanbul ignore next */
	    function isWindowCompact(obj) {
	        if (!obj) {
	            return false;
	        }
	        return obj == obj.document && obj.document != obj; //jshint ignore:line
	    }

	    var rwindow = /^\[object (?:Window|DOMWindow|global)\]$/;

	    function isWindowModern(obj) {
	        return rwindow.test(inspect.call(obj));
	    }

	    avalon.isWindow = isWindowModern(avalon.window) ? isWindowModern : isWindowCompact;

	    var enu;
	    var enumerateBUG;
	    for (enu in avalon({})) {
	        break;
	    }

	    enumerateBUG = enu !== '0'; //IE6下为true, 其他为false

	    /*判定是否是一个朴素的javascript对象（Object），不是DOM对象，不是BOM对象，不是自定义类的实例*/
	    /* istanbul ignore next */
	    function isPlainObjectCompact(obj, key) {
	        if (!obj || avalon.type(obj) !== 'object' || obj.nodeType || avalon.isWindow(obj)) {
	            return false;
	        }
	        try {
	            //IE内置对象没有constructor
	            if (obj.constructor && !ohasOwn.call(obj, 'constructor') && !ohasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {
	                return false;
	            }
	            var isVBscript = obj.$vbthis;
	        } catch (e) {
	            //IE8 9会在这里抛错
	            return false;
	        }
	        /* istanbul ignore if */
	        if (enumerateBUG) {
	            for (key in obj) {
	                return ohasOwn.call(obj, key);
	            }
	        }
	        for (key in obj) {}
	        return key === undefined$1 || ohasOwn.call(obj, key);
	    }

	    /* istanbul ignore next */
	    function isPlainObjectModern(obj) {
	        // 简单的 typeof obj === 'object'检测，会致使用isPlainObject(window)在opera下通不过
	        return inspect.call(obj) === '[object Object]' && Object.getPrototypeOf(obj) === Object.prototype;
	    }
	    /* istanbul ignore next */
	    avalon.isPlainObject = /\[native code\]/.test(Object.getPrototypeOf) ? isPlainObjectModern : isPlainObjectCompact;

	    var rcanMix = /object|function/;

	    //与jQuery.extend方法，可用于浅拷贝，深拷贝
	    /* istanbul ignore next */
	    avalon.mix = avalon.fn.mix = function () {
	        var n = arguments.length,
	            isDeep = false,
	            i = 0,
	            array = [];
	        if (arguments[0] === true) {
	            isDeep = true;
	            i = 1;
	        }
	        //将所有非空对象变成空对象
	        for (; i < n; i++) {
	            var el = arguments[i];
	            el = el && rcanMix.test(typeof el) ? el : {};
	            array.push(el);
	        }
	        if (array.length === 1) {
	            array.unshift(this);
	        }
	        return innerExtend(isDeep, array);
	    };
	    var undefined$1;

	    function innerExtend(isDeep, array) {
	        var target = array[0],
	            copyIsArray,
	            clone,
	            name;
	        for (var i = 1, length = array.length; i < length; i++) {
	            //只处理非空参数
	            var options = array[i];
	            var noCloneArrayMethod = Array.isArray(options);
	            for (name in options) {
	                if (noCloneArrayMethod && !options.hasOwnProperty(name)) {
	                    continue;
	                }
	                try {
	                    var src = target[name];
	                    var copy = options[name]; //当options为VBS对象时报错
	                } catch (e) {
	                    continue;
	                }

	                // 防止环引用
	                if (target === copy) {
	                    continue;
	                }
	                if (isDeep && copy && (avalon.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {

	                    if (copyIsArray) {
	                        copyIsArray = false;
	                        clone = src && Array.isArray(src) ? src : [];
	                    } else {
	                        clone = src && avalon.isPlainObject(src) ? src : {};
	                    }

	                    target[name] = innerExtend(isDeep, [clone, copy]);
	                } else if (copy !== undefined$1) {
	                    target[name] = copy;
	                }
	            }
	        }
	        return target;
	    }

	    var rarraylike = /(Array|List|Collection|Map|Arguments)\]$/;
	    /*判定是否类数组，如节点集合，纯数组，arguments与拥有非负整数的length属性的纯JS对象*/
	    /* istanbul ignore next */
	    function isArrayLike(obj) {
	        if (!obj) return false;
	        var n = obj.length;
	        if (n === n >>> 0) {
	            //检测length属性是否为非负整数
	            var type = inspect.call(obj);
	            if (rarraylike.test(type)) return true;
	            if (type !== '[object Object]') return false;
	            try {
	                if ({}.propertyIsEnumerable.call(obj, 'length') === false) {
	                    //如果是原生对象
	                    return rfunction.test(obj.item || obj.callee);
	                }
	                return true;
	            } catch (e) {
	                //IE的NodeList直接抛错
	                return !obj.window; //IE6-8 window
	            }
	        }
	        return false;
	    }

	    avalon.each = function (obj, fn) {
	        if (obj) {
	            //排除null, undefined
	            var i = 0;
	            if (isArrayLike(obj)) {
	                for (var n = obj.length; i < n; i++) {
	                    if (fn(i, obj[i]) === false) break;
	                }
	            } else {
	                for (i in obj) {
	                    if (obj.hasOwnProperty(i) && fn(i, obj[i]) === false) {
	                        break;
	                    }
	                }
	            }
	        }
	    };
	    (function () {
	        var welcomeIntro = ["%cavalon.js %c" + avalon.version + " %cin debug mode, %cmore...", "color: rgb(114, 157, 52); font-weight: normal;", "color: rgb(85, 85, 85); font-weight: normal;", "color: rgb(85, 85, 85); font-weight: normal;", "color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;"];
	        var welcomeMessage = "You're running avalon in debug mode - messages will be printed to the console to help you fix problems and optimise your application.\n\n" + 'To disable debug mode, add this line at the start of your app:\n\n  avalon.config({debug: false});\n\n' + 'Debug mode also automatically shut down amicably when your app is minified.\n\n' + "Get help and support:\n  https://segmentfault.com/t/avalon\n  http://avalonjs.coding.me/\n  http://www.baidu-x.com/?q=avalonjs\n  http://www.avalon.org.cn/\n\nFound a bug? Raise an issue:\n  https://github.com/RubyLouvre/avalon/issues\n\n";
	        if (typeof console === 'object') {
	            var con = console;
	            var method = con.groupCollapsed || con.log;
	            Function.apply.call(method, con, welcomeIntro);
	            con.log(welcomeMessage);
	            if (method !== console.log) {
	                con.groupEnd(welcomeIntro);
	            }
	        }
	    })();

	    function toFixedFix(n, prec) {
	        var k = Math.pow(10, prec);
	        return '' + (Math.round(n * k) / k).toFixed(prec);
	    }
	    function numberFilter(number, decimals, point, thousands) {
	        //https://github.com/txgruppi/number_format
	        //form http://phpjs.org/functions/number_format/
	        //number 必需，要格式化的数字
	        //decimals 可选，规定多少个小数位。
	        //point 可选，规定用作小数点的字符串（默认为 . ）。
	        //thousands 可选，规定用作千位分隔符的字符串（默认为 , ），如果设置了该参数，那么所有其他参数都是必需的。
	        number = (number + '').replace(/[^0-9+\-Ee.]/g, '');
	        var n = !isFinite(+number) ? 0 : +number,
	            prec = !isFinite(+decimals) ? 3 : Math.abs(decimals),
	            sep = typeof thousands === 'string' ? thousands : ",",
	            dec = point || ".",
	            s = '';

	        // Fix for IE parseFloat(0.55).toFixed(0) = 0;
	        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
	        if (s[0].length > 3) {
	            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
	        }
	        /** //好像没有用
	         var s1 = s[1] || ''
	        
	          if (s1.length < prec) {
	                  s1 += new Array(prec - s[1].length + 1).join('0')
	                  s[1] = s1
	          }
	          **/
	        return s.join(dec);
	    }

	    var rscripts = /<script[^>]*>([\S\s]*?)<\/script\s*>/gim;
	    var ron = /\s+(on[^=\s]+)(?:=("[^"]*"|'[^']*'|[^\s>]+))?/g;
	    var ropen = /<\w+\b(?:(["'])[^"]*?(\1)|[^>])*>/ig;
	    var rsanitize = {
	        a: /\b(href)\=("javascript[^"]*"|'javascript[^']*')/ig,
	        img: /\b(src)\=("javascript[^"]*"|'javascript[^']*')/ig,
	        form: /\b(action)\=("javascript[^"]*"|'javascript[^']*')/ig
	    };

	    //https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	    //    <a href="javasc&NewLine;ript&colon;alert('XSS')">chrome</a> 
	    //    <a href="data:text/html;base64, PGltZyBzcmM9eCBvbmVycm9yPWFsZXJ0KDEpPg==">chrome</a>
	    //    <a href="jav	ascript:alert('XSS');">IE67chrome</a>
	    //    <a href="jav&#x09;ascript:alert('XSS');">IE67chrome</a>
	    //    <a href="jav&#x0A;ascript:alert('XSS');">IE67chrome</a>
	    function sanitizeFilter(str) {
	        return str.replace(rscripts, "").replace(ropen, function (a, b) {
	            var match = a.toLowerCase().match(/<(\w+)\s/);
	            if (match) {
	                //处理a标签的href属性，img标签的src属性，form标签的action属性
	                var reg = rsanitize[match[1]];
	                if (reg) {
	                    a = a.replace(reg, function (s, name, value) {
	                        var quote = value.charAt(0);
	                        return name + "=" + quote + "javascript:void(0)" + quote; // jshint ignore:line
	                    });
	                }
	            }
	            return a.replace(ron, " ").replace(/\s+/g, " "); //移除onXXX事件
	        });
	    }

	    /*
	     'yyyy': 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)
	     'yy': 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)
	     'y': 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)
	     'MMMM': Month in year (January-December)
	     'MMM': Month in year (Jan-Dec)
	     'MM': Month in year, padded (01-12)
	     'M': Month in year (1-12)
	     'dd': Day in month, padded (01-31)
	     'd': Day in month (1-31)
	     'EEEE': Day in Week,(Sunday-Saturday)
	     'EEE': Day in Week, (Sun-Sat)
	     'HH': Hour in day, padded (00-23)
	     'H': Hour in day (0-23)
	     'hh': Hour in am/pm, padded (01-12)
	     'h': Hour in am/pm, (1-12)
	     'mm': Minute in hour, padded (00-59)
	     'm': Minute in hour (0-59)
	     'ss': Second in minute, padded (00-59)
	     's': Second in minute (0-59)
	     'a': am/pm marker
	     'Z': 4 digit (+sign) representation of the timezone offset (-1200-+1200)
	     format string can also be one of the following predefined localizable formats:
	     
	     'medium': equivalent to 'MMM d, y h:mm:ss a' for en_US locale (e.g. Sep 3, 2010 12:05:08 pm)
	     'short': equivalent to 'M/d/yy h:mm a' for en_US locale (e.g. 9/3/10 12:05 pm)
	     'fullDate': equivalent to 'EEEE, MMMM d,y' for en_US locale (e.g. Friday, September 3, 2010)
	     'longDate': equivalent to 'MMMM d, y' for en_US locale (e.g. September 3, 2010
	     'mediumDate': equivalent to 'MMM d, y' for en_US locale (e.g. Sep 3, 2010)
	     'shortDate': equivalent to 'M/d/yy' for en_US locale (e.g. 9/3/10)
	     'mediumTime': equivalent to 'h:mm:ss a' for en_US locale (e.g. 12:05:08 pm)
	     'shortTime': equivalent to 'h:mm a' for en_US locale (e.g. 12:05 pm)
	     */

	    function toInt(str) {
	        return parseInt(str, 10) || 0;
	    }

	    function padNumber(num, digits, trim) {
	        var neg = '';
	        /* istanbul ignore if*/
	        if (num < 0) {
	            neg = '-';
	            num = -num;
	        }
	        num = '' + num;
	        while (num.length < digits) {
	            num = '0' + num;
	        }if (trim) num = num.substr(num.length - digits);
	        return neg + num;
	    }

	    function dateGetter(name, size, offset, trim) {
	        return function (date) {
	            var value = date["get" + name]();
	            if (offset > 0 || value > -offset) value += offset;
	            if (value === 0 && offset === -12) {
	                /* istanbul ignore next*/
	                value = 12;
	            }
	            return padNumber(value, size, trim);
	        };
	    }

	    function dateStrGetter(name, shortForm) {
	        return function (date, formats) {
	            var value = date["get" + name]();
	            var get = (shortForm ? "SHORT" + name : name).toUpperCase();
	            return formats[get][value];
	        };
	    }

	    function timeZoneGetter(date) {
	        var zone = -1 * date.getTimezoneOffset();
	        var paddedZone = zone >= 0 ? "+" : "";
	        paddedZone += padNumber(Math[zone > 0 ? "floor" : "ceil"](zone / 60), 2) + padNumber(Math.abs(zone % 60), 2);
	        return paddedZone;
	    }
	    //取得上午下午
	    function ampmGetter(date, formats) {
	        return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];
	    }
	    var DATE_FORMATS = {
	        yyyy: dateGetter("FullYear", 4),
	        yy: dateGetter("FullYear", 2, 0, true),
	        y: dateGetter("FullYear", 1),
	        MMMM: dateStrGetter("Month"),
	        MMM: dateStrGetter("Month", true),
	        MM: dateGetter("Month", 2, 1),
	        M: dateGetter("Month", 1, 1),
	        dd: dateGetter("Date", 2),
	        d: dateGetter("Date", 1),
	        HH: dateGetter("Hours", 2),
	        H: dateGetter("Hours", 1),
	        hh: dateGetter("Hours", 2, -12),
	        h: dateGetter("Hours", 1, -12),
	        mm: dateGetter("Minutes", 2),
	        m: dateGetter("Minutes", 1),
	        ss: dateGetter("Seconds", 2),
	        s: dateGetter("Seconds", 1),
	        sss: dateGetter("Milliseconds", 3),
	        EEEE: dateStrGetter("Day"),
	        EEE: dateStrGetter("Day", true),
	        a: ampmGetter,
	        Z: timeZoneGetter
	    };
	    var rdateFormat = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/;
	    var raspnetjson = /^\/Date\((\d+)\)\/$/;
	    function dateFilter(date, format) {
	        var locate = dateFilter.locate,
	            text = "",
	            parts = [],
	            fn,
	            match;
	        format = format || "mediumDate";
	        format = locate[format] || format;
	        if (typeof date === "string") {
	            if (/^\d+$/.test(date)) {
	                date = toInt(date);
	            } else if (raspnetjson.test(date)) {
	                date = +RegExp.$1;
	            } else {
	                var trimDate = date.trim();
	                var dateArray = [0, 0, 0, 0, 0, 0, 0];
	                var oDate = new Date(0);
	                //取得年月日
	                trimDate = trimDate.replace(/^(\d+)\D(\d+)\D(\d+)/, function (_, a, b, c) {
	                    var array = c.length === 4 ? [c, a, b] : [a, b, c];
	                    dateArray[0] = toInt(array[0]); //年
	                    dateArray[1] = toInt(array[1]) - 1; //月
	                    dateArray[2] = toInt(array[2]); //日
	                    return "";
	                });
	                var dateSetter = oDate.setFullYear;
	                var timeSetter = oDate.setHours;
	                trimDate = trimDate.replace(/[T\s](\d+):(\d+):?(\d+)?\.?(\d)?/, function (_, a, b, c, d) {
	                    dateArray[3] = toInt(a); //小时
	                    dateArray[4] = toInt(b); //分钟
	                    dateArray[5] = toInt(c); //秒
	                    if (d) {
	                        //毫秒
	                        dateArray[6] = Math.round(parseFloat("0." + d) * 1000);
	                    }
	                    return "";
	                });
	                var tzHour = 0;
	                var tzMin = 0;
	                trimDate = trimDate.replace(/Z|([+-])(\d\d):?(\d\d)/, function (z, symbol, c, d) {
	                    dateSetter = oDate.setUTCFullYear;
	                    timeSetter = oDate.setUTCHours;
	                    if (symbol) {
	                        tzHour = toInt(symbol + c);
	                        tzMin = toInt(symbol + d);
	                    }
	                    return '';
	                });

	                dateArray[3] -= tzHour;
	                dateArray[4] -= tzMin;
	                dateSetter.apply(oDate, dateArray.slice(0, 3));
	                timeSetter.apply(oDate, dateArray.slice(3));
	                date = oDate;
	            }
	        }
	        if (typeof date === 'number') {
	            date = new Date(date);
	        }

	        while (format) {
	            match = rdateFormat.exec(format);
	            /* istanbul ignore else */
	            if (match) {
	                parts = parts.concat(match.slice(1));
	                format = parts.pop();
	            } else {
	                parts.push(format);
	                format = null;
	            }
	        }
	        parts.forEach(function (value) {
	            fn = DATE_FORMATS[value];
	            text += fn ? fn(date, locate) : value.replace(/(^'|'$)/g, "").replace(/''/g, "'");
	        });
	        return text;
	    }

	    var locate = {
	        AMPMS: {
	            0: '上午',
	            1: '下午'
	        },
	        DAY: {
	            0: '星期日',
	            1: '星期一',
	            2: '星期二',
	            3: '星期三',
	            4: '星期四',
	            5: '星期五',
	            6: '星期六'
	        },
	        MONTH: {
	            0: '1月',
	            1: '2月',
	            2: '3月',
	            3: '4月',
	            4: '5月',
	            5: '6月',
	            6: '7月',
	            7: '8月',
	            8: '9月',
	            9: '10月',
	            10: '11月',
	            11: '12月'
	        },
	        SHORTDAY: {
	            '0': '周日',
	            '1': '周一',
	            '2': '周二',
	            '3': '周三',
	            '4': '周四',
	            '5': '周五',
	            '6': '周六'
	        },
	        fullDate: 'y年M月d日EEEE',
	        longDate: 'y年M月d日',
	        medium: 'yyyy-M-d H:mm:ss',
	        mediumDate: 'yyyy-M-d',
	        mediumTime: 'H:mm:ss',
	        'short': 'yy-M-d ah:mm',
	        shortDate: 'yy-M-d',
	        shortTime: 'ah:mm'
	    };
	    locate.SHORTMONTH = locate.MONTH;
	    dateFilter.locate = locate;

	    /**
	    $$skipArray:是系统级通用的不可监听属性
	    $skipArray: 是当前对象特有的不可监听属性
	    
	     不同点是
	     $$skipArray被hasOwnProperty后返回false
	     $skipArray被hasOwnProperty后返回true
	     */
	    var falsy;
	    var $$skipArray = {
	        $id: falsy,
	        $render: falsy,
	        $track: falsy,
	        $element: falsy,
	        $computed: falsy,
	        $watch: falsy,
	        $fire: falsy,
	        $events: falsy,
	        $accessors: falsy,
	        $hashcode: falsy,
	        $mutations: falsy,
	        $vbthis: falsy,
	        $vbsetter: falsy
	    };

	    /*
	    https://github.com/hufyhang/orderBy/blob/master/index.js
	    */

	    function orderBy(array, by, decend) {
	        var type = avalon.type(array);
	        if (type !== 'array' && type !== 'object') throw 'orderBy只能处理对象或数组';
	        var criteria = typeof by == 'string' ? function (el) {
	            return el && el[by];
	        } : typeof by === 'function' ? by : function (el) {
	            return el;
	        };
	        var mapping = {};
	        var temp = [];
	        __repeat(array, Array.isArray(array), function (key) {
	            var val = array[key];
	            var k = criteria(val, key);
	            if (k in mapping) {
	                mapping[k].push(key);
	            } else {
	                mapping[k] = [key];
	            }
	            temp.push(k);
	        });

	        temp.sort();
	        if (decend < 0) {
	            temp.reverse();
	        }
	        var _array = type === 'array';
	        var target = _array ? [] : {};
	        return recovery(target, temp, function (k) {
	            var key = mapping[k].shift();
	            if (_array) {
	                target.push(array[key]);
	            } else {
	                target[key] = array[key];
	            }
	        });
	    }

	    function __repeat(array, isArray$$1, cb) {
	        if (isArray$$1) {
	            array.forEach(function (val, index) {
	                cb(index);
	            });
	        } else if (typeof array.$track === 'string') {
	            array.$track.replace(/[^☥]+/g, function (k) {
	                cb(k);
	            });
	        } else {
	            for (var i in array) {
	                if (array.hasOwnProperty(i)) {
	                    cb(i);
	                }
	            }
	        }
	    }
	    function filterBy(array, search) {
	        var type = avalon.type(array);
	        if (type !== 'array' && type !== 'object') throw 'filterBy只能处理对象或数组';
	        var args = avalon.slice(arguments, 2);
	        var stype = avalon.type(search);
	        if (stype === 'function') {
	            var criteria = search._orig || search;
	        } else if (stype === 'string' || stype === 'number') {
	            if (search === '') {
	                return array;
	            } else {
	                var reg = new RegExp(avalon.escapeRegExp(search), 'i');
	                criteria = function criteria(el) {
	                    return reg.test(el);
	                };
	            }
	        } else {
	            return array;
	        }
	        var isArray$$1 = type === 'array';
	        var target = isArray$$1 ? [] : {};
	        __repeat(array, isArray$$1, function (key) {
	            var val = array[key];
	            if (criteria.apply({
	                key: key
	            }, [val, key].concat(args))) {
	                if (isArray$$1) {
	                    target.push(val);
	                } else {
	                    target[key] = val;
	                }
	            }
	        });
	        return target;
	    }

	    function selectBy(data, array, defaults) {
	        if (avalon.isObject(data) && !Array.isArray(data)) {
	            var target = [];
	            return recovery(target, array, function (name) {
	                target.push(data.hasOwnProperty(name) ? data[name] : defaults ? defaults[name] : '');
	            });
	        } else {
	            return data;
	        }
	    }

	    function limitBy(input, limit, begin) {
	        var type = avalon.type(input);
	        if (type !== 'array' && type !== 'object') throw 'limitBy只能处理对象或数组';
	        //必须是数值
	        if (typeof limit !== 'number') {
	            return input;
	        }
	        //不能为NaN
	        if (limit !== limit) {
	            return input;
	        }
	        //将目标转换为数组
	        if (type === 'object') {
	            input = convertArray(input, false);
	        }
	        var n = input.length;
	        limit = Math.floor(Math.min(n, limit));
	        begin = typeof begin === 'number' ? begin : 0;
	        if (begin < 0) {
	            begin = Math.max(0, n + begin);
	        }
	        var data = [];
	        for (var i = begin; i < n; i++) {
	            if (data.length === limit) {
	                break;
	            }
	            data.push(input[i]);
	        }
	        var isArray$$1 = type === 'array';
	        if (isArray$$1) {
	            return data;
	        }
	        var target = {};
	        return recovery(target, data, function (el) {
	            target[el.key] = el.value;
	        });
	    }

	    function recovery(ret, array, callback) {
	        for (var i = 0, n = array.length; i < n; i++) {
	            callback(array[i]);
	        }
	        return ret;
	    }

	    //Chrome谷歌浏览器中js代码Array.sort排序的bug乱序解决办法
	    //http://www.cnblogs.com/yzeng/p/3949182.html
	    function convertArray(array, isArray$$1) {
	        var ret = [],
	            i = 0;
	        __repeat(array, isArray$$1, function (key) {
	            ret[i] = {
	                oldIndex: i,
	                value: array[key],
	                key: key
	            };
	            i++;
	        });
	        return ret;
	    }

	    var eventFilters = {
	        stop: function stop(e) {
	            e.stopPropagation();
	            return e;
	        },
	        prevent: function prevent(e) {
	            e.preventDefault();
	            return e;
	        }
	    };
	    var keys = {
	        esc: 27,
	        tab: 9,
	        enter: 13,
	        space: 32,
	        del: 46,
	        up: 38,
	        left: 37,
	        right: 39,
	        down: 40
	    };
	    for (var name$1 in keys) {
	        (function (filter, key) {
	            eventFilters[filter] = function (e) {
	                if (e.which !== key) {
	                    e.$return = true;
	                }
	                return e;
	            };
	        })(name$1, keys[name$1]);
	    }

	    //https://github.com/teppeis/htmlspecialchars
	    function escapeFilter(str) {
	        if (str == null) return '';

	        return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#39;');
	    }

	    var filters = avalon.filters = {};

	    avalon.composeFilters = function () {
	        var args = arguments;
	        return function (value) {
	            for (var i = 0, arr; arr = args[i++];) {
	                var name = arr[0];
	                var filter = avalon.filters[name];
	                if (typeof filter === 'function') {
	                    arr[0] = value;
	                    try {
	                        value = filter.apply(0, arr);
	                    } catch (e) {}
	                }
	            }
	            return value;
	        };
	    };

	    avalon.escapeHtml = escapeFilter;

	    avalon.mix(filters, {
	        uppercase: function uppercase(str) {
	            return String(str).toUpperCase();
	        },
	        lowercase: function lowercase(str) {
	            return String(str).toLowerCase();
	        },
	        truncate: function truncate(str, length, end) {
	            //length，新字符串长度，truncation，新字符串的结尾的字段,返回新字符串
	            if (!str) {
	                return '';
	            }
	            str = String(str);
	            if (isNaN(length)) {
	                length = 30;
	            }
	            end = typeof end === "string" ? end : "...";
	            return str.length > length ? str.slice(0, length - end.length) + end : /* istanbul ignore else*/
	            str;
	        },

	        camelize: avalon.camelize,
	        date: dateFilter,
	        escape: escapeFilter,
	        sanitize: sanitizeFilter,
	        number: numberFilter,
	        currency: function currency(amount, symbol, fractionSize) {
	            return (symbol || '\xA5') + numberFilter(amount, isFinite(fractionSize) ? /* istanbul ignore else*/fractionSize : 2);
	        }
	    }, { filterBy: filterBy, orderBy: orderBy, selectBy: selectBy, limitBy: limitBy }, eventFilters);

	    var rcheckedType = /^(?:checkbox|radio)$/;

	    /* istanbul ignore next */
	    function fixElement(dest, src) {
	        if (dest.nodeType !== 1) {
	            return;
	        }
	        var nodeName = dest.nodeName.toLowerCase();

	        if (nodeName === "script") {
	            if (dest.text !== src.text) {
	                dest.type = "noexec";
	                dest.text = src.text;
	                dest.type = src.type || "";
	            }
	        } else if (nodeName === 'object') {
	            var params = src.childNodes;
	            if (dest.childNodes.length !== params.length) {
	                avalon.clearHTML(dest);
	                for (var i = 0, el; el = params[i++];) {
	                    dest.appendChild(el.cloneNode(true));
	                }
	            }
	        } else if (nodeName === 'input' && rcheckedType.test(src.nodeName)) {

	            dest.defaultChecked = dest.checked = src.checked;
	            if (dest.value !== src.value) {
	                dest.value = src.value;
	            }
	        } else if (nodeName === 'option') {
	            dest.defaultSelected = dest.selected = src.defaultSelected;
	        } else if (nodeName === 'input' || nodeName === 'textarea') {
	            dest.defaultValue = src.defaultValue;
	        }
	    }

	    /* istanbul ignore next */
	    function getAll(context) {
	        return typeof context.getElementsByTagName !== 'undefined' ? context.getElementsByTagName('*') : typeof context.querySelectorAll !== 'undefined' ? context.querySelectorAll('*') : [];
	    }

	    /* istanbul ignore next */
	    function fixClone(src) {
	        var target = src.cloneNode(true);
	        //http://www.myexception.cn/web/665613.html
	        // target.expando = null
	        var t = getAll(target);
	        var s = getAll(src);
	        for (var i = 0; i < s.length; i++) {
	            fixElement(t[i], s[i]);
	        }
	        return target;
	    }

	    /* istanbul ignore next */
	    function fixContains(root, el) {
	        try {
	            //IE6-8,游离于DOM树外的文本节点，访问parentNode有时会抛错
	            while (el = el.parentNode) {
	                if (el === root) return true;
	            }
	        } catch (e) {}
	        return false;
	    }

	    avalon.contains = fixContains;

	    avalon.cloneNode = function (a) {
	        return a.cloneNode(true);
	    };

	    //IE6-11的文档对象没有contains
	    /* istanbul ignore next */
	    function shimHack() {
	        if (msie$1 < 10) {
	            avalon.cloneNode = fixClone;
	        }
	        if (!document$1.contains) {
	            document$1.contains = function (b) {
	                return fixContains(document$1, b);
	            };
	        }
	        if (avalon.modern) {
	            if (!document$1.createTextNode('x').contains) {
	                Node.prototype.contains = function (child) {
	                    //IE6-8没有Node对象
	                    return fixContains(this, child);
	                };
	            }
	        }
	        //firefox 到11时才有outerHTML
	        function fixFF(prop, cb) {
	            if (!(prop in root) && HTMLElement.prototype.__defineGetter__) {
	                HTMLElement.prototype.__defineGetter__(prop, cb);
	            }
	        }
	        fixFF('outerHTML', function () {
	            var div = document$1.createElement('div');
	            div.appendChild(this);
	            return div.innerHTML;
	        });
	        fixFF('children', function () {
	            var children = [];
	            for (var i = 0, el; el = this.childNodes[i++];) {
	                if (el.nodeType === 1) {
	                    children.push(el);
	                }
	            }
	            return children;
	        });
	        fixFF('innerText', function () {
	            //firefox45+, chrome4+ http://caniuse.com/#feat=innertext
	            return this.textContent;
	        });
	    }

	    if (inBrowser) {
	        shimHack();
	    }

	    function ClassList(node) {
	        this.node = node;
	    }

	    ClassList.prototype = {
	        toString: function toString() {
	            var node = this.node;
	            var cls = node.className;
	            var str = typeof cls === 'string' ? cls : cls.baseVal;
	            var match = str.match(rnowhite);
	            return match ? match.join(' ') : '';
	        },
	        contains: function contains(cls) {
	            return (' ' + this + ' ').indexOf(' ' + cls + ' ') > -1;
	        },
	        add: function add(cls) {
	            if (!this.contains(cls)) {
	                this.set(this + ' ' + cls);
	            }
	        },
	        remove: function remove(cls) {
	            this.set((' ' + this + ' ').replace(' ' + cls + ' ', ' '));
	        },
	        set: function set(cls) {
	            cls = cls.trim();
	            var node = this.node;
	            if (typeof node.className === 'object') {
	                //SVG元素的className是一个对象 SVGAnimatedString { baseVal='', animVal=''}，只能通过set/getAttribute操作
	                node.setAttribute('class', cls);
	            } else {
	                node.className = cls;
	            }
	            if (!cls) {
	                node.removeAttribute('class');
	            }
	            //toggle存在版本差异，因此不使用它
	        }
	    };

	    function classListFactory(node) {
	        if (!('classList' in node)) {
	            node.classList = new ClassList(node);
	        }
	        return node.classList;
	    }

	    'add,remove'.replace(rword, function (method) {
	        avalon.fn[method + 'Class'] = function (cls) {
	            var el = this[0] || {};
	            //https://developer.mozilla.org/zh-CN/docs/Mozilla/Firefox/Releases/26
	            if (cls && typeof cls === 'string' && el.nodeType === 1) {
	                cls.replace(rnowhite, function (c) {
	                    classListFactory(el)[method](c);
	                });
	            }
	            return this;
	        };
	    });

	    avalon.shadowCopy(avalon.fn, {
	        hasClass: function hasClass(cls) {
	            var el = this[0] || {};
	            return el.nodeType === 1 && classListFactory(el).contains(cls);
	        },
	        toggleClass: function toggleClass(value, stateVal) {
	            var isBool = typeof stateVal === 'boolean';
	            var me = this;
	            String(value).replace(rnowhite, function (c) {
	                var state = isBool ? stateVal : !me.hasClass(c);
	                me[state ? 'addClass' : 'removeClass'](c);
	            });
	            return this;
	        }
	    });

	    var propMap = {}; //不规则的属性名映射


	    //防止压缩时出错
	    'accept-charset,acceptCharset|char,ch|charoff,chOff|class,className|for,htmlFor|http-equiv,httpEquiv'.replace(/[^\|]+/g, function (a) {
	        var k = a.split(',');
	        propMap[k[0]] = k[1];
	    });
	    /*
	    contenteditable不是布尔属性
	    http://www.zhangxinxu.com/wordpress/2016/01/contenteditable-plaintext-only/
	    contenteditable=''
	    contenteditable='events'
	    contenteditable='caret'
	    contenteditable='plaintext-only'
	    contenteditable='true'
	    contenteditable='false'
	     */
	    var bools = ['autofocus,autoplay,async,allowTransparency,checked,controls', 'declare,disabled,defer,defaultChecked,defaultSelected,', 'isMap,loop,multiple,noHref,noResize,noShade', 'open,readOnly,selected'].join(',');

	    bools.replace(/\w+/g, function (name) {
	        propMap[name.toLowerCase()] = name;
	    });

	    var anomaly = ['accessKey,bgColor,cellPadding,cellSpacing,codeBase,codeType,colSpan', 'dateTime,defaultValue,contentEditable,frameBorder,longDesc,maxLength,' + 'marginWidth,marginHeight,rowSpan,tabIndex,useMap,vSpace,valueType,vAlign'].join(',');

	    anomaly.replace(/\w+/g, function (name) {
	        propMap[name.toLowerCase()] = name;
	    });

	    //module.exports = propMap

	    function isVML(src) {
	        var nodeName = src.nodeName;
	        return nodeName.toLowerCase() === nodeName && !!src.scopeName && src.outerText === '';
	    }

	    var rvalidchars = /^[\],:{}\s]*$/;
	    var rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g;
	    var rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g;
	    var rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g;

	    function compactParseJSON(data) {
	        if (typeof data === 'string') {
	            data = data.trim();
	            if (data) {
	                if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {
	                    return new Function('return ' + data)(); // jshint ignore:line
	                }
	            }
	            throw TypeError('Invalid JSON: [' + data + ']');
	        }
	        return data;
	    }

	    var rsvg = /^\[object SVG\w*Element\]$/;
	    var ramp = /&amp;/g;
	    function updateAttrs(node, attrs) {
	        for (var attrName in attrs) {
	            try {
	                var val = attrs[attrName];
	                // 处理路径属性
	                /* istanbul ignore if*/

	                //处理HTML5 data-*属性 SVG
	                if (attrName.indexOf('data-') === 0 || rsvg.test(node)) {
	                    node.setAttribute(attrName, val);
	                } else {
	                    var propName = propMap[attrName] || attrName;
	                    /* istanbul ignore if */
	                    if (typeof node[propName] === 'boolean') {
	                        if (propName === 'checked') {
	                            node.defaultChecked = !!val;
	                        }
	                        node[propName] = !!val;
	                        //布尔属性必须使用el.xxx = true|false方式设值
	                        //如果为false, IE全系列下相当于setAttribute(xxx,''),
	                        //会影响到样式,需要进一步处理
	                    }

	                    if (val === false) {
	                        //移除属性
	                        node.removeAttribute(propName);
	                        continue;
	                    }
	                    //IE6中classNamme, htmlFor等无法检测它们为内建属性　
	                    if (avalon.msie < 8 && /[A-Z]/.test(propName)) {
	                        node[propName] = val + '';
	                        continue;
	                    }
	                    //SVG只能使用setAttribute(xxx, yyy), VML只能使用node.xxx = yyy ,
	                    //HTML的固有属性必须node.xxx = yyy
	                    /* istanbul ignore next */
	                    var isInnate = !avalon.modern && isVML(node) ? true : isInnateProps(node.nodeName, attrName);
	                    if (isInnate) {
	                        if (attrName === 'href' || attrName === 'src') {
	                            /* istanbul ignore if */
	                            if (avalon.msie < 8) {
	                                val = String(val).replace(ramp, '&'); //处理IE67自动转义的问题
	                            }
	                        }
	                        node[propName] = val + '';
	                    } else {
	                        node.setAttribute(attrName, val);
	                    }
	                }
	            } catch (e) {
	                // 对象不支持此属性或方法 src https://github.com/ecomfe/zrender 
	                // 未知名称。\/n
	                // e.message大概这样,需要trim
	                //IE6-8,元素节点不支持其他元素节点的内置属性,如src, href, for
	                /* istanbul ignore next */
	                avalon.log(String(e.message).trim(), attrName, val);
	            }
	        }
	    }
	    var innateMap = {};

	    function isInnateProps(nodeName, attrName) {
	        var key = nodeName + ":" + attrName;
	        if (key in innateMap) {
	            return innateMap[key];
	        }
	        return innateMap[key] = attrName in document$1.createElement(nodeName);
	    }
	    try {
	        avalon.parseJSON = JSON.parse;
	    } catch (e) {
	        /* istanbul ignore next */
	        avalon.parseJSON = compactParseJSON;
	    }

	    avalon.fn.attr = function (name, value) {
	        if (arguments.length === 2) {
	            this[0].setAttribute(name, value);
	            return this;
	        } else {
	            return this[0].getAttribute(name);
	        }
	    };

	    var cssMap = oneObject('float', 'cssFloat');
	    avalon.cssNumber = oneObject('animationIterationCount,columnCount,order,flex,flexGrow,flexShrink,fillOpacity,fontWeight,lineHeight,opacity,orphans,widows,zIndex,zoom');
	    var prefixes = ['', '-webkit-', '-o-', '-moz-', '-ms-'];
	    /* istanbul ignore next */
	    avalon.cssName = function (name, host, camelCase) {
	        if (cssMap[name]) {
	            return cssMap[name];
	        }
	        host = host || avalon.root.style || {};
	        for (var i = 0, n = prefixes.length; i < n; i++) {
	            camelCase = avalon.camelize(prefixes[i] + name);
	            if (camelCase in host) {
	                return cssMap[name] = camelCase;
	            }
	        }
	        return null;
	    };
	    /* istanbul ignore next */
	    avalon.css = function (node, name, value, fn) {
	        //读写删除元素节点的样式
	        if (node instanceof avalon) {
	            node = node[0];
	        }
	        if (node.nodeType !== 1) {
	            return;
	        }
	        var prop = avalon.camelize(name);
	        name = avalon.cssName(prop) || /* istanbul ignore next*/prop;
	        if (value === void 0 || typeof value === 'boolean') {
	            //获取样式
	            fn = cssHooks[prop + ':get'] || cssHooks['@:get'];
	            if (name === 'background') {
	                name = 'backgroundColor';
	            }
	            var val = fn(node, name);
	            return value === true ? parseFloat(val) || 0 : val;
	        } else if (value === '') {
	            //请除样式
	            node.style[name] = '';
	        } else {
	            //设置样式
	            if (value == null || value !== value) {
	                return;
	            }
	            if (isFinite(value) && !avalon.cssNumber[prop]) {
	                value += 'px';
	            }
	            fn = cssHooks[prop + ':set'] || cssHooks['@:set'];
	            fn(node, name, value);
	        }
	    };
	    /* istanbul ignore next */
	    avalon.fn.css = function (name, value) {
	        if (avalon.isPlainObject(name)) {
	            for (var i in name) {
	                avalon.css(this, i, name[i]);
	            }
	        } else {
	            var ret = avalon.css(this, name, value);
	        }
	        return ret !== void 0 ? ret : this;
	    };
	    /* istanbul ignore next */
	    avalon.fn.position = function () {
	        var offsetParent,
	            offset,
	            elem = this[0],
	            parentOffset = {
	            top: 0,
	            left: 0
	        };
	        if (!elem) {
	            return parentOffset;
	        }
	        if (this.css('position') === 'fixed') {
	            offset = elem.getBoundingClientRect();
	        } else {
	            offsetParent = this.offsetParent(); //得到真正的offsetParent
	            offset = this.offset(); // 得到正确的offsetParent
	            if (offsetParent[0].tagName !== 'HTML') {
	                parentOffset = offsetParent.offset();
	            }
	            parentOffset.top += avalon.css(offsetParent[0], 'borderTopWidth', true);
	            parentOffset.left += avalon.css(offsetParent[0], 'borderLeftWidth', true);

	            // Subtract offsetParent scroll positions
	            parentOffset.top -= offsetParent.scrollTop();
	            parentOffset.left -= offsetParent.scrollLeft();
	        }
	        return {
	            top: offset.top - parentOffset.top - avalon.css(elem, 'marginTop', true),
	            left: offset.left - parentOffset.left - avalon.css(elem, 'marginLeft', true)
	        };
	    };
	    /* istanbul ignore next */
	    avalon.fn.offsetParent = function () {
	        var offsetParent = this[0].offsetParent;
	        while (offsetParent && avalon.css(offsetParent, 'position') === 'static') {
	            offsetParent = offsetParent.offsetParent;
	        }
	        return avalon(offsetParent || avalon.root);
	    };

	    /* istanbul ignore next */
	    cssHooks['@:set'] = function (node, name, value) {
	        try {
	            //node.style.width = NaN;node.style.width = 'xxxxxxx';
	            //node.style.width = undefine 在旧式IE下会抛异常
	            node.style[name] = value;
	        } catch (e) {}
	    };
	    /* istanbul ignore next */
	    cssHooks['@:get'] = function (node, name) {
	        if (!node || !node.style) {
	            throw new Error('getComputedStyle要求传入一个节点 ' + node);
	        }
	        var ret,
	            styles = window$1.getComputedStyle(node, null);
	        if (styles) {
	            ret = name === 'filter' ? styles.getPropertyValue(name) : styles[name];
	            if (ret === '') {
	                ret = node.style[name]; //其他浏览器需要我们手动取内联样式
	            }
	        }
	        return ret;
	    };

	    cssHooks['opacity:get'] = function (node) {
	        var ret = cssHooks['@:get'](node, 'opacity');
	        return ret === '' ? '1' : ret;
	    };

	    'top,left'.replace(avalon.rword, function (name) {
	        cssHooks[name + ':get'] = function (node) {
	            var computed = cssHooks['@:get'](node, name);
	            return (/px$/.test(computed) ? computed : avalon(node).position()[name] + 'px'
	            );
	        };
	    });

	    var cssShow = {
	        position: 'absolute',
	        visibility: 'hidden',
	        display: 'block'
	    };

	    var rdisplayswap = /^(none|table(?!-c[ea]).+)/;
	    /* istanbul ignore next */
	    function showHidden(node, array) {
	        //http://www.cnblogs.com/rubylouvre/archive/2012/10/27/2742529.html
	        if (node.offsetWidth <= 0) {
	            //opera.offsetWidth可能小于0
	            if (rdisplayswap.test(cssHooks['@:get'](node, 'display'))) {
	                var obj = {
	                    node: node
	                };
	                for (var name in cssShow) {
	                    obj[name] = node.style[name];
	                    node.style[name] = cssShow[name];
	                }
	                array.push(obj);
	            }
	            var parent = node.parentNode;
	            if (parent && parent.nodeType === 1) {
	                showHidden(parent, array);
	            }
	        }
	    }
	    /* istanbul ignore next*/
	    avalon.each({
	        Width: 'width',
	        Height: 'height'
	    }, function (name, method) {
	        var clientProp = 'client' + name,
	            scrollProp = 'scroll' + name,
	            offsetProp = 'offset' + name;
	        cssHooks[method + ':get'] = function (node, which, override) {
	            var boxSizing = -4;
	            if (typeof override === 'number') {
	                boxSizing = override;
	            }
	            which = name === 'Width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	            var ret = node[offsetProp]; // border-box 0
	            if (boxSizing === 2) {
	                // margin-box 2
	                return ret + avalon.css(node, 'margin' + which[0], true) + avalon.css(node, 'margin' + which[1], true);
	            }
	            if (boxSizing < 0) {
	                // padding-box  -2
	                ret = ret - avalon.css(node, 'border' + which[0] + 'Width', true) - avalon.css(node, 'border' + which[1] + 'Width', true);
	            }
	            if (boxSizing === -4) {
	                // content-box -4
	                ret = ret - avalon.css(node, 'padding' + which[0], true) - avalon.css(node, 'padding' + which[1], true);
	            }
	            return ret;
	        };
	        cssHooks[method + '&get'] = function (node) {
	            var hidden = [];
	            showHidden(node, hidden);
	            var val = cssHooks[method + ':get'](node);
	            for (var i = 0, obj; obj = hidden[i++];) {
	                node = obj.node;
	                for (var n in obj) {
	                    if (typeof obj[n] === 'string') {
	                        node.style[n] = obj[n];
	                    }
	                }
	            }
	            return val;
	        };
	        avalon.fn[method] = function (value) {
	            //会忽视其display
	            var node = this[0];
	            if (arguments.length === 0) {
	                if (node.setTimeout) {
	                    //取得窗口尺寸
	                    return node['inner' + name] || node.document.documentElement[clientProp] || node.document.body[clientProp]; //IE6下前两个分别为undefined,0
	                }
	                if (node.nodeType === 9) {
	                    //取得页面尺寸
	                    var doc = node.documentElement;
	                    //FF chrome    html.scrollHeight< body.scrollHeight
	                    //IE 标准模式 : html.scrollHeight> body.scrollHeight
	                    //IE 怪异模式 : html.scrollHeight 最大等于可视窗口多一点？
	                    return Math.max(node.body[scrollProp], doc[scrollProp], node.body[offsetProp], doc[offsetProp], doc[clientProp]);
	                }
	                return cssHooks[method + '&get'](node);
	            } else {
	                return this.css(method, value);
	            }
	        };
	        avalon.fn['inner' + name] = function () {
	            return cssHooks[method + ':get'](this[0], void 0, -2);
	        };
	        avalon.fn['outer' + name] = function (includeMargin) {
	            return cssHooks[method + ':get'](this[0], void 0, includeMargin === true ? 2 : 0);
	        };
	    });

	    function getWindow(node) {
	        return node.window || node.defaultView || node.parentWindow || false;
	    }

	    /* istanbul ignore if */
	    if (msie$1 < 9) {
	        avalon.shadowCopy(cssMap, oneObject('float', 'styleFloat'));
	        var rnumnonpx = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i;
	        var rposition = /^(top|right|bottom|left)$/;
	        var ralpha = /alpha\([^)]+\)/i;
	        var ropactiy = /(opacity|\d(\d|\.)*)/g;
	        var ie8 = msie$1 === 8;
	        var salpha = 'DXImageTransform.Microsoft.Alpha';
	        var border = {
	            thin: ie8 ? '1px' : '2px',
	            medium: ie8 ? '3px' : '4px',
	            thick: ie8 ? '5px' : '6px'
	        };
	        cssHooks['@:get'] = function (node, name) {
	            //取得精确值，不过它有可能是带em,pc,mm,pt,%等单位
	            var currentStyle = node.currentStyle;
	            var ret = currentStyle[name];
	            if (rnumnonpx.test(ret) && !rposition.test(ret)) {
	                //①，保存原有的style.left, runtimeStyle.left,
	                var style = node.style,
	                    left = style.left,
	                    rsLeft = node.runtimeStyle.left;
	                //②由于③处的style.left = xxx会影响到currentStyle.left，
	                //因此把它currentStyle.left放到runtimeStyle.left，
	                //runtimeStyle.left拥有最高优先级，不会style.left影响
	                node.runtimeStyle.left = currentStyle.left;
	                //③将精确值赋给到style.left，然后通过IE的另一个私有属性 style.pixelLeft
	                //得到单位为px的结果；fontSize的分支见http://bugs.jquery.com/ticket/760
	                style.left = name === 'fontSize' ? '1em' : ret || 0;
	                ret = style.pixelLeft + 'px';
	                //④还原 style.left，runtimeStyle.left
	                style.left = left;
	                node.runtimeStyle.left = rsLeft;
	            }
	            if (ret === 'medium') {
	                name = name.replace('Width', 'Style');
	                //border width 默认值为medium，即使其为0'
	                if (currentStyle[name] === 'none') {
	                    ret = '0px';
	                }
	            }
	            return ret === '' ? 'auto' : border[ret] || ret;
	        };
	        cssHooks['opacity:set'] = function (node, name, value) {
	            var style = node.style;

	            var opacity = Number(value) <= 1 ? 'alpha(opacity=' + value * 100 + ')' : '';
	            var filter = style.filter || '';
	            style.zoom = 1;
	            //不能使用以下方式设置透明度
	            //node.filters.alpha.opacity = value * 100
	            style.filter = (ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + ' ' + opacity).trim();

	            if (!style.filter) {
	                style.removeAttribute('filter');
	            }
	        };
	        cssHooks['opacity:get'] = function (node) {
	            var match = node.style.filter.match(ropactiy) || [];
	            var ret = false;
	            for (var i = 0, el; el = match[i++];) {
	                if (el === 'opacity') {
	                    ret = true;
	                } else if (ret) {
	                    return el / 100 + '';
	                }
	            }
	            return '1'; //确保返回的是字符串
	        };
	    }

	    /* istanbul ignore next */
	    avalon.fn.offset = function () {
	        //取得距离页面左右角的坐标
	        var node = this[0],
	            box = {
	            left: 0,
	            top: 0
	        };
	        if (!node || !node.tagName || !node.ownerDocument) {
	            return box;
	        }
	        var doc = node.ownerDocument;
	        var body = doc.body;
	        var root$$1 = doc.documentElement;
	        var win = doc.defaultView || doc.parentWindow;
	        if (!avalon.contains(root$$1, node)) {
	            return box;
	        }
	        //http://hkom.blog1.fc2.com/?mode=m&no=750 body的偏移量是不包含margin的
	        //我们可以通过getBoundingClientRect来获得元素相对于client的rect.
	        //http://msdn.microsoft.com/en-us/library/ms536433.aspx
	        if (node.getBoundingClientRect) {
	            box = node.getBoundingClientRect(); // BlackBerry 5, iOS 3 (original iPhone)
	        }
	        //chrome/IE6: body.scrollTop, firefox/other: root.scrollTop
	        var clientTop = root$$1.clientTop || body.clientTop,
	            clientLeft = root$$1.clientLeft || body.clientLeft,
	            scrollTop = Math.max(win.pageYOffset || 0, root$$1.scrollTop, body.scrollTop),
	            scrollLeft = Math.max(win.pageXOffset || 0, root$$1.scrollLeft, body.scrollLeft);
	        // 把滚动距离加到left,top中去。
	        // IE一些版本中会自动为HTML元素加上2px的border，我们需要去掉它
	        // http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx
	        return {
	            top: box.top + scrollTop - clientTop,
	            left: box.left + scrollLeft - clientLeft
	        };
	    };

	    //生成avalon.fn.scrollLeft, avalon.fn.scrollTop方法
	    /* istanbul ignore next */
	    avalon.each({
	        scrollLeft: 'pageXOffset',
	        scrollTop: 'pageYOffset'
	    }, function (method, prop) {
	        avalon.fn[method] = function (val) {
	            var node = this[0] || {};
	            var win = getWindow(node);
	            var root$$1 = avalon.root;
	            var top = method === 'scrollTop';
	            if (!arguments.length) {
	                return win ? prop in win ? win[prop] : root$$1[method] : node[method];
	            } else {
	                if (win) {
	                    win.scrollTo(!top ? val : avalon(win).scrollLeft(), top ? val : avalon(win).scrollTop());
	                } else {
	                    node[method] = val;
	                }
	            }
	        };
	    });

	    function getDuplexType(elem) {
	        var ret = elem.tagName.toLowerCase();
	        if (ret === 'input') {
	            return rcheckedType.test(elem.type) ? 'checked' : elem.type;
	        }
	        return ret;
	    }

	    /**
	     * IE6/7/8中，如果option没有value值，那么将返回空字符串。
	     * IE9/Firefox/Safari/Chrome/Opera 中先取option的value值，如果没有value属性，则取option的innerText值。
	     * IE11及W3C，如果没有指定value，那么node.value默认为node.text（存在trim作），但IE9-10则是取innerHTML(没trim操作)
	     */

	    function getOption(node) {
	        if (node.hasAttribute && node.hasAttribute('value')) {
	            return node.getAttribute('value');
	        }
	        var attr = node.getAttributeNode('value');
	        if (attr && attr.specified) {
	            return attr.value;
	        }
	        return node.innerHTML.trim();
	    }

	    var valHooks = {
	        'option:get': msie$1 ? getOption : function (node) {
	            return node.value;
	        },
	        'select:get': function selectGet(node, value) {
	            var option,
	                options = node.options,
	                index = node.selectedIndex,
	                getter = valHooks['option:get'],
	                one = node.type === 'select-one' || index < 0,
	                values = one ? null : [],
	                max = one ? index + 1 : options.length,
	                i = index < 0 ? max : one ? index : 0;
	            for (; i < max; i++) {
	                option = options[i];
	                //IE6-9在reset后不会改变selected，需要改用i === index判定
	                //我们过滤所有disabled的option元素，但在safari5下，
	                //如果设置optgroup为disable，那么其所有孩子都disable
	                //因此当一个元素为disable，需要检测其是否显式设置了disable及其父节点的disable情况
	                if ((option.selected || i === index) && !option.disabled && (!option.parentNode.disabled || option.parentNode.tagName !== 'OPTGROUP')) {
	                    value = getter(option);
	                    if (one) {
	                        return value;
	                    }
	                    //收集所有selected值组成数组返回
	                    values.push(value);
	                }
	            }
	            return values;
	        },
	        'select:set': function selectSet(node, values, optionSet) {
	            values = [].concat(values); //强制转换为数组
	            var getter = valHooks['option:get'];
	            for (var i = 0, el; el = node.options[i++];) {
	                if (el.selected = values.indexOf(getter(el)) > -1) {
	                    optionSet = true;
	                }
	            }
	            if (!optionSet) {
	                node.selectedIndex = -1;
	            }
	        }
	    };

	    avalon.fn.val = function (value) {
	        var node = this[0];
	        if (node && node.nodeType === 1) {
	            var get = arguments.length === 0;
	            var access = get ? ':get' : ':set';
	            var fn = valHooks[getDuplexType(node) + access];
	            if (fn) {
	                var val = fn(node, value);
	            } else if (get) {
	                return (node.value || '').replace(/\r/g, '');
	            } else {
	                node.value = value;
	            }
	        }
	        return get ? val : this;
	    };

	    var voidTag = {
	        area: 1,
	        base: 1,
	        basefont: 1,
	        bgsound: 1,
	        br: 1,
	        col: 1,
	        command: 1,
	        embed: 1,
	        frame: 1,
	        hr: 1,
	        img: 1,
	        input: 1,
	        keygen: 1,
	        link: 1,
	        meta: 1,
	        param: 1,
	        source: 1,
	        track: 1,
	        wbr: 1
	    };

	    function makeObject(str) {
	        return oneObject(str + ',template,#document-fragment,#comment');
	    }
	    var pNestChild = oneObject('div,ul,ol,dl,table,h1,h2,h3,h4,h5,h6,form,fieldset');
	    var tNestChild = makeObject('tr,style,script');
	    var nestObject = {
	        p: pNestChild,
	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	        select: makeObject('option,optgroup,#text'),
	        optgroup: makeObject('option,#text'),
	        option: makeObject('#text'),
	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	        // No special behavior since these rules fall back to "in body" mode for
	        // all except special table nodes which cause bad parsing behavior anyway.

	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	        tr: makeObject('th,td,style,script'),

	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	        tbody: tNestChild,
	        tfoot: tNestChild,
	        thead: tNestChild,
	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	        colgroup: makeObject('col'),
	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	        // table: oneObject('caption,colgroup,tbody,thead,tfoot,style,script,template,#document-fragment'),
	        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	        head: makeObject('base,basefont,bgsound,link,style,script,meta,title,noscript,noframes'),
	        // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	        html: oneObject('head,body')
	    };

	    /**
	     * ------------------------------------------------------------
	     * avalon2.2.6的新式lexer
	     * 将字符串变成一个虚拟DOM树,方便以后进一步变成模板函数
	     * 此阶段只会生成VElement,VText,VComment
	     * ------------------------------------------------------------
	     */
	    var specalTag = { xmp: 1, style: 1, script: 1, noscript: 1, textarea: 1, '#comment': 1, template: 1 };
	    var hiddenTag = { style: 1, script: 1, noscript: 1, template: 1 };
	    var rcontent = /\S/; //判定里面有没有内容
	    var rsp = /\s/;
	    function fromString(str) {
	        return from(str);
	    }
	    avalon.lexer = fromString;

	    var strCache = new Cache(100);

	    function from(str) {
	        var cacheKey = str;
	        var cached = strCache.get(cacheKey);
	        if (cached) {
	            return avalon.mix(true, [], cached);
	        }

	        var ret = parse(str, false);
	        strCache.put(cacheKey, avalon.mix(true, [], ret));
	        return ret;
	    }

	    /**
	     * 
	     * 
	     * @param {any} string 
	     * @param {any} getOne 只返回一个节点
	     * @returns 
	     */
	    function parse(string, getOne) {
	        getOne = getOne === void 666 || getOne === true;
	        var ret = lexer(string, getOne);
	        if (getOne) {
	            return typeof ret[0] === 'string' ? ret[1] : ret[0];
	        }
	        return ret;
	    }

	    function lexer(string, getOne) {
	        var tokens = [];
	        var breakIndex = 9990;
	        var stack = [];
	        var origString = string;
	        var origLength = string.length;

	        stack.last = function () {
	            return stack[stack.length - 1];
	        };
	        var ret = [];

	        function addNode(node) {
	            var p = stack.last();
	            if (p && p.children) {
	                p.children.push(node);
	            } else {
	                ret.push(node);
	            }
	        }

	        var lastNode;
	        do {
	            if (--breakIndex === 0) {
	                break;
	            }
	            var arr = getCloseTag(string);

	            if (arr) {
	                //处理关闭标签
	                string = string.replace(arr[0], '');
	                var _node = stack.pop();
	                if (!_node) {
	                    throw '是不是有属性值没有用引号括起';
	                }
	                //处理下面两种特殊情况：
	                //1. option会自动移除元素节点，将它们的nodeValue组成新的文本节点
	                //2. table会将没有被thead, tbody, tfoot包起来的tr或文本节点，收集到一个新的tbody元素中

	                if (_node.nodeName === 'option') {
	                    _node.children = [{
	                        nodeName: '#text',
	                        nodeValue: getText(_node)
	                    }];
	                } else if (_node.nodeName === 'table') {
	                    insertTbody(_node.children);
	                }
	                lastNode = null;
	                if (getOne && ret.length === 1 && !stack.length) {
	                    return [origString.slice(0, origLength - string.length), ret[0]];
	                }
	                continue;
	            }

	            var arr = getOpenTag(string);
	            if (arr) {
	                string = string.replace(arr[0], '');
	                var node = arr[1];
	                addNode(node);
	                var selfClose = !!(node.isVoidTag || specalTag[node.nodeName]);
	                if (!selfClose) {
	                    //放到这里可以添加孩子
	                    stack.push(node);
	                }
	                if (getOne && selfClose && !stack.length) {
	                    return [origString.slice(0, origLength - string.length), node];
	                }
	                lastNode = node;
	                continue;
	            }

	            var text = '';
	            do {
	                //处理<div><<<<<<div>的情况
	                var _index = string.indexOf('<');
	                if (_index === 0) {
	                    text += string.slice(0, 1);
	                    string = string.slice(1);
	                } else {
	                    break;
	                }
	            } while (string.length);

	            //处理<div>{aaa}</div>,<div>xxx{aaa}xxx</div>,<div>xxx</div>{aaa}sss的情况
	            var index = string.indexOf('<'); //判定它后面是否存在标签
	            if (index === -1) {
	                text = string;
	                string = '';
	            } else {
	                var openIndex = string.indexOf(config.openTag);

	                if (openIndex !== -1 && openIndex < index) {
	                    if (openIndex !== 0) {
	                        text += string.slice(0, openIndex);
	                    }
	                    var dirString = string.slice(openIndex);
	                    var textDir = parseTextDir(dirString);
	                    text += textDir;
	                    string = dirString.slice(textDir.length);
	                } else {
	                    text += string.slice(0, index);
	                    string = string.slice(index);
	                }
	            }
	            var mayNode = addText(lastNode, text, addNode);
	            if (mayNode) {
	                lastNode = mayNode;
	            }
	        } while (string.length);
	        return ret;
	    }

	    function addText(lastNode, text, addNode) {
	        if (rcontent.test(text)) {
	            if (lastNode && lastNode.nodeName === '#text') {
	                lastNode.nodeValue += text;
	                return lastNode;
	            } else {
	                lastNode = {
	                    nodeName: '#text',
	                    nodeValue: text
	                };
	                addNode(lastNode);
	                return lastNode;
	            }
	        }
	    }

	    function parseTextDir(string) {
	        var closeTag = config.closeTag;
	        var openTag = config.openTag;
	        var closeTagFirst = closeTag.charAt(0);
	        var closeTagLength = closeTag.length;
	        var state = 'code',
	            quote$$1,
	            escape;
	        for (var i = openTag.length, n = string.length; i < n; i++) {

	            var c = string.charAt(i);
	            switch (state) {
	                case 'code':
	                    if (c === '"' || c === "'") {
	                        state = 'string';
	                        quote$$1 = c;
	                    } else if (c === closeTagFirst) {
	                        //如果遇到}
	                        if (string.substr(i, closeTagLength) === closeTag) {
	                            return string.slice(0, i + closeTagLength);
	                        }
	                    }
	                    break;
	                case 'string':
	                    if (c === '\\' && /"'/.test(string.charAt(i + 1))) {
	                        escape = !escape;
	                    }
	                    if (c === quote$$1 && !escape) {
	                        state = 'code';
	                    }
	                    break;
	            }
	        }
	        throw '找不到界定符' + closeTag;
	    }

	    var rtbody = /^(tbody|thead|tfoot)$/;

	    function insertTbody(nodes) {
	        var tbody = false;
	        for (var i = 0, n = nodes.length; i < n; i++) {
	            var node = nodes[i];
	            if (rtbody.test(node.nodeName)) {
	                tbody = false;
	                continue;
	            }

	            if (node.nodeName === 'tr') {
	                if (tbody) {
	                    nodes.splice(i, 1);
	                    tbody.children.push(node);
	                    n--;
	                    i--;
	                } else {
	                    tbody = {
	                        nodeName: 'tbody',
	                        props: {},
	                        children: [node]
	                    };
	                    nodes.splice(i, 1, tbody);
	                }
	            } else {
	                if (tbody) {
	                    nodes.splice(i, 1);
	                    tbody.children.push(node);
	                    n--;
	                    i--;
	                }
	            }
	        }
	    }

	    //<div>{{<div/>}}</div>
	    function getCloseTag(string) {
	        if (string.indexOf("</") === 0) {
	            var match = string.match(/\<\/(\w+[^\s\/\>]*)>/);
	            if (match) {
	                var tag = match[1];
	                string = string.slice(3 + tag.length);
	                return [match[0], {
	                    nodeName: tag
	                }];
	            }
	        }
	        return null;
	    }
	    var ropenTag = /\<(\w[^\s\/\>]*)/;

	    function getOpenTag(string) {
	        if (string.indexOf("<") === 0) {
	            var i = string.indexOf('<!--'); //处理注释节点
	            if (i === 0) {
	                var l = string.indexOf('-->');
	                if (l === -1) {
	                    thow('注释节点没有闭合 ' + string.slice(0, 100));
	                }
	                var node = {
	                    nodeName: '#comment',
	                    nodeValue: string.slice(4, l)
	                };
	                return [string.slice(0, l + 3), node];
	            }
	            var match = string.match(ropenTag); //处理元素节点
	            if (match) {
	                var leftContent = match[0],
	                    tag = match[1];
	                var node = {
	                    nodeName: tag,
	                    props: {},
	                    children: []
	                };

	                string = string.replace(leftContent, ''); //去掉标签名(rightContent)
	                try {
	                    var arr = getAttrs(string); //处理属性
	                } catch (e) {}
	                if (arr) {
	                    node.props = arr[1];
	                    string = string.replace(arr[0], '');
	                    leftContent += arr[0];
	                }

	                if (string.charAt(0) === '>') {
	                    //处理开标签的边界符
	                    leftContent += '>';
	                    string = string.slice(1);
	                    if (voidTag[node.nodeName]) {
	                        node.isVoidTag = true;
	                    }
	                } else if (string.slice(0, 2) === '/>') {
	                    //处理开标签的边界符
	                    leftContent += '/>';
	                    string = string.slice(2);
	                    node.isVoidTag = true;
	                }

	                if (!node.isVoidTag && specalTag[tag]) {
	                    //如果是script, style, xmp等元素
	                    var closeTag = '</' + tag + '>';
	                    var j = string.indexOf(closeTag);
	                    var nodeValue = string.slice(0, j);
	                    leftContent += nodeValue + closeTag;
	                    node.children.push({
	                        nodeName: '#text',
	                        nodeValue: nodeValue
	                    });
	                    if (tag === 'textarea') {
	                        node.props.type = tag;
	                        node.props.value = nodeValue;
	                    }
	                }
	                return [leftContent, node];
	            }
	        }
	    }

	    function getText(node) {
	        var ret = '';
	        node.children.forEach(function (el) {
	            if (el.nodeName === '#text') {
	                ret += el.nodeValue;
	            } else if (el.children && !hiddenTag[el.nodeName]) {
	                ret += getText(el);
	            }
	        });
	        return ret;
	    }

	    function getAttrs(string) {
	        var state = 'AttrName',
	            attrName = '',
	            attrValue = '',
	            quote$$1,
	            escape,
	            props = {};
	        for (var i = 0, n = string.length; i < n; i++) {
	            var c = string.charAt(i);
	            switch (state) {
	                case 'AttrName':
	                    if (c === '/' && string.charAt(i + 1) === '>' || c === '>') {
	                        if (attrName) props[attrName] = attrName;
	                        return [string.slice(0, i), props];
	                    }
	                    if (rsp.test(c)) {
	                        if (attrName) {
	                            state = 'AttrEqual';
	                        }
	                    } else if (c === '=') {
	                        if (!attrName) {
	                            throw '必须指定属性名';
	                        }
	                        state = 'AttrQuote';
	                    } else {
	                        attrName += c;
	                    }
	                    break;
	                case 'AttrEqual':
	                    if (c === '=') {
	                        state = 'AttrQuote';
	                    } else if (rcontent.test(c)) {
	                        props[attrName] = attrName;
	                        attrName = c;
	                        state = 'AttrName';
	                    }
	                    break;
	                case 'AttrQuote':
	                    if (c === '"' || c === "'") {
	                        quote$$1 = c;
	                        state = 'AttrValue';
	                        escape = false;
	                    }
	                    break;
	                case 'AttrValue':
	                    if (c === '\\' && /"'/.test(string.charAt(i + 1))) {
	                        escape = !escape;
	                    }
	                    if (c === '\n') {
	                        break;
	                    }
	                    if (c !== quote$$1) {
	                        attrValue += c;
	                    } else if (c === quote$$1 && !escape) {
	                        props[attrName] = attrValue;
	                        attrName = attrValue = '';
	                        state = 'AttrName';
	                    }
	                    break;
	            }
	        }
	        throw '必须关闭标签';
	    }

	    var rhtml = /<|&#?\w+;/;
	    var htmlCache = new Cache(128);
	    var rxhtml = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig;

	    avalon.parseHTML = function (html) {
	        var fragment = createFragment();
	        //处理非字符串
	        if (typeof html !== 'string') {
	            return fragment;
	        }
	        //处理非HTML字符串
	        if (!rhtml.test(html)) {
	            return document$1.createTextNode(html);
	        }

	        html = html.replace(rxhtml, '<$1></$2>').trim();
	        var hasCache = htmlCache.get(html);
	        if (hasCache) {
	            return avalon.cloneNode(hasCache);
	        }
	        var vnodes = fromString(html);
	        for (var i = 0, el; el = vnodes[i++];) {
	            var child = avalon.vdom(el, 'toDOM');
	            fragment.appendChild(child);
	        }
	        if (html.length < 1024) {
	            htmlCache.put(html, fragment);
	        }
	        return fragment;
	    };

	    avalon.innerHTML = function (node, html) {
	        var parsed = avalon.parseHTML(html);
	        this.clearHTML(node);
	        node.appendChild(parsed);
	    };

	    //https://github.com/karloespiritu/escapehtmlent/blob/master/index.js
	    avalon.unescapeHTML = function (html) {
	        return String(html).replace(/&quot;/g, '"').replace(/&#39;/g, '\'').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');
	    };

	    avalon.clearHTML = function (node) {
	        /* istanbul ignore next */
	        while (node.lastChild) {
	            node.removeChild(node.lastChild);
	        }
	        return node;
	    };

	    //http://www.feiesoft.com/html/events.html
	    //http://segmentfault.com/q/1010000000687977/a-1020000000688757
	    var canBubbleUp = {
	        click: true,
	        dblclick: true,
	        keydown: true,
	        keypress: true,
	        keyup: true,
	        mousedown: true,
	        mousemove: true,
	        mouseup: true,
	        mouseover: true,
	        mouseout: true,
	        wheel: true,
	        mousewheel: true,
	        input: true,
	        change: true,
	        beforeinput: true,
	        compositionstart: true,
	        compositionupdate: true,
	        compositionend: true,
	        select: true,
	        //http://blog.csdn.net/lee_magnum/article/details/17761441
	        cut: true,
	        copy: true,
	        paste: true,
	        beforecut: true,
	        beforecopy: true,
	        beforepaste: true,
	        focusin: true,
	        focusout: true,
	        DOMFocusIn: true,
	        DOMFocusOut: true,
	        DOMActivate: true,
	        dragend: true,
	        datasetchanged: true
	    };

	    /* istanbul ignore if */
	    var hackSafari = avalon.modern && document$1.ontouchstart;

	    //添加fn.bind, fn.unbind, bind, unbind
	    avalon.fn.bind = function (type, fn, phase) {
	        if (this[0]) {
	            //此方法不会链
	            return avalon.bind(this[0], type, fn, phase);
	        }
	    };

	    avalon.fn.unbind = function (type, fn, phase) {
	        if (this[0]) {
	            var args = _slice.call(arguments);
	            args.unshift(this[0]);
	            avalon.unbind.apply(0, args);
	        }
	        return this;
	    };

	    /*绑定事件*/
	    avalon.bind = function (elem, type, fn) {
	        if (elem.nodeType === 1) {
	            var value = elem.getAttribute('avalon-events') || '';
	            //如果是使用ms-on-*绑定的回调,其uuid格式为e12122324,
	            //如果是使用bind方法绑定的回调,其uuid格式为_12
	            var uuid = getShortID(fn);
	            var hook = eventHooks[type];
	            /* istanbul ignore if */
	            if (type === 'click' && hackSafari) {
	                elem.addEventListener('click', avalon.noop);
	            }
	            /* istanbul ignore if */
	            if (hook) {
	                type = hook.type || type;
	                if (hook.fix) {
	                    fn = hook.fix(elem, fn);
	                    fn.uuid = uuid;
	                }
	            }
	            var key = type + ':' + uuid;
	            avalon.eventListeners[fn.uuid] = fn;
	            /* istanbul ignore if */
	            if (value.indexOf(type + ':') === -1) {
	                //同一种事件只绑定一次
	                if (canBubbleUp[type] || avalon.modern && focusBlur[type]) {
	                    delegateEvent(type);
	                } else {
	                    avalon._nativeBind(elem, type, dispatch);
	                }
	            }
	            var keys = value.split(',');
	            /* istanbul ignore if */
	            if (keys[0] === '') {
	                keys.shift();
	            }
	            if (keys.indexOf(key) === -1) {
	                keys.push(key);
	                setEventId(elem, keys.join(','));
	                //将令牌放进avalon-events属性中
	            }
	            return fn;
	        } else {
	            /* istanbul ignore next */
	            var cb = function cb(e) {
	                fn.call(elem, new avEvent(e));
	            };

	            avalon._nativeBind(elem, type, cb);
	            return cb;
	        }
	    };

	    function setEventId(node, value) {
	        node.setAttribute('avalon-events', value);
	    }
	    /* istanbul ignore next */
	    avalon.unbind = function (elem, type, fn) {
	        if (elem.nodeType === 1) {
	            var value = elem.getAttribute('avalon-events') || '';
	            switch (arguments.length) {
	                case 1:
	                    avalon._nativeUnBind(elem, type, dispatch);
	                    elem.removeAttribute('avalon-events');
	                    break;
	                case 2:
	                    value = value.split(',').filter(function (str) {
	                        return str.indexOf(type + ':') === -1;
	                    }).join(',');
	                    setEventId(elem, value);
	                    break;
	                default:
	                    var search = type + ':' + fn.uuid;
	                    value = value.split(',').filter(function (str) {
	                        return str !== search;
	                    }).join(',');
	                    setEventId(elem, value);
	                    delete avalon.eventListeners[fn.uuid];
	                    break;
	            }
	        } else {
	            avalon._nativeUnBind(elem, type, fn);
	        }
	    };

	    var typeRegExp = {};

	    function collectHandlers(elem, type, handlers) {
	        var value = elem.getAttribute('avalon-events');
	        if (value && (elem.disabled !== true || type !== 'click')) {
	            var uuids = [];
	            var reg = typeRegExp[type] || (typeRegExp[type] = new RegExp("\\b" + type + '\\:([^,\\s]+)', 'g'));
	            value.replace(reg, function (a, b) {
	                uuids.push(b);
	                return a;
	            });
	            if (uuids.length) {
	                handlers.push({
	                    elem: elem,
	                    uuids: uuids
	                });
	            }
	        }
	        elem = elem.parentNode;
	        var g = avalon.gestureEvents || {};
	        if (elem && elem.getAttribute && (canBubbleUp[type] || g[type])) {
	            collectHandlers(elem, type, handlers);
	        }
	    }

	    var rhandleHasVm = /^e/;

	    function dispatch(event) {
	        event = new avEvent(event);
	        var type = event.type;
	        var elem = event.target;
	        var handlers = [];
	        collectHandlers(elem, type, handlers);
	        var i = 0,
	            j,
	            uuid,
	            handler;
	        while ((handler = handlers[i++]) && !event.cancelBubble) {
	            var host = event.currentTarget = handler.elem;
	            j = 0;
	            while (uuid = handler.uuids[j++]) {
	                if (event.stopImmediate) {
	                    break;
	                }
	                var fn = avalon.eventListeners[uuid];
	                if (fn) {
	                    var vm = rhandleHasVm.test(uuid) ? handler.elem._ms_context_ : 0;
	                    if (vm && vm.$hashcode === false) {
	                        return avalon.unbind(elem, type, fn);
	                    }
	                    var ret = fn.call(vm || elem, event);

	                    if (ret === false) {
	                        event.preventDefault();
	                        event.stopPropagation();
	                    }
	                }
	            }
	        }
	    }

	    var focusBlur = {
	        focus: true,
	        blur: true
	    };

	    function delegateEvent(type) {
	        var value = root.getAttribute('delegate-events') || '';
	        if (value.indexOf(type) === -1) {
	            //IE6-8会多次绑定同种类型的同一个函数,其他游览器不会
	            var arr = value.match(avalon.rword) || [];
	            arr.push(type);
	            root.setAttribute('delegate-events', arr.join(','));
	            avalon._nativeBind(root, type, dispatch, !!focusBlur[type]);
	        }
	    }

	    var eventProto = {
	        webkitMovementY: 1,
	        webkitMovementX: 1,
	        keyLocation: 1,
	        fixEvent: function fixEvent() {},
	        preventDefault: function preventDefault() {
	            var e = this.originalEvent || {};
	            e.returnValue = this.returnValue = false;
	            if (modern && e.preventDefault) {
	                e.preventDefault();
	            }
	        },
	        stopPropagation: function stopPropagation() {
	            var e = this.originalEvent || {};
	            e.cancelBubble = this.cancelBubble = true;
	            if (modern && e.stopPropagation) {
	                e.stopPropagation();
	            }
	        },
	        stopImmediatePropagation: function stopImmediatePropagation() {
	            this.stopPropagation();
	            this.stopImmediate = true;
	        },
	        toString: function toString() {
	            return '[object Event]'; //#1619
	        }
	    };

	    function avEvent(event) {
	        if (event.originalEvent) {
	            return event;
	        }
	        for (var i in event) {
	            if (!eventProto[i]) {
	                this[i] = event[i];
	            }
	        }
	        if (!this.target) {
	            this.target = event.srcElement;
	        }
	        var target = this.target;
	        this.fixEvent();
	        this.timeStamp = new Date() - 0;
	        this.originalEvent = event;
	    }
	    avEvent.prototype = eventProto;
	    //针对firefox, chrome修正mouseenter, mouseleave
	    /* istanbul ignore if */
	    if (!('onmouseenter' in root)) {
	        avalon.each({
	            mouseenter: 'mouseover',
	            mouseleave: 'mouseout'
	        }, function (origType, fixType) {
	            eventHooks[origType] = {
	                type: fixType,
	                fix: function fix(elem, fn) {
	                    return function (e) {
	                        var t = e.relatedTarget;
	                        if (!t || t !== elem && !(elem.compareDocumentPosition(t) & 16)) {
	                            delete e.type;
	                            e.type = origType;
	                            return fn.apply(this, arguments);
	                        }
	                    };
	                }
	            };
	        });
	    }
	    //针对IE9+, w3c修正animationend
	    avalon.each({
	        AnimationEvent: 'animationend',
	        WebKitAnimationEvent: 'webkitAnimationEnd'
	    }, function (construct, fixType) {
	        if (window$1[construct] && !eventHooks.animationend) {
	            eventHooks.animationend = {
	                type: fixType
	            };
	        }
	    });

	    /* istanbul ignore if */
	    if (!("onmousewheel" in document$1)) {
	        /* IE6-11 chrome mousewheel wheelDetla 下 -120 上 120
	         firefox DOMMouseScroll detail 下3 上-3
	         firefox wheel detlaY 下3 上-3
	         IE9-11 wheel deltaY 下40 上-40
	         chrome wheel deltaY 下100 上-100 */
	        var fixWheelType = document$1.onwheel !== void 0 ? 'wheel' : 'DOMMouseScroll';
	        var fixWheelDelta = fixWheelType === 'wheel' ? 'deltaY' : 'detail';
	        eventHooks.mousewheel = {
	            type: fixWheelType,
	            fix: function fix(elem, fn) {
	                return function (e) {
	                    var delta = e[fixWheelDelta] > 0 ? -120 : 120;
	                    e.wheelDelta = ~~elem._ms_wheel_ + delta;
	                    elem._ms_wheel_ = e.wheelDeltaY = e.wheelDelta;
	                    e.wheelDeltaX = 0;
	                    if (Object.defineProperty) {
	                        Object.defineProperty(e, 'type', {
	                            value: 'mousewheel'
	                        });
	                    }
	                    return fn.apply(this, arguments);
	                };
	            }
	        };
	    }

	    /* istanbul ignore if */
	    if (!modern) {
	        delete canBubbleUp.change;
	        delete canBubbleUp.select;
	    }
	    /* istanbul ignore next */
	    avalon._nativeBind = modern ? function (el, type, fn, capture) {
	        el.addEventListener(type, fn, !!capture);
	    } : function (el, type, fn) {
	        el.attachEvent('on' + type, fn);
	    };
	    /* istanbul ignore next */
	    avalon._nativeUnBind = modern ? function (el, type, fn, a) {
	        el.removeEventListener(type, fn, !!a);
	    } : function (el, type, fn) {
	        el.detachEvent('on' + type, fn);
	    };
	    /* istanbul ignore next */
	    avalon.fireDom = function (elem, type, opts) {
	        if (document$1.createEvent) {
	            var hackEvent = document$1.createEvent('Events');
	            hackEvent.initEvent(type, true, true, opts);
	            avalon.shadowCopy(hackEvent, opts);
	            elem.dispatchEvent(hackEvent);
	        } else if (root.contains(elem)) {
	            //IE6-8触发事件必须保证在DOM树中,否则报'SCRIPT16389: 未指明的错误'
	            hackEvent = document$1.createEventObject();
	            if (opts) avalon.shadowCopy(hackEvent, opts);
	            try {
	                elem.fireEvent('on' + type, hackEvent);
	            } catch (e) {
	                avalon.log('fireDom', type, 'args error');
	            }
	        }
	    };

	    var rmouseEvent = /^(?:mouse|contextmenu|drag)|click/;
	    /* istanbul ignore next */
	    avEvent.prototype.fixEvent = function () {
	        var event = this;
	        if (event.which == null && event.type.indexOf('key') === 0) {
	            event.which = event.charCode != null ? event.charCode : event.keyCode;
	        }
	        if (rmouseEvent.test(event.type) && !('pageX' in event)) {
	            var DOC = event.target.ownerDocument || document$1;
	            var box = DOC.compatMode === 'BackCompat' ? DOC.body : DOC.documentElement;
	            event.pageX = event.clientX + (box.scrollLeft >> 0) - (box.clientLeft >> 0);
	            event.pageY = event.clientY + (box.scrollTop >> 0) - (box.clientTop >> 0);
	            event.wheelDeltaY = ~~event.wheelDelta;
	            event.wheelDeltaX = 0;
	        }
	    };

	    //针对IE6-8修正input
	    /* istanbul ignore if */
	    if (!('oninput' in document$1.createElement('input'))) {
	        eventHooks.input = {
	            type: 'propertychange',
	            fix: function fix(elem, fn) {
	                return function (e) {
	                    if (e.propertyName === 'value') {
	                        e.type = 'input';
	                        return fn.apply(this, arguments);
	                    }
	                };
	            }
	        };
	    }

	    var readyList = [];

	    function fireReady(fn) {
	        avalon.isReady = true;
	        while (fn = readyList.shift()) {
	            fn(avalon);
	        }
	    }

	    avalon.ready = function (fn) {
	        readyList.push(fn);
	        if (avalon.isReady) {
	            fireReady();
	        }
	    };

	    avalon.ready(function () {
	        avalon.scan && avalon.scan(document$1.body);
	    });

	    /* istanbul ignore next */
	    function bootstrap() {
	        function doScrollCheck() {
	            try {
	                //IE下通过doScrollCheck检测DOM树是否建完
	                root.doScroll('left');
	                fireReady();
	            } catch (e) {
	                setTimeout(doScrollCheck);
	            }
	        }
	        if (document$1.readyState === 'complete') {
	            setTimeout(fireReady); //如果在domReady之外加载
	        } else if (document$1.addEventListener) {
	            document$1.addEventListener('DOMContentLoaded', fireReady, false);
	        } else if (document$1.attachEvent) {
	            //必须传入三个参数，否则在firefox4-26中报错
	            //caught exception: [Exception... "Not enough arguments"  nsresult: "0x
	            document$1.attachEvent('onreadystatechange', function () {
	                if (document$1.readyState === 'complete') {
	                    fireReady();
	                }
	            });
	            try {
	                var isTop = window$1.frameElement === null;
	            } catch (e) {}
	            if (root.doScroll && isTop && window$1.external) {
	                //fix IE iframe BUG
	                doScrollCheck();
	            }
	        }

	        avalon.bind(window$1, 'load', fireReady);
	    }
	    if (inBrowser) {
	        bootstrap();
	    }

	    /**
	     * ------------------------------------------------------------
	     *                          DOM Api
	     * shim,class,data,css,val,html,event,ready  
	     * ------------------------------------------------------------
	     */

	    var orphanTag = {
	        script: 1,
	        style: 1,
	        textarea: 1,
	        xmp: 1,
	        noscript: 1,
	        template: 1
	    };

	    /* 
	     *  此模块只用于文本转虚拟DOM, 
	     *  因为在真实浏览器会对我们的HTML做更多处理,
	     *  如, 添加额外属性, 改变结构
	     *  此模块就是用于模拟这些行为
	     */
	    function makeOrphan(node, nodeName, innerHTML) {
	        switch (nodeName) {
	            case 'style':
	            case 'script':
	            case 'noscript':
	            case 'template':
	            case 'xmp':
	                node.children = [{
	                    nodeName: '#text',
	                    nodeValue: innerHTML
	                }];
	                break;
	            case 'textarea':
	                var props = node.props;
	                props.type = nodeName;
	                props.value = innerHTML;
	                node.children = [{
	                    nodeName: '#text',
	                    nodeValue: innerHTML
	                }];
	                break;
	            case 'option':
	                node.children = [{
	                    nodeName: '#text',
	                    nodeValue: trimHTML(innerHTML)
	                }];
	                break;
	        }
	    }

	    //专门用于处理option标签里面的标签
	    var rtrimHTML = /<\w+(\s+("[^"]*"|'[^']*'|[^>])+)?>|<\/\w+>/gi;
	    function trimHTML(v) {
	        return String(v).replace(rtrimHTML, '').trim();
	    }

	    //widget rule duplex validate

	    function fromDOM(dom) {
	        return [from$1(dom)];
	    }

	    function from$1(node) {
	        var type = node.nodeName.toLowerCase();
	        switch (type) {
	            case '#text':
	            case '#comment':
	                return {
	                    nodeName: type,
	                    dom: node,
	                    nodeValue: node.nodeValue
	                };
	            default:
	                var props = markProps(node, node.attributes || []);
	                var vnode = {
	                    nodeName: type,
	                    dom: node,
	                    isVoidTag: !!voidTag[type],
	                    props: props
	                };
	                if (type === 'option') {
	                    //即便你设置了option.selected = true,
	                    //option.attributes也找不到selected属性
	                    props.selected = node.selected;
	                }
	                if (orphanTag[type] || type === 'option') {
	                    makeOrphan(vnode, type, node.text || node.innerHTML);
	                    if (node.childNodes.length === 1) {
	                        vnode.children[0].dom = node.firstChild;
	                    }
	                } else if (!vnode.isVoidTag) {
	                    vnode.children = [];
	                    for (var i = 0, el; el = node.childNodes[i++];) {
	                        var child = from$1(el);
	                        if (/\S/.test(child.nodeValue)) {
	                            vnode.children.push(child);
	                        }
	                    }
	                }
	                return vnode;
	        }
	    }

	    var rformElement = /input|textarea|select/i;

	    function markProps(node, attrs) {
	        var ret = {};
	        for (var i = 0, n = attrs.length; i < n; i++) {
	            var attr = attrs[i];
	            if (attr.specified) {
	                //IE6-9不会将属性名变小写,比如它会将用户的contenteditable变成contentEditable
	                ret[attr.name.toLowerCase()] = attr.value;
	            }
	        }
	        if (rformElement.test(node.nodeName)) {
	            ret.type = node.type;
	            var a = node.getAttributeNode('value');
	            if (a && /\S/.test(a.value)) {
	                //IE6,7中无法取得checkbox,radio的value
	                ret.value = a.value;
	            }
	        }
	        var style = node.style.cssText;
	        if (style) {
	            ret.style = style;
	        }
	        //类名 = 去重(静态类名+动态类名+ hover类名? + active类名)
	        if (ret.type === 'select-one') {
	            ret.selectedIndex = node.selectedIndex;
	        }
	        return ret;
	    }

	    function VText(text) {
	        this.nodeName = '#text';
	        this.nodeValue = text;
	    }

	    VText.prototype = {
	        constructor: VText,
	        toDOM: function toDOM() {
	            /* istanbul ignore if*/
	            if (this.dom) return this.dom;
	            var v = avalon._decode(this.nodeValue);
	            return this.dom = document$1.createTextNode(v);
	        },
	        toHTML: function toHTML() {
	            return this.nodeValue;
	        }
	    };

	    function VComment(text) {
	        this.nodeName = '#comment';
	        this.nodeValue = text;
	    }
	    VComment.prototype = {
	        constructor: VComment,
	        toDOM: function toDOM() {
	            if (this.dom) return this.dom;
	            return this.dom = document$1.createComment(this.nodeValue);
	        },
	        toHTML: function toHTML() {
	            return '<!--' + this.nodeValue + '-->';
	        }
	    };

	    function VElement(type, props, children, isVoidTag) {
	        this.nodeName = type;
	        this.props = props;
	        this.children = children;
	        this.isVoidTag = isVoidTag;
	    }
	    VElement.prototype = {
	        constructor: VElement,
	        toDOM: function toDOM() {
	            if (this.dom) return this.dom;
	            var dom,
	                tagName = this.nodeName;
	            if (avalon.modern && svgTags[tagName]) {
	                dom = createSVG(tagName);
	                /* istanbul ignore next*/
	            } else if (!avalon.modern && (VMLTags[tagName] || rvml.test(tagName))) {
	                dom = createVML(tagName);
	            } else {
	                dom = document$1.createElement(tagName);
	            }

	            var props = this.props || {};

	            for (var i in props) {
	                var val = props[i];
	                if (skipFalseAndFunction(val)) {
	                    /* istanbul ignore if*/
	                    if (specalAttrs[i] && avalon.msie < 8) {
	                        specalAttrs[i](dom, val);
	                    } else {
	                        dom.setAttribute(i, val + '');
	                    }
	                }
	            }
	            var c = this.children || [];
	            var template = c[0] ? c[0].nodeValue : '';
	            switch (this.nodeName) {
	                case 'script':
	                    dom.type = 'noexec';
	                    dom.text = template;
	                    try {
	                        dom.innerHTML = template;
	                    } catch (e) {}
	                    dom.type = props.type || '';
	                    break;
	                case 'noscript':
	                    dom.textContent = template;
	                case 'style':
	                case 'xmp':
	                case 'template':
	                    try {
	                        dom.innerHTML = template;
	                    } catch (e) {
	                        /* istanbul ignore next*/
	                        hackIE(dom, this.nodeName, template);
	                    }
	                    break;
	                case 'option':
	                    //IE6-8,为option添加文本子节点,不会同步到text属性中
	                    /* istanbul ignore next */
	                    if (msie$1 < 9) dom.text = template;
	                default:
	                    /* istanbul ignore next */
	                    if (!this.isVoidTag && this.children) {
	                        this.children.forEach(function (el) {
	                            return c && dom.appendChild(avalon.vdom(c, 'toDOM'));
	                        });
	                    }
	                    break;
	            }
	            return this.dom = dom;
	        },

	        /* istanbul ignore next */

	        toHTML: function toHTML() {
	            var arr = [];
	            var props = this.props || {};
	            for (var i in props) {
	                var val = props[i];
	                if (skipFalseAndFunction(val)) {
	                    arr.push(i + '=' + avalon.quote(props[i] + ''));
	                }
	            }
	            arr = arr.length ? ' ' + arr.join(' ') : '';
	            var str = '<' + this.nodeName + arr;
	            if (this.isVoidTag) {
	                return str + '/>';
	            }
	            str += '>';
	            if (this.children) {
	                str += this.children.map(function (el) {
	                    return el ? avalon.vdom(el, 'toHTML') : '';
	                }).join('');
	            }
	            return str + '</' + this.nodeName + '>';
	        }
	    };
	    function hackIE(dom, nodeName, template) {
	        switch (nodeName) {
	            case 'style':
	                dom.setAttribute('type', 'text/css');
	                dom.styleSheet.cssText = template;
	                break;
	            case 'xmp': //IE6-8,XMP元素里面只能有文本节点,不能使用innerHTML
	            case 'noscript':
	                dom.textContent = template;
	                break;
	        }
	    }
	    function skipFalseAndFunction(a) {
	        return a !== false && Object(a) !== a;
	    }
	    /* istanbul ignore next */
	    var specalAttrs = {
	        "class": function _class(dom, val) {
	            dom.className = val;
	        },
	        style: function style(dom, val) {
	            dom.style.cssText = val;
	        },
	        type: function type(dom, val) {
	            try {
	                //textarea,button 元素在IE6,7设置 type 属性会抛错
	                dom.type = val;
	            } catch (e) {}
	        },
	        'for': function _for(dom, val) {
	            dom.setAttribute('for', val);
	            dom.htmlFor = val;
	        }
	    };

	    function createSVG(type) {
	        return document$1.createElementNS('http://www.w3.org/2000/svg', type);
	    }
	    var svgTags = avalon.oneObject('circle,defs,ellipse,image,line,' + 'path,polygon,polyline,rect,symbol,text,use,g,svg');

	    var rvml = /^\w+\:\w+/;
	    /* istanbul ignore next*/
	    function createVML(type) {
	        if (document$1.styleSheets.length < 31) {
	            document$1.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
	        } else {
	            // no more room, add to the existing one
	            // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx
	            document$1.styleSheets[0].addRule(".rvml", "behavior:url(#default#VML)");
	        }
	        var arr = type.split(':');
	        if (arr.length === 1) {
	            arr.unshift('v');
	        }
	        var tag = arr[1];
	        var ns = arr[0];
	        if (!document$1.namespaces[ns]) {
	            document$1.namespaces.add(ns, "urn:schemas-microsoft-com:vml");
	        }
	        return document$1.createElement('<' + ns + ':' + tag + ' class="rvml">');
	    }

	    var VMLTags = avalon.oneObject('shape,line,polyline,rect,roundrect,oval,arc,' + 'curve,background,image,shapetype,group,fill,' + 'stroke,shadow, extrusion, textbox, imagedata, textpath');

	    function VFragment(children, key, val, index) {
	        this.nodeName = '#document-fragment';
	        this.children = children;
	        this.key = key;
	        this.val = val;
	        this.index = index;
	        this.props = {};
	    }
	    VFragment.prototype = {
	        constructor: VFragment,
	        toDOM: function toDOM() {
	            if (this.dom) return this.dom;
	            var f = this.toFragment();
	            //IE6-11 docment-fragment都没有children属性 
	            this.split = f.lastChild;
	            return this.dom = f;
	        },
	        dispose: function dispose() {
	            this.toFragment();
	            this.innerRender && this.innerRender.dispose();
	            for (var i in this) {
	                this[i] = null;
	            }
	        },
	        toFragment: function toFragment() {
	            var f = createFragment();
	            this.children.forEach(function (el) {
	                return f.appendChild(avalon.vdom(el, 'toDOM'));
	            });
	            return f;
	        },
	        toHTML: function toHTML() {
	            var c = this.children;
	            return c.map(function (el) {
	                return avalon.vdom(el, 'toHTML');
	            }).join('');
	        }
	    };

	    /**
	     * 虚拟DOM的4大构造器
	     */
	    avalon.mix(avalon, {
	        VText: VText,
	        VComment: VComment,
	        VElement: VElement,
	        VFragment: VFragment
	    });

	    var constNameMap = {
	        '#text': 'VText',
	        '#document-fragment': 'VFragment',
	        '#comment': 'VComment'
	    };

	    var vdom = avalon.vdomAdaptor = avalon.vdom = function (obj, method) {
	        if (!obj) {
	            //obj在ms-for循环里面可能是null
	            return method === "toHTML" ? '' : createFragment();
	        }
	        var nodeName = obj.nodeName;
	        if (!nodeName) {
	            return new avalon.VFragment(obj)[method]();
	        }
	        var constName = constNameMap[nodeName] || 'VElement';
	        return avalon[constName].prototype[method].call(obj);
	    };

	    avalon.domize = function (a) {
	        return avalon.vdom(a, 'toDOM');
	    };

	    avalon.pendingActions = [];
	    avalon.uniqActions = {};
	    avalon.inTransaction = 0;
	    config.trackDeps = false;
	    avalon.track = function () {
	        if (config.trackDeps) {
	            avalon.log.apply(avalon, arguments);
	        }
	    };

	    /**
	     * Batch is a pseudotransaction, just for purposes of memoizing ComputedValues when nothing else does.
	     * During a batch `onBecomeUnobserved` will be called at most once per observable.
	     * Avoids unnecessary recalculations.
	     */

	    function runActions() {
	        if (avalon.isRunningActions === true || avalon.inTransaction > 0) return;
	        avalon.isRunningActions = true;
	        var tasks = avalon.pendingActions.splice(0, avalon.pendingActions.length);
	        for (var i = 0, task; task = tasks[i++];) {
	            task.update();
	            delete avalon.uniqActions[task.uuid];
	        }
	        avalon.isRunningActions = false;
	    }

	    function propagateChanged(target) {
	        var list = target.observers;
	        for (var i = 0, el; el = list[i++];) {
	            el.schedule(); //通知action, computed做它们该做的事
	        }
	    }

	    //将自己抛到市场上卖
	    function reportObserved(target) {
	        var action = avalon.trackingAction || null;
	        if (action !== null) {

	            avalon.track('征收到', target.expr);
	            action.mapIDs[target.uuid] = target;
	        }
	    }

	    var targetStack = [];

	    function collectDeps(action, getter) {
	        if (!action.observers) return;
	        var preAction = avalon.trackingAction;
	        if (preAction) {
	            targetStack.push(preAction);
	        }
	        avalon.trackingAction = action;
	        avalon.track('【action】', action.type, action.expr, '开始征收依赖项');
	        //多个observe持有同一个action
	        action.mapIDs = {}; //重新收集依赖
	        var hasError = true,
	            result;
	        try {
	            result = getter.call(action);
	            hasError = false;
	        } finally {
	            if (hasError) {
	                avalon.warn('collectDeps fail', getter + '');
	                action.mapIDs = {};
	                avalon.trackingAction = preAction;
	            } else {
	                // 确保它总是为null
	                avalon.trackingAction = targetStack.pop();
	                try {
	                    resetDeps(action);
	                } catch (e) {
	                    avalon.warn(e);
	                }
	            }
	            return result;
	        }
	    }

	    function resetDeps(action) {
	        var prev = action.observers,
	            curr = [],
	            checked = {},
	            ids = [];
	        for (var i in action.mapIDs) {
	            var dep = action.mapIDs[i];
	            if (!dep.isAction) {
	                if (!dep.observers) {
	                    //如果它已经被销毁
	                    delete action.mapIDs[i];
	                    continue;
	                }
	                ids.push(dep.uuid);
	                curr.push(dep);
	                checked[dep.uuid] = 1;
	                if (dep.lastAccessedBy === action.uuid) {
	                    continue;
	                }
	                dep.lastAccessedBy = action.uuid;
	                avalon.Array.ensure(dep.observers, action);
	            }
	        }
	        var ids = ids.sort().join(',');
	        if (ids === action.ids) {
	            return;
	        }
	        action.ids = ids;
	        if (!action.isComputed) {
	            action.observers = curr;
	        } else {
	            action.depsCount = curr.length;
	            action.deps = avalon.mix({}, action.mapIDs);
	            action.depsVersion = {};
	            for (var _i in action.mapIDs) {
	                var _dep = action.mapIDs[_i];
	                action.depsVersion[_dep.uuid] = _dep.version;
	            }
	        }

	        for (var _i2 = 0, _dep2; _dep2 = prev[_i2++];) {
	            if (!checked[_dep2.uuid]) {
	                avalon.Array.remove(_dep2.observers, action);
	            }
	        }
	    }

	    function transaction(action, thisArg, args) {
	        args = args || [];
	        var name = 'transaction ' + (action.name || action.displayName || 'noop');
	        transactionStart(name);
	        var res = action.apply(thisArg, args);
	        transactionEnd(name);
	        return res;
	    }
	    avalon.transaction = transaction;

	    function transactionStart(name) {
	        avalon.inTransaction += 1;
	    }

	    function transactionEnd(name) {
	        if (--avalon.inTransaction === 0) {
	            avalon.isRunningActions = false;
	            runActions();
	        }
	    }

	    /* 
	     * 将要检测的字符串的字符串替换成??123这样的格式
	     */
	    var stringNum = 0;
	    var stringPool = {
	        map: {}
	    };
	    var rfill = /\?\?\d+/g;
	    function dig(a) {
	        var key = '??' + stringNum++;
	        stringPool.map[key] = a;
	        return key + ' ';
	    }
	    function fill(a) {
	        var val = stringPool.map[a];
	        return val;
	    }
	    function clearString(str) {
	        var array = readString(str);
	        for (var i = 0, n = array.length; i < n; i++) {
	            str = str.replace(array[i], dig);
	        }
	        return str;
	    }
	    //https://github.com/RubyLouvre/avalon/issues/1944
	    function readString(str, i, ret) {
	        var end = false,
	            s = 0,
	            i = i || 0;
	        ret = ret || [];
	        for (var n = str.length; i < n; i++) {
	            var c = str.charAt(i);
	            if (!end) {
	                if (c === "'") {
	                    end = "'";
	                    s = i;
	                } else if (c === '"') {
	                    end = '"';
	                    s = i;
	                }
	            } else {
	                if (c === end) {
	                    ret.push(str.slice(s, i + 1));
	                    end = false;
	                }
	            }
	        }
	        if (end !== false) {
	            return readString(str, s + 1, ret);
	        }
	        return ret;
	    }

	    var keyMap = avalon.oneObject("break,case,catch,continue,debugger,default,delete,do,else,false," + "finally,for,function,if,in,instanceof,new,null,return,switch,this," + "throw,true,try,typeof,var,void,while,with," + /* 关键字*/
	    "abstract,boolean,byte,char,class,const,double,enum,export,extends," + "final,float,goto,implements,import,int,interface,long,native," + "package,private,protected,public,short,static,super,synchronized," + "throws,transient,volatile,arguments");

	    var skipMap = avalon.mix({
	        Math: 1,
	        Date: 1,
	        $event: 1,
	        window: 1,
	        __vmodel__: 1,
	        avalon: 1
	    }, keyMap);

	    var rvmKey = /(^|[^\w\u00c0-\uFFFF_])(@|##)(?=[$\w])/g;
	    var ruselessSp = /\s*(\.|\|)\s*/g;
	    var rshortCircuit = /\|\|/g;
	    var brackets = /\(([^)]*)\)/;
	    var rpipeline = /\|(?=\?\?)/;
	    var rregexp = /(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/g;
	    var robjectProp = /\.[\w\.\$]+/g; //对象的属性 el.xxx 中的xxx
	    var robjectKey = /(\{|\,)\s*([\$\w]+)\s*:/g; //对象的键名与冒号 {xxx:1,yyy: 2}中的xxx, yyy
	    var rfilterName = /\|(\w+)/g;
	    var rlocalVar = /[$a-zA-Z_][$a-zA-Z0-9_]*/g;

	    var exprCache = new Cache(300);

	    function addScopeForLocal(str) {
	        return str.replace(robjectProp, dig).replace(rlocalVar, function (el) {
	            if (!skipMap[el]) {
	                return "__vmodel__." + el;
	            }
	            return el;
	        });
	    }

	    function addScope(expr, type) {
	        var cacheKey = expr + ':' + type;
	        var cache = exprCache.get(cacheKey);
	        if (cache) {
	            return cache.slice(0);
	        }

	        stringPool.map = {};
	        //https://github.com/RubyLouvre/avalon/issues/1849
	        var input = expr.replace(rregexp, function (a, b) {
	            return b + dig(a.slice(b.length));
	        }); //移除所有正则
	        input = clearString(input); //移除所有字符串
	        input = input.replace(rshortCircuit, dig). //移除所有短路运算符
	        replace(ruselessSp, '$1'). //移除.|两端空白

	        replace(robjectKey, function (_, a, b) {
	            //移除所有键名
	            return a + dig(b) + ':'; //比如 ms-widget="[{is:'ms-address-wrap', $id:'address'}]"这样极端的情况 
	        }).replace(rvmKey, '$1__vmodel__.'). //转换@与##为__vmodel__
	        replace(rfilterName, function (a, b) {
	            //移除所有过滤器的名字
	            return '|' + dig(b);
	        });
	        input = addScopeForLocal(input); //在本地变量前添加__vmodel__

	        var filters = input.split(rpipeline); //根据管道符切割表达式
	        var body = filters.shift().replace(rfill, fill).trim();
	        if (/\?\?\d/.test(body)) {
	            body = body.replace(rfill, fill);
	        }
	        if (filters.length) {
	            filters = filters.map(function (filter) {
	                var bracketArgs = '';
	                filter = filter.replace(brackets, function (a, b) {
	                    if (/\S/.test(b)) {
	                        bracketArgs += ',' + b; //还原字符串,正则,短路运算符
	                    }
	                    return '';
	                });
	                var arg = '[' + avalon.quote(filter.trim()) + bracketArgs + ']';
	                return arg;
	            });
	            filters = 'avalon.composeFilters(' + filters + ')(__value__)';
	            filters = filters.replace(rfill, fill);
	        } else {
	            filters = '';
	        }
	        return exprCache.put(cacheKey, [body, filters]);
	    }
	    var rhandleName = /^__vmodel__\.[$\w\.]+$/;
	    var rfixIE678 = /__vmodel__\.([^(]+)\(([^)]*)\)/;
	    function makeHandle(body) {
	        if (rhandleName.test(body)) {
	            body = body + '($event)';
	        }
	        /* istanbul ignore if */
	        if (msie$1 < 9) {
	            body = body.replace(rfixIE678, function (a, b, c) {
	                return '__vmodel__.' + b + '.call(__vmodel__' + (/\S/.test(c) ? ',' + c : '') + ')';
	            });
	        }
	        return body;
	    }
	    function createGetter(expr, type) {
	        var arr = addScope(expr, type),
	            body;
	        if (!arr[1]) {
	            body = arr[0];
	        } else {
	            body = arr[1].replace(/__value__\)$/, arr[0] + ')');
	        }
	        try {
	            return new Function('__vmodel__', 'return ' + body + ';');
	            /* istanbul ignore next */
	        } catch (e) {
	            avalon.log('parse getter: [', expr, body, ']error');
	            return avalon.noop;
	        }
	    }

	    /**
	     * 生成表达式设值函数
	     * @param  {String}  expr
	     */
	    function createSetter(expr, type) {
	        var arr = addScope(expr, type);
	        var body = 'try{ ' + arr[0] + ' = __value__}catch(e){avalon.log(e, "in on dir")}';
	        try {
	            return new Function('__vmodel__', '__value__', body + ';');
	            /* istanbul ignore next */
	        } catch (e) {
	            avalon.log('parse setter: ', expr, ' error');
	            return avalon.noop;
	        }
	    }

	    var actionUUID = 1;
	    //需要重构
	    function Action(vm, options, callback) {
	        for (var i in options) {
	            if (protectedMenbers[i] !== 1) {
	                this[i] = options[i];
	            }
	        }

	        this.vm = vm;
	        this.observers = [];
	        this.callback = callback;
	        this.uuid = ++actionUUID;
	        this.ids = '';
	        this.mapIDs = {}; //这个用于去重
	        this.isAction = true;
	        var expr = this.expr;
	        // 缓存取值函数
	        if (typeof this.getter !== 'function') {
	            this.getter = createGetter(expr, this.type);
	        }
	        // 缓存设值函数（双向数据绑定）
	        if (this.type === 'duplex') {
	            this.setter = createSetter(expr, this.type);
	        }
	        // 缓存表达式旧值
	        this.value = NaN;
	        // 表达式初始值 & 提取依赖
	        if (!this.node) {
	            this.value = this.get();
	        }
	    }

	    Action.prototype = {
	        getValue: function getValue() {
	            var scope = this.vm;
	            try {
	                return this.getter.call(scope, scope);
	            } catch (e) {
	                avalon.log(this.getter + ' exec error');
	            }
	        },
	        setValue: function setValue(value) {
	            var scope = this.vm;
	            if (this.setter) {
	                this.setter.call(scope, scope, value);
	            }
	        },


	        // get --> getValue --> getter
	        get: function get(fn) {
	            var name = 'action track ' + this.type;

	            if (this.deep) {
	                avalon.deepCollect = true;
	            }

	            var value = collectDeps(this, this.getValue);
	            if (this.deep && avalon.deepCollect) {
	                avalon.deepCollect = false;
	            }

	            return value;
	        },


	        /**
	         * 在更新视图前保存原有的value
	         */
	        beforeUpdate: function beforeUpdate() {
	            return this.oldValue = getPlainObject(this.value);
	        },
	        update: function update(args, uuid) {
	            var oldVal = this.beforeUpdate();
	            var newVal = this.value = this.get();
	            var callback = this.callback;
	            if (callback && this.diff(newVal, oldVal, args)) {
	                callback.call(this.vm, this.value, oldVal, this.expr);
	            }
	            this._isScheduled = false;
	        },
	        schedule: function schedule() {
	            if (!this._isScheduled) {
	                this._isScheduled = true;
	                if (!avalon.uniqActions[this.uuid]) {
	                    avalon.uniqActions[this.uuid] = 1;
	                    avalon.pendingActions.push(this);
	                }

	                runActions(); //这里会还原_isScheduled

	            }
	        },
	        removeDepends: function removeDepends() {
	            var self = this;
	            this.observers.forEach(function (depend) {
	                avalon.Array.remove(depend.observers, self);
	            });
	        },


	        /**
	         * 比较两个计算值是否,一致,在for, class等能复杂数据类型的指令中,它们会重写diff复法
	         */
	        diff: function diff(a, b) {
	            return a !== b;
	        },


	        /**
	         * 销毁指令
	         */
	        dispose: function dispose() {
	            this.value = null;
	            this.removeDepends();
	            if (this.beforeDispose) {
	                this.beforeDispose();
	            }
	            for (var i in this) {
	                delete this[i];
	            }
	        }
	    };

	    function getPlainObject(v) {
	        if (v && typeof v === 'object') {
	            if (v && v.$events) {
	                return v.$model;
	            } else if (Array.isArray(v)) {
	                var ret = [];
	                for (var i = 0, n = v.length; i < n; i++) {
	                    ret.push(getPlainObject(v[i]));
	                }
	                return ret;
	            } else {
	                var _ret = {};
	                for (var _i3 in v) {
	                    _ret[_i3] = getPlainObject(v[_i3]);
	                }
	                return _ret;
	            }
	        } else {
	            return v;
	        }
	    }

	    var protectedMenbers = {
	        vm: 1,
	        callback: 1,

	        observers: 1,
	        oldValue: 1,
	        value: 1,
	        getValue: 1,
	        setValue: 1,
	        get: 1,

	        removeDepends: 1,
	        beforeUpdate: 1,
	        update: 1,
	        //diff
	        //getter
	        //setter
	        //expr
	        //vdom
	        //type: "for"
	        //name: "ms-for"
	        //attrName: ":for"
	        //param: "click"
	        //beforeDispose
	        dispose: 1
	    };

	    /**
	    * 
	     与Computed等共享UUID
	    */
	    var obid = 1;
	    function Mutation(expr, value, vm) {
	        //构造函数
	        this.expr = expr;
	        if (value) {
	            var childVm = platform.createProxy(value, this);
	            if (childVm) {
	                value = childVm;
	            }
	        }
	        this.value = value;
	        this.vm = vm;
	        try {
	            vm.$mutations[expr] = this;
	        } catch (ignoreIE) {}
	        this.uuid = ++obid;
	        this.updateVersion();
	        this.mapIDs = {};
	        this.observers = [];
	    }

	    Mutation.prototype = {
	        get: function get() {
	            if (avalon.trackingAction) {
	                this.collect(); //被收集
	                var childOb = this.value;
	                if (childOb && childOb.$events) {
	                    if (Array.isArray(childOb)) {
	                        childOb.forEach(function (item) {
	                            if (item && item.$events) {
	                                item.$events.__dep__.collect();
	                            }
	                        });
	                    } else if (avalon.deepCollect) {
	                        for (var key in childOb) {
	                            if (childOb.hasOwnProperty(key)) {
	                                var collectIt = childOb[key];
	                            }
	                        }
	                    }
	                }
	            }
	            return this.value;
	        },
	        collect: function collect() {
	            avalon.track(name, '被收集');
	            reportObserved(this);
	        },
	        updateVersion: function updateVersion() {
	            this.version = Math.random() + Math.random();
	        },
	        notify: function notify() {
	            transactionStart();
	            propagateChanged(this);
	            transactionEnd();
	        },
	        set: function set(newValue) {
	            var oldValue = this.value;
	            if (newValue !== oldValue) {
	                if (avalon.isObject(newValue)) {
	                    var hash = oldValue && oldValue.$hashcode;
	                    var childVM = platform.createProxy(newValue, this);
	                    if (childVM) {
	                        if (hash) {
	                            childVM.$hashcode = hash;
	                        }
	                        newValue = childVM;
	                    }
	                }
	                this.value = newValue;
	                this.updateVersion();
	                this.notify();
	            }
	        }
	    };

	    function getBody(fn) {
	        var entire = fn.toString();
	        return entire.substring(entire.indexOf('{}') + 1, entire.lastIndexOf('}'));
	    }
	    //如果不存在三目,if,方法
	    var instability = /(\?|if\b|\(.+\))/;

	    function __create(o) {
	        var __ = function __() {};
	        __.prototype = o;
	        return new __();
	    }

	    function __extends(child, parent) {
	        if (typeof parent === 'function') {
	            var proto = child.prototype = __create(parent.prototype);
	            proto.constructor = child;
	        }
	    }
	    var Computed = function (_super) {
	        __extends(Computed, _super);

	        function Computed(name, options, vm) {
	            //构造函数
	            _super.call(this, name, undefined, vm);
	            delete options.get;
	            delete options.set;

	            avalon.mix(this, options);
	            this.deps = {};
	            this.type = 'computed';
	            this.depsVersion = {};
	            this.isComputed = true;
	            this.trackAndCompute();
	            if (!('isStable' in this)) {
	                this.isStable = !instability.test(getBody(this.getter));
	            }
	        }
	        var cp = Computed.prototype;
	        cp.trackAndCompute = function () {
	            if (this.isStable && this.depsCount > 0) {
	                this.getValue();
	            } else {
	                collectDeps(this, this.getValue.bind(this));
	            }
	        };

	        cp.getValue = function () {
	            return this.value = this.getter.call(this.vm);
	        };

	        cp.schedule = function () {
	            var observers = this.observers;
	            var i = observers.length;
	            while (i--) {
	                var d = observers[i];
	                if (d.schedule) {
	                    d.schedule();
	                }
	            }
	        };

	        cp.shouldCompute = function () {
	            if (this.isStable) {
	                //如果变动因子确定,那么只比较变动因子的版本
	                var toComputed = false;
	                for (var i in this.deps) {
	                    if (this.deps[i].version !== this.depsVersion[i]) {
	                        toComputed = true;
	                        this.depsVersion[i] = this.deps[i].version;
	                    }
	                }
	                return toComputed;
	            }
	            return true;
	        };
	        cp.set = function () {
	            if (this.setter) {
	                avalon.transaction(this.setter, this.vm, arguments);
	            }
	        };
	        cp.get = function () {

	            //当被设置了就不稳定,当它被访问了一次就是稳定
	            this.collect();

	            if (this.shouldCompute()) {
	                this.trackAndCompute();
	                // console.log('computed 2 分支')
	                this.updateVersion();
	                //  this.reportChanged()
	            }

	            //下面这一行好像没用
	            return this.value;
	        };
	        return Computed;
	    }(Mutation);

	    /**
	     * 这里放置ViewModel模块的共用方法
	     * avalon.define: 全框架最重要的方法,生成用户VM
	     * IProxy, 基本用户数据产生的一个数据对象,基于$model与vmodel之间的形态
	     * modelFactory: 生成用户VM
	     * canHijack: 判定此属性是否该被劫持,加入数据监听与分发的的逻辑
	     * createProxy: listFactory与modelFactory的封装
	     * createAccessor: 实现数据监听与分发的重要对象
	     * itemFactory: ms-for循环中产生的代理VM的生成工厂
	     * fuseFactory: 两个ms-controller间产生的代理VM的生成工厂
	     */

	    avalon.define = function (definition) {
	        var $id = definition.$id;
	        if (!$id) {
	            avalon.error('vm.$id must be specified');
	        }
	        if (avalon.vmodels[$id]) {
	            avalon.warn('error:[' + $id + '] had defined!');
	        }
	        var vm = platform.modelFactory(definition);
	        return avalon.vmodels[$id] = vm;
	    };

	    /**
	     * 在未来的版本,avalon改用Proxy来创建VM,因此
	     */

	    function IProxy(definition, dd) {
	        avalon.mix(this, definition);
	        avalon.mix(this, $$skipArray);
	        this.$hashcode = avalon.makeHashCode('$');
	        this.$id = this.$id || this.$hashcode;
	        this.$events = {
	            __dep__: dd || new Mutation(this.$id)
	        };
	        if (avalon.config.inProxyMode) {
	            delete this.$mutations;
	            this.$accessors = {};
	            this.$computed = {};
	            this.$track = '';
	        } else {
	            this.$accessors = {
	                $model: modelAccessor
	            };
	        }
	        if (dd === void 0) {
	            this.$watch = platform.watchFactory(this.$events);
	            this.$fire = platform.fireFactory(this.$events);
	        } else {
	            delete this.$watch;
	            delete this.$fire;
	        }
	    }

	    platform.modelFactory = function modelFactory(definition, dd) {
	        var $computed = definition.$computed || {};
	        delete definition.$computed;
	        var core = new IProxy(definition, dd);
	        var $accessors = core.$accessors;
	        var keys = [];

	        platform.hideProperty(core, '$mutations', {});

	        for (var key in definition) {
	            if (key in $$skipArray) continue;
	            var val = definition[key];
	            keys.push(key);
	            if (canHijack(key, val)) {
	                $accessors[key] = createAccessor(key, val);
	            }
	        }
	        for (var _key in $computed) {
	            if (_key in $$skipArray) continue;
	            var val = $computed[_key];
	            if (typeof val === 'function') {
	                val = {
	                    get: val
	                };
	            }
	            if (val && val.get) {
	                val.getter = val.get;
	                val.setter = val.set;
	                avalon.Array.ensure(keys, _key);
	                $accessors[_key] = createAccessor(_key, val, true);
	            }
	        }
	        //将系统API以unenumerable形式加入vm,
	        //添加用户的其他不可监听属性或方法
	        //重写$track
	        //并在IE6-8中增添加不存在的hasOwnPropert方法
	        var vm = platform.createViewModel(core, $accessors, core);
	        platform.afterCreate(vm, core, keys, !dd);
	        return vm;
	    };
	    var $proxyItemBackdoorMap = {};

	    function canHijack(key, val, $proxyItemBackdoor) {
	        if (key in $$skipArray) return false;
	        if (key.charAt(0) === '$') {
	            if ($proxyItemBackdoor) {
	                if (!$proxyItemBackdoorMap[key]) {
	                    $proxyItemBackdoorMap[key] = 1;
	                    avalon.warn('ms-for\u4E2D\u7684\u53D8\u91CF' + key + '\u4E0D\u518D\u5EFA\u8BAE\u4EE5$\u4E3A\u524D\u7F00');
	                }
	                return true;
	            }
	            return false;
	        }
	        if (val == null) {
	            avalon.warn('定义vmodel时' + key + '的属性值不能为null undefine');
	            return true;
	        }
	        if (/error|date|function|regexp/.test(avalon.type(val))) {
	            return false;
	        }
	        return !(val && val.nodeName && val.nodeType);
	    }

	    function createProxy(target, dd) {
	        if (target && target.$events) {
	            return target;
	        }
	        var vm;
	        if (Array.isArray(target)) {
	            vm = platform.listFactory(target, false, dd);
	        } else if (isObject(target)) {
	            vm = platform.modelFactory(target, dd);
	        }
	        return vm;
	    }

	    platform.createProxy = createProxy;

	    platform.itemFactory = function itemFactory(before, after) {
	        var keyMap = before.$model;
	        var core = new IProxy(keyMap);
	        var state = avalon.shadowCopy(core.$accessors, before.$accessors); //防止互相污染
	        var data = after.data;
	        //core是包含系统属性的对象
	        //keyMap是不包含系统属性的对象, keys
	        for (var key in data) {
	            var val = keyMap[key] = core[key] = data[key];
	            state[key] = createAccessor(key, val);
	        }
	        var keys = Object.keys(keyMap);
	        var vm = platform.createViewModel(core, state, core);
	        platform.afterCreate(vm, core, keys);
	        return vm;
	    };

	    function createAccessor(key, val, isComputed) {
	        var mutation = null;
	        var Accessor = isComputed ? Computed : Mutation;
	        return {
	            get: function Getter() {
	                if (!mutation) {
	                    mutation = new Accessor(key, val, this);
	                }
	                return mutation.get();
	            },
	            set: function Setter(newValue) {
	                if (!mutation) {
	                    mutation = new Accessor(key, val, this);
	                }
	                mutation.set(newValue);
	            },
	            enumerable: true,
	            configurable: true
	        };
	    }

	    platform.fuseFactory = function fuseFactory(before, after) {
	        var keyMap = avalon.mix(before.$model, after.$model);
	        var core = new IProxy(avalon.mix(keyMap, {
	            $id: before.$id + after.$id
	        }));
	        var state = avalon.mix(core.$accessors, before.$accessors, after.$accessors); //防止互相污染

	        var keys = Object.keys(keyMap);
	        //将系统API以unenumerable形式加入vm,并在IE6-8中添加hasOwnPropert方法
	        var vm = platform.createViewModel(core, state, core);
	        platform.afterCreate(vm, core, keys, false);
	        return vm;
	    };

	    function toJson(val) {
	        var xtype = avalon.type(val);
	        if (xtype === 'array') {
	            var array = [];
	            for (var i = 0; i < val.length; i++) {
	                array[i] = toJson(val[i]);
	            }
	            return array;
	        } else if (xtype === 'object') {
	            if (typeof val.$track === 'string') {
	                var obj = {};
	                var arr = val.$track.match(/[^☥]+/g) || [];
	                arr.forEach(function (i) {
	                    var value = val[i];
	                    obj[i] = value && value.$events ? toJson(value) : value;
	                });
	                return obj;
	            }
	        }
	        return val;
	    }

	    var modelAccessor = {
	        get: function get() {
	            return toJson(this);
	        },
	        set: avalon.noop,
	        enumerable: false,
	        configurable: true
	    };

	    platform.toJson = toJson;
	    platform.modelAccessor = modelAccessor;

	    var _splice = ap.splice;
	    var __array__ = {
	        set: function set(index, val) {
	            if (index >>> 0 === index && this[index] !== val) {
	                if (index > this.length) {
	                    throw Error(index + 'set方法的第一个参数不能大于原数组长度');
	                }
	                this.splice(index, 1, val);
	            }
	        },
	        toJSON: function toJSON() {
	            //为了解决IE6-8的解决,通过此方法显式地求取数组的$model
	            return this.$model = platform.toJson(this);
	        },
	        contains: function contains(el) {
	            //判定是否包含
	            return this.indexOf(el) !== -1;
	        },
	        ensure: function ensure(el) {
	            if (!this.contains(el)) {
	                //只有不存在才push
	                this.push(el);
	                return true;
	            }
	            return false;
	        },
	        pushArray: function pushArray(arr) {
	            return this.push.apply(this, arr);
	        },
	        remove: function remove(el) {
	            //移除第一个等于给定值的元素
	            return this.removeAt(this.indexOf(el));
	        },
	        removeAt: function removeAt(index) {
	            //移除指定索引上的元素
	            if (index >>> 0 === index) {
	                return this.splice(index, 1);
	            }
	            return [];
	        },
	        clear: function clear() {
	            this.removeAll();
	            return this;
	        },
	        removeAll: function removeAll(all) {
	            //移除N个元素
	            var size = this.length;
	            var eliminate = Array.isArray(all) ? function (el) {
	                return all.indexOf(el) !== -1;
	            } : typeof all === 'function' ? all : false;

	            if (eliminate) {
	                for (var i = this.length - 1; i >= 0; i--) {
	                    if (eliminate(this[i], i)) {
	                        _splice.call(this, i, 1);
	                    }
	                }
	            } else {
	                _splice.call(this, 0, this.length);
	            }
	            this.toJSON();
	            this.$events.__dep__.notify();
	        }
	    };
	    function hijackMethods(array) {
	        for (var i in __array__) {
	            platform.hideProperty(array, i, __array__[i]);
	        }
	    }
	    var __method__ = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];

	    __method__.forEach(function (method) {
	        var original = ap[method];
	        __array__[method] = function () {
	            // 继续尝试劫持数组元素的属性
	            var core = this.$events;

	            var args = platform.listFactory(arguments, true, core.__dep__);
	            var result = original.apply(this, args);

	            this.toJSON();
	            core.__dep__.notify(method);
	            return result;
	        };
	    });

	    function listFactory(array, stop, dd) {
	        if (!stop) {
	            hijackMethods(array);
	            if (modern) {
	                Object.defineProperty(array, '$model', platform.modelAccessor);
	            }
	            platform.hideProperty(array, '$hashcode', avalon.makeHashCode('$'));
	            platform.hideProperty(array, '$events', { __dep__: dd || new Mutation() });
	        }
	        var _dd = array.$events && array.$events.__dep__;
	        for (var i = 0, n = array.length; i < n; i++) {
	            var item = array[i];
	            if (isObject(item)) {
	                array[i] = platform.createProxy(item, _dd);
	            }
	        }
	        return array;
	    }

	    platform.listFactory = listFactory;

	    //如果浏览器不支持ecma262v5的Object.defineProperties或者存在BUG，比如IE8
	    //标准浏览器使用__defineGetter__, __defineSetter__实现
	    var canHideProperty = true;
	    try {
	        Object.defineProperty({}, '_', {
	            value: 'x'
	        });
	        delete $$skipArray.$vbsetter;
	        delete $$skipArray.$vbthis;
	    } catch (e) {
	        /* istanbul ignore next*/
	        canHideProperty = false;
	    }

	    var protectedVB = { $vbthis: 1, $vbsetter: 1 };
	    /* istanbul ignore next */
	    function hideProperty(host, name, value) {
	        if (canHideProperty) {
	            Object.defineProperty(host, name, {
	                value: value,
	                writable: true,
	                enumerable: false,
	                configurable: true
	            });
	        } else if (!protectedVB[name]) {
	            /* istanbul ignore next */
	            host[name] = value;
	        }
	    }

	    function watchFactory(core) {
	        return function $watch(expr, callback, deep) {
	            var w = new Action(core.__proxy__, {
	                deep: deep,
	                type: 'user',
	                expr: expr
	            }, callback);
	            if (!core[expr]) {
	                core[expr] = [w];
	            } else {
	                core[expr].push(w);
	            }

	            return function () {
	                w.dispose();
	                avalon.Array.remove(core[expr], w);
	                if (core[expr].length === 0) {
	                    delete core[expr];
	                }
	            };
	        };
	    }

	    function fireFactory(core) {
	        return function $fire(expr, a) {
	            var list = core[expr];
	            if (Array.isArray(list)) {
	                for (var i = 0, w; w = list[i++];) {
	                    w.callback.call(w.vm, a, w.value, w.expr);
	                }
	            }
	        };
	    }

	    function wrapIt(str) {
	        return '☥' + str + '☥';
	    }

	    function afterCreate(vm, core, keys, bindThis) {
	        var ac = vm.$accessors;
	        //隐藏系统属性
	        for (var key in $$skipArray) {
	            if (avalon.msie < 9 && core[key] === void 0) continue;
	            hideProperty(vm, key, core[key]);
	        }
	        //为不可监听的属性或方法赋值
	        for (var i = 0; i < keys.length; i++) {
	            var _key2 = keys[i];
	            if (!(_key2 in ac)) {
	                var val = core[_key2];
	                if (bindThis && typeof val === 'function') {
	                    vm[_key2] = val.bind(vm);
	                    vm[_key2]._orig = val;
	                    continue;
	                }
	                vm[_key2] = val;
	            }
	        }
	        vm.$track = keys.join('☥');

	        function hasOwnKey(key) {
	            return wrapIt(vm.$track).indexOf(wrapIt(key)) > -1;
	        }
	        if (avalon.msie < 9) {
	            vm.hasOwnProperty = hasOwnKey;
	        }
	        vm.$events.__proxy__ = vm;
	    }

	    platform.hideProperty = hideProperty;
	    platform.fireFactory = fireFactory;
	    platform.watchFactory = watchFactory;
	    platform.afterCreate = afterCreate;

	    var createViewModel = Object.defineProperties;
	    var defineProperty;

	    var timeBucket = new Date() - 0;
	    /* istanbul ignore if*/
	    if (!canHideProperty) {
	        if ('__defineGetter__' in avalon) {
	            defineProperty = function defineProperty(obj, prop, desc) {
	                if ('value' in desc) {
	                    obj[prop] = desc.value;
	                }
	                if ('get' in desc) {
	                    obj.__defineGetter__(prop, desc.get);
	                }
	                if ('set' in desc) {
	                    obj.__defineSetter__(prop, desc.set);
	                }
	                return obj;
	            };
	            createViewModel = function createViewModel(obj, descs) {
	                for (var prop in descs) {
	                    if (descs.hasOwnProperty(prop)) {
	                        defineProperty(obj, prop, descs[prop]);
	                    }
	                }
	                return obj;
	            };
	        }
	        /* istanbul ignore if*/
	        if (msie$1 < 9) {
	            var VBClassPool = {};
	            window.execScript([// jshint ignore:line
	            'Function parseVB(code)', '\tExecuteGlobal(code)', 'End Function' //转换一段文本为VB代码
	            ].join('\n'), 'VBScript');

	            var VBMediator = function VBMediator(instance, accessors, name, value) {
	                // jshint ignore:line
	                var accessor = accessors[name];
	                if (arguments.length === 4) {
	                    accessor.set.call(instance, value);
	                } else {
	                    return accessor.get.call(instance);
	                }
	            };
	            createViewModel = function createViewModel(name, accessors, properties) {
	                // jshint ignore:line
	                var buffer = [];
	                buffer.push('\tPrivate [$vbsetter]', '\tPublic  [$accessors]', '\tPublic Default Function [$vbthis](ac' + timeBucket + ', s' + timeBucket + ')', '\t\tSet  [$accessors] = ac' + timeBucket + ': set [$vbsetter] = s' + timeBucket, '\t\tSet  [$vbthis]    = Me', //链式调用
	                '\tEnd Function');
	                //添加普通属性,因为VBScript对象不能像JS那样随意增删属性，必须在这里预先定义好
	                var uniq = {
	                    $vbthis: true,
	                    $vbsetter: true,
	                    $accessors: true
	                };
	                for (name in $$skipArray) {
	                    if (!uniq[name]) {
	                        buffer.push('\tPublic [' + name + ']');
	                        uniq[name] = true;
	                    }
	                }
	                //添加访问器属性 
	                for (name in accessors) {
	                    if (uniq[name]) {
	                        continue;
	                    }
	                    uniq[name] = true;
	                    buffer.push(
	                    //由于不知对方会传入什么,因此set, let都用上
	                    '\tPublic Property Let [' + name + '](val' + timeBucket + ')', //setter
	                    '\t\tCall [$vbsetter](Me, [$accessors], "' + name + '", val' + timeBucket + ')', '\tEnd Property', '\tPublic Property Set [' + name + '](val' + timeBucket + ')', //setter
	                    '\t\tCall [$vbsetter](Me, [$accessors], "' + name + '", val' + timeBucket + ')', '\tEnd Property', '\tPublic Property Get [' + name + ']', //getter
	                    '\tOn Error Resume Next', //必须优先使用set语句,否则它会误将数组当字符串返回
	                    '\t\tSet[' + name + '] = [$vbsetter](Me, [$accessors],"' + name + '")', '\tIf Err.Number <> 0 Then', '\t\t[' + name + '] = [$vbsetter](Me, [$accessors],"' + name + '")', '\tEnd If', '\tOn Error Goto 0', '\tEnd Property');
	                }

	                for (name in properties) {
	                    if (!uniq[name]) {
	                        uniq[name] = true;
	                        buffer.push('\tPublic [' + name + ']');
	                    }
	                }

	                buffer.push('\tPublic [hasOwnProperty]');
	                buffer.push('End Class');
	                var body = buffer.join('\r\n');
	                var className = VBClassPool[body];
	                if (!className) {
	                    className = avalon.makeHashCode('VBClass');
	                    window.parseVB('Class ' + className + body);
	                    window.parseVB(['Function ' + className + 'Factory(acc, vbm)', //创建实例并传入两个关键的参数
	                    '\tDim o', '\tSet o = (New ' + className + ')(acc, vbm)', '\tSet ' + className + 'Factory = o', 'End Function'].join('\r\n'));
	                    VBClassPool[body] = className;
	                }
	                var ret = window[className + 'Factory'](accessors, VBMediator); //得到其产品
	                return ret; //得到其产品
	            };
	        }
	    }

	    platform.createViewModel = createViewModel;

	    var impDir = avalon.directive('important', {
	        priority: 1,
	        getScope: function getScope(name, scope) {
	            var v = avalon.vmodels[name];
	            if (v) return v;
	            throw 'error! no vmodel called ' + name;
	        },
	        update: function update(node, attrName, $id) {
	            if (!avalon.inBrowser) return;
	            var dom = avalon.vdom(node, 'toDOM');
	            if (dom.nodeType === 1) {
	                dom.removeAttribute(attrName);
	                avalon(dom).removeClass('ms-controller');
	            }
	            var vm = avalon.vmodels[$id];
	            if (vm) {
	                vm.$element = dom;
	                vm.$render = this;
	                vm.$fire('onReady');
	                delete vm.$events.onReady;
	            }
	        }
	    });

	    var impCb = impDir.update;

	    avalon.directive('controller', {
	        priority: 2,
	        getScope: function getScope(name, scope) {
	            var v = avalon.vmodels[name];
	            if (v) {
	                v.$render = this;
	                if (scope && scope !== v) {
	                    return platform.fuseFactory(scope, v);
	                }
	                return v;
	            }
	            return scope;
	        },
	        update: impCb
	    });

	    avalon.directive('skip', {
	        delay: true
	    });

	    var arrayWarn = {};
	    var cssDir = avalon.directive('css', {
	        diff: function diff(newVal, oldVal) {
	            if (Object(newVal) === newVal) {
	                newVal = platform.toJson(newVal); //安全的遍历VBscript
	                if (Array.isArray(newVal)) {
	                    //转换成对象
	                    var b = {};
	                    newVal.forEach(function (el) {
	                        el && avalon.shadowCopy(b, el);
	                    });
	                    newVal = b;
	                    if (!arrayWarn[this.type]) {
	                        avalon.warn('ms-' + this.type + '指令的值不建议使用数组形式了！');
	                        arrayWarn[this.type] = 1;
	                    }
	                }

	                var hasChange = false;
	                var patch = {};
	                if (!oldVal) {
	                    //如果一开始为空
	                    patch = newVal;
	                    hasChange = true;
	                } else {
	                    if (this.deep) {
	                        var deep = typeof this.deep === 'number' ? this.deep : 6;
	                        for (var i in newVal) {
	                            //diff差异点  
	                            if (!deepEquals(newVal[i], oldVal[i], 4)) {
	                                this.value = newVal;
	                                return true;
	                            }
	                            patch[i] = newVal[i];
	                        }
	                    } else {
	                        for (var _i4 in newVal) {
	                            //diff差异点
	                            if (newVal[_i4] !== oldVal[_i4]) {
	                                hasChange = true;
	                            }
	                            patch[_i4] = newVal[_i4];
	                        }
	                    }

	                    for (var _i5 in oldVal) {
	                        if (!(_i5 in patch)) {
	                            hasChange = true;
	                            patch[_i5] = '';
	                        }
	                    }
	                }
	                if (hasChange) {
	                    this.value = patch;
	                    return true;
	                }
	            }
	            return false;
	        },
	        update: function update(vdom, value) {

	            var dom = vdom.dom;
	            if (dom && dom.nodeType === 1) {
	                var wrap = avalon(dom);
	                for (var name in value) {
	                    wrap.css(name, value[name]);
	                }
	            }
	        }
	    });

	    var cssDiff = cssDir.diff;

	    function getEnumerableKeys(obj) {
	        var res = [];
	        for (var key in obj) {
	            res.push(key);
	        }return res;
	    }

	    function deepEquals(a, b, level) {
	        if (level === 0) return a === b;
	        if (a === null && b === null) return true;
	        if (a === undefined && b === undefined) return true;
	        var aIsArray = Array.isArray(a);
	        if (aIsArray !== Array.isArray(b)) {
	            return false;
	        }
	        if (aIsArray) {
	            return equalArray(a, b, level);
	        } else if (typeof a === "object" && typeof b === "object") {
	            return equalObject(a, b, level);
	        }
	        return a === b;
	    }

	    function equalArray(a, b, level) {
	        if (a.length !== b.length) {
	            return false;
	        }
	        for (var i = a.length - 1; i >= 0; i--) {
	            try {
	                if (!deepEquals(a[i], b[i], level - 1)) {
	                    return false;
	                }
	            } catch (noThisPropError) {
	                return false;
	            }
	        }
	        return true;
	    }

	    function equalObject(a, b, level) {
	        if (a === null || b === null) return false;
	        if (getEnumerableKeys(a).length !== getEnumerableKeys(b).length) return false;
	        for (var prop in a) {
	            if (!(prop in b)) return false;
	            try {
	                if (!deepEquals(a[prop], b[prop], level - 1)) {
	                    return false;
	                }
	            } catch (noThisPropError) {
	                return false;
	            }
	        }
	        return true;
	    }

	    /**
	     * ------------------------------------------------------------
	     * 检测浏览器对CSS动画的支持与API名
	     * ------------------------------------------------------------
	     */

	    var checker = {
	        TransitionEvent: 'transitionend',
	        WebKitTransitionEvent: 'webkitTransitionEnd',
	        OTransitionEvent: 'oTransitionEnd',
	        otransitionEvent: 'otransitionEnd'
	    };
	    var css3 = void 0;
	    var tran = void 0;
	    var ani = void 0;
	    var name$2 = void 0;
	    var animationEndEvent = void 0;
	    var transitionEndEvent = void 0;
	    var transition = false;
	    var animation = false;
	    //有的浏览器同时支持私有实现与标准写法，比如webkit支持前两种，Opera支持1、3、4
	    for (name$2 in checker) {
	        if (window$1[name$2]) {
	            tran = checker[name$2];
	            break;
	        }
	        /* istanbul ignore next */
	        try {
	            var a = document.createEvent(name$2);
	            tran = checker[name$2];
	            break;
	        } catch (e) {}
	    }
	    if (typeof tran === 'string') {
	        transition = css3 = true;
	        transitionEndEvent = tran;
	    }

	    //animationend有两个可用形态
	    //IE10+, Firefox 16+ & Opera 12.1+: animationend
	    //Chrome/Safari: webkitAnimationEnd
	    //http://blogs.msdn.com/b/davrous/archive/2011/12/06/introduction-to-css3-animat ions.aspx
	    //IE10也可以使用MSAnimationEnd监听，但是回调里的事件 type依然为animationend
	    //  el.addEventListener('MSAnimationEnd', function(e) {
	    //     alert(e.type)// animationend！！！
	    // })
	    checker = {
	        'AnimationEvent': 'animationend',
	        'WebKitAnimationEvent': 'webkitAnimationEnd'
	    };
	    for (name$2 in checker) {
	        if (window$1[name$2]) {
	            ani = checker[name$2];
	            break;
	        }
	    }
	    if (typeof ani === 'string') {
	        animation = css3 = true;
	        animationEndEvent = ani;
	    }

	    var effectDir = avalon.directive('effect', {
	        priority: 5,
	        diff: function diff(effect) {
	            var vdom = this.node;
	            if (typeof effect === 'string') {
	                this.value = effect = {
	                    is: effect
	                };
	                avalon.warn('ms-effect的指令值不再支持字符串,必须是一个对象');
	            }
	            this.value = vdom.effect = effect;
	            var ok = cssDiff.call(this, effect, this.oldValue);
	            var me = this;
	            if (ok) {
	                setTimeout(function () {
	                    vdom.animating = true;
	                    effectDir.update.call(me, vdom, vdom.effect);
	                });
	                vdom.animating = false;
	                return true;
	            }
	            return false;
	        },

	        update: function update(vdom, change, opts) {
	            var dom = vdom.dom;
	            if (dom && dom.nodeType === 1) {
	                //要求配置对象必须指定is属性，action必须是布尔或enter,leave,move
	                var option = change || opts;
	                var is = option.is;

	                var globalOption = avalon.effects[is];
	                if (!globalOption) {
	                    //如果没有定义特效
	                    avalon.warn(is + ' effect is undefined');
	                    return;
	                }
	                var finalOption = {};
	                var action = actionMaps[option.action];
	                if (typeof Effect.prototype[action] !== 'function') {
	                    avalon.warn('action is undefined');
	                    return;
	                }
	                //必须预定义特效

	                var effect = new avalon.Effect(dom);
	                avalon.mix(finalOption, globalOption, option, { action: action });

	                if (finalOption.queue) {
	                    animationQueue.push(function () {
	                        effect[action](finalOption);
	                    });
	                    callNextAnimation();
	                } else {

	                    effect[action](finalOption);
	                }
	                return true;
	            }
	        }
	    });

	    var move = 'move';
	    var leave = 'leave';
	    var enter = 'enter';
	    var actionMaps = {
	        'true': enter,
	        'false': leave,
	        enter: enter,
	        leave: leave,
	        move: move,
	        'undefined': enter
	    };

	    var animationQueue = [];
	    function callNextAnimation() {
	        var fn = animationQueue[0];
	        if (fn) {
	            fn();
	        }
	    }

	    avalon.effects = {};
	    avalon.effect = function (name, opts) {
	        var definition = avalon.effects[name] = opts || {};
	        if (css3 && definition.css !== false) {
	            patchObject(definition, 'enterClass', name + '-enter');
	            patchObject(definition, 'enterActiveClass', definition.enterClass + '-active');
	            patchObject(definition, 'leaveClass', name + '-leave');
	            patchObject(definition, 'leaveActiveClass', definition.leaveClass + '-active');
	        }
	        return definition;
	    };

	    function patchObject(obj, name, value) {
	        if (!obj[name]) {
	            obj[name] = value;
	        }
	    }

	    var Effect = function Effect(dom) {
	        this.dom = dom;
	    };

	    avalon.Effect = Effect;

	    Effect.prototype = {
	        enter: createAction('Enter'),
	        leave: createAction('Leave'),
	        move: createAction('Move')
	    };

	    function execHooks(options, name, el) {
	        var fns = [].concat(options[name]);
	        for (var i = 0, fn; fn = fns[i++];) {
	            if (typeof fn === 'function') {
	                fn(el);
	            }
	        }
	    }
	    var staggerCache = new Cache(128);

	    function createAction(action) {
	        var lower = action.toLowerCase();
	        return function (option) {
	            var dom = this.dom;
	            var elem = avalon(dom);
	            //处理与ms-for指令相关的stagger
	            //========BEGIN=====
	            var staggerTime = isFinite(option.stagger) ? option.stagger * 1000 : 0;
	            if (staggerTime) {
	                if (option.staggerKey) {
	                    var stagger = staggerCache.get(option.staggerKey) || staggerCache.put(option.staggerKey, {
	                        count: 0,
	                        items: 0
	                    });
	                    stagger.count++;
	                    stagger.items++;
	                }
	            }
	            var staggerIndex = stagger && stagger.count || 0;
	            //=======END==========
	            var stopAnimationID;
	            var animationDone = function animationDone(e) {
	                var isOk = e !== false;
	                if (--dom.__ms_effect_ === 0) {
	                    avalon.unbind(dom, transitionEndEvent);
	                    avalon.unbind(dom, animationEndEvent);
	                }
	                clearTimeout(stopAnimationID);
	                var dirWord = isOk ? 'Done' : 'Abort';
	                execHooks(option, 'on' + action + dirWord, dom);
	                if (stagger) {
	                    if (--stagger.items === 0) {
	                        stagger.count = 0;
	                    }
	                }
	                if (option.queue) {
	                    animationQueue.shift();
	                    callNextAnimation();
	                }
	            };
	            //执行开始前的钩子
	            execHooks(option, 'onBefore' + action, dom);

	            if (option[lower]) {
	                //使用JS方式执行动画
	                option[lower](dom, function (ok) {
	                    animationDone(ok !== false);
	                });
	            } else if (css3) {
	                //使用CSS3方式执行动画
	                elem.addClass(option[lower + 'Class']);
	                elem.removeClass(getNeedRemoved(option, lower));

	                if (!dom.__ms_effect_) {
	                    //绑定动画结束事件
	                    elem.bind(transitionEndEvent, animationDone);
	                    elem.bind(animationEndEvent, animationDone);
	                    dom.__ms_effect_ = 1;
	                } else {
	                    dom.__ms_effect_++;
	                }
	                setTimeout(function () {
	                    //用xxx-active代替xxx类名的方式 触发CSS3动画
	                    var time = avalon.root.offsetWidth === NaN;
	                    elem.addClass(option[lower + 'ActiveClass']);
	                    //计算动画时长
	                    time = getAnimationTime(dom);
	                    if (!time === 0) {
	                        //立即结束动画
	                        animationDone(false);
	                    } else if (!staggerTime) {
	                        //如果动画超出时长还没有调用结束事件,这可能是元素被移除了
	                        //如果强制结束动画
	                        stopAnimationID = setTimeout(function () {
	                            animationDone(false);
	                        }, time + 32);
	                    }
	                }, 17 + staggerTime * staggerIndex); // = 1000/60
	            }
	        };
	    }

	    avalon.applyEffect = function (dom, vdom, opts) {
	        var cb = opts.cb;
	        var curEffect = vdom.effect;
	        if (curEffect && dom && dom.nodeType === 1) {
	            var hook = opts.hook;
	            var old = curEffect[hook];
	            if (cb) {
	                if (Array.isArray(old)) {
	                    old.push(cb);
	                } else if (old) {
	                    curEffect[hook] = [old, cb];
	                } else {
	                    curEffect[hook] = [cb];
	                }
	            }
	            getAction(opts);
	            avalon.directives.effect.update(vdom, curEffect, avalon.shadowCopy({}, opts));
	        } else if (cb) {
	            cb(dom);
	        }
	    };
	    /**
	     * 获取方向
	     */
	    function getAction(opts) {
	        if (!opts.action) {
	            return opts.action = opts.hook.replace(/^on/, '').replace(/Done$/, '').toLowerCase();
	        }
	    }
	    /**
	     * 需要移除的类名
	     */
	    function getNeedRemoved(options, name) {
	        var name = name === 'leave' ? 'enter' : 'leave';
	        return Array(name + 'Class', name + 'ActiveClass').map(function (cls) {
	            return options[cls];
	        }).join(' ');
	    }
	    /**
	     * 计算动画长度
	     */
	    var transitionDuration = avalon.cssName('transition-duration');
	    var animationDuration = avalon.cssName('animation-duration');
	    var rsecond = /\d+s$/;
	    function toMillisecond(str) {
	        var ratio = rsecond.test(str) ? 1000 : 1;
	        return parseFloat(str) * ratio;
	    }

	    function getAnimationTime(dom) {
	        var computedStyles = window$1.getComputedStyle(dom, null);
	        var tranDuration = computedStyles[transitionDuration];
	        var animDuration = computedStyles[animationDuration];
	        return toMillisecond(tranDuration) || toMillisecond(animDuration);
	    }
	    /**
	     * 
	    <!DOCTYPE html>
	    <html>
	        <head>
	            <meta charset="UTF-8">
	            <meta name="viewport" content="width=device-width, initial-scale=1.0">
	            <script src="dist/avalon.js"></script>
	            <script>
	                avalon.effect('animate')
	                var vm = avalon.define({
	                    $id: 'ani',
	                    a: true
	                })
	            </script>
	            <style>
	                .animate-enter, .animate-leave{
	                    width:100px;
	                    height:100px;
	                    background: #29b6f6;
	                    transition:all 2s;
	                    -moz-transition: all 2s; 
	                    -webkit-transition: all 2s;
	                    -o-transition:all 2s;
	                }  
	                .animate-enter-active, .animate-leave{
	                    width:300px;
	                    height:300px;
	                }
	                .animate-leave-active{
	                    width:100px;
	                    height:100px;
	                }
	            </style>
	        </head>
	        <body>
	            <div :controller='ani' >
	                <p><input type='button' value='click' :click='@a =!@a'></p>
	                <div :effect="{is:'animate',action:@a}"></div>
	            </div>
	    </body>
	    </html>
	     * 
	     */

	    var none = 'none';
	    function parseDisplay(elem, val) {
	        //用于取得此类标签的默认display值
	        var doc = elem.ownerDocument;
	        var nodeName = elem.nodeName;
	        var key = '_' + nodeName;
	        if (!parseDisplay[key]) {
	            var temp = doc.body.appendChild(doc.createElement(nodeName));
	            val = avalon.css(temp, 'display');
	            doc.body.removeChild(temp);
	            if (val === none) {
	                val = 'block';
	            }
	            parseDisplay[key] = val;
	        }
	        return parseDisplay[key];
	    }

	    avalon.parseDisplay = parseDisplay;
	    avalon.directive('visible', {
	        diff: function diff(newVal, oldVal) {
	            var n = !!newVal;
	            if (oldVal === void 0 || n !== oldVal) {
	                this.value = n;
	                return true;
	            }
	        },
	        ready: true,
	        update: function update(vdom, show) {
	            var dom = vdom.dom;
	            if (dom && dom.nodeType === 1) {
	                var display = dom.style.display;
	                var value;
	                if (show) {
	                    if (display === none) {
	                        value = vdom.displayValue;
	                        if (!value) {
	                            dom.style.display = '';
	                            if (dom.style.cssText === '') {
	                                dom.removeAttribute('style');
	                            }
	                        }
	                    }
	                    if (dom.style.display === '' && avalon(dom).css('display') === none &&
	                    // fix firefox BUG,必须挂到页面上
	                    avalon.contains(dom.ownerDocument, dom)) {
	                        value = parseDisplay(dom);
	                    }
	                } else {

	                    if (display !== none) {
	                        value = none;
	                        vdom.displayValue = display;
	                    }
	                }
	                var cb = function cb() {
	                    if (value !== void 0) {
	                        dom.style.display = value;
	                    }
	                };

	                avalon.applyEffect(dom, vdom, {
	                    hook: show ? 'onEnterDone' : 'onLeaveDone',
	                    cb: cb
	                });
	            }
	        }
	    });

	    avalon.directive('text', {
	        delay: true,
	        init: function init() {

	            var node = this.node;
	            if (node.isVoidTag) {
	                avalon.error('自闭合元素不能使用ms-text');
	            }
	            var child = { nodeName: '#text', nodeValue: this.getValue() };
	            node.children.splice(0, node.children.length, child);
	            if (inBrowser) {
	                avalon.clearHTML(node.dom);
	                node.dom.appendChild(avalon.vdom(child, 'toDOM'));
	            }
	            this.node = child;
	            var type = 'expr';
	            this.type = this.name = type;
	            var directive$$1 = avalon.directives[type];
	            var me = this;
	            this.callback = function (value) {
	                directive$$1.update.call(me, me.node, value);
	            };
	        }
	    });

	    avalon.directive('expr', {
	        update: function update(vdom, value) {
	            value = value == null || value === '' ? '\u200B' : value;
	            vdom.nodeValue = value;
	            //https://github.com/RubyLouvre/avalon/issues/1834
	            if (vdom.dom) vdom.dom.data = value;
	        }
	    });

	    avalon.directive('attr', {
	        diff: cssDiff,
	        update: function update(vdom, value) {
	            var props = vdom.props;
	            for (var i in value) {
	                if (!!value[i] === false) {
	                    delete props[i];
	                } else {
	                    props[i] = value[i];
	                }
	            }
	            var dom = vdom.dom;
	            if (dom && dom.nodeType === 1) {
	                updateAttrs(dom, value);
	            }
	        }
	    });

	    avalon.directive('html', {

	        update: function update(vdom, value) {
	            this.beforeDispose();

	            this.innerRender = avalon.scan('<div class="ms-html-container">' + value + '</div>', this.vm, function () {
	                var oldRoot = this.root;
	                if (vdom.children) vdom.children.length = 0;
	                vdom.children = oldRoot.children;
	                this.root = vdom;
	                if (vdom.dom) avalon.clearHTML(vdom.dom);
	            });
	        },
	        beforeDispose: function beforeDispose() {
	            if (this.innerRender) {
	                this.innerRender.dispose();
	            }
	        },
	        delay: true
	    });

	    avalon.directive('if', {
	        delay: true,
	        priority: 5,
	        init: function init() {
	            this.placeholder = createAnchor('if');
	            var props = this.node.props;
	            delete props['ms-if'];
	            delete props[':if'];
	            this.fragment = avalon.vdom(this.node, 'toHTML');
	        },
	        diff: function diff(newVal, oldVal) {
	            var n = !!newVal;
	            if (oldVal === void 0 || n !== oldVal) {
	                this.value = n;
	                return true;
	            }
	        },
	        update: function update(vdom, value) {
	            if (this.isShow === void 0 && value) {
	                continueScan(this, vdom);
	                return;
	            }
	            this.isShow = value;
	            var placeholder = this.placeholder;

	            if (value) {
	                var p = placeholder.parentNode;
	                continueScan(this, vdom);
	                p && p.replaceChild(vdom.dom, placeholder);
	            } else {
	                //移除DOM
	                this.beforeDispose();
	                vdom.nodeValue = 'if';
	                vdom.nodeName = '#comment';
	                delete vdom.children;
	                var dom = vdom.dom;
	                var p = dom && dom.parentNode;
	                vdom.dom = placeholder;
	                if (p) {
	                    p.replaceChild(placeholder, dom);
	                }
	            }
	        },
	        beforeDispose: function beforeDispose() {
	            if (this.innerRender) {
	                this.innerRender.dispose();
	            }
	        }
	    });

	    function continueScan(instance, vdom) {
	        var innerRender = instance.innerRender = avalon.scan(instance.fragment, instance.vm);
	        avalon.shadowCopy(vdom, innerRender.root);
	        delete vdom.nodeValue;
	    }

	    avalon.directive('on', {
	        beforeInit: function beforeInit() {
	            this.getter = avalon.noop;
	        },
	        init: function init() {
	            var vdom = this.node;
	            var underline = this.name.replace('ms-on-', 'e').replace('-', '_');
	            var uuid = underline + '_' + this.expr.replace(/\s/g, '').replace(/[^$a-z]/ig, function (e) {
	                return e.charCodeAt(0);
	            });
	            var fn = avalon.eventListeners[uuid];
	            if (!fn) {
	                var arr = addScope(this.expr);
	                var body = arr[0],
	                    filters = arr[1];
	                body = makeHandle(body);

	                if (filters) {
	                    filters = filters.replace(/__value__/g, '$event');
	                    filters += '\nif($event.$return){\n\treturn;\n}';
	                }
	                var ret = ['try{', '\tvar __vmodel__ = this;', '\t' + filters, '\treturn ' + body, '}catch(e){avalon.log(e, "in on dir")}'].filter(function (el) {
	                    return (/\S/.test(el)
	                    );
	                });
	                fn = new Function('$event', ret.join('\n'));
	                fn.uuid = uuid;
	                avalon.eventListeners[uuid] = fn;
	            }

	            var dom = avalon.vdom(vdom, 'toDOM');
	            dom._ms_context_ = this.vm;

	            this.eventType = this.param.replace(/\-(\d)$/, '');
	            delete this.param;
	            avalon(dom).bind(this.eventType, fn);
	        },

	        beforeDispose: function beforeDispose() {
	            avalon(this.node.dom).unbind(this.eventType);
	        }
	    });

	    function lookupOption(vdom, values) {
	        vdom.children && vdom.children.forEach(function (el) {
	            if (el.nodeName === 'option') {
	                setOption(el, values);
	            } else {
	                lookupOption(el, values);
	            }
	        });
	    }

	    function setOption(vdom, values) {
	        var props = vdom.props;
	        if (!('disabled' in props)) {
	            var value = getOptionValue(vdom, props);
	            value = String(value || '').trim();
	            if (typeof values === 'string') {
	                props.selected = value === values;
	            } else {
	                props.selected = values.indexOf(value) !== -1;
	            }

	            if (vdom.dom) {
	                vdom.dom.selected = props.selected;
	                var v = vdom.dom.selected; //必须加上这个,防止移出节点selected失效
	            }
	        }
	    }

	    function getOptionValue(vdom, props) {
	        if (props && 'value' in props) {
	            return props.value + '';
	        }
	        var arr = [];
	        vdom.children.forEach(function (el) {
	            if (el.nodeName === '#text') {
	                arr.push(el.nodeValue);
	            } else if (el.nodeName === '#document-fragment') {
	                arr.push(getOptionValue(el));
	            }
	        });
	        return arr.join('');
	    }

	    function getSelectedValue(vdom, arr) {
	        vdom.children.forEach(function (el) {
	            if (el.nodeName === 'option') {
	                if (el.props.selected === true) arr.push(getOptionValue(el, el.props));
	            } else if (el.children) {
	                getSelectedValue(el, arr);
	            }
	        });
	        return arr;
	    }

	    var updateDataActions = {
	        input: function input(prop) {
	            //处理单个value值处理
	            var field = this;
	            prop = prop || 'value';
	            var dom = field.dom;
	            var rawValue = dom[prop];
	            var parsedValue = field.parseValue(rawValue);

	            //有时候parse后一致,vm不会改变,但input里面的值
	            field.value = rawValue;
	            field.setValue(parsedValue);
	            duplexCb(field);
	            var pos = field.pos;
	            /* istanbul ignore if */
	            if (dom.caret) {
	                field.setCaret(dom, pos);
	            }
	            //vm.aaa = '1234567890'
	            //处理 <input ms-duplex='@aaa|limitBy(8)'/>{{@aaa}} 这种格式化同步不一致的情况 
	        },
	        radio: function radio() {
	            var field = this;
	            if (field.isChecked) {
	                var val = !field.value;
	                field.setValue(val);
	                duplexCb(field);
	            } else {
	                updateDataActions.input.call(field);
	                field.value = NaN;
	            }
	        },
	        checkbox: function checkbox() {
	            var field = this;
	            var array = field.value;
	            if (!Array.isArray(array)) {
	                avalon.warn('ms-duplex应用于checkbox上要对应一个数组');
	                array = [array];
	            }
	            var method = field.dom.checked ? 'ensure' : 'remove';
	            if (array[method]) {
	                var val = field.parseValue(field.dom.value);
	                array[method](val);
	                duplexCb(field);
	            }
	            this.__test__ = array;
	        },
	        select: function select() {
	            var field = this;
	            var val = avalon(field.dom).val(); //字符串或字符串数组
	            if (val + '' !== this.value + '') {
	                if (Array.isArray(val)) {
	                    //转换布尔数组或其他
	                    val = val.map(function (v) {
	                        return field.parseValue(v);
	                    });
	                } else {
	                    val = field.parseValue(val);
	                }
	                field.setValue(val);
	                duplexCb(field);
	            }
	        },
	        contenteditable: function contenteditable() {
	            updateDataActions.input.call(this, 'innerHTML');
	        }
	    };

	    function duplexCb(field) {
	        if (field.userCb) {
	            field.userCb.call(field.vm, {
	                type: 'changed',
	                target: field.dom
	            });
	        }
	    }

	    function updateDataHandle(event) {
	        var elem = this;
	        var field = elem._ms_duplex_;
	        if (elem.composing) {
	            //防止onpropertychange引发爆栈
	            return;
	        }
	        if (elem.value === field.value) {
	            return;
	        }
	        /* istanbul ignore if*/
	        if (elem.caret) {
	            try {
	                var pos = field.getCaret(elem);
	                field.pos = pos;
	            } catch (e) {}
	        }
	        /* istanbul ignore if*/
	        if (field.debounceTime > 4) {
	            var timestamp = new Date();
	            var left = timestamp - field.time || 0;
	            field.time = timestamp;
	            /* istanbul ignore if*/
	            if (left >= field.debounceTime) {
	                updateDataActions[field.dtype].call(field);
	                /* istanbul ignore else*/
	            } else {
	                clearTimeout(field.debounceID);
	                field.debounceID = setTimeout(function () {
	                    updateDataActions[field.dtype].call(field);
	                }, left);
	            }
	        } else if (field.isChanged) {
	            setTimeout(function () {
	                //https://github.com/RubyLouvre/avalon/issues/1908
	                updateDataActions[field.dtype].call(field);
	            }, 4);
	        } else {
	            updateDataActions[field.dtype].call(field);
	        }
	    }

	    var rchangeFilter = /\|\s*change\b/;
	    var rdebounceFilter = /\|\s*debounce(?:\(([^)]+)\))?/;
	    function duplexBeforeInit() {
	        var expr = this.expr;
	        if (rchangeFilter.test(expr)) {
	            this.isChanged = true;
	            expr = expr.replace(rchangeFilter, '');
	        }
	        var match = expr.match(rdebounceFilter);
	        if (match) {
	            expr = expr.replace(rdebounceFilter, '');
	            if (!this.isChanged) {
	                this.debounceTime = parseInt(match[1], 10) || 300;
	            }
	        }
	        this.expr = expr;
	    }
	    function duplexInit() {
	        var expr = this.expr;
	        var node = this.node;
	        var etype = node.props.type;
	        this.parseValue = parseValue;
	        //处理数据转换器
	        var parsers = this.param,
	            dtype;
	        var isChecked = false;
	        parsers = parsers ? parsers.split('-').map(function (a) {
	            if (a === 'checked') {
	                isChecked = true;
	            }
	            return a;
	        }) : [];
	        node.duplex = this;
	        if (rcheckedType.test(etype) && isChecked) {
	            //如果是radio, checkbox,判定用户使用了checked格式函数没有
	            parsers = [];
	            dtype = 'radio';
	            this.isChecked = isChecked;
	        }
	        this.parsers = parsers;
	        if (!/input|textarea|select/.test(node.nodeName)) {
	            if ('contenteditable' in node.props) {
	                dtype = 'contenteditable';
	            }
	        } else if (!dtype) {
	            dtype = node.nodeName === 'select' ? 'select' : etype === 'checkbox' ? 'checkbox' : etype === 'radio' ? 'radio' : 'input';
	        }
	        this.dtype = dtype;

	        //判定是否使用了 change debounce 过滤器
	        // this.isChecked = /boolean/.test(parsers)
	        if (dtype !== 'input' && dtype !== 'contenteditable') {
	            delete this.isChanged;
	            delete this.debounceTime;
	        } else if (!this.isChecked) {
	            this.isString = true;
	        }

	        var cb = node.props['data-duplex-changed'];
	        if (cb) {
	            var arr = addScope(cb, 'xx');
	            var body = makeHandle(arr[0]);
	            this.userCb = new Function('$event', 'var __vmodel__ = this\nreturn ' + body);
	        }
	    }
	    function duplexDiff(newVal, oldVal) {
	        if (Array.isArray(newVal)) {
	            if (newVal + '' !== this.compareVal) {
	                this.compareVal = newVal + '';
	                return true;
	            }
	        } else {
	            newVal = this.parseValue(newVal);
	            if (!this.isChecked) {
	                this.value = newVal += '';
	            }
	            if (newVal !== this.compareVal) {
	                this.compareVal = newVal;
	                return true;
	            }
	        }
	    }

	    function duplexBind(vdom, addEvent) {
	        var dom = vdom.dom;
	        this.dom = dom;
	        this.vdom = vdom;
	        this.duplexCb = updateDataHandle;
	        dom._ms_duplex_ = this;
	        //绑定事件
	        addEvent(dom, this);
	    }

	    var valueHijack = true;
	    try {
	        //#272 IE9-IE11, firefox
	        var setters = {};
	        var aproto = HTMLInputElement.prototype;
	        var bproto = HTMLTextAreaElement.prototype;
	        var newSetter = function newSetter(value) {
	            // jshint ignore:line
	            setters[this.tagName].call(this, value);
	            var data = this._ms_duplex_;
	            if (!this.caret && data && data.isString) {
	                data.duplexCb.call(this, { type: 'setter' });
	            }
	        };
	        var inputProto = HTMLInputElement.prototype;
	        Object.getOwnPropertyNames(inputProto); //故意引发IE6-8等浏览器报错
	        setters['INPUT'] = Object.getOwnPropertyDescriptor(aproto, 'value').set;

	        Object.defineProperty(aproto, 'value', {
	            set: newSetter
	        });
	        setters['TEXTAREA'] = Object.getOwnPropertyDescriptor(bproto, 'value').set;
	        Object.defineProperty(bproto, 'value', {
	            set: newSetter
	        });
	        valueHijack = false;
	    } catch (e) {
	        //在chrome 43中 ms-duplex终于不需要使用定时器实现双向绑定了
	        // http://updates.html5rocks.com/2015/04/DOM-attributes-now-on-the-prototype
	        // https://docs.google.com/document/d/1jwA8mtClwxI-QJuHT7872Z0pxpZz8PBkf2bGAbsUtqs/edit?pli=1
	    }

	    function parseValue(val) {
	        for (var i = 0, k; k = this.parsers[i++];) {
	            var fn = avalon.parsers[k];
	            if (fn) {
	                val = fn.call(this, val);
	            }
	        }
	        return val;
	    }

	    var updateView = {
	        input: function input() {
	            //处理单个value值处理
	            var vdom = this.node;
	            var value = this.value + '';
	            vdom.dom.value = vdom.props.value = value;
	        },
	        updateChecked: function updateChecked(vdom, checked) {
	            if (vdom.dom) {
	                vdom.dom.defaultChecked = vdom.dom.checked = checked;
	            }
	        },
	        radio: function radio() {
	            //处理单个checked属性
	            var node = this.node;
	            var nodeValue = node.props.value;
	            var checked;
	            if (this.isChecked) {
	                checked = !!this.value;
	            } else {
	                checked = this.value + '' === nodeValue;
	            }
	            node.props.checked = checked;
	            updateView.updateChecked(node, checked);
	        },
	        checkbox: function checkbox() {
	            //处理多个checked属性
	            var node = this.node;
	            var props = node.props;
	            var value = props.value + '';
	            var values = [].concat(this.value);
	            var checked = values.some(function (el) {
	                return el + '' === value;
	            });

	            props.defaultChecked = props.checked = checked;
	            updateView.updateChecked(node, checked);
	        },
	        select: function select() {
	            //处理子级的selected属性
	            var a = Array.isArray(this.value) ? this.value.map(String) : this.value + '';
	            lookupOption(this.node, a);
	        },
	        contenteditable: function contenteditable() {
	            //处理单个innerHTML 

	            var vnodes = fromString(this.value);
	            var fragment = createFragment();
	            for (var i = 0, el; el = vnodes[i++];) {
	                var child = avalon.vdom(el, 'toDOM');
	                fragment.appendChild(child);
	            }
	            avalon.clearHTML(this.dom).appendChild(fragment);
	            var list = this.node.children;
	            list.length = 0;
	            Array.prototype.push.apply(list, vnodes);

	            this.duplexCb.call(this.dom);
	        }
	    };

	    var rforAs = /\s+as\s+([$\w]+)/;
	    var rident = /^[$a-zA-Z_][$a-zA-Z0-9_]*$/;
	    var rinvalid = /^(null|undefined|NaN|window|this|\$index|\$id)$/;
	    var rargs = /[$\w_]+/g;
	    avalon.directive('for', {
	        delay: true,
	        priority: 3,
	        beforeInit: function beforeInit() {
	            var str = this.expr,
	                asName;
	            str = str.replace(rforAs, function (a, b) {
	                /* istanbul ignore if */
	                if (!rident.test(b) || rinvalid.test(b)) {
	                    avalon.error('alias ' + b + ' is invalid --- must be a valid JS identifier which is not a reserved name.');
	                } else {
	                    asName = b;
	                }
	                return '';
	            });

	            var arr = str.split(' in ');
	            var kv = arr[0].match(rargs);
	            if (kv.length === 1) {
	                //确保avalon._each的回调有三个参数
	                kv.unshift('$key');
	            }
	            this.expr = arr[1];
	            this.keyName = kv[0];
	            this.valName = kv[1];
	            this.signature = avalon.makeHashCode('for');
	            if (asName) {
	                this.asName = asName;
	            }

	            delete this.param;
	        },
	        init: function init() {
	            var cb = this.userCb;
	            if (typeof cb === 'string' && cb) {
	                var arr = addScope(cb, 'for');
	                var body = makeHandle(arr[0]);
	                this.userCb = new Function('$event', 'var __vmodel__ = this\nreturn ' + body);
	            }
	            this.node.forDir = this; //暴露给component/index.js中的resetParentChildren方法使用
	            this.fragment = ['<div>', this.fragment, '<!--', this.signature, '--></div>'].join('');
	            this.cache = {};
	        },
	        diff: function diff(newVal, oldVal) {
	            /* istanbul ignore if */
	            if (this.updating) {
	                return;
	            }
	            this.updating = true;
	            var traceIds = createFragments(this, newVal);

	            if (this.oldTrackIds === void 0) return true;

	            if (this.oldTrackIds !== traceIds) {
	                this.oldTrackIds = traceIds;
	                return true;
	            }
	        },
	        update: function update() {

	            if (!this.preFragments) {
	                this.fragments = this.fragments || [];
	                mountList(this);
	            } else {
	                diffList(this);
	                updateList(this);
	            }

	            if (this.userCb) {
	                var me = this;
	                setTimeout(function () {
	                    me.userCb.call(me.vm, {
	                        type: 'rendered',
	                        target: me.begin.dom,
	                        signature: me.signature
	                    });
	                }, 0);
	            }
	            delete this.updating;
	        },
	        beforeDispose: function beforeDispose() {
	            this.fragments.forEach(function (el) {
	                el.dispose();
	            });
	        }
	    });

	    function getTraceKey(item) {
	        var type = typeof item;
	        return item && type === 'object' ? item.$hashcode : type + ':' + item;
	    }

	    //创建一组fragment的虚拟DOM
	    function createFragments(instance, obj) {
	        if (isObject(obj)) {
	            var array = Array.isArray(obj);
	            var ids = [];
	            var fragments = [],
	                i = 0;

	            instance.isArray = array;
	            if (instance.fragments) {
	                instance.preFragments = instance.fragments;
	                avalon.each(obj, function (key, value) {
	                    var k = array ? getTraceKey(value) : key;

	                    fragments.push({
	                        key: k,
	                        val: value,
	                        index: i++
	                    });
	                    ids.push(k);
	                });
	                instance.fragments = fragments;
	            } else {
	                avalon.each(obj, function (key, value) {
	                    if (!(key in $$skipArray)) {
	                        var k = array ? getTraceKey(value) : key;
	                        fragments.push(new VFragment([], k, value, i++));
	                        ids.push(k);
	                    }
	                });
	                instance.fragments = fragments;
	            }
	            return ids.join(';;');
	        } else {
	            return NaN;
	        }
	    }

	    function mountList(instance) {
	        var args = instance.fragments.map(function (fragment, index) {
	            FragmentDecorator(fragment, instance, index);
	            saveInCache(instance.cache, fragment);
	            return fragment;
	        });
	        var list = instance.parentChildren;
	        var i = list.indexOf(instance.begin);
	        list.splice.apply(list, [i + 1, 0].concat(args));
	    }

	    function diffList(instance) {
	        var cache = instance.cache;
	        var newCache = {};
	        var fuzzy = [];
	        var list = instance.preFragments;

	        list.forEach(function (el) {
	            el._dispose = true;
	        });

	        instance.fragments.forEach(function (c, index) {
	            var fragment = isInCache(cache, c.key);
	            //取出之前的文档碎片
	            if (fragment) {
	                delete fragment._dispose;
	                fragment.oldIndex = fragment.index;
	                fragment.index = index; // 相当于 c.index

	                resetVM(fragment.vm, instance.keyName);
	                fragment.vm[instance.valName] = c.val;
	                fragment.vm[instance.keyName] = instance.isArray ? index : fragment.key;
	                saveInCache(newCache, fragment);
	            } else {
	                //如果找不到就进行模糊搜索
	                fuzzy.push(c);
	            }
	        });
	        fuzzy.forEach(function (c) {
	            var fragment = fuzzyMatchCache(cache, c.key);
	            if (fragment) {
	                //重复利用
	                fragment.oldIndex = fragment.index;
	                fragment.key = c.key;
	                var val = fragment.val = c.val;
	                var index = fragment.index = c.index;

	                fragment.vm[instance.valName] = val;
	                fragment.vm[instance.keyName] = instance.isArray ? index : fragment.key;
	                delete fragment._dispose;
	            } else {

	                c = new VFragment([], c.key, c.val, c.index);
	                fragment = FragmentDecorator(c, instance, c.index);
	                list.push(fragment);
	            }
	            saveInCache(newCache, fragment);
	        });

	        instance.fragments = list;
	        list.sort(function (a, b) {
	            return a.index - b.index;
	        });
	        instance.cache = newCache;
	    }

	    function resetVM(vm, a, b) {
	        if (avalon.config.inProxyMode) {
	            vm.$accessors[a].value = NaN;
	        } else {
	            vm.$accessors[a].set(NaN);
	        }
	    }

	    function updateList(instance) {
	        var before = instance.begin.dom;
	        var parent = before.parentNode;
	        var list = instance.fragments;
	        var end = instance.end.dom;

	        for (var i = 0, item; item = list[i]; i++) {
	            if (item._dispose) {
	                list.splice(i, 1);
	                i--;
	                item.dispose();
	                continue;
	            }
	            if (item.oldIndex !== item.index) {
	                var f = item.toFragment();
	                var isEnd = before.nextSibling === null;
	                parent.insertBefore(f, before.nextSibling);
	                if (isEnd && !parent.contains(end)) {
	                    parent.insertBefore(end, before.nextSibling);
	                }
	            }
	            before = item.split;
	        }
	        var ch = instance.parentChildren;
	        var startIndex = ch.indexOf(instance.begin);
	        var endIndex = ch.indexOf(instance.end);

	        list.splice.apply(ch, [startIndex + 1, endIndex - startIndex].concat(list));
	        if (parent.nodeName === 'SELECT' && parent._ms_duplex_) {
	            updateView['select'].call(parent._ms_duplex_);
	        }
	    }

	    /**
	     * 
	     * @param {type} fragment
	     * @param {type} this
	     * @param {type} index
	     * @returns { key, val, index, oldIndex, this, dom, split, vm}
	     */
	    function FragmentDecorator(fragment, instance, index) {
	        var data = {};
	        data[instance.keyName] = instance.isArray ? index : fragment.key;
	        data[instance.valName] = fragment.val;
	        if (instance.asName) {
	            data[instance.asName] = instance.value;
	        }
	        var vm = fragment.vm = platform.itemFactory(instance.vm, {
	            data: data
	        });
	        if (instance.isArray) {
	            vm.$watch(instance.valName, function (a) {
	                if (instance.value && instance.value.set) {
	                    instance.value.set(vm[instance.keyName], a);
	                }
	            });
	        } else {
	            vm.$watch(instance.valName, function (a) {
	                instance.value[fragment.key] = a;
	            });
	        }

	        fragment.index = index;
	        fragment.innerRender = avalon.scan(instance.fragment, vm, function () {
	            var oldRoot = this.root;
	            ap.push.apply(fragment.children, oldRoot.children);
	            this.root = fragment;
	        });
	        return fragment;
	    }
	    // 新位置: 旧位置
	    function isInCache(cache, id) {
	        var c = cache[id];
	        if (c) {
	            var arr = c.arr;
	            /* istanbul ignore if*/
	            if (arr) {
	                var r = arr.pop();
	                if (!arr.length) {
	                    c.arr = 0;
	                }
	                return r;
	            }
	            delete cache[id];
	            return c;
	        }
	    }
	    //[1,1,1] number1 number1_ number1__
	    function saveInCache(cache, component) {
	        var trackId = component.key;
	        if (!cache[trackId]) {
	            cache[trackId] = component;
	        } else {
	            var c = cache[trackId];
	            var arr = c.arr || (c.arr = []);
	            arr.push(component);
	        }
	    }

	    function fuzzyMatchCache(cache) {
	        var key;
	        for (var id in cache) {
	            var key = id;
	            break;
	        }
	        if (key) {
	            return isInCache(cache, key);
	        }
	    }

	    //根据VM的属性值或表达式的值切换类名，ms-class='xxx yyy zzz:flag'
	    //http://www.cnblogs.com/rubylouvre/archive/2012/12/17/2818540.html
	    function classNames() {
	        var classes = [];
	        for (var i = 0; i < arguments.length; i++) {
	            var arg = arguments[i];
	            var argType = typeof arg;
	            if (argType === 'string' || argType === 'number' || arg === true) {
	                classes.push(arg);
	            } else if (Array.isArray(arg)) {
	                classes.push(classNames.apply(null, arg));
	            } else if (argType === 'object') {
	                for (var key in arg) {
	                    if (arg.hasOwnProperty(key) && arg[key]) {
	                        classes.push(key);
	                    }
	                }
	            }
	        }

	        return classes.join(' ');
	    }

	    avalon.directive('class', {
	        diff: function diff(newVal, oldVal) {
	            var type = this.type;
	            var vdom = this.node;
	            var classEvent = vdom.classEvent || {};
	            if (type === 'hover') {
	                //在移出移入时切换类名
	                classEvent.mouseenter = activateClass;
	                classEvent.mouseleave = abandonClass;
	            } else if (type === 'active') {
	                //在获得焦点时切换类名
	                classEvent.tabIndex = vdom.props.tabindex || -1;
	                classEvent.mousedown = activateClass;
	                classEvent.mouseup = abandonClass;
	                classEvent.mouseleave = abandonClass;
	            }
	            vdom.classEvent = classEvent;

	            var className = classNames(newVal);

	            if (typeof oldVal === void 0 || oldVal !== className) {
	                this.value = className;

	                vdom['change-' + type] = className;
	                return true;
	            }
	        },
	        update: function update(vdom, value) {
	            var dom = vdom.dom;
	            if (dom && dom.nodeType == 1) {

	                var dirType = this.type;
	                var change = 'change-' + dirType;
	                var classEvent = vdom.classEvent;
	                if (classEvent) {
	                    for (var i in classEvent) {
	                        if (i === 'tabIndex') {
	                            dom[i] = classEvent[i];
	                        } else {
	                            avalon.bind(dom, i, classEvent[i]);
	                        }
	                    }
	                    vdom.classEvent = {};
	                }
	                var names = ['class', 'hover', 'active'];
	                names.forEach(function (type) {
	                    if (dirType !== type) return;
	                    if (type === 'class') {
	                        dom && setClass(dom, value);
	                    } else {
	                        var oldClass = dom.getAttribute(change);
	                        if (oldClass) {
	                            avalon(dom).removeClass(oldClass);
	                        }
	                        var name = 'change-' + type;
	                        dom.setAttribute(name, value);
	                    }
	                });
	            }
	        }
	    });

	    directives.active = directives.hover = directives['class'];

	    var classMap = {
	        mouseenter: 'change-hover',
	        mouseleave: 'change-hover',
	        mousedown: 'change-active',
	        mouseup: 'change-active'
	    };

	    function activateClass(e) {
	        var elem = e.target;
	        avalon(elem).addClass(elem.getAttribute(classMap[e.type]) || '');
	    }

	    function abandonClass(e) {
	        var elem = e.target;
	        var name = classMap[e.type];
	        avalon(elem).removeClass(elem.getAttribute(name) || '');
	        if (name !== 'change-active') {
	            avalon(elem).removeClass(elem.getAttribute('change-active') || '');
	        }
	    }

	    function setClass(dom, neo) {
	        var old = dom.getAttribute('change-class');
	        if (old !== neo) {
	            avalon(dom).removeClass(old).addClass(neo);
	            dom.setAttribute('change-class', neo);
	        }
	    }

	    getLongID(activateClass);
	    getLongID(abandonClass);

	    /* 
	     * 通过绑定事件同步vmodel
	     * 总共有三种方式同步视图
	     * 1. 各种事件 input, change, click, propertychange, keydown...
	     * 2. value属性重写
	     * 3. 定时器轮询
	     */

	    function updateDataEvents(dom, data) {
	        var events = {};
	        //添加需要监听的事件
	        switch (data.dtype) {
	            case 'radio':
	            case 'checkbox':
	                events.click = updateDataHandle;
	                break;
	            case 'select':
	                events.change = updateDataHandle;
	                break;
	            case 'contenteditable':
	                /* istanbul ignore if */
	                if (data.isChanged) {
	                    events.blur = updateDataHandle;
	                    /* istanbul ignore else */
	                } else {
	                    /* istanbul ignore if*/

	                    if (avalon.modern) {
	                        if (window$1.webkitURL) {
	                            // http://code.metager.de/source/xref/WebKit/LayoutTests/fast/events/
	                            // https://bugs.webkit.org/show_bug.cgi?id=110742
	                            events.webkitEditableContentChanged = updateDataHandle;
	                        } else if (window$1.MutationEvent) {
	                            events.DOMCharacterDataModified = updateDataHandle;
	                        }
	                        events.input = updateDataHandle;
	                        /* istanbul ignore else */
	                    } else {
	                        events.keydown = updateModelKeyDown;
	                        events.paste = updateModelDelay;
	                        events.cut = updateModelDelay;
	                        events.focus = closeComposition;
	                        events.blur = openComposition;
	                    }
	                }
	                break;
	            case 'input':
	                /* istanbul ignore if */
	                if (data.isChanged) {
	                    events.change = updateDataHandle;
	                    /* istanbul ignore else */
	                } else {
	                    //http://www.cnblogs.com/rubylouvre/archive/2013/02/17/2914604.html
	                    //http://www.matts411.com/post/internet-explorer-9-oninput/
	                    if (msie$1 < 10) {
	                        //IE6-8的propertychange有问题,第一次用JS修改值时不会触发,而且你是全部清空value也不会触发
	                        //IE9的propertychange不支持自动完成,退格,删除,复制,贴粘,剪切或点击右边的小X的清空操作
	                        events.propertychange = updateModelHack;
	                        events.paste = updateModelDelay;
	                        events.cut = updateModelDelay;
	                        //IE9在第一次删除字符时不会触发oninput
	                        events.keyup = updateModelKeyDown;
	                    } else {
	                        events.input = updateDataHandle;
	                        events.compositionstart = openComposition;
	                        //微软拼音输入法的问题需要在compositionend事件中处理
	                        events.compositionend = closeComposition;
	                        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray
	                        //处理低版本的标准浏览器,通过Int8Array进行区分
	                        if (!/\[native code\]/.test(window$1.Int8Array)) {
	                            events.keydown = updateModelKeyDown; //safari < 5 opera < 11
	                            events.paste = updateModelDelay; //safari < 5
	                            events.cut = updateModelDelay; //safari < 5 
	                            if (window$1.netscape) {
	                                // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete
	                                events.DOMAutoComplete = updateDataHandle;
	                            }
	                        }
	                    }
	                }
	                break;
	        }

	        if (/password|text/.test(dom.type)) {
	            events.focus = openCaret; //判定是否使用光标修正功能 
	            events.blur = closeCaret;
	            data.getCaret = getCaret;
	            data.setCaret = setCaret;
	        }

	        for (var name in events) {
	            avalon.bind(dom, name, events[name]);
	        }
	    }

	    function updateModelHack(e) {
	        if (e.propertyName === 'value') {
	            updateDataHandle.call(this, e);
	        }
	    }

	    function updateModelDelay(e) {
	        var elem = this;
	        setTimeout(function () {
	            updateDataHandle.call(elem, e);
	        }, 0);
	    }

	    function openCaret() {
	        this.caret = true;
	    }
	    /* istanbul ignore next */
	    function closeCaret() {
	        this.caret = false;
	    }
	    /* istanbul ignore next */
	    function openComposition() {
	        this.composing = true;
	    }
	    /* istanbul ignore next */
	    function closeComposition(e) {
	        this.composing = false;
	        updateModelDelay.call(this, e);
	    }
	    /* istanbul ignore next */
	    function updateModelKeyDown(e) {
	        var key = e.keyCode;
	        // ignore
	        //    command            modifiers                   arrows
	        if (key === 91 || 15 < key && key < 19 || 37 <= key && key <= 40) return;
	        updateDataHandle.call(this, e);
	    }

	    getShortID(openCaret);
	    getShortID(closeCaret);
	    getShortID(openComposition);
	    getShortID(closeComposition);
	    getShortID(updateDataHandle);
	    getShortID(updateModelHack);
	    getShortID(updateModelDelay);
	    getShortID(updateModelKeyDown);

	    //IE6-8要处理光标时需要异步
	    var mayBeAsync = function mayBeAsync(fn) {
	        setTimeout(fn, 0);
	    };
	    /* istanbul ignore next */
	    function setCaret(target, cursorPosition) {
	        var range$$1;
	        if (target.createTextRange) {
	            mayBeAsync(function () {
	                target.focus();
	                range$$1 = target.createTextRange();
	                range$$1.collapse(true);
	                range$$1.moveEnd('character', cursorPosition);
	                range$$1.moveStart('character', cursorPosition);
	                range$$1.select();
	            });
	        } else {
	            target.focus();
	            if (target.selectionStart !== undefined) {
	                target.setSelectionRange(cursorPosition, cursorPosition);
	            }
	        }
	    }
	    /* istanbul ignore next*/
	    function getCaret(target) {
	        var start = 0;
	        var normalizedValue;
	        var range$$1;
	        var textInputRange;
	        var len;
	        var endRange;

	        if (target.selectionStart + target.selectionEnd > -1) {
	            start = target.selectionStart;
	        } else {
	            range$$1 = document$1.selection.createRange();

	            if (range$$1 && range$$1.parentElement() === target) {
	                len = target.value.length;
	                normalizedValue = target.value.replace(/\r\n/g, '\n');

	                textInputRange = target.createTextRange();
	                textInputRange.moveToBookmark(range$$1.getBookmark());

	                endRange = target.createTextRange();
	                endRange.collapse(false);

	                if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {
	                    start = len;
	                } else {
	                    start = -textInputRange.moveStart('character', -len);
	                    start += normalizedValue.slice(0, start).split('\n').length - 1;
	                }
	            }
	        }

	        return start;
	    }

	    avalon.directive('duplex', {
	        priority: 9999999,
	        beforeInit: duplexBeforeInit,
	        init: duplexInit,
	        diff: duplexDiff,
	        update: function update(vdom, value) {
	            if (!this.dom) {
	                duplexBind.call(this, vdom, updateDataEvents);
	            }
	            //如果不支持input.value的Object.defineProperty的属性支持,
	            //需要通过轮询同步, chrome 42及以下版本需要这个hack
	            pollValue.call(this, avalon.msie, valueHijack);
	            //更新视图

	            updateView[this.dtype].call(this);
	        }
	    });

	    function pollValue(isIE, valueHijack$$1) {
	        var dom = this.dom;
	        if (this.isString && valueHijack$$1 && !isIE && !dom.valueHijack) {
	            dom.valueHijack = updateDataHandle;
	            var intervalID = setInterval(function () {
	                if (!avalon.contains(avalon.root, dom)) {
	                    clearInterval(intervalID);
	                } else {
	                    dom.valueHijack({ type: 'poll' });
	                }
	            }, 30);
	            return intervalID;
	        }
	    }
	    avalon.__pollValue = pollValue; //export to test
	    /* istanbul ignore if */
	    if (avalon.msie < 8) {
	        var oldUpdate = updateView.updateChecked;
	        updateView.updateChecked = function (vdom, checked) {
	            var dom = vdom.dom;
	            if (dom) {
	                setTimeout(function () {
	                    oldUpdate(vdom, checked);
	                    dom.firstCheckedIt = 1;
	                }, dom.firstCheckedIt ? 31 : 16);
	                //IE6,7 checkbox, radio是使用defaultChecked控制选中状态，
	                //并且要先设置defaultChecked后设置checked
	                //并且必须设置延迟(因为必须插入DOM树才生效)
	            }
	        };
	    }

	    avalon.directive('rules', {
	        diff: function diff(rules) {
	            if (isObject(rules)) {
	                var vdom = this.node;
	                vdom.rules = platform.toJson(rules);
	                return true;
	            }
	        }
	    });
	    function isRegExp(value) {
	        return avalon.type(value) === 'regexp';
	    }
	    var rmail = /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/i;
	    var rurl = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
	    function isCorrectDate(value) {
	        if (typeof value === "string" && value) {
	            //是字符串但不能是空字符
	            var arr = value.split("-"); //可以被-切成3份，并且第1个是4个字符
	            if (arr.length === 3 && arr[0].length === 4) {
	                var year = ~~arr[0]; //全部转换为非负整数
	                var month = ~~arr[1] - 1;
	                var date = ~~arr[2];
	                var d = new Date(year, month, date);
	                return d.getFullYear() === year && d.getMonth() === month && d.getDate() === date;
	            }
	        }
	        return false;
	    }
	    //https://github.com/adform/validator.js/blob/master/validator.js
	    avalon.shadowCopy(avalon.validators, {
	        pattern: {
	            message: '必须匹配{{pattern}}这样的格式',
	            get: function get(value, field, next) {
	                var elem = field.dom;
	                var data = field.data;
	                if (!isRegExp(data.pattern)) {
	                    var h5pattern = elem.getAttribute("pattern");
	                    data.pattern = new RegExp('^(?:' + h5pattern + ')$');
	                }
	                next(data.pattern.test(value));
	                return value;
	            }
	        },
	        digits: {
	            message: '必须整数',
	            get: function get(value, field, next) {
	                //整数
	                next(/^\-?\d+$/.test(value));
	                return value;
	            }
	        },
	        number: {
	            message: '必须数字',
	            get: function get(value, field, next) {
	                //数值
	                next(!!value && isFinite(value)); // isFinite('') --> true
	                return value;
	            }
	        },
	        norequired: {
	            message: '',
	            get: function get(value, field, next) {
	                next(true);
	                return value;
	            }
	        },
	        required: {
	            message: '必须填写',
	            get: function get(value, field, next) {
	                next(value !== '');
	                return value;
	            }
	        },
	        equalto: {
	            message: '密码输入不一致',
	            get: function get(value, field, next) {
	                var id = String(field.data.equalto);
	                var other = avalon(document.getElementById(id)).val() || "";
	                next(value === other);
	                return value;
	            }
	        },
	        date: {
	            message: '日期格式不正确',
	            get: function get(value, field, next) {
	                var data = field.data;
	                if (isRegExp(data.date)) {
	                    next(data.date.test(value));
	                } else {
	                    next(isCorrectDate(value));
	                }
	                return value;
	            }
	        },
	        url: {
	            message: 'URL格式不正确',
	            get: function get(value, field, next) {
	                next(rurl.test(value));
	                return value;
	            }
	        },
	        email: {
	            message: 'email格式不正确',
	            get: function get(value, field, next) {
	                next(rmail.test(value));
	                return value;
	            }
	        },
	        minlength: {
	            message: '最少输入{{minlength}}个字',
	            get: function get(value, field, next) {
	                var num = parseInt(field.data.minlength, 10);
	                next(value.length >= num);
	                return value;
	            }
	        },
	        maxlength: {
	            message: '最多输入{{maxlength}}个字',
	            get: function get(value, field, next) {
	                var num = parseInt(field.data.maxlength, 10);
	                next(value.length <= num);
	                return value;
	            }
	        },
	        min: {
	            message: '输入值不能小于{{min}}',
	            get: function get(value, field, next) {
	                var num = parseInt(field.data.min, 10);
	                next(parseFloat(value) >= num);
	                return value;
	            }
	        },
	        max: {
	            message: '输入值不能大于{{max}}',
	            get: function get(value, field, next) {
	                var num = parseInt(field.data.max, 10);
	                next(parseFloat(value) <= num);
	                return value;
	            }
	        },
	        chs: {
	            message: '必须是中文字符',
	            get: function get(value, field, next) {
	                next(/^[\u4e00-\u9fa5]+$/.test(value));
	                return value;
	            }
	        }
	    });

	    var valiDir = avalon.directive('validate', {
	        diff: function diff(validator) {
	            var vdom = this.node;
	            if (vdom.validator) {
	                return;
	            }
	            if (isObject(validator)) {
	                //注意，这个Form标签的虚拟DOM有两个验证对象
	                //一个是vmValidator，它是用户VM上的那个原始子对象，也是一个VM
	                //一个是validator，它是vmValidator.$model， 这是为了防止IE6－8添加子属性时添加的hack
	                //也可以称之为safeValidate
	                vdom.validator = validator;
	                validator = platform.toJson(validator);
	                validator.vdom = vdom;
	                validator.dom = vdom.dom;

	                for (var name in valiDir.defaults) {
	                    if (!validator.hasOwnProperty(name)) {
	                        validator[name] = valiDir.defaults[name];
	                    }
	                }
	                validator.fields = validator.fields || [];
	                vdom.vmValidator = validator;
	                return true;
	            }
	        },
	        update: function update(vdom) {

	            var vmValidator = vdom.vmValidator;
	            var validator = vdom.validator;
	            var dom = vdom.dom;
	            dom._ms_validate_ = vmValidator;

	            collectFeild(vdom.children, vmValidator.fields, vmValidator);
	            var type = window.netscape ? 'keypress' : 'focusin';
	            avalon.bind(document, type, findValidator);
	            //为了方便用户手动执行验证，我们需要为原始vmValidate上添加一个onManual方法
	            function onManual() {
	                var v = this;
	                v && valiDir.validateAll.call(v, v.onValidateAll);
	            }

	            try {
	                var fn = vmValidator.onManual = onManual.bind(vmValidator);
	                validator.onManual = fn;
	            } catch (e) {
	                avalon.warn('要想使用onManual方法，必须在validate对象预定义一个空的onManual函数');
	            }
	            delete vdom.vmValidator;

	            dom.setAttribute('novalidate', 'novalidate');

	            /* istanbul ignore if */
	            if (vmValidator.validateAllInSubmit) {
	                avalon.bind(dom, 'submit', validateAllInSubmitFn);
	            }
	        },
	        validateAll: function validateAll(callback) {
	            var validator = this;
	            var vdom = this.vdom;
	            var fields = validator.fields = [];
	            collectFeild(vdom.children, fields, validator);
	            var fn = typeof callback === 'function' ? callback : validator.onValidateAll;
	            var promises = validator.fields.filter(function (field) {
	                var el = field.dom;
	                return el && !el.disabled && validator.dom.contains(el);
	            }).map(function (field) {
	                return valiDir.validate(field, true);
	            });
	            var uniq = {};
	            return Promise.all(promises).then(function (array) {
	                var reasons = array.concat.apply([], array);
	                if (validator.deduplicateInValidateAll) {
	                    reasons = reasons.filter(function (reason) {
	                        var el = reason.element;
	                        var uuid = el.uniqueID || (el.uniqueID = setTimeout('1'));
	                        if (uniq[uuid]) {
	                            return false;
	                        } else {
	                            return uniq[uuid] = true;
	                        }
	                    });
	                }
	                fn.call(vdom.dom, reasons); //这里只放置未通过验证的组件
	            });
	        },

	        validate: function validate(field, isValidateAll, event) {

	            var promises = [];
	            var value = field.value;
	            var elem = field.dom;
	            /* istanbul ignore if */
	            if (typeof Promise !== 'function') {
	                //avalon-promise不支持phantomjs
	                avalon.warn('浏览器不支持原生Promise,请下载并<script src=url>引入\nhttps://github.com/RubyLouvre/avalon/blob/master/test/promise.js');
	            }
	            /* istanbul ignore if */
	            if (elem.disabled) return;
	            var rules = field.vdom.rules;
	            var ngs = [],
	                isOk = true;
	            if (!(rules.norequired && value === '')) {
	                for (var ruleName in rules) {
	                    var ruleValue = rules[ruleName];
	                    if (ruleValue === false) continue;
	                    var hook = avalon.validators[ruleName];
	                    var resolve;
	                    promises.push(new Promise(function (a, b) {
	                        resolve = a;
	                    }));
	                    var next = function next(a) {
	                        var reason = {
	                            element: elem,
	                            data: field.data,
	                            message: elem.getAttribute('data-' + ruleName + '-message') || elem.getAttribute('data-message') || hook.message,
	                            validateRule: ruleName,
	                            getMessage: getMessage
	                        };
	                        if (a) {
	                            resolve(true);
	                        } else {
	                            isOk = false;
	                            ngs.push(reason);
	                            resolve(false);
	                        }
	                    };
	                    field.data = {};
	                    field.data[ruleName] = ruleValue;
	                    hook.get(value, field, next);
	                }
	            }

	            //如果promises不为空，说明经过验证拦截器
	            return Promise.all(promises).then(function (array) {
	                if (!isValidateAll) {
	                    var validator = field.validator;
	                    if (isOk) {
	                        validator.onSuccess.call(elem, [{
	                            data: field.data,
	                            element: elem
	                        }], event);
	                    } else {
	                        validator.onError.call(elem, ngs, event);
	                    }
	                    validator.onComplete.call(elem, ngs, event);
	                }
	                return ngs;
	            });
	        }
	    });

	    //https://github.com/RubyLouvre/avalon/issues/1977
	    function getValidate(dom) {
	        while (dom.tagName !== 'FORM') {
	            dom = dom.parentNode;
	        }
	        return dom._ms_validate_;
	    }

	    function validateAllInSubmitFn(e) {
	        e.preventDefault();
	        var v = getValidate(e.target);
	        if (v && v.onManual) {
	            v.onManual();
	        }
	    }

	    function collectFeild(nodes, fields, validator) {
	        for (var i = 0, vdom; vdom = nodes[i++];) {
	            var duplex = vdom.rules && vdom.duplex;
	            if (duplex) {
	                fields.push(duplex);
	                bindValidateEvent(duplex, validator);
	            } else if (vdom.children) {
	                collectFeild(vdom.children, fields, validator);
	            } else if (Array.isArray(vdom)) {
	                collectFeild(vdom, fields, validator);
	            }
	        }
	    }

	    function findValidator(e) {
	        var dom = e.target;
	        var duplex = dom._ms_duplex_;
	        var vdom = (duplex || {}).vdom;
	        if (duplex && vdom.rules && !duplex.validator) {
	            var msValidator = getValidate(dom);
	            if (msValidator && avalon.Array.ensure(msValidator.fields, duplex)) {
	                bindValidateEvent(duplex, msValidator);
	            }
	        }
	    }

	    function singleValidate(e) {
	        var dom = e.target;
	        var duplex = dom._ms_duplex_;
	        var msValidator = getValidate(e.target);
	        msValidator && msValidator.validate(duplex, 0, e);
	    }

	    function bindValidateEvent(field, validator) {

	        var node = field.dom;
	        if (field.validator) {
	            return;
	        }
	        field.validator = validator;
	        /* istanbul ignore if */
	        if (validator.validateInKeyup && !field.isChanged && !field.debounceTime) {
	            avalon.bind(node, 'keyup', singleValidate);
	        }
	        /* istanbul ignore if */
	        if (validator.validateInBlur) {
	            avalon.bind(node, 'blur', singleValidate);
	        }
	        /* istanbul ignore if */
	        if (validator.resetInFocus) {
	            avalon.bind(node, 'focus', function (e) {
	                var dom = e.target;
	                var field = dom._ms_duplex_;
	                var validator = getValidate(e.target);
	                validator && validator.onReset.call(dom, e, field);
	            });
	        }
	    }
	    var rformat = /\\?{{([^{}]+)\}}/gm;

	    function getMessage() {
	        var data = this.data || {};
	        return this.message.replace(rformat, function (_, name) {
	            return data[name] == null ? '' : data[name];
	        });
	    }
	    valiDir.defaults = {
	        validate: valiDir.validate,
	        onError: avalon.noop,
	        onSuccess: avalon.noop,
	        onComplete: avalon.noop,
	        onManual: avalon.noop,
	        onReset: avalon.noop,
	        onValidateAll: avalon.noop,
	        validateInBlur: true, //@config {Boolean} true，在blur事件中进行验证,触发onSuccess, onError, onComplete回调
	        validateInKeyup: true, //@config {Boolean} true，在keyup事件中进行验证,触发onSuccess, onError, onComplete回调
	        validateAllInSubmit: true, //@config {Boolean} true，在submit事件中执行onValidateAll回调
	        resetInFocus: true, //@config {Boolean} true，在focus事件中执行onReset回调,
	        deduplicateInValidateAll: false //@config {Boolean} false，在validateAll回调中对reason数组根据元素节点进行去重
	    };

	    /**
	     * 一个directive装饰器
	     * @returns {directive}
	     */
	    // DirectiveDecorator(scope, binding, vdom, this)
	    // Decorator(vm, options, callback)
	    function Directive(vm, binding, vdom, render) {
	        var type = binding.type;
	        var decorator = avalon.directives[type];
	        if (inBrowser) {
	            var dom = avalon.vdom(vdom, 'toDOM');
	            if (dom.nodeType === 1) {
	                dom.removeAttribute(binding.attrName);
	            }
	            vdom.dom = dom;
	        }
	        var callback = decorator.update ? function (value) {
	            if (!render.mount && /css|visible|duplex/.test(type)) {
	                render.callbacks.push(function () {
	                    decorator.update.call(directive$$1, directive$$1.node, value);
	                });
	            } else {
	                decorator.update.call(directive$$1, directive$$1.node, value);
	            }
	        } : avalon.noop;
	        for (var key in decorator) {
	            binding[key] = decorator[key];
	        }
	        binding.node = vdom;
	        var directive$$1 = new Action(vm, binding, callback);
	        if (directive$$1.init) {
	            //这里可能会重写node, callback, type, name
	            directive$$1.init();
	        }
	        directive$$1.update();
	        return directive$$1;
	    }

	    var eventMap = avalon.oneObject('animationend,blur,change,input,' + 'click,dblclick,focus,keydown,keypress,keyup,mousedown,mouseenter,' + 'mouseleave,mousemove,mouseout,mouseover,mouseup,scan,scroll,submit', 'on');
	    function parseAttributes(dirs, tuple) {
	        var node = tuple[0],
	            uniq = {},
	            bindings = [];
	        var hasIf = false;
	        for (var name in dirs) {
	            var value = dirs[name];
	            var arr = name.split('-');
	            // ms-click
	            if (name in node.props) {
	                var attrName = name;
	            } else {
	                attrName = ':' + name.slice(3);
	            }
	            if (eventMap[arr[1]]) {
	                arr.splice(1, 0, 'on');
	            }
	            //ms-on-click
	            if (arr[1] === 'on') {
	                arr[3] = parseFloat(arr[3]) || 0;
	            }

	            var type = arr[1];
	            if (type === 'controller' || type === 'important') continue;
	            if (directives[type]) {

	                var binding = {
	                    type: type,
	                    param: arr[2],
	                    attrName: attrName,
	                    name: arr.join('-'),
	                    expr: value,
	                    priority: directives[type].priority || type.charCodeAt(0) * 100
	                };
	                if (type === 'if') {
	                    hasIf = true;
	                }
	                if (type === 'on') {
	                    binding.priority += arr[3];
	                }
	                if (!uniq[binding.name]) {
	                    uniq[binding.name] = value;
	                    bindings.push(binding);
	                    if (type === 'for') {
	                        return [avalon.mix(binding, tuple[3])];
	                    }
	                }
	            }
	        }
	        bindings.sort(byPriority);

	        if (hasIf) {
	            var ret = [];
	            for (var i = 0, el; el = bindings[i++];) {
	                ret.push(el);
	                if (el.type === 'if') {
	                    return ret;
	                }
	            }
	        }
	        return bindings;
	    }
	    function byPriority(a, b) {
	        return a.priority - b.priority;
	    }

	    var rimprovePriority = /[+-\?]/;
	    var rinnerValue = /__value__\)$/;
	    function parseInterpolate(dir) {
	        var rlineSp = /\n\r?/g;
	        var str = dir.nodeValue.trim().replace(rlineSp, '');
	        var tokens = [];
	        do {
	            //aaa{{@bbb}}ccc
	            var index = str.indexOf(config.openTag);
	            index = index === -1 ? str.length : index;
	            var value = str.slice(0, index);
	            if (/\S/.test(value)) {
	                tokens.push(avalon.quote(avalon._decode(value)));
	            }
	            str = str.slice(index + config.openTag.length);
	            if (str) {
	                index = str.indexOf(config.closeTag);
	                var value = str.slice(0, index);
	                var expr = avalon.unescapeHTML(value);
	                if (/\|\s*\w/.test(expr)) {
	                    //如果存在过滤器，优化干掉
	                    var arr = addScope(expr, 'expr');
	                    if (arr[1]) {
	                        expr = arr[1].replace(rinnerValue, arr[0] + ')');
	                    }
	                }
	                if (rimprovePriority) {
	                    expr = '(' + expr + ')';
	                }
	                tokens.push(expr);

	                str = str.slice(index + config.closeTag.length);
	            }
	        } while (str.length);
	        return [{
	            expr: tokens.join('+'),
	            name: 'expr',
	            type: 'expr'
	        }];
	    }

	    function getChildren(arr) {
	        var count = 0;
	        for (var i = 0, el; el = arr[i++];) {
	            if (el.nodeName === '#document-fragment') {
	                count += getChildren(el.children);
	            } else {
	                count += 1;
	            }
	        }
	        return count;
	    }
	    function groupTree(parent, children) {
	        children && children.forEach(function (vdom) {
	            if (!vdom) return;
	            var vlength = vdom.children && getChildren(vdom.children);
	            if (vdom.nodeName === '#document-fragment') {
	                var dom = createFragment();
	            } else {
	                dom = avalon.vdom(vdom, 'toDOM');
	                var domlength = dom.childNodes && dom.childNodes.length;
	                if (domlength && vlength && domlength > vlength) {
	                    if (!appendChildMayThrowError[dom.nodeName]) {
	                        avalon.clearHTML(dom);
	                    }
	                }
	            }
	            if (vlength) {
	                groupTree(dom, vdom.children);
	                if (vdom.nodeName === 'select') {
	                    var values = [];
	                    getSelectedValue(vdom, values);
	                    lookupOption(vdom, values);
	                }
	            }
	            //高级版本可以尝试 querySelectorAll

	            try {
	                if (!appendChildMayThrowError[parent.nodeName]) {
	                    parent.appendChild(dom);
	                }
	            } catch (e) {}
	        });
	    }

	    function dumpTree(elem) {
	        if (elem) {
	            var firstChild;
	            while (firstChild = elem.firstChild) {
	                if (firstChild.nodeType === 1) {
	                    dumpTree(firstChild);
	                }
	                elem.removeChild(firstChild);
	            }
	        }
	    }

	    function getRange(childNodes, node) {
	        var i = childNodes.indexOf(node) + 1;
	        var deep = 1,
	            nodes = [],
	            end;
	        nodes.start = i;
	        while (node = childNodes[i++]) {
	            nodes.push(node);
	            if (node.nodeName === '#comment') {
	                if (startWith(node.nodeValue, 'ms-for:')) {
	                    deep++;
	                } else if (node.nodeValue === 'ms-for-end:') {
	                    deep--;
	                    if (deep === 0) {
	                        end = node;
	                        nodes.pop();
	                        break;
	                    }
	                }
	            }
	        }
	        nodes.end = end;
	        return nodes;
	    }

	    function startWith(long, short) {
	        return long.indexOf(short) === 0;
	    }

	    var appendChildMayThrowError = {
	        '#text': 1,
	        '#comment': 1,
	        script: 1,
	        style: 1,
	        noscript: 1
	    };

	    /**
	     * 生成一个渲染器,并作为它第一个遇到的ms-controller对应的VM的$render属性
	     * @param {String|DOM} node
	     * @param {ViewModel|Undefined} vm
	     * @param {Function|Undefined} beforeReady
	     * @returns {Render}
	     */
	    avalon.scan = function (node, vm, beforeReady) {
	        return new Render(node, vm, beforeReady || avalon.noop);
	    };

	    /**
	     * avalon.scan 的内部实现
	     */
	    function Render(node, vm, beforeReady) {
	        this.root = node; //如果传入的字符串,确保只有一个标签作为根节点
	        this.vm = vm;
	        this.beforeReady = beforeReady;
	        this.bindings = []; //收集待加工的绑定属性
	        this.callbacks = [];
	        this.directives = [];
	        this.init();
	    }

	    Render.prototype = {
	        /**
	         * 开始扫描指定区域
	         * 收集绑定属性
	         * 生成指令并建立与VM的关联
	         */
	        init: function init() {
	            var vnodes;
	            if (this.root && this.root.nodeType > 0) {
	                vnodes = fromDOM(this.root); //转换虚拟DOM
	                //将扫描区域的每一个节点与其父节点分离,更少指令对DOM操作时,对首屏输出造成的频繁重绘
	                dumpTree(this.root);
	            } else if (typeof this.root === 'string') {
	                vnodes = fromString(this.root); //转换虚拟DOM
	            } else {
	                return avalon.warn('avalon.scan first argument must element or HTML string');
	            }

	            this.root = vnodes[0];
	            this.vnodes = vnodes;
	            this.scanChildren(vnodes, this.vm, true);
	        },
	        scanChildren: function scanChildren(children, scope, isRoot) {
	            for (var i = 0; i < children.length; i++) {
	                var vdom = children[i];
	                switch (vdom.nodeName) {
	                    case '#text':
	                        scope && this.scanText(vdom, scope);
	                        break;
	                    case '#comment':
	                        scope && this.scanComment(vdom, scope, children);
	                        break;
	                    case '#document-fragment':
	                        this.scanChildren(vdom.children, scope, false);
	                        break;
	                    default:
	                        this.scanTag(vdom, scope, children, false);
	                        break;
	                }
	            }
	            if (isRoot) {
	                this.complete();
	            }
	        },


	        /**
	         * 从文本节点获取指令
	         * @param {type} vdom 
	         * @param {type} scope
	         * @returns {undefined}
	         */
	        scanText: function scanText(vdom, scope) {
	            if (config.rexpr.test(vdom.nodeValue)) {
	                this.bindings.push([vdom, scope, {
	                    nodeValue: vdom.nodeValue
	                }]);
	            }
	        },


	        /**
	         * 从注释节点获取指令
	         * @param {type} vdom 
	         * @param {type} scope
	         * @param {type} parentChildren
	         * @returns {undefined}
	         */
	        scanComment: function scanComment(vdom, scope, parentChildren) {
	            if (startWith(vdom.nodeValue, 'ms-for:')) {
	                this.getForBinding(vdom, scope, parentChildren);
	            }
	        },


	        /**
	         * 从元素节点的nodeName与属性中获取指令
	         * @param {type} vdom 
	         * @param {type} scope
	         * @param {type} parentChildren
	         * @param {type} isRoot 用于执行complete方法
	         * @returns {undefined}
	         */
	        scanTag: function scanTag(vdom, scope, parentChildren, isRoot) {
	            var dirs = {},
	                attrs = vdom.props,
	                hasDir,
	                hasFor;
	            for (var attr in attrs) {
	                var value = attrs[attr];
	                var oldName = attr;
	                if (attr.charAt(0) === ':') {
	                    attr = 'ms-' + attr.slice(1);
	                }
	                if (startWith(attr, 'ms-')) {
	                    dirs[attr] = value;
	                    var type = attr.match(/\w+/g)[1];
	                    type = eventMap[type] || type;
	                    if (!directives[type]) {
	                        avalon.warn(attr + ' has not registered!');
	                    }
	                    hasDir = true;
	                }
	                if (attr === 'ms-for') {
	                    hasFor = value;
	                    delete attrs[oldName];
	                }
	            }
	            var $id = dirs['ms-important'] || dirs['ms-controller'];
	            if ($id) {
	                /**
	                 * 后端渲染
	                 * serverTemplates后端给avalon添加的对象,里面都是模板,
	                 * 将原来后端渲染好的区域再还原成原始样子,再被扫描
	                 */
	                var templateCaches = avalon.serverTemplates;
	                var temp = templateCaches && templateCaches[$id];
	                if (temp) {
	                    avalon.log('前端再次渲染后端传过来的模板');
	                    var node = fromString(temp)[0];
	                    for (var i in node) {
	                        vdom[i] = node[i];
	                    }
	                    delete templateCaches[$id];
	                    this.scanTag(vdom, scope, parentChildren, isRoot);
	                    return;
	                }
	                //推算出指令类型
	                var type = dirs['ms-important'] === $id ? 'important' : 'controller';
	                //推算出用户定义时属性名,是使用ms-属性还是:属性
	                var attrName = 'ms-' + type in attrs ? 'ms-' + type : ':' + type;

	                if (inBrowser) {
	                    delete attrs[attrName];
	                }
	                var dir = directives[type];
	                scope = dir.getScope.call(this, $id, scope);
	                if (!scope) {
	                    return;
	                } else {
	                    var clazz = attrs['class'];
	                    if (clazz) {
	                        attrs['class'] = (' ' + clazz + ' ').replace(' ms-controller ', '').trim();
	                    }
	                }
	                var render = this;
	                scope.$render = render;
	                this.callbacks.push(function () {
	                    //用于删除ms-controller
	                    dir.update.call(render, vdom, attrName, $id);
	                });
	            }
	            if (hasFor) {
	                if (vdom.dom) {
	                    vdom.dom.removeAttribute(oldName);
	                }
	                return this.getForBindingByElement(vdom, scope, parentChildren, hasFor);
	            }

	            if (/^ms\-/.test(vdom.nodeName)) {
	                attrs.is = vdom.nodeName;
	            }

	            if (attrs['is']) {
	                if (!dirs['ms-widget']) {
	                    dirs['ms-widget'] = '{}';
	                }
	                hasDir = true;
	            }
	            if (hasDir) {
	                this.bindings.push([vdom, scope, dirs]);
	            }
	            var children = vdom.children;
	            //如果存在子节点,并且不是容器元素(script, stype, textarea, xmp...)
	            if (!orphanTag[vdom.nodeName] && children && children.length && !delayCompileNodes(dirs)) {
	                this.scanChildren(children, scope, false);
	            }
	        },


	        /**
	         * 将绑定属性转换为指令
	         * 执行各种回调与优化指令
	         * @returns {undefined}
	         */
	        complete: function complete() {
	            this.yieldDirectives();
	            this.beforeReady();
	            if (inBrowser) {
	                var root$$1 = this.root;
	                if (inBrowser) {
	                    var rootDom = avalon.vdom(root$$1, 'toDOM');
	                    groupTree(rootDom, root$$1.children);
	                }
	            }

	            this.mount = true;
	            var fn;
	            while (fn = this.callbacks.pop()) {
	                fn();
	            }
	            this.optimizeDirectives();
	        },


	        /**
	         * 将收集到的绑定属性进行深加工,最后转换指令
	         * @returns {Array<tuple>}
	         */
	        yieldDirectives: function yieldDirectives() {
	            var tuple;
	            while (tuple = this.bindings.shift()) {
	                var vdom = tuple[0],
	                    scope = tuple[1],
	                    dirs = tuple[2],
	                    bindings = [];
	                if ('nodeValue' in dirs) {
	                    bindings = parseInterpolate(dirs);
	                } else if (!('ms-skip' in dirs)) {
	                    bindings = parseAttributes(dirs, tuple);
	                }
	                for (var i = 0, binding; binding = bindings[i++];) {
	                    var dir = directives[binding.type];
	                    if (!inBrowser && /on|duplex|active|hover/.test(binding.type)) {
	                        continue;
	                    }
	                    if (dir.beforeInit) {
	                        dir.beforeInit.call(binding);
	                    }

	                    var directive$$1 = new Directive(scope, binding, vdom, this);
	                    this.directives.push(directive$$1);
	                }
	            }
	        },


	        /**
	         * 修改指令的update与callback方法,让它们以后执行时更加高效
	         * @returns {undefined}
	         */
	        optimizeDirectives: function optimizeDirectives() {
	            for (var i = 0, el; el = this.directives[i++];) {
	                el.callback = directives[el.type].update;
	                el.update = newUpdate;
	                el._isScheduled = false;
	            }
	        },

	        update: function update() {
	            for (var i = 0, el; el = this.directives[i++];) {
	                el.update();
	            }
	        },

	        /**
	         * 销毁所有指令
	         * @returns {undefined}
	         */
	        dispose: function dispose() {
	            var list = this.directives || [];
	            for (var i = 0, el; el = list[i++];) {
	                el.dispose();
	            }
	            //防止其他地方的this.innerRender && this.innerRender.dispose报错
	            for (var _i6 in this) {
	                if (_i6 !== 'dispose') delete this[_i6];
	            }
	        },


	        /**
	         * 将循环区域转换为for指令
	         * @param {type} begin 注释节点
	         * @param {type} scope
	         * @param {type} parentChildren
	         * @param {type} userCb 循环结束回调
	         * @returns {undefined}
	         */
	        getForBinding: function getForBinding(begin, scope, parentChildren, userCb) {
	            var expr = begin.nodeValue.replace('ms-for:', '').trim();
	            begin.nodeValue = 'ms-for:' + expr;
	            var nodes = getRange(parentChildren, begin);
	            var end = nodes.end;
	            var fragment = avalon.vdom(nodes, 'toHTML');
	            parentChildren.splice(nodes.start, nodes.length);
	            begin.props = {};
	            this.bindings.push([begin, scope, {
	                'ms-for': expr
	            }, {
	                begin: begin,
	                end: end,
	                expr: expr,
	                userCb: userCb,
	                fragment: fragment,
	                parentChildren: parentChildren
	            }]);
	        },


	        /**
	         * 在带ms-for元素节点旁添加两个注释节点,组成循环区域
	         * @param {type} vdom
	         * @param {type} scope
	         * @param {type} parentChildren
	         * @param {type} expr
	         * @returns {undefined}
	         */
	        getForBindingByElement: function getForBindingByElement(vdom, scope, parentChildren, expr) {
	            var index = parentChildren.indexOf(vdom); //原来带ms-for的元素节点
	            var props = vdom.props;
	            var begin = {
	                nodeName: '#comment',
	                nodeValue: 'ms-for:' + expr
	            };
	            if (props.slot) {
	                begin.slot = props.slot;
	                delete props.slot;
	            }
	            var end = {
	                nodeName: '#comment',
	                nodeValue: 'ms-for-end:'
	            };
	            parentChildren.splice(index, 1, begin, vdom, end);
	            this.getForBinding(begin, scope, parentChildren, props['data-for-rendered']);
	        }
	    };
	    var viewID;

	    function newUpdate() {
	        var oldVal = this.beforeUpdate();
	        var newVal = this.value = this.get();
	        if (this.callback && this.diff(newVal, oldVal)) {
	            this.callback(this.node, this.value);
	            var vm = this.vm;
	            var $render = vm.$render;
	            var list = vm.$events['onViewChange'];
	            /* istanbul ignore if */
	            if (list && $render && $render.root && !avalon.viewChanging) {
	                if (viewID) {
	                    clearTimeout(viewID);
	                    viewID = null;
	                }
	                viewID = setTimeout(function () {
	                    list.forEach(function (el) {
	                        el.callback.call(vm, {
	                            type: 'viewchange',
	                            target: $render.root,
	                            vmodel: vm
	                        });
	                    });
	                });
	            }
	        }
	        this._isScheduled = false;
	    }

	    var events = 'onInit,onReady,onViewChange,onDispose,onEnter,onLeave';
	    var componentEvents = avalon.oneObject(events);

	    function toObject(value) {
	        var value = platform.toJson(value);
	        if (Array.isArray(value)) {
	            var v = {};
	            value.forEach(function (el) {
	                el && avalon.shadowCopy(v, el);
	            });
	            return v;
	        }
	        return value;
	    }
	    var componentQueue = [];
	    avalon.directive('widget', {
	        delay: true,
	        priority: 4,
	        deep: true,
	        init: function init() {
	            //cached属性必须定义在组件容器里面,不是template中
	            var vdom = this.node;
	            this.cacheVm = !!vdom.props.cached;
	            if (vdom.dom && vdom.nodeName === '#comment') {
	                var comment = vdom.dom;
	            }
	            var oldValue = this.getValue();
	            var value = toObject(oldValue);
	            //外部VM与内部VM
	            // ＝＝＝创建组件的VM＝＝BEGIN＝＝＝
	            var is = vdom.props.is || value.is;
	            this.is = is;
	            var component = avalon.components[is];
	            //外部传入的总大于内部
	            if (!('fragment' in this)) {
	                if (!vdom.isVoidTag) {
	                    //提取组件容器内部的东西作为模板
	                    var text = vdom.children[0];
	                    if (text && text.nodeValue) {
	                        this.fragment = text.nodeValue;
	                    } else {
	                        this.fragment = avalon.vdom(vdom.children, 'toHTML');
	                    }
	                } else {
	                    this.fragment = false;
	                }
	            }
	            //如果组件还没有注册，那么将原元素变成一个占位用的注释节点
	            if (!component) {
	                this.readyState = 0;
	                vdom.nodeName = '#comment';
	                vdom.nodeValue = 'unresolved component placeholder';
	                delete vdom.dom;
	                avalon.Array.ensure(componentQueue, this);
	                return;
	            }

	            //如果是非空元素，比如说xmp, ms-*, template
	            var id = value.id || value.$id;
	            var hasCache = avalon.vmodels[id];
	            var fromCache = false;
	            // this.readyState = 1
	            if (hasCache) {
	                comVm = hasCache;
	                this.comVm = comVm;
	                replaceRoot(this, comVm.$render);
	                fromCache = true;
	            } else {
	                if (typeof component === 'function') {
	                    component = new component(value);
	                }
	                var comVm = createComponentVm(component, value, is);
	                this.readyState = 1;
	                fireComponentHook(comVm, vdom, 'Init');
	                this.comVm = comVm;

	                // ＝＝＝创建组件的VM＝＝END＝＝＝
	                var innerRender = avalon.scan(component.template, comVm);
	                comVm.$render = innerRender;
	                replaceRoot(this, innerRender);
	                var nodesWithSlot = [];
	                var directives$$1 = [];
	                if (this.fragment || component.soleSlot) {
	                    var curVM = this.fragment ? this.vm : comVm;
	                    var curText = this.fragment || '{{##' + component.soleSlot + '}}';
	                    var childBoss = avalon.scan('<div>' + curText + '</div>', curVM, function () {
	                        nodesWithSlot = this.root.children;
	                    });
	                    directives$$1 = childBoss.directives;
	                    this.childBoss = childBoss;
	                    for (var i in childBoss) {
	                        delete childBoss[i];
	                    }
	                }
	                Array.prototype.push.apply(innerRender.directives, directives$$1);

	                var arraySlot = [],
	                    objectSlot = {};
	                //从用户写的元素内部 收集要移动到 新创建的组件内部的元素
	                if (component.soleSlot) {
	                    arraySlot = nodesWithSlot;
	                } else {
	                    nodesWithSlot.forEach(function (el, i) {
	                        //要求带slot属性
	                        if (el.slot) {
	                            var nodes = getRange(nodesWithSlot, el);
	                            nodes.push(nodes.end);
	                            nodes.unshift(el);
	                            objectSlot[el.slot] = nodes;
	                        } else if (el.props) {
	                            var name = el.props.slot;
	                            if (name) {
	                                delete el.props.slot;
	                                if (Array.isArray(objectSlot[name])) {
	                                    objectSlot[name].push(el);
	                                } else {
	                                    objectSlot[name] = [el];
	                                }
	                            }
	                        }
	                    });
	                }
	                //将原来元素的所有孩子，全部移动新的元素的第一个slot的位置上
	                if (component.soleSlot) {
	                    insertArraySlot(innerRender.vnodes, arraySlot);
	                } else {
	                    insertObjectSlot(innerRender.vnodes, objectSlot);
	                }
	            }

	            if (comment) {
	                var dom = avalon.vdom(vdom, 'toDOM');
	                comment.parentNode.replaceChild(dom, comment);
	                comVm.$element = innerRender.root.dom = dom;
	                delete this.reInit;
	            }

	            //处理DOM节点

	            dumpTree(vdom.dom);
	            comVm.$element = vdom.dom;
	            groupTree(vdom.dom, vdom.children);
	            if (fromCache) {
	                fireComponentHook(comVm, vdom, 'Enter');
	            } else {
	                fireComponentHook(comVm, vdom, 'Ready');
	            }
	        },
	        diff: function diff(newVal, oldVal) {
	            if (cssDiff.call(this, newVal, oldVal)) {
	                return true;
	            }
	        },

	        update: function update(vdom, value) {
	            //this.oldValue = value //★★防止递归

	            switch (this.readyState) {
	                case 0:
	                    if (this.reInit) {
	                        this.init();
	                        this.readyState++;
	                    }
	                    break;
	                case 1:
	                    this.readyState++;
	                    break;
	                default:
	                    this.readyState++;
	                    var comVm = this.comVm;
	                    avalon.viewChanging = true;
	                    avalon.transaction(function () {
	                        for (var i in value) {
	                            if (comVm.hasOwnProperty(i)) {
	                                if (Array.isArray(value[i])) {
	                                    comVm[i] = value[i].concat();
	                                } else {
	                                    comVm[i] = value[i];
	                                }
	                            }
	                        }
	                    });

	                    //要保证要先触发孩子的ViewChange 然后再到它自己的ViewChange
	                    fireComponentHook(comVm, vdom, 'ViewChange');
	                    delete avalon.viewChanging;
	                    break;
	            }
	            this.value = avalon.mix(true, {}, value);
	        },
	        beforeDispose: function beforeDispose() {
	            var comVm = this.comVm;
	            if (!this.cacheVm) {
	                fireComponentHook(comVm, this.node, 'Dispose');
	                comVm.$hashcode = false;
	                delete avalon.vmodels[comVm.$id];
	                this.innerRender && this.innerRender.dispose();
	            } else {
	                fireComponentHook(comVm, this.node, 'Leave');
	            }
	        }
	    });

	    function replaceRoot(instance, innerRender) {
	        instance.innerRender = innerRender;
	        var root$$1 = innerRender.root;
	        var vdom = instance.node;
	        var slot = vdom.props.slot;
	        for (var i in root$$1) {
	            vdom[i] = root$$1[i];
	        }
	        if (vdom.props && slot) {
	            vdom.props.slot = slot;
	        }
	        innerRender.root = vdom;
	        innerRender.vnodes[0] = vdom;
	    }

	    function fireComponentHook(vm, vdom, name) {
	        var list = vm.$events['on' + name];
	        if (list) {
	            list.forEach(function (el) {
	                setTimeout(function () {
	                    el.callback.call(vm, {
	                        type: name.toLowerCase(),
	                        target: vdom.dom,
	                        vmodel: vm
	                    });
	                }, 0);
	            });
	        }
	    }

	    function createComponentVm(component, value, is) {
	        var hooks = [];
	        var defaults = component.defaults;
	        collectHooks(defaults, hooks);
	        collectHooks(value, hooks);
	        var obj = {};
	        for (var i in defaults) {
	            var val = value[i];
	            if (val == null) {
	                obj[i] = defaults[i];
	            } else {
	                obj[i] = val;
	            }
	        }
	        obj.$id = value.id || value.$id || avalon.makeHashCode(is);
	        delete obj.id;
	        var def = avalon.mix(true, {}, obj);
	        var vm = avalon.define(def);
	        hooks.forEach(function (el) {
	            vm.$watch(el.type, el.cb);
	        });
	        return vm;
	    }

	    function collectHooks(a, list) {
	        for (var i in a) {
	            if (componentEvents[i]) {
	                if (typeof a[i] === 'function' && i.indexOf('on') === 0) {
	                    list.unshift({
	                        type: i,
	                        cb: a[i]
	                    });
	                }
	                //delete a[i] 这里不能删除,会导致再次切换时没有onReady
	            }
	        }
	    }

	    function resetParentChildren(nodes, arr) {
	        var dir = arr && arr[0] && arr[0].forDir;
	        if (dir) {
	            dir.parentChildren = nodes;
	        }
	    }

	    function insertArraySlot(nodes, arr) {
	        for (var i = 0, el; el = nodes[i]; i++) {
	            if (el.nodeName === 'slot') {
	                resetParentChildren(nodes, arr);
	                nodes.splice.apply(nodes, [i, 1].concat(arr));
	                break;
	            } else if (el.children) {
	                insertArraySlot(el.children, arr);
	            }
	        }
	    }

	    function insertObjectSlot(nodes, obj) {
	        for (var i = 0, el; el = nodes[i]; i++) {
	            if (el.nodeName === 'slot') {
	                var name = el.props.name;
	                resetParentChildren(nodes, obj[name]);
	                nodes.splice.apply(nodes, [i, 1].concat(obj[name]));
	                continue;
	            } else if (el.children) {
	                insertObjectSlot(el.children, obj);
	            }
	        }
	    }

	    avalon.components = {};
	    avalon.component = function (name, component) {

	        component.extend = componentExtend;
	        return addToQueue(name, component);
	    };
	    function addToQueue(name, component) {
	        avalon.components[name] = component;
	        for (var el, i = 0; el = componentQueue[i]; i++) {
	            if (el.is === name) {
	                componentQueue.splice(i, 1);
	                el.reInit = true;
	                delete el.value;
	                el.update();
	                i--;
	            }
	        }
	        return component;
	    }

	    function componentExtend(child) {
	        var name = child.displayName;
	        delete child.displayName;
	        var obj = { defaults: avalon.mix(true, {}, this.defaults, child.defaults) };
	        if (child.soleSlot) {
	            obj.soleSlot = child.soleSlot;
	        }
	        obj.template = child.template || this.template;
	        return avalon.component(name, obj);
	    }

	    return avalon;
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(23)))

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * 公共服务
	 */
	var commonService = {
	    interface: __webpack_require__(25),
	};
	module.exports = commonService;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($, avalon) {/**
	 * Created by brave on 17/3/28.
	 */

	var config = __webpack_require__(21);

	var object = {
	    post: function (interfaceName, data) {
	        var deferred = Deferred();
	        showLoading();
	        $.ajax({
	            url: config.host + config.appName + "/" + interfaceName,
	            type: 'post',
	            timeout: 180000,
	            data: data,
	            dataType: 'json',
	            success: function (data) {
	                deferred.resolve(data);
	            },
	            error: function (res, error) {
	                deferred.reject(res);
	            }
	        });
	        return deferred.promise
	    },
	    postFile: function (interfaceName, data) {
	        var deferred = Deferred();
	        // var url = config.backendUrl + interfaceName;
	        var url = config.host + config.appName + "/" + interfaceName;
	        $.ajax({
	            url: url,
	            type: 'POST',
	            cache: false,
	            dataType: 'json',
	            data: data,
	            processData: false,
	            contentType: false,
	            timeout: 180000,
	            complete: function () {
	            }
	        }).done(function (data) {
	            alert("success")
	        }).fail(function (data) {
	            alert("error")
	        });
	        return deferred.promise
	    },
	    postFile2: function (interfaceName, data) {
	        var deferred = Deferred();
	        var url = config.backendUrl + interfaceName;
	        // var url = config.host + config.appName + "/" + interfaceName;
	        avalon.log(url)
	        $.ajax({
	            url: url,
	            type: 'post',
	            timeout: 180000,
	            data: data,
	            dataType: 'json',
	            success: function (data) {
	                deferred.resolve(data);
	            },
	            error: function (res, error) {
	                deferred.reject(res);
	            }
	        });
	        return deferred.promise
	    },
	};


	module.exports = object;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(23)))

/***/ })
/******/ ]);